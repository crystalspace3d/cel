// This file is automatically generated.
#include "cssysdef.h"
#include "csutil/scf.h"

// Put static linking stuff into own section.
// The idea is that this allows the section to be swapped out but not
// swapped in again b/c something else in it was needed.
#if !defined(CS_DEBUG) && defined(CS_COMPILER_MSVC)
#pragma const_seg(".CSmetai")
#pragma comment(linker, "/section:.CSmetai,r")
#pragma code_seg(".CSmeta")
#pragma comment(linker, "/section:.CSmeta,er")
#pragma comment(linker, "/merge:.CSmetai=.CSmeta")
#endif

namespace csStaticPluginInit
{
static char const metainfo_sequences[] =
"<?xml version=\"1.0\"?>"
"<!-- sequences.csplugin -->"
"<plugin>"
"  <scf>"
"    <classes>"
"      <class>"
"        <name>cel.sequence.factory</name>"
"        <implementation>celSequenceFactoryGenerator</implementation>"
"        <description>CEL Sequence Factory Generator</description>"
"      </class>"
""
"      <class>"
"        <name>cel.seqops.debugprint</name>"
"        <implementation>celDebugPrintSeqOpType</implementation>"
"        <description>CEL Sequence: Sequence that prints a debug message</description>"
"      </class>"
""
"      <class>"
"        <name>cel.seqops.light</name>"
"        <implementation>celLightSeqOpType</implementation>"
"        <description>CEL Sequence: Sequence that animates light colors</description>"
"      </class>"
""
"      <class>"
"        <name>cel.seqops.ambientmesh</name>"
"        <implementation>celAmbientMeshSeqOpType</implementation>"
"        <description>CEL Sequence: Sequence that animates mesh ambient colors</description>"
"      </class>"
""
"      <class>"
"        <name>cel.seqops.movepath</name>"
"        <implementation>celMovePathSeqOpType</implementation>"
"        <description>CEL Sequence: Sequence that moves a mesh along a path</description>"
"      </class>"
""
"      <class>"
"        <name>cel.seqops.property</name>"
"        <implementation>celPropertySeqOpType</implementation>"
"        <description>CEL Sequence: Sequence that changes properties</description>"
"      </class>"
""
"      <class>"
"        <name>cel.seqops.transform</name>"
"        <implementation>celTransformSeqOpType</implementation>"
"        <description>CEL Sequence: Sequence that transforms a mesh</description>"
"      </class>"
"    </classes>"
"  </scf>"
"</plugin>"
;
  #ifndef celSequenceFactoryGenerator_FACTORY_REGISTER_DEFINED 
  #define celSequenceFactoryGenerator_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(celSequenceFactoryGenerator) 
  #endif
  #ifndef celDebugPrintSeqOpType_FACTORY_REGISTER_DEFINED 
  #define celDebugPrintSeqOpType_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(celDebugPrintSeqOpType) 
  #endif
  #ifndef celLightSeqOpType_FACTORY_REGISTER_DEFINED 
  #define celLightSeqOpType_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(celLightSeqOpType) 
  #endif
  #ifndef celAmbientMeshSeqOpType_FACTORY_REGISTER_DEFINED 
  #define celAmbientMeshSeqOpType_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(celAmbientMeshSeqOpType) 
  #endif
  #ifndef celMovePathSeqOpType_FACTORY_REGISTER_DEFINED 
  #define celMovePathSeqOpType_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(celMovePathSeqOpType) 
  #endif
  #ifndef celPropertySeqOpType_FACTORY_REGISTER_DEFINED 
  #define celPropertySeqOpType_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(celPropertySeqOpType) 
  #endif
  #ifndef celTransformSeqOpType_FACTORY_REGISTER_DEFINED 
  #define celTransformSeqOpType_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(celTransformSeqOpType) 
  #endif

class sequences
{
SCF_REGISTER_STATIC_LIBRARY(sequences,metainfo_sequences)
  #ifndef celSequenceFactoryGenerator_FACTORY_REGISTERED 
  #define celSequenceFactoryGenerator_FACTORY_REGISTERED 
    celSequenceFactoryGenerator_StaticInit celSequenceFactoryGenerator_static_init__; 
  #endif
  #ifndef celDebugPrintSeqOpType_FACTORY_REGISTERED 
  #define celDebugPrintSeqOpType_FACTORY_REGISTERED 
    celDebugPrintSeqOpType_StaticInit celDebugPrintSeqOpType_static_init__; 
  #endif
  #ifndef celLightSeqOpType_FACTORY_REGISTERED 
  #define celLightSeqOpType_FACTORY_REGISTERED 
    celLightSeqOpType_StaticInit celLightSeqOpType_static_init__; 
  #endif
  #ifndef celAmbientMeshSeqOpType_FACTORY_REGISTERED 
  #define celAmbientMeshSeqOpType_FACTORY_REGISTERED 
    celAmbientMeshSeqOpType_StaticInit celAmbientMeshSeqOpType_static_init__; 
  #endif
  #ifndef celMovePathSeqOpType_FACTORY_REGISTERED 
  #define celMovePathSeqOpType_FACTORY_REGISTERED 
    celMovePathSeqOpType_StaticInit celMovePathSeqOpType_static_init__; 
  #endif
  #ifndef celPropertySeqOpType_FACTORY_REGISTERED 
  #define celPropertySeqOpType_FACTORY_REGISTERED 
    celPropertySeqOpType_StaticInit celPropertySeqOpType_static_init__; 
  #endif
  #ifndef celTransformSeqOpType_FACTORY_REGISTERED 
  #define celTransformSeqOpType_FACTORY_REGISTERED 
    celTransformSeqOpType_StaticInit celTransformSeqOpType_static_init__; 
  #endif
public:
 sequences();
};
sequences::sequences() {}

}
