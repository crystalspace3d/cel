// This file is automatically generated.
#include "cssysdef.h"
#include "csutil/scf.h"

// Put static linking stuff into own section.
// The idea is that this allows the section to be swapped out but not
// swapped in again b/c something else in it was needed.
#if !defined(CS_DEBUG) && defined(CS_COMPILER_MSVC)
#pragma const_seg(".CSmetai")
#pragma comment(linker, "/section:.CSmetai,r")
#pragma code_seg(".CSmeta")
#pragma comment(linker, "/section:.CSmeta,er")
#pragma comment(linker, "/merge:.CSmetai=.CSmeta")
#endif

namespace csStaticPluginInit
{
static char const metainfo_pfsound[] =
"<?xml version=\"1.0\"?>"
"<!-- pfsound.csplugin -->"
"<plugin>"
"  <scf>"
"    <classes>"
"      <!-- @@@ to be deprecated -->"
"      <class>"
"        <name>cel.pcfactory.soundlistener</name>"
"        <implementation>celPfSoundListener</implementation>"
"        <description>CEL Sound Listener Property Class Factory</description>"
"      </class>"
"      <!-- @@@ to be deprecated -->"
"      <class>"
"        <name>cel.pcfactory.soundsource</name>"
"        <implementation>celPfSoundSource</implementation>"
"        <description>CEL Sound Source Property Class Factory</description>"
"      </class>"
""
"      <class>"
"        <name>cel.pcfactory.sound.listener</name>"
"        <implementation>celPfSoundListener</implementation>"
"        <description>CEL Sound Listener Property Class Factory</description>"
"      </class>"
"      <class>"
"        <name>cel.pcfactory.sound.source</name>"
"        <implementation>celPfSoundSource</implementation>"
"        <description>CEL Sound Source Property Class Factory</description>"
"      </class>"
"    </classes>"
"  </scf>"
"</plugin>"
;
  #ifndef celPfSoundListener_FACTORY_REGISTER_DEFINED 
  #define celPfSoundListener_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(celPfSoundListener) 
  #endif
  #ifndef celPfSoundSource_FACTORY_REGISTER_DEFINED 
  #define celPfSoundSource_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(celPfSoundSource) 
  #endif
  #ifndef celPfSoundListener_FACTORY_REGISTER_DEFINED 
  #define celPfSoundListener_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(celPfSoundListener) 
  #endif
  #ifndef celPfSoundSource_FACTORY_REGISTER_DEFINED 
  #define celPfSoundSource_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(celPfSoundSource) 
  #endif

class pfsound
{
SCF_REGISTER_STATIC_LIBRARY(pfsound,metainfo_pfsound)
  #ifndef celPfSoundListener_FACTORY_REGISTERED 
  #define celPfSoundListener_FACTORY_REGISTERED 
    celPfSoundListener_StaticInit celPfSoundListener_static_init__; 
  #endif
  #ifndef celPfSoundSource_FACTORY_REGISTERED 
  #define celPfSoundSource_FACTORY_REGISTERED 
    celPfSoundSource_StaticInit celPfSoundSource_static_init__; 
  #endif
  #ifndef celPfSoundListener_FACTORY_REGISTERED 
  #define celPfSoundListener_FACTORY_REGISTERED 
    celPfSoundListener_StaticInit celPfSoundListener_static_init__; 
  #endif
  #ifndef celPfSoundSource_FACTORY_REGISTERED 
  #define celPfSoundSource_FACTORY_REGISTERED 
    celPfSoundSource_StaticInit celPfSoundSource_static_init__; 
  #endif
public:
 pfsound();
};
pfsound::pfsound() {}

}
