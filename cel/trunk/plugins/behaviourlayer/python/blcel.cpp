/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.21
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};                                                    
#endif



    #ifndef __STDC_CONSTANT_MACROS
    #define __STDC_CONSTANT_MACROS
    #endif
    #ifndef __STDC_LIMIT_MACROS
    #define __STDC_LIMIT_MACROS
    #endif
    #ifndef DEBUG_PYTHON
    #undef _DEBUG
    #endif
    #include "Python.h"

/*************************************************************** -*- c -*-
 * python/precommon.swg
 *
 * Rename all exported symbols from common.swg, to avoid symbol
 * clashes if multiple interpreters are included
 *
 ************************************************************************/

#define SWIG_TypeRegister    SWIG_Python_TypeRegister
#define SWIG_TypeCheck       SWIG_Python_TypeCheck
#define SWIG_TypeCast        SWIG_Python_TypeCast
#define SWIG_TypeDynamicCast SWIG_Python_TypeDynamicCast
#define SWIG_TypeName        SWIG_Python_TypeName
#define SWIG_TypeQuery       SWIG_Python_TypeQuery
#define SWIG_TypeClientData  SWIG_Python_TypeClientData
#define SWIG_PackData        SWIG_Python_PackData 
#define SWIG_UnpackData      SWIG_Python_UnpackData 


/***********************************************************************
 * common.swg
 *
 *     This file contains generic SWIG runtime support for pointer
 *     type checking as well as a few commonly used macros to control
 *     external linkage.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 *
 * Copyright (c) 1999-2000, The University of Chicago
 * 
 * This file may be freely redistributed without license or fee provided
 * this copyright message remains intact.
 ************************************************************************/

#include <string.h>

#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  if defined(_MSC_VER) || defined(__GNUC__)
#    if defined(STATIC_LINKED)
#      define SWIGEXPORT(a) a
#      define SWIGIMPORT(a) extern a
#    else
#      define SWIGEXPORT(a) __declspec(dllexport) a
#      define SWIGIMPORT(a) extern a
#    endif
#  else
#    if defined(__BORLANDC__)
#      define SWIGEXPORT(a) a _export
#      define SWIGIMPORT(a) a _export
#    else
#      define SWIGEXPORT(a) a
#      define SWIGIMPORT(a) a
#    endif
#  endif
#else
#  define SWIGEXPORT(a) a
#  define SWIGIMPORT(a) a
#endif

#ifdef SWIG_GLOBAL
#  define SWIGRUNTIME(a) SWIGEXPORT(a)
#else
#  define SWIGRUNTIME(a) static a
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

typedef struct swig_type_info {
  const char             *name;
  swig_converter_func     converter;
  const char             *str;
  void                   *clientdata;
  swig_dycast_func        dcast;
  struct swig_type_info  *next;
  struct swig_type_info  *prev;
} swig_type_info;

#ifdef SWIG_NOINCLUDE

SWIGIMPORT(swig_type_info *) SWIG_TypeRegister(swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeCheck(char *c, swig_type_info *);
SWIGIMPORT(void *)           SWIG_TypeCast(swig_type_info *, void *);
SWIGIMPORT(swig_type_info *) SWIG_TypeDynamicCast(swig_type_info *, void **);
SWIGIMPORT(const char *)     SWIG_TypeName(const swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeQuery(const char *);
SWIGIMPORT(void)             SWIG_TypeClientData(swig_type_info *, void *);
SWIGIMPORT(char *)           SWIG_PackData(char *, void *, int);
SWIGIMPORT(char *)           SWIG_UnpackData(char *, void *, int);

#else

static swig_type_info *swig_type_list = 0;

/* Register a type mapping with the type-checking */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeRegister(swig_type_info *ti) {
  swig_type_info *tc, *head, *ret, *next;
  /* Check to see if this type has already been registered */
  tc = swig_type_list;
  while (tc) {
    if (strcmp(tc->name, ti->name) == 0) {
      /* Already exists in the table.  Just add additional types to the list */
      if (tc->clientdata) ti->clientdata = tc->clientdata;
      head = tc;
      next = tc->next;
      goto l1;
    }
    tc = tc->prev;
  }
  head = ti;
  next = 0;

  /* Place in list */
  ti->prev = swig_type_list;
  swig_type_list = ti;

  /* Build linked lists */
  l1:
  ret = head;
  tc = ti + 1;
  /* Patch up the rest of the links */
  while (tc->name) {
    head->next = tc;
    tc->prev = head;
    head = tc;
    tc++;
  }
  if (next) next->prev = head;
  head->next = next;
  return ret;
}

/* Check the typename */
SWIGRUNTIME(swig_type_info *) 
SWIG_TypeCheck(char *c, swig_type_info *ty) {
  swig_type_info *s;
  if (!ty) return 0;        /* Void pointer */
  s = ty->next;             /* First element always just a name */
  do {
    if (strcmp(s->name,c) == 0) {
      if (s == ty->next) return s;
      /* Move s to the top of the linked list */
      s->prev->next = s->next;
      if (s->next) {
        s->next->prev = s->prev;
      }
      /* Insert s as second element in the list */
      s->next = ty->next;
      if (ty->next) ty->next->prev = s;
      ty->next = s;
      s->prev = ty;
      return s;
    }
    s = s->next;
  } while (s && (s != ty->next));
  return 0;
}

/* Cast a pointer up an inheritance hierarchy */
SWIGRUNTIME(void *) 
SWIG_TypeCast(swig_type_info *ty, void *ptr) {
  if ((!ty) || (!ty->converter)) return ptr;
  return (*ty->converter)(ptr);
}

/* Dynamic pointer casting. Down an inheritance hierarchy */
SWIGRUNTIME(swig_type_info *) 
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/* Return the name associated with this type */
SWIGRUNTIME(const char *)
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/* Search for a swig_type_info structure */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeQuery(const char *name) {
  swig_type_info *ty = swig_type_list;
  while (ty) {
    if (ty->str && (strcmp(name,ty->str) == 0)) return ty;
    if (ty->name && (strcmp(name,ty->name) == 0)) return ty;
    ty = ty->prev;
  }
  return 0;
}

/* Set the clientdata field for a type */
SWIGRUNTIME(void)
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_type_info *tc, *equiv;
  if (ti->clientdata == clientdata) return;
  ti->clientdata = clientdata;
  equiv = ti->next;
  while (equiv) {
    if (!equiv->converter) {
      tc = swig_type_list;
      while (tc) {
        if ((strcmp(tc->name, equiv->name) == 0))
          SWIG_TypeClientData(tc,clientdata);
        tc = tc->prev;
      }
    }
    equiv = equiv->next;
  }
}

/* Pack binary data into a string */
SWIGRUNTIME(char *)
SWIG_PackData(char *c, void *ptr, int sz) {
  static char hex[17] = "0123456789abcdef";
  int i;
  unsigned char *u = (unsigned char *) ptr;
  register unsigned char uu;
  for (i = 0; i < sz; i++,u++) {
    uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* Unpack binary data from a string */
SWIGRUNTIME(char *)
SWIG_UnpackData(char *c, void *ptr, int sz) {
  register unsigned char uu = 0;
  register int d;
  unsigned char *u = (unsigned char *) ptr;
  int i;
  for (i = 0; i < sz; i++, u++) {
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    *u = uu;
  }
  return c;
}

#endif

#ifdef __cplusplus
}
#endif

/***********************************************************************
 * python.swg
 *
 *     This file contains the runtime support for Python modules
 *     and includes code for managing global variables and pointer
 *     type checking.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 ************************************************************************/


    #ifndef __STDC_CONSTANT_MACROS
    #define __STDC_CONSTANT_MACROS
    #endif
    #ifndef __STDC_LIMIT_MACROS
    #define __STDC_LIMIT_MACROS
    #endif
    #ifndef DEBUG_PYTHON
    #undef _DEBUG
    #endif
    #include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif

#define SWIG_PY_INT     1
#define SWIG_PY_FLOAT   2
#define SWIG_PY_STRING  3
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Flags for pointer conversion */

#define SWIG_POINTER_EXCEPTION     0x1
#define SWIG_POINTER_DISOWN        0x2

/* Exception handling in wrappers */
#define SWIG_fail   goto fail

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;

/* Common SWIG API */
#define SWIG_ConvertPtr(obj, pp, type, flags) \
  SWIG_Python_ConvertPtr(obj, pp, type, flags)
#define SWIG_NewPointerObj(p, type, flags) \
  SWIG_Python_NewPointerObj(p, type, flags)
#define SWIG_MustGetPtr(p, type, argnum, flags) \
  SWIG_Python_MustGetPtr(p, type, argnum, flags)

/* Python-specific SWIG API */
#define SWIG_newvarlink() \
  SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr) \
  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_ConvertPacked(obj, ptr, sz, ty, flags) \
  SWIG_Python_ConvertPacked(obj, ptr, sz, ty, flags)
#define SWIG_NewPackedObj(ptr, sz, type) \
  SWIG_Python_NewPackedObj(ptr, sz, type)
#define SWIG_InstallConstants(d, constants) \
  SWIG_Python_InstallConstants(d, constants)

#ifdef SWIG_NOINCLUDE

SWIGIMPORT(int)               SWIG_Python_ConvertPtr(PyObject *, void **, swig_type_info *, int);
SWIGIMPORT(PyObject *)        SWIG_Python_NewPointerObj(void *, swig_type_info *,int own);
SWIGIMPORT(void *)            SWIG_Python_MustGetPtr(PyObject *, swig_type_info *, int, int);
SWIGIMPORT(PyObject *)        SWIG_Python_newvarlink(void);
SWIGIMPORT(void)              SWIG_Python_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
SWIGIMPORT(int)               SWIG_Python_ConvertPacked(PyObject *, void *, int sz, swig_type_info *, int);
SWIGIMPORT(PyObject *)        SWIG_Python_NewPackedObj(void *, int sz, swig_type_info *);
SWIGIMPORT(void)              SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]);

#else

/* -----------------------------------------------------------------------------
 * global variable support code.
 * ----------------------------------------------------------------------------- */

typedef struct swig_globalvar {   
  char       *name;                  /* Name of global variable */
  PyObject *(*get_attr)(void);       /* Return the current value */
  int       (*set_attr)(PyObject *); /* Set the value */
  struct swig_globalvar *next;
} swig_globalvar;

typedef struct swig_varlinkobject {
  PyObject_HEAD
  swig_globalvar *vars;
} swig_varlinkobject;

static PyObject *
swig_varlink_repr(swig_varlinkobject *v) {
  v = v;
  return PyString_FromString("<Global variables>");
}

static int
swig_varlink_print(swig_varlinkobject *v, FILE *fp, int flags) {
  swig_globalvar  *var;
  flags = flags;
  fprintf(fp,"Global variables { ");
  for (var = v->vars; var; var=var->next) {
    fprintf(fp,"%s", var->name);
    if (var->next) fprintf(fp,", ");
  }
  fprintf(fp," }\n");
  return 0;
}

static PyObject *
swig_varlink_getattr(swig_varlinkobject *v, char *n) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->get_attr)();
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return NULL;
}

static int
swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->set_attr)(p);
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return 1;
}

statichere PyTypeObject varlinktype = {
  PyObject_HEAD_INIT(0)              
  0,
  (char *)"swigvarlink",              /* Type name    */
  sizeof(swig_varlinkobject),         /* Basic size   */
  0,                                  /* Itemsize     */
  0,                                  /* Deallocator  */ 
  (printfunc) swig_varlink_print,     /* Print        */
  (getattrfunc) swig_varlink_getattr, /* get attr     */
  (setattrfunc) swig_varlink_setattr, /* Set attr     */
  0,                                  /* tp_compare   */
  (reprfunc) swig_varlink_repr,       /* tp_repr      */    
  0,                                  /* tp_as_number */
  0,                                  /* tp_as_mapping*/
  0,                                  /* tp_hash      */
};

/* Create a variable linking object for use later */
SWIGRUNTIME(PyObject *)
SWIG_Python_newvarlink(void) {
  swig_varlinkobject *result = 0;
  result = PyMem_NEW(swig_varlinkobject,1);
  varlinktype.ob_type = &PyType_Type;    /* Patch varlinktype into a PyType */
  result->ob_type = &varlinktype;
  result->vars = 0;
  result->ob_refcnt = 0;
  Py_XINCREF((PyObject *) result);
  return ((PyObject*) result);
}

SWIGRUNTIME(void)
SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
  swig_varlinkobject *v;
  swig_globalvar *gv;
  v= (swig_varlinkobject *) p;
  gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
  gv->name = (char *) malloc(strlen(name)+1);
  strcpy(gv->name,name);
  gv->get_attr = get_attr;
  gv->set_attr = set_attr;
  gv->next = v->vars;
  v->vars = gv;
}

/* Convert a pointer value */
SWIGRUNTIME(int)
SWIG_Python_ConvertPtr(PyObject *obj, void **ptr, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c = 0;
  static PyObject *SWIG_this = 0;
  int    newref = 0;
  PyObject  *pyobj = 0;

  if (!obj) return 0;
  if (obj == Py_None) {
    *ptr = 0;
    return 0;
  }
#ifdef SWIG_COBJECT_TYPES
  if (!(PyCObject_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyCObject_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  }  
  *ptr = PyCObject_AsVoidPtr(obj);
  c = (char *) PyCObject_GetDesc(obj);
  if (newref) Py_DECREF(obj);
  goto cobject;
#else
  if (!(PyString_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyString_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  } 
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') {
    *ptr = (void *) 0;
    if (strcmp(c,"NULL") == 0) {
      if (newref) { Py_DECREF(obj); }
      return 0;
    } else {
      if (newref) { Py_DECREF(obj); }
      goto type_error;
    }
  }
  c++;
  c = SWIG_UnpackData(c,ptr,sizeof(void *));
  if (newref) { Py_DECREF(obj); }
#endif

#ifdef SWIG_COBJECT_TYPES
cobject:
#endif

  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
    *ptr = SWIG_TypeCast(tc,(void*) *ptr);
  }

  if ((pyobj) && (flags & SWIG_POINTER_DISOWN)) {
    PyObject *zero = PyInt_FromLong(0);
    PyObject_SetAttrString(pyobj,(char*)"thisown",zero);
    Py_DECREF(zero);
  }
  return 0;

type_error:
  if (flags & SWIG_POINTER_EXCEPTION) {
    if (ty && c) {
      char *temp = (char *) malloc(64+strlen(ty->name)+strlen(c));
      sprintf(temp,"Type error. Got %s, expected %s", c, ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME(void *)
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {
  void *result;
  SWIG_Python_ConvertPtr(obj, &result, ty, flags | SWIG_POINTER_EXCEPTION);
  return result;
}

/* Convert a packed value value */
SWIGRUNTIME(int)
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, int sz, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c = 0;

  if ((!obj) || (!PyString_Check(obj))) goto type_error;
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') goto type_error;
  c++;
  c = SWIG_UnpackData(c,ptr,sz);
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
  }
  return 0;

type_error:

  if (flags) {
    if (ty && c) {
      char *temp = (char *) malloc(64+strlen(ty->name)+strlen(c));
      sprintf(temp,"Type error. Got %s, expected %s", c, ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Create a new pointer object */
SWIGRUNTIME(PyObject *)
SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int own) {
  PyObject *robj;
  if (!ptr) {
    Py_INCREF(Py_None);
    return Py_None;
  }
#ifdef SWIG_COBJECT_TYPES
  robj = PyCObject_FromVoidPtrAndDesc((void *) ptr, (char *) type->name, NULL);
#else
  {
    char result[1024];
    char *r = result;
    *(r++) = '_';
    r = SWIG_PackData(r,&ptr,sizeof(void *));
    strcpy(r,type->name);
    robj = PyString_FromString(result);
  }
#endif
  if (!robj || (robj == Py_None)) return robj;
  if (type->clientdata) {
    PyObject *inst;
    PyObject *args = Py_BuildValue((char*)"(O)", robj);
    Py_DECREF(robj);
    inst = PyObject_CallObject((PyObject *) type->clientdata, args);
    Py_DECREF(args);
    if (inst) {
      if (own) {
        PyObject *n = PyInt_FromLong(1);
        PyObject_SetAttrString(inst,(char*)"thisown",n);
        Py_DECREF(n);
      }
      robj = inst;
    }
  }
  return robj;
}

SWIGRUNTIME(PyObject *)
SWIG_Python_NewPackedObj(void *ptr, int sz, swig_type_info *type) {
  char result[1024];
  char *r = result;
  if ((2*sz + 1 + strlen(type->name)) > 1000) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  strcpy(r,type->name);
  return PyString_FromString(result);
}

/* Install Constants */
SWIGRUNTIME(void)
SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
  int i;
  PyObject *obj;
  for (i = 0; constants[i].type; i++) {
    switch(constants[i].type) {
    case SWIG_PY_INT:
      obj = PyInt_FromLong(constants[i].lvalue);
      break;
    case SWIG_PY_FLOAT:
      obj = PyFloat_FromDouble(constants[i].dvalue);
      break;
    case SWIG_PY_STRING:
      obj = PyString_FromString((char *) constants[i].pvalue);
      break;
    case SWIG_PY_POINTER:
      obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
      break;
    case SWIG_PY_BINARY:
      obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
      break;
    default:
      obj = 0;
      break;
    }
    if (obj) {
      PyDict_SetItemString(d,constants[i].name,obj);
      Py_DECREF(obj);
    }
  }
}

#endif

/* Contract support */

#define SWIG_contract_assert(expr, msg) if (!(expr)) { PyErr_SetString(PyExc_RuntimeError, (char *) msg ); goto fail; } else

#ifdef __cplusplus
}
#endif


/* -------- TYPES TABLE (BEGIN) -------- */

#define  SWIGTYPE_p_iCollider swig_types[0] 
#define  SWIGTYPE_p_iDocumentNode swig_types[1] 
#define  SWIGTYPE_p_iObjectRegistry swig_types[2] 
#define  SWIGTYPE_p_iPcMovableConstraint swig_types[3] 
#define  SWIGTYPE_p_iCelPropertyClassList swig_types[4] 
#define  SWIGTYPE_p_celPersistenceType swig_types[5] 
#define  SWIGTYPE_p_celInitializer swig_types[6] 
#define  SWIGTYPE_p_csInitializer swig_types[7] 
#define  SWIGTYPE_p_csStringID swig_types[8] 
#define  SWIGTYPE_p_size_t swig_types[9] 
#define  SWIGTYPE_p_iPcDefaultCamera swig_types[10] 
#define  SWIGTYPE_p_iCelPropertyClassFactory swig_types[11] 
#define  SWIGTYPE_p_iSector swig_types[12] 
#define  SWIGTYPE_p_p_iSector swig_types[13] 
#define  SWIGTYPE_p_iCelParameterBlock swig_types[14] 
#define  SWIGTYPE_p_csPtrTiCelEntityList_t swig_types[15] 
#define  SWIGTYPE_p_bool swig_types[16] 
#define  SWIGTYPE_p_iPcCharacteristics swig_types[17] 
#define  SWIGTYPE_p_iPcMeshSelect swig_types[18] 
#define  SWIGTYPE_p_iPcTooltip swig_types[19] 
#define  SWIGTYPE_p_iPcProperties swig_types[20] 
#define  SWIGTYPE_p_iCelEntityTracker swig_types[21] 
#define  SWIGTYPE_p_csColor swig_types[22] 
#define  SWIGTYPE_p_iCelRegion swig_types[23] 
#define  SWIGTYPE_p_iCelEntity swig_types[24] 
#define  SWIGTYPE_p_iPcLight swig_types[25] 
#define  SWIGTYPE_p_void swig_types[26] 
#define  SWIGTYPE_p_int swig_types[27] 
#define  SWIGTYPE_p_csPtrTiCelDataBuffer_t swig_types[28] 
#define  SWIGTYPE_p_iCelMapFile swig_types[29] 
#define  SWIGTYPE_p_iPath swig_types[30] 
#define  SWIGTYPE_p_iJoint swig_types[31] 
#define  SWIGTYPE_p_iCelEntityList swig_types[32] 
#define  SWIGTYPE_p_celData swig_types[33] 
#define  SWIGTYPE_p_iPcMechanicsObject swig_types[34] 
#define  SWIGTYPE_p_iObject swig_types[35] 
#define  SWIGTYPE_p_celEntityTemplateParams swig_types[36] 
#define  SWIGTYPE_p_iPcBillboard swig_types[37] 
#define  SWIGTYPE_p_iBillboard swig_types[38] 
#define  SWIGTYPE_p_iPcLinearMovement swig_types[39] 
#define  SWIGTYPE_p_csPath swig_types[40] 
#define  SWIGTYPE_p_iSndSysSource swig_types[41] 
#define  SWIGTYPE_p_iString swig_types[42] 
#define  SWIGTYPE_p_csString swig_types[43] 
#define  SWIGTYPE_p_iPcCommandInput swig_types[44] 
#define  SWIGTYPE_p_iCelEntityTemplate swig_types[45] 
#define  SWIGTYPE_p_csFlags swig_types[46] 
#define  SWIGTYPE_p_csOrthoTransform swig_types[47] 
#define  SWIGTYPE_p_iCelPropertyClass swig_types[48] 
#define  SWIGTYPE_p_iStringArray swig_types[49] 
#define  SWIGTYPE_p_iPcMovable swig_types[50] 
#define  SWIGTYPE_p_iBillboardEventHandler swig_types[51] 
#define  SWIGTYPE_p_iPcCollisionDetection swig_types[52] 
#define  SWIGTYPE_p_p_iPcCollisionDetection swig_types[53] 
#define  SWIGTYPE_p_iPcActorMove swig_types[54] 
#define  SWIGTYPE_p_iMeshWrapper swig_types[55] 
#define  SWIGTYPE_p_iFont swig_types[56] 
#define  SWIGTYPE_p_celStabiliserFunction swig_types[57] 
#define  SWIGTYPE_p_iCelPropertyChangeCallback swig_types[58] 
#define  SWIGTYPE_p_iCelEntityRemoveCallback swig_types[59] 
#define  SWIGTYPE_p_iCelNewEntityCallback swig_types[60] 
#define  SWIGTYPE_p_iPcMechanicsBalancedGroup swig_types[61] 
#define  SWIGTYPE_p_uint32 swig_types[62] 
#define  SWIGTYPE_p_iPcGravityCallback swig_types[63] 
#define  SWIGTYPE_p_iPcZoneManager swig_types[64] 
#define  SWIGTYPE_p_iBillboardManager swig_types[65] 
#define  SWIGTYPE_p_iPcCamera swig_types[66] 
#define  SWIGTYPE_p_iCamera swig_types[67] 
#define  SWIGTYPE_p_iPcMesh swig_types[68] 
#define  SWIGTYPE_p_iPcSimpleCamera swig_types[69] 
#define  SWIGTYPE_p_iCelBehaviour swig_types[70] 
#define  SWIGTYPE_p_csPtrTiRigidBody_t swig_types[71] 
#define  SWIGTYPE_p_iCelZone swig_types[72] 
#define  SWIGTYPE_p_iBillboardLayer swig_types[73] 
#define  SWIGTYPE_p_iPcTimer swig_types[74] 
#define  SWIGTYPE_p_iPcSoundSource swig_types[75] 
#define  SWIGTYPE_p_iPcHover swig_types[76] 
#define  SWIGTYPE_p_csPlane3 swig_types[77] 
#define  SWIGTYPE_p_csVector2 swig_types[78] 
#define  SWIGTYPE_p_iPcMechanicsThruster swig_types[79] 
#define  SWIGTYPE_p_iCelDataBuffer swig_types[80] 
#define  SWIGTYPE_p_csVector3 swig_types[81] 
#define  SWIGTYPE_p_celPersistenceResult swig_types[82] 
#define  SWIGTYPE_p_iPcGravity swig_types[83] 
#define  SWIGTYPE_p_csRefTiPcMesh_t swig_types[84] 
#define  SWIGTYPE_p_iRigidBody swig_types[85] 
#define  SWIGTYPE_p_iDynamicSystem swig_types[86] 
#define  SWIGTYPE_p_iPcMechanicsSystem swig_types[87] 
#define  SWIGTYPE_p_iPcMechanicsJoint swig_types[88] 
#define  SWIGTYPE_p_iCelInventorySpace swig_types[89] 
#define  SWIGTYPE_p_basetype swig_types[90] 
#define  SWIGTYPE_p_csArrayTcsPluginRequest_t swig_types[91] 
#define  SWIGTYPE_p_iPcSolid swig_types[92] 
#define  SWIGTYPE_p_csBox3 swig_types[93] 
#define  SWIGTYPE_p_iView swig_types[94] 
#define  SWIGTYPE_p_iCelInventorySpaceSlot swig_types[95] 
#define  SWIGTYPE_p_csPtrTiCelEntity_t swig_types[96] 
#define  SWIGTYPE_p_iCelTimerListener swig_types[97] 
#define  SWIGTYPE_p_iPcMeshSelectListener swig_types[98] 
#define  SWIGTYPE_p_iPcInventoryListener swig_types[99] 
#define  SWIGTYPE_p_iPcSoundListener swig_types[100] 
#define  SWIGTYPE_p_iSndSysListener swig_types[101] 
#define  SWIGTYPE_p_iPcPropertyListener swig_types[102] 
#define  SWIGTYPE_p_celDataType swig_types[103] 
#define  SWIGTYPE_p_iPcMechanicsThrusterController swig_types[104] 
#define  SWIGTYPE_p_float swig_types[105] 
#define  SWIGTYPE_p_iPcCraftController swig_types[106] 
#define  SWIGTYPE_p_iBase swig_types[107] 
#define  SWIGTYPE_p_iCelBlLayer swig_types[108] 
#define  SWIGTYPE_p_iCelPlLayer swig_types[109] 
#define  SWIGTYPE_p_iPcInventory swig_types[110] 
#define  SWIGTYPE_p_iRegion swig_types[111] 
#define  SWIGTYPE_p_iPcRegion swig_types[112] 
static swig_type_info *swig_types[114];

/* -------- TYPES TABLE (END) -------- */


/*-----------------------------------------------
              @(target):= _blcelc.so
  ------------------------------------------------*/
#define SWIG_init SWIG_init_blcelc

#define SWIG_name    "_blcelc"

#include <crystalspace.h>
#include "celtool/initapp.h"
#include "physicallayer/pl.h"
#include "physicallayer/propfact.h"
#include "physicallayer/propclas.h"
#include "physicallayer/entity.h"
#include "physicallayer/persist.h"
#include "behaviourlayer/bl.h"
#include "behaviourlayer/behave.h"
#include "propclass/region.h"
#include "propclass/camera.h"
#include "propclass/defcam.h"
#include "propclass/simpcam.h"
#include "propclass/mesh.h"
#include "propclass/meshsel.h"
#include "propclass/timer.h"
#include "propclass/solid.h"
#include "propclass/gravity.h"
#include "propclass/move.h"
#include "propclass/inv.h"
#include "propclass/chars.h"
#include "propclass/linmove.h"
#include "propclass/actormove.h"
#include "propclass/input.h"
#include "propclass/billboard.h"
#include "propclass/mechsys.h"
#include "propclass/sound.h"
#include "propclass/mechthruster.h"
#include "propclass/tooltip.h"
#include "propclass/prop.h"
#include "propclass/hover.h"
#include "propclass/craft.h"
#include "plugins/behaviourlayer/python/blpython.h"
#include "tools/billboard.h"
#include "propclass/zone.h"



  struct _csPyEventHandler : public iEventHandler
  {
    SCF_DECLARE_IBASE;
    _csPyEventHandler (PyObject * obj) : _pySelf(obj)
    {
      SCF_CONSTRUCT_IBASE(0);
      IncRef();
    }
    virtual ~_csPyEventHandler ()
    {
      SCF_DESTRUCT_IBASE();
      DecRef();
    }
    virtual bool HandleEvent (iEvent & event)
    {
      PyObject * event_obj = SWIG_NewPointerObj(
        (void *) &event, SWIG_TypeQuery("iEvent *"), 0
      );
      PyObject * result = PyObject_CallMethod(_pySelf, "HandleEvent", "(O)",
        event_obj
      );
      Py_DECREF(event_obj);
      if (!result)
      {
        return false;
      }
      bool res = PyInt_AsLong(result);
      Py_DECREF(result);
      return res;
    }
  private:
    PyObject * _pySelf;
  };



iCelPlLayer *csQueryRegistry_iCelPlLayer (iObjectRegistry *object_reg)
{
  csRef<iCelPlLayer> pl = CS_QUERY_REGISTRY (object_reg, iCelPlLayer);
  return pl;
}

iCelBehaviour *iCelEntity_CreateBehaviour(iCelEntity *self,iCelBlLayer *bl,char const *name){
    csRef<iCelBehaviour> bh(bl->CreateBehaviour(self, name));
    if (!bh.IsValid()) return 0;
    return bh;
  }

bool celRegisterPCFactory (iObjectRegistry* object_reg, const char* pcfactname)
{
  csRef<iCelPlLayer> pl = CS_QUERY_REGISTRY (object_reg,
  	iCelPlLayer);
  bool rc = pl->LoadPropertyClassFactory (pcfactname);
  return rc;
}


iCelEntity *celCreateEntity(iCelPlLayer *pl, const char *name)
{
  csRef<iCelEntity> en = pl->CreateEntity();
  if (!en.IsValid()) return 0;
  en->SetName (name);
  en->IncRef ();
  return en;
}


iCelEntity *scfQueryInterface_iCelEntity (iBase *base)
{
  csRef<iCelEntity> ent = SCF_QUERY_INTERFACE (base, iCelEntity);
  return ent;
}


iCelEntityList *celFindNearbyEntities (iObjectRegistry *object_reg,
	iSector *sector, csVector3 pos, float radius)
{
  csRef<iCelPlLayer> pl = CS_QUERY_REGISTRY (object_reg, iCelPlLayer);
  if (!pl.IsValid()) return 0;
  csRef<iCelEntityList> entlist = pl->FindNearbyEntities (sector, pos, radius);
  entlist->IncRef();
  return entlist;
}


iCelBlLayer *csQueryRegistry_iCelBlLayer (iObjectRegistry *object_reg)
{
  csRef<iCelBlLayer> bl = CS_QUERY_REGISTRY (object_reg, iCelBlLayer);
  return bl;
}

PyObject *iCelParameterBlock_GetParameterValue(iCelParameterBlock *self,csStringID id){
		const celData *data = self->GetParameter(id);
		PyObject *obj = Py_None;
		if (data)
		{
		    switch(data->type)
		    {
			case CEL_DATA_FLOAT:
				obj = PyFloat_FromDouble((float)data->value.f);
				break;
			case CEL_DATA_BOOL:
				obj = SWIG_From_bool((bool)data->value.bo);
				break;
			case CEL_DATA_STRING:
			{
				char *result;
				result = (char*)((iString const *)(data->value.s)->GetData());
				obj = SWIG_FromCharPtr(result);
				break;
			}
			case CEL_DATA_VECTOR2:
			{
				csVector2 *result;
				result = new csVector2(data->value.v.x,data->value.v.y);
				obj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_csVector2, 1);
				break;
			}
			case CEL_DATA_VECTOR3:
			{
				csVector3 *result;
				result = new csVector3(data->value.v.x,data->value.v.y,data->value.v.z);
				obj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_csVector3, 1);
				break;
			}
			case CEL_DATA_ENTITY:
			{
				iCelEntity *result;
				result = (iCelEntity *)(data->value.ent);
				obj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_iCelEntity, 0);
				break;
			}
			case CEL_DATA_PCLASS:
			{
				iCelPropertyClass *result;
				result = (iCelPropertyClass *)(data->value.pc);
				obj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_iCelPropertyClass, 0);
				break;
			}
			case CEL_DATA_ACTION:
			{
				char *result;
				result = (char*)((iString const *)(data->value.s)->GetData());
				obj = SWIG_FromCharPtr(result);
				break;
			}
			case CEL_DATA_IBASE:
			{
				iBase *result;
				result = (iBase *)(data->value.pc);
				obj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_iBase, 0);
				break;
			}
			case CEL_DATA_COLOR:
			{
				csColor *result;
				result = new csColor(data->value.col.red,data->value.col.green,data->value.col.blue);
				obj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_csColor, 1);
				break;
			}
			case CEL_DATA_WORD:
			{
				obj = SWIG_From_int((int)data->value.w);
				break;
			}
			case CEL_DATA_LONG:
			{
				obj = SWIG_From_long((long)data->value.l);
				break;
			}
			case CEL_DATA_ULONG:
			{
				obj = PyLong_FromUnsignedLong((unsigned long)data->value.ul);
				break;
			}
			{
				break;
			}
			/* Still to be done (and some more) */
			case CEL_DATA_BYTE:
				/*data->value.b (int8)*/
			case CEL_DATA_UWORD:
				/*data->value.uw (uint16)*/
			case CEL_DATA_PARAMETER:
				/*data->value.par (iString+celDataType)*/
			default:
				obj = Py_None;
				break;
		    }
		}
		return obj;
	}
PyObject *iCelBehaviour_GetPythonObject(iCelBehaviour *self){
    PyObject* obj = (PyObject*)(self->GetInternalObject());
    Py_INCREF (obj);
    return obj;
  }
bool iCelPropertyClass_SetPropertyLong(iCelPropertyClass *self,csStringID id,long l){ return self->SetProperty (id, l); }
bool iCelPropertyClass_SetPropertyFloat(iCelPropertyClass *self,csStringID id,float f){ return self->SetProperty (id, f); }
bool iCelPropertyClass_SetPropertyBool(iCelPropertyClass *self,csStringID id,bool b){ return self->SetProperty (id, b); }
bool iCelPropertyClass_SetPropertyString(iCelPropertyClass *self,csStringID id,char const *s){ return self->SetProperty (id, s); }
bool iCelPropertyClass_SetPropertyVector3(iCelPropertyClass *self,csStringID id,csVector3 const &v){ return self->SetProperty (id, v); }

iPcMechanicsSystem *celCreateMechanicsSystem(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcmechsys" );
  if (!pc.IsValid()) return 0;
  csRef<iPcMechanicsSystem> pclm =    scfQueryInterface<iPcMechanicsSystem> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcMechanicsSystem * celGetMechanicsSystem (iCelEntity *entity)
{
  csRef<iPcMechanicsSystem> pc =    (celQueryPropertyClass<iPcMechanicsSystem> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcMechanicsSystem *scfQuery_iPcMechanicsSystem (iCelPropertyClass *pc)
{
  csRef<iPcMechanicsSystem> iface =    scfQueryInterface<iPcMechanicsSystem> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcMechanicsSystem *scfQueryPC_iPcMechanicsSystem (iCelPropertyClassList *pclist)
{
  csRef<iPcMechanicsSystem> iface =    scfQueryInterface<iPcMechanicsSystem> (pclist);
  if (iface) iface->IncRef ();
  return iface;
}


iPcMechanicsObject *celCreateMechanicsObject(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcmechobject" );
  if (!pc.IsValid()) return 0;
  csRef<iPcMechanicsObject> pclm =    scfQueryInterface<iPcMechanicsObject> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcMechanicsObject * celGetMechanicsObject (iCelEntity *entity)
{
  csRef<iPcMechanicsObject> pc =    (celQueryPropertyClass<iPcMechanicsObject> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcMechanicsObject *scfQuery_iPcMechanicsObject (iCelPropertyClass *pc)
{
  csRef<iPcMechanicsObject> iface =    scfQueryInterface<iPcMechanicsObject> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcMechanicsObject *scfQueryPC_iPcMechanicsObject (iCelPropertyClassList *pclist)
{
  csRef<iPcMechanicsObject> iface =    scfQueryInterface<iPcMechanicsObject> (pclist);
  if (iface) iface->IncRef ();
  return iface;
}


iPcMechanicsJoint *celCreateMechanicsJoint(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcmechjoint" );
  if (!pc.IsValid()) return 0;
  csRef<iPcMechanicsJoint> pclm =    scfQueryInterface<iPcMechanicsJoint> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcMechanicsJoint * celGetMechanicsJoint (iCelEntity *entity)
{
  csRef<iPcMechanicsJoint> pc =    (celQueryPropertyClass<iPcMechanicsJoint> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcMechanicsJoint *scfQuery_iPcMechanicsJoint (iCelPropertyClass *pc)
{
  csRef<iPcMechanicsJoint> iface =    scfQueryInterface<iPcMechanicsJoint> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcMechanicsJoint *scfQueryPC_iPcMechanicsJoint (iCelPropertyClassList *pclist)
{
  csRef<iPcMechanicsJoint> iface =    scfQueryInterface<iPcMechanicsJoint> (pclist);
  if (iface) iface->IncRef ();
  return iface;
}


iPcMechanicsThruster *celCreateMechanicsThrusterReactionary(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcmechthrustreactionary" );
  if (!pc.IsValid()) return 0;
  csRef<iPcMechanicsThruster> pclm =    scfQueryInterface<iPcMechanicsThruster> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcMechanicsThruster * celGetMechanicsThrusterReactionary (iCelEntity *entity)
{
  csRef<iPcMechanicsThruster> pc =    (celQueryPropertyClass<iPcMechanicsThruster> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcMechanicsThruster *scfQuery_iPcMechanicsThruster (iCelPropertyClass *pc)
{
  csRef<iPcMechanicsThruster> iface =    scfQueryInterface<iPcMechanicsThruster> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcMechanicsThruster *scfQueryPC_iPcMechanicsThruster (iCelPropertyClassList *pclist)
{
  csRef<iPcMechanicsThruster> iface =    scfQueryInterface<iPcMechanicsThruster> (pclist);
  if (iface) iface->IncRef ();
  return iface;
}


iPcMechanicsBalancedGroup *celCreateMechanicsBalancedGroup(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcmechbalancedgroup" );
  if (!pc.IsValid()) return 0;
  csRef<iPcMechanicsBalancedGroup> pclm =    scfQueryInterface<iPcMechanicsBalancedGroup> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcMechanicsBalancedGroup * celGetMechanicsBalancedGroup (iCelEntity *entity)
{
  csRef<iPcMechanicsBalancedGroup> pc =    (celQueryPropertyClass<iPcMechanicsBalancedGroup> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcMechanicsBalancedGroup *scfQuery_iPcMechanicsBalancedGroup (iCelPropertyClass *pc)
{
  csRef<iPcMechanicsBalancedGroup> iface =    scfQueryInterface<iPcMechanicsBalancedGroup> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcMechanicsBalancedGroup *scfQueryPC_iPcMechanicsBalancedGroup (iCelPropertyClassList *pclist)
{
  csRef<iPcMechanicsBalancedGroup> iface =    scfQueryInterface<iPcMechanicsBalancedGroup> (pclist);
  if (iface) iface->IncRef ();
  return iface;
}


iPcMechanicsThrusterController *celCreateMechanicsThrusterController(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcmechthrustercontroller" );
  if (!pc.IsValid()) return 0;
  csRef<iPcMechanicsThrusterController> pclm =    scfQueryInterface<iPcMechanicsThrusterController> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcMechanicsThrusterController * celGetMechanicsThrusterController (iCelEntity *entity)
{
  csRef<iPcMechanicsThrusterController> pc =    (celQueryPropertyClass<iPcMechanicsThrusterController> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcMechanicsThrusterController *scfQuery_iPcMechanicsThrusterController (iCelPropertyClass *pc)
{
  csRef<iPcMechanicsThrusterController> iface =    scfQueryInterface<iPcMechanicsThrusterController> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcMechanicsThrusterController *scfQueryPC_iPcMechanicsThrusterController (iCelPropertyClassList *pclist)
{
  csRef<iPcMechanicsThrusterController> iface =    scfQueryInterface<iPcMechanicsThrusterController> (pclist);
  if (iface) iface->IncRef ();
  return iface;
}


static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;

    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }
        o3 = PyTuple_New(1);            
        PyTuple_SetItem(o3, 0, o);      

        o2 = target;
        target = PySequence_Concat(o2, o3); 
        Py_DECREF(o2);                      
        Py_DECREF(o3);
    }
    return target;
}


iPcBillboard *celCreateBillboard(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcbillboard" );
  if (!pc.IsValid()) return 0;
  csRef<iPcBillboard> pclm =    scfQueryInterface<iPcBillboard> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcBillboard * celGetBillboard (iCelEntity *entity)
{
  csRef<iPcBillboard> pc =    (celQueryPropertyClass<iPcBillboard> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcBillboard *scfQuery_iPcBillboard (iCelPropertyClass *pc)
{
  csRef<iPcBillboard> iface =    scfQueryInterface<iPcBillboard> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcBillboard *scfQueryPC_iPcBillboard (iCelPropertyClassList *pclist)
{
  csRef<iPcBillboard> iface =    scfQueryInterface<iPcBillboard> (pclist);
  if (iface) iface->IncRef ();
  return iface;
}

bool iPcRegion_LoadWorld(iPcRegion *self,char const *vfsdir,char const *name){
    self->SetWorldFile (vfsdir, name);
    return self->Load ();
  }

iPcRegion *celCreateRegion (iCelPlLayer *pl, iCelEntity *entity,
	const char *name)
{
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity, "pcregion");
  if (!pc.IsValid()) return 0;
  csRef<iPcRegion> pcregion = SCF_QUERY_INTERFACE(pc, iPcRegion);
  if (!pcregion.IsValid()) return 0;
  pcregion->SetRegionName (name);
  return pcregion;
}


iPcRegion * Region (iCelEntity *entity)
{
  csRef<iPcRegion> pc =    (celQueryPropertyClass<iPcRegion> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcRegion *scfQuery_iPcRegion (iCelPropertyClass *pc)
{
  csRef<iPcRegion> iface =    scfQueryInterface<iPcRegion> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcRegion *scfQueryPC_iPcRegion (iCelPropertyClassList *pclist)
{
  csRef<iPcRegion> iface =    scfQueryInterface<iPcRegion> (pclist);
  if (iface) iface->IncRef ();
  return iface;
}


iPcZoneManager *celCreateZoneManager(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pczonemanager" );
  if (!pc.IsValid()) return 0;
  csRef<iPcZoneManager> pclm =    scfQueryInterface<iPcZoneManager> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcZoneManager * celGetZoneManager (iCelEntity *entity)
{
  csRef<iPcZoneManager> pc =    (celQueryPropertyClass<iPcZoneManager> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcZoneManager *scfQuery_iPcZoneManager (iCelPropertyClass *pc)
{
  csRef<iPcZoneManager> iface =    scfQueryInterface<iPcZoneManager> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcCommandInput *celCreateCommandInput(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pccommandinput" );
  if (!pc.IsValid()) return 0;
  csRef<iPcCommandInput> pclm =    scfQueryInterface<iPcCommandInput> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcCommandInput * celGetCommandInput (iCelEntity *entity)
{
  csRef<iPcCommandInput> pc =    (celQueryPropertyClass<iPcCommandInput> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcCommandInput *scfQuery_iPcCommandInput (iCelPropertyClass *pc)
{
  csRef<iPcCommandInput> iface =    scfQueryInterface<iPcCommandInput> (pc);
  if (iface) iface->IncRef ();
  return iface;
}

void iPcLinearMovement_SetPath__SWIG_1(iPcLinearMovement *self,csPath &p){ self->SetPath (&p); }

iPcLinearMovement *celCreateLinearMovement(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pclinearmovement" );
  if (!pc.IsValid()) return 0;
  csRef<iPcLinearMovement> pclm =    scfQueryInterface<iPcLinearMovement> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcLinearMovement * celGetLinearMovement (iCelEntity *entity)
{
  csRef<iPcLinearMovement> pc =    (celQueryPropertyClass<iPcLinearMovement> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcLinearMovement *scfQuery_iPcLinearMovement (iCelPropertyClass *pc)
{
  csRef<iPcLinearMovement> iface =    scfQueryInterface<iPcLinearMovement> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcActorMove *celCreateActorMove(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcactormove" );
  if (!pc.IsValid()) return 0;
  csRef<iPcActorMove> pclm =    scfQueryInterface<iPcActorMove> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcActorMove * celGetActorMove (iCelEntity *entity)
{
  csRef<iPcActorMove> pc =    (celQueryPropertyClass<iPcActorMove> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcActorMove *scfQuery_iPcActorMove (iCelPropertyClass *pc)
{
  csRef<iPcActorMove> iface =    scfQueryInterface<iPcActorMove> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcCamera *celCreateCamera(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pccamera" );
  if (!pc.IsValid()) return 0;
  csRef<iPcCamera> pclm =    scfQueryInterface<iPcCamera> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcCamera * celGetCamera (iCelEntity *entity)
{
  csRef<iPcCamera> pc =    (celQueryPropertyClass<iPcCamera> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcCamera *scfQuery_iPcCamera (iCelPropertyClass *pc)
{
  csRef<iPcCamera> iface =    scfQueryInterface<iPcCamera> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcDefaultCamera *celCreateDefaultCamera(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcdefaultcamera" );
  if (!pc.IsValid()) return 0;
  csRef<iPcDefaultCamera> pclm =    scfQueryInterface<iPcDefaultCamera> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcDefaultCamera * celGetDefaultCamera (iCelEntity *entity)
{
  csRef<iPcDefaultCamera> pc =    (celQueryPropertyClass<iPcDefaultCamera> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcDefaultCamera *scfQuery_iPcDefaultCamera (iCelPropertyClass *pc)
{
  csRef<iPcDefaultCamera> iface =    scfQueryInterface<iPcDefaultCamera> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcSimpleCamera *celCreateSimpleCamera(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcsimplecamera" );
  if (!pc.IsValid()) return 0;
  csRef<iPcSimpleCamera> pclm =    scfQueryInterface<iPcSimpleCamera> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcSimpleCamera * celGetSimpleCamera (iCelEntity *entity)
{
  csRef<iPcSimpleCamera> pc =    (celQueryPropertyClass<iPcSimpleCamera> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcSimpleCamera *scfQuery_iPcSimpleCamera (iCelPropertyClass *pc)
{
  csRef<iPcSimpleCamera> iface =    scfQueryInterface<iPcSimpleCamera> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcMeshSelect *celCreateMeshSelect(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcmeshselect" );
  if (!pc.IsValid()) return 0;
  csRef<iPcMeshSelect> pclm =    scfQueryInterface<iPcMeshSelect> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcMeshSelect * celGetMeshSelect (iCelEntity *entity)
{
  csRef<iPcMeshSelect> pc =    (celQueryPropertyClass<iPcMeshSelect> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcMeshSelect *scfQuery_iPcMeshSelect (iCelPropertyClass *pc)
{
  csRef<iPcMeshSelect> iface =    scfQueryInterface<iPcMeshSelect> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcMesh *celCreateMesh(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcmesh" );
  if (!pc.IsValid()) return 0;
  csRef<iPcMesh> pclm =    scfQueryInterface<iPcMesh> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcMesh * celGetMesh (iCelEntity *entity)
{
  csRef<iPcMesh> pc =    (celQueryPropertyClass<iPcMesh> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcMesh *scfQuery_iPcMesh (iCelPropertyClass *pc)
{
  csRef<iPcMesh> iface =    scfQueryInterface<iPcMesh> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcTimer *celCreateTimer(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pctimer" );
  if (!pc.IsValid()) return 0;
  csRef<iPcTimer> pclm =    scfQueryInterface<iPcTimer> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcTimer * celGetTimer (iCelEntity *entity)
{
  csRef<iPcTimer> pc =    (celQueryPropertyClass<iPcTimer> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcTimer *scfQuery_iPcTimer (iCelPropertyClass *pc)
{
  csRef<iPcTimer> iface =    scfQueryInterface<iPcTimer> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcSolid *celCreateSolid(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcsolid" );
  if (!pc.IsValid()) return 0;
  csRef<iPcSolid> pclm =    scfQueryInterface<iPcSolid> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcSolid * celGetSolid (iCelEntity *entity)
{
  csRef<iPcSolid> pc =    (celQueryPropertyClass<iPcSolid> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcSolid *scfQuery_iPcSolid (iCelPropertyClass *pc)
{
  csRef<iPcSolid> iface =    scfQueryInterface<iPcSolid> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcGravity *celCreateGravity(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcgravity" );
  if (!pc.IsValid()) return 0;
  csRef<iPcGravity> pclm =    scfQueryInterface<iPcGravity> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcGravity * celGetGravity (iCelEntity *entity)
{
  csRef<iPcGravity> pc =    (celQueryPropertyClass<iPcGravity> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcGravity *scfQuery_iPcGravity (iCelPropertyClass *pc)
{
  csRef<iPcGravity> iface =    scfQueryInterface<iPcGravity> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcMovable *celCreateMovable(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcmovable" );
  if (!pc.IsValid()) return 0;
  csRef<iPcMovable> pclm =    scfQueryInterface<iPcMovable> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcMovable * celGetMovable (iCelEntity *entity)
{
  csRef<iPcMovable> pc =    (celQueryPropertyClass<iPcMovable> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcMovable *scfQuery_iPcMovable (iCelPropertyClass *pc)
{
  csRef<iPcMovable> iface =    scfQueryInterface<iPcMovable> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcInventory *celCreateInventory(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcinventory" );
  if (!pc.IsValid()) return 0;
  csRef<iPcInventory> pclm =    scfQueryInterface<iPcInventory> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcInventory * celGetInventory (iCelEntity *entity)
{
  csRef<iPcInventory> pc =    (celQueryPropertyClass<iPcInventory> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcInventory *scfQuery_iPcInventory (iCelPropertyClass *pc)
{
  csRef<iPcInventory> iface =    scfQueryInterface<iPcInventory> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcCharacteristics *celCreateCharacteristics(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pccharacteristics" );
  if (!pc.IsValid()) return 0;
  csRef<iPcCharacteristics> pclm =    scfQueryInterface<iPcCharacteristics> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcCharacteristics * celGetCharacteristics (iCelEntity *entity)
{
  csRef<iPcCharacteristics> pc =    (celQueryPropertyClass<iPcCharacteristics> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcCharacteristics *scfQuery_iPcCharacteristics (iCelPropertyClass *pc)
{
  csRef<iPcCharacteristics> iface =    scfQueryInterface<iPcCharacteristics> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcTooltip *celCreateToolTip(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pctooltip" );
  if (!pc.IsValid()) return 0;
  csRef<iPcTooltip> pclm =    scfQueryInterface<iPcTooltip> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcTooltip * celGetToolTip (iCelEntity *entity)
{
  csRef<iPcTooltip> pc =    (celQueryPropertyClass<iPcTooltip> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcTooltip *scfQuery_iPcTooltip (iCelPropertyClass *pc)
{
  csRef<iPcTooltip> iface =    scfQueryInterface<iPcTooltip> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcSoundSource *celCreateSoundSource(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcsoundsource" );
  if (!pc.IsValid()) return 0;
  csRef<iPcSoundSource> pclm =    scfQueryInterface<iPcSoundSource> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcSoundSource * celGetSoundSource (iCelEntity *entity)
{
  csRef<iPcSoundSource> pc =    (celQueryPropertyClass<iPcSoundSource> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcSoundSource *scfQuery_iPcSoundSource (iCelPropertyClass *pc)
{
  csRef<iPcSoundSource> iface =    scfQueryInterface<iPcSoundSource> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcSoundListener *celCreateSoundListener(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcsoundlistener" );
  if (!pc.IsValid()) return 0;
  csRef<iPcSoundListener> pclm =    scfQueryInterface<iPcSoundListener> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcSoundListener * celGetSoundListener (iCelEntity *entity)
{
  csRef<iPcSoundListener> pc =    (celQueryPropertyClass<iPcSoundListener> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcSoundListener *scfQuery_iPcSoundListener (iCelPropertyClass *pc)
{
  csRef<iPcSoundListener> iface =    scfQueryInterface<iPcSoundListener> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcProperties *celCreateProperties(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcproperties" );
  if (!pc.IsValid()) return 0;
  csRef<iPcProperties> pclm =    scfQueryInterface<iPcProperties> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcProperties * celGetProperties (iCelEntity *entity)
{
  csRef<iPcProperties> pc =    (celQueryPropertyClass<iPcProperties> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcProperties *scfQuery_iPcProperties (iCelPropertyClass *pc)
{
  csRef<iPcProperties> iface =    scfQueryInterface<iPcProperties> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcHover *celCreateHover(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pchover" );
  if (!pc.IsValid()) return 0;
  csRef<iPcHover> pclm =    scfQueryInterface<iPcHover> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcHover * celGetHover (iCelEntity *entity)
{
  csRef<iPcHover> pc =    (celQueryPropertyClass<iPcHover> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcHover *scfQuery_iPcHover (iCelPropertyClass *pc)
{
  csRef<iPcHover> iface =    scfQueryInterface<iPcHover> (pc);
  if (iface) iface->IncRef ();
  return iface;
}


iPcCraftController *celCreateCraftController(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pccraft" );
  if (!pc.IsValid()) return 0;
  csRef<iPcCraftController> pclm =    scfQueryInterface<iPcCraftController> (pc);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcCraftController * celGetCraftController (iCelEntity *entity)
{
  csRef<iPcCraftController> pc =    (celQueryPropertyClass<iPcCraftController> (entity->GetPropertyClassList ()));
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcCraftController *scfQuery_iPcCraftController (iCelPropertyClass *pc)
{
  csRef<iPcCraftController> iface =    scfQueryInterface<iPcCraftController> (pc);
  if (iface) iface->IncRef ();
  return iface;
}

#ifdef __cplusplus
extern "C" {
#endif
static PyObject *_wrap_celInitializer_SetupCelPluginDirs(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celInitializer_SetupCelPluginDirs",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    celInitializer::SetupCelPluginDirs(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celInitializer__RequestPlugins(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    csArray<csPluginRequest > *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celInitializer__RequestPlugins",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csArrayTcsPluginRequest_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)celInitializer::RequestPlugins(arg1,(csArray<csPluginRequest > const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_celInitializer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    celInitializer *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_celInitializer")) goto fail;
    result = (celInitializer *)new celInitializer();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_celInitializer, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_celInitializer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    celInitializer *arg1 = (celInitializer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_celInitializer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_celInitializer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * celInitializer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_celInitializer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelNewEntityCallback_NewEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelNewEntityCallback *arg1 = (iCelNewEntityCallback *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelNewEntityCallback_NewEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelNewEntityCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->NewEntity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelNewEntityCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelNewEntityCallback *arg1 = (iCelNewEntityCallback *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelNewEntityCallback",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelNewEntityCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelNewEntityCallback_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelNewEntityCallback, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelEntityRemoveCallback_RemoveEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityRemoveCallback *arg1 = (iCelEntityRemoveCallback *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelEntityRemoveCallback_RemoveEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityRemoveCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveEntity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelEntityRemoveCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityRemoveCallback *arg1 = (iCelEntityRemoveCallback *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelEntityRemoveCallback",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityRemoveCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelEntityRemoveCallback_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelEntityRemoveCallback, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelTimerListener_TickEveryFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelTimerListener *arg1 = (iCelTimerListener *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelTimerListener_TickEveryFrame",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelTimerListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->TickEveryFrame();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelTimerListener_TickOnce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelTimerListener *arg1 = (iCelTimerListener *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelTimerListener_TickOnce",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelTimerListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->TickOnce();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelTimerListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelTimerListener *arg1 = (iCelTimerListener *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelTimerListener",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelTimerListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelTimerListener_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelTimerListener, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelPlLayer_CreateEntity__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    SwigValueWrapper< csPtr<iCelEntity > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPlLayer_CreateEntity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateEntity();
    
    {
        csPtr<iCelEntity > * resultptr;
        resultptr = new csPtr<iCelEntity >((csPtr<iCelEntity > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiCelEntity_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_CreateEntityInScope(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    int arg2 ;
    SwigValueWrapper< csPtr<iCelEntity > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iCelPlLayer_CreateEntityInScope",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateEntityInScope(arg2);
    
    {
        csPtr<iCelEntity > * resultptr;
        resultptr = new csPtr<iCelEntity >((csPtr<iCelEntity > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiCelEntity_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_CreateEntity__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    uint arg2 ;
    SwigValueWrapper< csPtr<iCelEntity > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_CreateEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (arg1)->CreateEntity(arg2);
    
    {
        csPtr<iCelEntity > * resultptr;
        resultptr = new csPtr<iCelEntity >((csPtr<iCelEntity > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiCelEntity_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_CreateEntity__SWIG_2__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    char *arg2 ;
    iCelBlLayer *arg3 = (iCelBlLayer *) 0 ;
    char *arg4 ;
    void *arg5 = 0 ;
    SwigValueWrapper< csPtr<iCelEntity > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOs:iCelPlLayer_CreateEntity",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iCelBlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateEntity((char const *)arg2,arg3,(char const *)arg4,arg5);
    
    {
        csPtr<iCelEntity > * resultptr;
        resultptr = new csPtr<iCelEntity >((csPtr<iCelEntity > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiCelEntity_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_CreateEntity__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *varargs;
    PyObject *newargs;
    
    newargs = PyTuple_GetSlice(args,0,4);
    varargs = PyTuple_GetSlice(args,4,PyTuple_Size(args)+1);
    resultobj = _wrap_iCelPlLayer_CreateEntity__SWIG_2__varargs__(self,newargs,varargs);
    Py_XDECREF(newargs);
    Py_XDECREF(varargs);
    return resultobj;
}


static PyObject *_wrap_iCelPlLayer_RemoveEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_RemoveEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveEntity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_RemoveEntities(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPlLayer_RemoveEntities",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveEntities();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_CreateEntityTemplate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    char *arg2 ;
    iCelEntityTemplate *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelPlLayer_CreateEntityTemplate",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntityTemplate *)(arg1)->CreateEntityTemplate((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntityTemplate, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_RemoveEntityTemplate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntityTemplate *arg2 = (iCelEntityTemplate *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_RemoveEntityTemplate",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntityTemplate,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveEntityTemplate(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_RemoveEntityTemplates(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPlLayer_RemoveEntityTemplates",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveEntityTemplates();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_FindEntityTemplate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    char *arg2 ;
    iCelEntityTemplate *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelPlLayer_FindEntityTemplate",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntityTemplate *)(arg1)->FindEntityTemplate((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntityTemplate, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_GetEntityTemplateCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPlLayer_GetEntityTemplateCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iCelPlLayer const *)arg1)->GetEntityTemplateCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_GetEntityTemplate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    size_t arg2 ;
    iCelEntityTemplate *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_GetEntityTemplate",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iCelEntityTemplate *)((iCelPlLayer const *)arg1)->GetEntityTemplate(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntityTemplate, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_CreateEntity__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntityTemplate *arg2 = (iCelEntityTemplate *) 0 ;
    char *arg3 ;
    celEntityTemplateParams *arg4 = 0 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOsO:iCelPlLayer_CreateEntity",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntityTemplate,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_celEntityTemplateParams,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (iCelEntity *)(arg1)->CreateEntity(arg2,(char const *)arg3,(celEntityTemplateParams const &)*arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_CreateEntity__SWIG_4__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntityTemplate *arg2 = (iCelEntityTemplate *) 0 ;
    char *arg3 ;
    void *arg4 = 0 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iCelPlLayer_CreateEntity",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntityTemplate,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)(arg1)->CreateEntity(arg2,(char const *)arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_CreateEntity__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *varargs;
    PyObject *newargs;
    
    newargs = PyTuple_GetSlice(args,0,3);
    varargs = PyTuple_GetSlice(args,3,PyTuple_Size(args)+1);
    resultobj = _wrap_iCelPlLayer_CreateEntity__SWIG_4__varargs__(self,newargs,varargs);
    Py_XDECREF(newargs);
    Py_XDECREF(varargs);
    return resultobj;
}


static PyObject *_wrap_iCelPlLayer_CreateEntity(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelPlLayer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_iCelPlLayer_CreateEntity__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelPlLayer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iCelPlLayer_CreateEntity__SWIG_1(self,args);
            }
        }
    }
    if (argc >= 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelPlLayer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iCelEntityTemplate, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_iCelPlLayer_CreateEntity__SWIG_4(self,args);
                    }
                    return _wrap_iCelPlLayer_CreateEntity__SWIG_4(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelPlLayer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iCelEntityTemplate, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_celEntityTemplateParams, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_iCelPlLayer_CreateEntity__SWIG_3(self,args);
                    }
                }
            }
        }
    }
    if (argc >= 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelPlLayer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iCelBlLayer, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_iCelPlLayer_CreateEntity__SWIG_2(self,args);
                        }
                        return _wrap_iCelPlLayer_CreateEntity__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iCelPlLayer_CreateEntity'");
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_CreateDataBuffer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    long arg2 ;
    SwigValueWrapper< csPtr<iCelDataBuffer > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ol:iCelPlLayer_CreateDataBuffer",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateDataBuffer(arg2);
    
    {
        csPtr<iCelDataBuffer > * resultptr;
        resultptr = new csPtr<iCelDataBuffer >((csPtr<iCelDataBuffer > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiCelDataBuffer_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_AttachEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iObject *arg2 = (iObject *) 0 ;
    iCelEntity *arg3 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelPlLayer_AttachEntity",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AttachEntity(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_UnattachEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iObject *arg2 = (iObject *) 0 ;
    iCelEntity *arg3 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelPlLayer_UnattachEntity",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UnattachEntity(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_GetEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    uint arg2 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_GetEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iCelEntity *)(arg1)->GetEntity(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_GetEntityCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPlLayer_GetEntityCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iCelPlLayer const *)arg1)->GetEntityCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_GetEntityByIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    size_t arg2 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_GetEntityByIndex",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iCelEntity *)((iCelPlLayer const *)arg1)->GetEntityByIndex(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_FindEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    char *arg2 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelPlLayer_FindEntity",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)(arg1)->FindEntity((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_GetBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    uint arg2 ;
    iCelBehaviour *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_GetBehaviour",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iCelBehaviour *)(arg1)->GetBehaviour(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBehaviour, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_FindAttachedEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iObject *arg2 = (iObject *) 0 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_FindAttachedEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)(arg1)->FindAttachedEntity(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_FindNearbyEntities__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 *arg3 = 0 ;
    float arg4 ;
    bool arg5 = (bool) false ;
    SwigValueWrapper< csPtr<iCelEntityList > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOf|O:iCelPlLayer_FindNearbyEntities",&obj0,&obj1,&obj2,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj4) {
        arg5 = PyInt_AsLong(obj4) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (arg1)->FindNearbyEntities(arg2,(csVector3 const &)*arg3,arg4,arg5);
    
    {
        csPtr<iCelEntityList > * resultptr;
        resultptr = new csPtr<iCelEntityList >((csPtr<iCelEntityList > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiCelEntityList_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_FindNearbyEntities__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csBox3 *arg3 = 0 ;
    bool arg4 = (bool) false ;
    SwigValueWrapper< csPtr<iCelEntityList > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|O:iCelPlLayer_FindNearbyEntities",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csBox3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj3) {
        arg4 = PyInt_AsLong(obj3) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (arg1)->FindNearbyEntities(arg2,(csBox3 const &)*arg3,arg4);
    
    {
        csPtr<iCelEntityList > * resultptr;
        resultptr = new csPtr<iCelEntityList >((csPtr<iCelEntityList > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiCelEntityList_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_FindNearbyEntities__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    bool arg5 = (bool) false ;
    SwigValueWrapper< csPtr<iCelEntityList > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO|O:iCelPlLayer_FindNearbyEntities",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj4) {
        arg5 = PyInt_AsLong(obj4) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (arg1)->FindNearbyEntities(arg2,(csVector3 const &)*arg3,(csVector3 const &)*arg4,arg5);
    
    {
        csPtr<iCelEntityList > * resultptr;
        resultptr = new csPtr<iCelEntityList >((csPtr<iCelEntityList > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiCelEntityList_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_FindNearbyEntities(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelPlLayer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csBox3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_iCelPlLayer_FindNearbyEntities__SWIG_1(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_iCelPlLayer_FindNearbyEntities__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 4) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelPlLayer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_iCelPlLayer_FindNearbyEntities__SWIG_2(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_iCelPlLayer_FindNearbyEntities__SWIG_2(self,args);
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 4) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelPlLayer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyFloat_Check(argv[3]) || PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_iCelPlLayer_FindNearbyEntities__SWIG_0(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_iCelPlLayer_FindNearbyEntities__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iCelPlLayer_FindNearbyEntities'");
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_GetHitEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCamera *arg2 = (iCamera *) 0 ;
    int arg3 ;
    int arg4 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOii:iCelPlLayer_GetHitEntity",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)(arg1)->GetHitEntity(arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_CreateEmptyEntityList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    SwigValueWrapper< csPtr<iCelEntityList > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPlLayer_CreateEmptyEntityList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateEmptyEntityList();
    
    {
        csPtr<iCelEntityList > * resultptr;
        resultptr = new csPtr<iCelEntityList >((csPtr<iCelEntityList > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiCelEntityList_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_CreateEntityTracker(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    char *arg2 ;
    iCelEntityTracker *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelPlLayer_CreateEntityTracker",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntityTracker *)(arg1)->CreateEntityTracker((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntityTracker, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_FindEntityTracker(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    char *arg2 ;
    iCelEntityTracker *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelPlLayer_FindEntityTracker",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntityTracker *)(arg1)->FindEntityTracker((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntityTracker, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_RemoveEntityTracker(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntityTracker *arg2 = (iCelEntityTracker *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_RemoveEntityTracker",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntityTracker,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveEntityTracker(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_SetEntityAddonAllowed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_SetEntityAddonAllowed",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetEntityAddonAllowed(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_IsEntityAddonAllowed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPlLayer_IsEntityAddonAllowed",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iCelPlLayer const *)arg1)->IsEntityAddonAllowed();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_LoadPropertyClassFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelPlLayer_LoadPropertyClassFactory",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->LoadPropertyClassFactory((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_RegisterPropertyClassFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelPropertyClassFactory *arg2 = (iCelPropertyClassFactory *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_RegisterPropertyClassFactory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelPropertyClassFactory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RegisterPropertyClassFactory(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_UnregisterPropertyClassFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelPropertyClassFactory *arg2 = (iCelPropertyClassFactory *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_UnregisterPropertyClassFactory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelPropertyClassFactory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UnregisterPropertyClassFactory(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_GetPropertyClassFactoryCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPlLayer_GetPropertyClassFactoryCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iCelPlLayer const *)arg1)->GetPropertyClassFactoryCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_GetPropertyClassFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    size_t arg2 ;
    iCelPropertyClassFactory *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_GetPropertyClassFactory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iCelPropertyClassFactory *)((iCelPlLayer const *)arg1)->GetPropertyClassFactory(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClassFactory, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_FindPropertyClassFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    char *arg2 ;
    iCelPropertyClassFactory *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelPlLayer_FindPropertyClassFactory",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelPropertyClassFactory *)((iCelPlLayer const *)arg1)->FindPropertyClassFactory((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClassFactory, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_CreatePropertyClass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    char *arg3 ;
    iCelPropertyClass *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iCelPlLayer_CreatePropertyClass",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelPropertyClass *)(arg1)->CreatePropertyClass(arg2,(char const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClass, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_CreateTaggedPropertyClass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    char *arg3 ;
    char *arg4 ;
    iCelPropertyClass *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOss:iCelPlLayer_CreateTaggedPropertyClass",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelPropertyClass *)(arg1)->CreateTaggedPropertyClass(arg2,(char const *)arg3,(char const *)arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClass, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_RegisterBehaviourLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelBlLayer *arg2 = (iCelBlLayer *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_RegisterBehaviourLayer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelBlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RegisterBehaviourLayer(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_UnregisterBehaviourLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelBlLayer *arg2 = (iCelBlLayer *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_UnregisterBehaviourLayer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelBlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UnregisterBehaviourLayer(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_GetBehaviourLayerCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPlLayer_GetBehaviourLayerCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iCelPlLayer const *)arg1)->GetBehaviourLayerCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_GetBehaviourLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    size_t arg2 ;
    iCelBlLayer *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_GetBehaviourLayer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iCelBlLayer *)((iCelPlLayer const *)arg1)->GetBehaviourLayer(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBlLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_FindBehaviourLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    char *arg2 ;
    iCelBlLayer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelPlLayer_FindBehaviourLayer",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBlLayer *)((iCelPlLayer const *)arg1)->FindBehaviourLayer((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBlLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_Cache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iBase *arg2 = (iBase *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_Cache",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Cache(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_Uncache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iBase *arg2 = (iBase *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_Uncache",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Uncache(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_CleanCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPlLayer_CleanCache",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CleanCache();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_FetchStringID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    char *arg2 ;
    csStringID result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelPlLayer_FetchStringID",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csStringID)(arg1)->FetchStringID((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_FetchString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    csStringID arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_FetchString",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (char *)(arg1)->FetchString(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_AddEntityRemoveCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntityRemoveCallback *arg2 = (iCelEntityRemoveCallback *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_AddEntityRemoveCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntityRemoveCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddEntityRemoveCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_RemoveEntityRemoveCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntityRemoveCallback *arg2 = (iCelEntityRemoveCallback *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_RemoveEntityRemoveCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntityRemoveCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveEntityRemoveCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_AddNewEntityCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelNewEntityCallback *arg2 = (iCelNewEntityCallback *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_AddNewEntityCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelNewEntityCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddNewEntityCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_RemoveNewEntityCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelNewEntityCallback *arg2 = (iCelNewEntityCallback *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_RemoveNewEntityCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelNewEntityCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveNewEntityCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_CallbackEveryFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelTimerListener *arg2 = (iCelTimerListener *) 0 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iCelPlLayer_CallbackEveryFrame",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelTimerListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CallbackEveryFrame(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_CallbackOnce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelTimerListener *arg2 = (iCelTimerListener *) 0 ;
    csTicks arg3 ;
    int arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOi:iCelPlLayer_CallbackOnce",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelTimerListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (csTicks) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->CallbackOnce(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_RemoveCallbackEveryFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelTimerListener *arg2 = (iCelTimerListener *) 0 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iCelPlLayer_RemoveCallbackEveryFrame",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelTimerListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveCallbackEveryFrame(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_RemoveCallbackOnce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelTimerListener *arg2 = (iCelTimerListener *) 0 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iCelPlLayer_RemoveCallbackOnce",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelTimerListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveCallbackOnce(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_AddScope(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    csString arg2 ;
    int arg3 ;
    int result;
    csString *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iCelPlLayer_AddScope",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (int)(arg1)->AddScope(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelPlLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelPlLayer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelPlLayer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelPlLayer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelEntityTracker_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityTracker *arg1 = (iCelEntityTracker *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntityTracker_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityTracker,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelEntityTracker const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityTracker_AddEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityTracker *arg1 = (iCelEntityTracker *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelEntityTracker_AddEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityTracker,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->AddEntity(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityTracker_RemoveEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityTracker *arg1 = (iCelEntityTracker *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelEntityTracker_RemoveEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityTracker,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveEntity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityTracker_RemoveEntities(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityTracker *arg1 = (iCelEntityTracker *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntityTracker_RemoveEntities",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityTracker,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveEntities();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityTracker_FindNearbyEntities(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityTracker *arg1 = (iCelEntityTracker *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 *arg3 = 0 ;
    float arg4 ;
    SwigValueWrapper< csPtr<iCelEntityList > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOf:iCelEntityTracker_FindNearbyEntities",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityTracker,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (arg1)->FindNearbyEntities(arg2,(csVector3 const &)*arg3,arg4);
    
    {
        csPtr<iCelEntityList > * resultptr;
        resultptr = new csPtr<iCelEntityList >((csPtr<iCelEntityList > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiCelEntityList_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelEntityTracker(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityTracker *arg1 = (iCelEntityTracker *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelEntityTracker",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityTracker,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelEntityTracker_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelEntityTracker, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csQueryRegistry_iCelPlLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    iCelPlLayer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csQueryRegistry_iCelPlLayer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelPlLayer *)csQueryRegistry_iCelPlLayer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPlLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_QueryObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntity_QueryObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)(arg1)->QueryObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntity_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelEntity const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_SetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelEntity_SetName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_GetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    uint result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntity_GetID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint)((iCelEntity const *)arg1)->GetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_SetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    uint arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelEntity_SetID",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetID(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_GetPropertyClassList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iCelPropertyClassList *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntity_GetPropertyClassList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelPropertyClassList *)(arg1)->GetPropertyClassList();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClassList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_SetBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iCelBehaviour *arg2 = (iCelBehaviour *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelEntity_SetBehaviour",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelBehaviour,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetBehaviour(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_GetBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iCelBehaviour *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntity_GetBehaviour",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBehaviour *)(arg1)->GetBehaviour();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBehaviour, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_CreateBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iCelBlLayer *arg2 = (iCelBlLayer *) 0 ;
    char *arg3 ;
    iCelBehaviour *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iCelEntity_CreateBehaviour",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelBlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBehaviour *)iCelEntity_CreateBehaviour(arg1,arg2,(char const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBehaviour, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelEntity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelEntity_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelEntity, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelEntityList_GetCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntityList_GetCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iCelEntityList const *)arg1)->GetCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_Get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    size_t arg2 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelEntityList_Get",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iCelEntity *)((iCelEntityList const *)arg1)->Get(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_Add(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelEntityList_Add",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Add(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_Remove__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelEntityList_Remove",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_Remove__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    size_t arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelEntityList_Remove",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_Remove(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelEntityList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iCelEntity, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iCelEntityList_Remove__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelEntityList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iCelEntityList_Remove__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iCelEntityList_Remove'");
    return NULL;
}


static PyObject *_wrap_iCelEntityList_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntityList_RemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_Find(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelEntityList_Find",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iCelEntityList const *)arg1)->Find(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_FindByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    char *arg2 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelEntityList_FindByName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)((iCelEntityList const *)arg1)->FindByName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelEntityList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelEntityList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelEntityList_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelEntityList, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celRegisterPCFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:celRegisterPCFactory",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)celRegisterPCFactory(arg1,(char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celCreateEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    char *arg2 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:celCreateEntity",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)celCreateEntity(arg1,(char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQueryInterface_iCelEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBase *arg1 = (iBase *) 0 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQueryInterface_iCelEntity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)scfQueryInterface_iCelEntity(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celFindNearbyEntities(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 arg3 ;
    float arg4 ;
    iCelEntityList *result;
    csVector3 *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOf:celFindNearbyEntities",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    result = (iCelEntityList *)celFindNearbyEntities(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntityList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelBlLayer_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBlLayer *arg1 = (iCelBlLayer *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelBlLayer_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelBlLayer const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelBlLayer_CreateBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBlLayer *arg1 = (iCelBlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    char *arg3 ;
    iCelBehaviour *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iCelBlLayer_CreateBehaviour",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBehaviour *)(arg1)->CreateBehaviour(arg2,(char const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBehaviour, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelBlLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBlLayer *arg1 = (iCelBlLayer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelBlLayer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelBlLayer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelBlLayer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csQueryRegistry_iCelBlLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    iCelBlLayer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csQueryRegistry_iCelBlLayer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBlLayer *)csQueryRegistry_iCelBlLayer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBlLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelParameterBlock_GetParameterCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelParameterBlock *arg1 = (iCelParameterBlock *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelParameterBlock_GetParameterCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iCelParameterBlock const *)arg1)->GetParameterCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelParameterBlock_GetParameter__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelParameterBlock *arg1 = (iCelParameterBlock *) 0 ;
    size_t arg2 ;
    csStringID *arg3 = 0 ;
    celDataType *arg4 = 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iCelParameterBlock_GetParameter",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csStringID,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_celDataType,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (char *)((iCelParameterBlock const *)arg1)->GetParameter(arg2,*arg3,*arg4);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelParameterBlock_GetParameter__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelParameterBlock *arg1 = (iCelParameterBlock *) 0 ;
    csStringID arg2 ;
    celData *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelParameterBlock_GetParameter",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (celData *)((iCelParameterBlock const *)arg1)->GetParameter(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_celData, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelParameterBlock_GetParameter(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelParameterBlock, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iCelParameterBlock_GetParameter__SWIG_1(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelParameterBlock, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csStringID, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_celDataType, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_iCelParameterBlock_GetParameter__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iCelParameterBlock_GetParameter'");
    return NULL;
}


static PyObject *_wrap_iCelParameterBlock_GetParameterValue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelParameterBlock *arg1 = (iCelParameterBlock *) 0 ;
    csStringID arg2 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelParameterBlock_GetParameterValue",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (PyObject *)iCelParameterBlock_GetParameterValue(arg1,arg2);
    
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelParameterBlock(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelParameterBlock *arg1 = (iCelParameterBlock *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelParameterBlock",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelParameterBlock_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelParameterBlock, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelBehaviour_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBehaviour *arg1 = (iCelBehaviour *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelBehaviour_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelBehaviour const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelBehaviour_GetBehaviourLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBehaviour *arg1 = (iCelBehaviour *) 0 ;
    iCelBlLayer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelBehaviour_GetBehaviourLayer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBlLayer *)((iCelBehaviour const *)arg1)->GetBehaviourLayer();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBlLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelBehaviour_SendMessage__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
    PyObject *resultobj;
    iCelBehaviour *arg1 = (iCelBehaviour *) 0 ;
    char *arg2 ;
    iCelPropertyClass *arg3 = (iCelPropertyClass *) 0 ;
    celData *arg4 = 0 ;
    iCelParameterBlock *arg5 = (iCelParameterBlock *) 0 ;
    void *arg6 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOOO:iCelBehaviour_SendMessage",&obj0,&arg2,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_celData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SendMessage((char const *)arg2,arg3,*arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelBehaviour_SendMessage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *varargs;
    PyObject *newargs;
    
    newargs = PyTuple_GetSlice(args,0,5);
    varargs = PyTuple_GetSlice(args,5,PyTuple_Size(args)+1);
    resultobj = _wrap_iCelBehaviour_SendMessage__varargs__(self,newargs,varargs);
    Py_XDECREF(newargs);
    Py_XDECREF(varargs);
    return resultobj;
}


static PyObject *_wrap_iCelBehaviour_GetInternalObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBehaviour *arg1 = (iCelBehaviour *) 0 ;
    void *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelBehaviour_GetInternalObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *)(arg1)->GetInternalObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelBehaviour_GetPythonObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBehaviour *arg1 = (iCelBehaviour *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelBehaviour_GetPythonObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PyObject *)iCelBehaviour_GetPythonObject(arg1);
    
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBehaviour *arg1 = (iCelBehaviour *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelBehaviour",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelBehaviour_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelBehaviour, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelPropertyClass_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClass_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelPropertyClass const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetTag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelPropertyClass_SetTag",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetTag((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetTag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClass_GetTag",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelPropertyClass const *)arg1)->GetTag();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClass_GetEntity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)(arg1)->GetEntity();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_SetEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetEntity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SaveFirstPass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    SwigValueWrapper< csPtr<iCelDataBuffer > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClass_SaveFirstPass",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->SaveFirstPass();
    
    {
        csPtr<iCelDataBuffer > * resultptr;
        resultptr = new csPtr<iCelDataBuffer >((csPtr<iCelDataBuffer > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiCelDataBuffer_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_LoadFirstPass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iCelDataBuffer *arg2 = (iCelDataBuffer *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_LoadFirstPass",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelDataBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->LoadFirstPass(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_Save(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    SwigValueWrapper< csPtr<iCelDataBuffer > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClass_Save",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Save();
    
    {
        csPtr<iCelDataBuffer > * resultptr;
        resultptr = new csPtr<iCelDataBuffer >((csPtr<iCelDataBuffer > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiCelDataBuffer_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_Load(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iCelDataBuffer *arg2 = (iCelDataBuffer *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_Load",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelDataBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Load(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_AddPropertyChangeCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iCelPropertyChangeCallback *arg2 = (iCelPropertyChangeCallback *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_AddPropertyChangeCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelPropertyChangeCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->AddPropertyChangeCallback(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_RemovePropertyChangeCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iCelPropertyChangeCallback *arg2 = (iCelPropertyChangeCallback *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_RemovePropertyChangeCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelPropertyChangeCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemovePropertyChangeCallback(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyOrActionType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyOrActionType",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (int)(arg1)->GetPropertyOrActionType(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_IsPropertyReadOnly(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_IsPropertyReadOnly",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->IsPropertyReadOnly(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyLong(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    long result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyLong",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (long)(arg1)->GetPropertyLong(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyFloat",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (float)(arg1)->GetPropertyFloat(arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyBool(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyBool",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->GetPropertyBool(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyString",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (char *)(arg1)->GetPropertyString(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyVector__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    csVector2 *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelPropertyClass_GetPropertyVector",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->GetPropertyVector(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyVector__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    csVector3 *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelPropertyClass_GetPropertyVector",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->GetPropertyVector(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyVector(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelPropertyClass, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iCelPropertyClass_GetPropertyVector__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelPropertyClass, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iCelPropertyClass_GetPropertyVector__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iCelPropertyClass_GetPropertyVector'");
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    csColor *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelPropertyClass_GetPropertyColor",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->GetPropertyColor(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyPClass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    iCelPropertyClass *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyPClass",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iCelPropertyClass *)(arg1)->GetPropertyPClass(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClass, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iCelEntity *)(arg1)->GetPropertyEntity(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_PerformAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    iCelParameterBlock *arg3 = (iCelParameterBlock *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelPropertyClass_PerformAction",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->PerformAction(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyAndActionCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClass_GetPropertyAndActionCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iCelPropertyClass const *)arg1)->GetPropertyAndActionCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyOrActionID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    size_t arg2 ;
    csStringID result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyOrActionID",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (csStringID)(arg1)->GetPropertyOrActionID(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyOrActionDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyOrActionDescription",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (char *)(arg1)->GetPropertyOrActionDescription(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_PropertyClassesHaveChanged(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClass_PropertyClassesHaveChanged",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PropertyClassesHaveChanged();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPersistentData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    celPersistenceType arg2 ;
    SwigValueWrapper< csPtr<iCelDataBuffer > > result;
    celPersistenceType *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPersistentData",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_celPersistenceType,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (arg1)->GetPersistentData(arg2);
    
    {
        csPtr<iCelDataBuffer > * resultptr;
        resultptr = new csPtr<iCelDataBuffer >((csPtr<iCelDataBuffer > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiCelDataBuffer_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetPersistentData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csTicks arg2 ;
    iCelDataBuffer *arg3 = (iCelDataBuffer *) 0 ;
    celPersistenceType arg4 ;
    celPersistenceResult result;
    celPersistenceType *argp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iCelPropertyClass_SetPersistentData",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iCelDataBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &argp4, SWIGTYPE_p_celPersistenceType,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg4 = *argp4; 
    result = (arg1)->SetPersistentData(arg2,arg3,arg4);
    
    {
        celPersistenceResult * resultptr;
        resultptr = new celPersistenceResult((celPersistenceResult &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_celPersistenceResult, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyLong(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    long arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOl:iCelPropertyClass_SetPropertyLong",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)iCelPropertyClass_SetPropertyLong(arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    float arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf:iCelPropertyClass_SetPropertyFloat",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)iCelPropertyClass_SetPropertyFloat(arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyBool(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    bool arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelPropertyClass_SetPropertyBool",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)iCelPropertyClass_SetPropertyBool(arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iCelPropertyClass_SetPropertyString",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)iCelPropertyClass_SetPropertyString(arg1,arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyVector3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    csVector3 *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelPropertyClass_SetPropertyVector3",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)iCelPropertyClass_SetPropertyVector3(arg1,arg2,(csVector3 const &)*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelPropertyClass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelPropertyClass",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelPropertyClass_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelPropertyClass, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelPropertyClassList_GetCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClassList_GetCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iCelPropertyClassList const *)arg1)->GetCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_Get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    size_t arg2 ;
    iCelPropertyClass *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClassList_Get",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iCelPropertyClass *)((iCelPropertyClassList const *)arg1)->Get(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClass, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_Add(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    iCelPropertyClass *arg2 = (iCelPropertyClass *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClassList_Add",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Add(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_Remove__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    iCelPropertyClass *arg2 = (iCelPropertyClass *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClassList_Remove",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_Remove__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    size_t arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClassList_Remove",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_Remove(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelPropertyClassList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iCelPropertyClass, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iCelPropertyClassList_Remove__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelPropertyClassList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iCelPropertyClassList_Remove__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iCelPropertyClassList_Remove'");
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_RemoveByInterface(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    scfInterfaceID arg2 ;
    int arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iCelPropertyClassList_RemoveByInterface",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (scfInterfaceID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->RemoveByInterface(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_RemoveByInterfaceAndTag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    scfInterfaceID arg2 ;
    int arg3 ;
    char *arg4 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOis:iCelPropertyClassList_RemoveByInterfaceAndTag",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (scfInterfaceID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->RemoveByInterfaceAndTag(arg2,arg3,(char const *)arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClassList_RemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_Find(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    iCelPropertyClass *arg2 = (iCelPropertyClass *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClassList_Find",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iCelPropertyClassList const *)arg1)->Find(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_FindByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    char *arg2 ;
    iCelPropertyClass *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelPropertyClassList_FindByName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelPropertyClass *)((iCelPropertyClassList const *)arg1)->FindByName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClass, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_FindByNameAndTag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    char *arg2 ;
    char *arg3 ;
    iCelPropertyClass *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iCelPropertyClassList_FindByNameAndTag",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelPropertyClass *)((iCelPropertyClassList const *)arg1)->FindByNameAndTag((char const *)arg2,(char const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClass, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_FindByInterface(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    scfInterfaceID arg2 ;
    int arg3 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iCelPropertyClassList_FindByInterface",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (scfInterfaceID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iBase *)((iCelPropertyClassList const *)arg1)->FindByInterface(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_FindByInterfaceAndTag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    scfInterfaceID arg2 ;
    int arg3 ;
    char *arg4 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOis:iCelPropertyClassList_FindByInterfaceAndTag",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (scfInterfaceID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iBase *)((iCelPropertyClassList const *)arg1)->FindByInterfaceAndTag(arg2,arg3,(char const *)arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelPropertyClassList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelPropertyClassList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelPropertyClassList_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelPropertyClassList, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iPcMechanicsSystem_SetDynamicSystem__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    iDynamicSystem *arg2 = (iDynamicSystem *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsSystem_SetDynamicSystem",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDynamicSystem(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_SetDynamicSystem__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcMechanicsSystem_SetDynamicSystem",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDynamicSystem((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_SetDynamicSystem(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcMechanicsSystem, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iDynamicSystem, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iPcMechanicsSystem_SetDynamicSystem__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcMechanicsSystem, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iPcMechanicsSystem_SetDynamicSystem__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcMechanicsSystem_SetDynamicSystem'");
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_GetDynamicSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    iDynamicSystem *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsSystem_GetDynamicSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iDynamicSystem *)(arg1)->GetDynamicSystem();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iDynamicSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_SetStepTime(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcMechanicsSystem_SetStepTime",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetStepTime(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_GetStepTime(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsSystem_GetStepTime",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcMechanicsSystem const *)arg1)->GetStepTime();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_SetGravity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsSystem_SetGravity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetGravity((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_GetGravity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsSystem_GetGravity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetGravity();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_AddForceDuration(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    iPcMechanicsObject *arg2 = (iPcMechanicsObject *) 0 ;
    csVector3 *arg3 = 0 ;
    bool arg4 ;
    csVector3 *arg5 = 0 ;
    float arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOf:iPcMechanicsSystem_AddForceDuration",&obj0,&obj1,&obj2,&obj3,&obj4,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg4 = PyInt_AsLong(obj3) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddForceDuration(arg2,(csVector3 const &)*arg3,arg4,(csVector3 const &)*arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_AddForceFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    iPcMechanicsObject *arg2 = (iPcMechanicsObject *) 0 ;
    csVector3 *arg3 = 0 ;
    bool arg4 ;
    csVector3 *arg5 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:iPcMechanicsSystem_AddForceFrame",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg4 = PyInt_AsLong(obj3) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddForceFrame(arg2,(csVector3 const &)*arg3,arg4,(csVector3 const &)*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_AddForceTagged(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    iPcMechanicsObject *arg2 = (iPcMechanicsObject *) 0 ;
    csVector3 *arg3 = 0 ;
    bool arg4 ;
    csVector3 *arg5 = 0 ;
    uint32 arg6 ;
    uint32 *argp6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOO:iPcMechanicsSystem_AddForceTagged",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg4 = PyInt_AsLong(obj3) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &argp6, SWIGTYPE_p_uint32,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg6 = *argp6; 
    (arg1)->AddForceTagged(arg2,(csVector3 const &)*arg3,arg4,(csVector3 const &)*arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_RemoveForceTagged(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    iPcMechanicsObject *arg2 = (iPcMechanicsObject *) 0 ;
    uint32 arg3 ;
    uint32 *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcMechanicsSystem_RemoveForceTagged",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_uint32,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    (arg1)->RemoveForceTagged(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_ClearForces(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    iPcMechanicsObject *arg2 = (iPcMechanicsObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsSystem_ClearForces",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearForces(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_ClearAllForces(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsSystem_ClearAllForces",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearAllForces();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_CreateBody(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    SwigValueWrapper< csPtr<iRigidBody > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsSystem_CreateBody",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateBody();
    
    {
        csPtr<iRigidBody > * resultptr;
        resultptr = new csPtr<iRigidBody >((csPtr<iRigidBody > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiRigidBody_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_RemoveBody(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    iRigidBody *arg2 = (iRigidBody *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsSystem_RemoveBody",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveBody(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_AddBodyToGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    iRigidBody *arg2 = (iRigidBody *) 0 ;
    char *arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iPcMechanicsSystem_AddBodyToGroup",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddBodyToGroup(arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_RemoveBodyFromGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    iRigidBody *arg2 = (iRigidBody *) 0 ;
    char *arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iPcMechanicsSystem_RemoveBodyFromGroup",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveBodyFromGroup(arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_CreateJoint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    iRigidBody *arg2 = (iRigidBody *) 0 ;
    iRigidBody *arg3 = (iRigidBody *) 0 ;
    iJoint *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcMechanicsSystem_CreateJoint",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iJoint *)(arg1)->CreateJoint(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iJoint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_RemoveJoint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    iJoint *arg2 = (iJoint *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsSystem_RemoveJoint",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveJoint(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_DisableStepFast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsSystem_DisableStepFast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DisableStepFast();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_EnableStepFast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsSystem_EnableStepFast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->EnableStepFast();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsSystem_EnableQuickStep(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsSystem_EnableQuickStep",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->EnableQuickStep();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcMechanicsSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsSystem *arg1 = (iPcMechanicsSystem *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMechanicsSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcMechanicsSystem_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMechanicsSystem, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iPcMechanicsObject_SetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    iPcMesh *arg2 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsObject_SetMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMesh(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_GetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    iPcMesh *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsObject_GetMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMesh *)(arg1)->GetMesh();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_SetLight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    iPcLight *arg2 = (iPcLight *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsObject_SetLight",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetLight(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_GetLight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    iPcLight *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsObject_GetLight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcLight *)(arg1)->GetLight();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcLight, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_SetCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    iPcCamera *arg2 = (iPcCamera *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsObject_SetCamera",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCamera(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_GetCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    iPcCamera *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsObject_GetCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCamera *)(arg1)->GetCamera();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_SetMechanicsSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    iPcMechanicsSystem *arg2 = (iPcMechanicsSystem *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsObject_SetMechanicsSystem",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMechanicsSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMechanicsSystem(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_GetMechanicsSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    iPcMechanicsSystem *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsObject_GetMechanicsSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsSystem *)(arg1)->GetMechanicsSystem();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_GetBody(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    iRigidBody *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsObject_GetBody",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iRigidBody *)(arg1)->GetBody();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iRigidBody, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_SetFriction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcMechanicsObject_SetFriction",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFriction(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_SetMass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcMechanicsObject_SetMass",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMass(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_SetElasticity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcMechanicsObject_SetElasticity",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetElasticity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_SetDensity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcMechanicsObject_SetDensity",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDensity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_SetSoftness(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcMechanicsObject_SetSoftness",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSoftness(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_SetLift(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsObject_SetLift",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetLift((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_SetDrag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcMechanicsObject_SetDrag",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDrag(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_GetFriction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsObject_GetFriction",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetFriction();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_GetMass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsObject_GetMass",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetMass();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_GetElasticity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsObject_GetElasticity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetElasticity();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_GetDensity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsObject_GetDensity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetDensity();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_GetSoftness(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsObject_GetSoftness",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetSoftness();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_GetLift(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsObject_GetLift",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = (arg1)->GetLift();
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_GetDrag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsObject_GetDrag",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetDrag();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_SetLinearVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsObject_SetLinearVelocity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetLinearVelocity((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_SetAngularVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsObject_SetAngularVelocity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetAngularVelocity((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_GetLinearVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsObject_GetLinearVelocity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetLinearVelocity();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_GetAngularVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsObject_GetAngularVelocity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetAngularVelocity();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_MakeStatic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsObject_MakeStatic",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->MakeStatic(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_IsStatic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsObject_IsStatic",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMechanicsObject const *)arg1)->IsStatic();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_AttachColliderSphere(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    float arg2 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OfO:iPcMechanicsObject_AttachColliderSphere",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AttachColliderSphere(arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_AttachColliderCylinder(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    float arg2 ;
    float arg3 ;
    csOrthoTransform *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OffO:iPcMechanicsObject_AttachColliderCylinder",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csOrthoTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AttachColliderCylinder(arg2,arg3,(csOrthoTransform const &)*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_AttachColliderBox(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    csVector3 *arg2 = 0 ;
    csOrthoTransform *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcMechanicsObject_AttachColliderBox",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csOrthoTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AttachColliderBox((csVector3 const &)*arg2,(csOrthoTransform const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_AttachColliderPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    csPlane3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsObject_AttachColliderPlane",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AttachColliderPlane((csPlane3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_AttachColliderMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsObject_AttachColliderMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AttachColliderMesh();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_AddForceOnce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    csVector3 *arg2 = 0 ;
    bool arg3 ;
    csVector3 *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iPcMechanicsObject_AddForceOnce",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddForceOnce((csVector3 const &)*arg2,arg3,(csVector3 const &)*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_AddForceDuration(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    csVector3 *arg2 = 0 ;
    bool arg3 ;
    csVector3 *arg4 = 0 ;
    float arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOf:iPcMechanicsObject_AddForceDuration",&obj0,&obj1,&obj2,&obj3,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddForceDuration((csVector3 const &)*arg2,arg3,(csVector3 const &)*arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_AddForceFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    csVector3 *arg2 = 0 ;
    bool arg3 ;
    csVector3 *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iPcMechanicsObject_AddForceFrame",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddForceFrame((csVector3 const &)*arg2,arg3,(csVector3 const &)*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_AddForceTagged(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    csVector3 *arg2 = 0 ;
    bool arg3 ;
    csVector3 *arg4 = 0 ;
    uint32 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iPcMechanicsObject_AddForceTagged",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (arg1)->AddForceTagged((csVector3 const &)*arg2,arg3,(csVector3 const &)*arg4);
    
    {
        uint32 * resultptr;
        resultptr = new uint32((uint32 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_uint32, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_RemoveForceTagged(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    uint32 arg2 ;
    uint32 *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsObject_RemoveForceTagged",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_uint32,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->RemoveForceTagged(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_ClearForces(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsObject_ClearForces",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearForces();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_AddToGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcMechanicsObject_AddToGroup",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddToGroup((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_RemoveFromGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcMechanicsObject_RemoveFromGroup",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveFromGroup((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_CreateJoint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    iPcMechanicsObject *arg2 = (iPcMechanicsObject *) 0 ;
    iJoint *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsObject_CreateJoint",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iJoint *)(arg1)->CreateJoint(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iJoint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_LocalToWorld(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    csVector3 arg2 ;
    csVector3 result;
    csVector3 *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsObject_LocalToWorld",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (arg1)->LocalToWorld(arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsObject_WorldToLocal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    csVector3 arg2 ;
    csVector3 result;
    csVector3 *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsObject_WorldToLocal",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (arg1)->WorldToLocal(arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcMechanicsObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsObject *arg1 = (iPcMechanicsObject *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMechanicsObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcMechanicsObject_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMechanicsObject, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iPcMechanicsJoint_GetJoint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsJoint *arg1 = (iPcMechanicsJoint *) 0 ;
    iJoint *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsJoint_GetJoint",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iJoint *)(arg1)->GetJoint();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iJoint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcMechanicsJoint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsJoint *arg1 = (iPcMechanicsJoint *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMechanicsJoint",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcMechanicsJoint_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMechanicsJoint, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateMechanicsSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcMechanicsSystem *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateMechanicsSystem",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsSystem *)celCreateMechanicsSystem(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetMechanicsSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcMechanicsSystem *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetMechanicsSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsSystem *)celGetMechanicsSystem(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcMechanicsSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcMechanicsSystem *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcMechanicsSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsSystem *)scfQuery_iPcMechanicsSystem(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQueryPC_iPcMechanicsSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    iPcMechanicsSystem *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQueryPC_iPcMechanicsSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsSystem *)scfQueryPC_iPcMechanicsSystem(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celCreateMechanicsObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcMechanicsObject *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateMechanicsObject",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsObject *)celCreateMechanicsObject(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetMechanicsObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcMechanicsObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetMechanicsObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsObject *)celGetMechanicsObject(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcMechanicsObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcMechanicsObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcMechanicsObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsObject *)scfQuery_iPcMechanicsObject(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQueryPC_iPcMechanicsObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    iPcMechanicsObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQueryPC_iPcMechanicsObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsObject *)scfQueryPC_iPcMechanicsObject(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celCreateMechanicsJoint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcMechanicsJoint *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateMechanicsJoint",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsJoint *)celCreateMechanicsJoint(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsJoint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetMechanicsJoint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcMechanicsJoint *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetMechanicsJoint",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsJoint *)celGetMechanicsJoint(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsJoint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcMechanicsJoint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcMechanicsJoint *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcMechanicsJoint",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsJoint *)scfQuery_iPcMechanicsJoint(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsJoint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQueryPC_iPcMechanicsJoint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    iPcMechanicsJoint *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQueryPC_iPcMechanicsJoint",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsJoint *)scfQueryPC_iPcMechanicsJoint(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsJoint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThruster_SetMechanicsObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThruster *arg1 = (iPcMechanicsThruster *) 0 ;
    iPcMechanicsObject *arg2 = (iPcMechanicsObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsThruster_SetMechanicsObject",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThruster,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMechanicsObject(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThruster_GetMechanicsObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThruster *arg1 = (iPcMechanicsThruster *) 0 ;
    iPcMechanicsObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsThruster_GetMechanicsObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThruster,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsObject *)(arg1)->GetMechanicsObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThruster_SetPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThruster *arg1 = (iPcMechanicsThruster *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsThruster_SetPosition",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThruster,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetPosition((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThruster_GetPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThruster *arg1 = (iPcMechanicsThruster *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsThruster_GetPosition",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThruster,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = (arg1)->GetPosition();
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThruster_SetOrientation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThruster *arg1 = (iPcMechanicsThruster *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsThruster_SetOrientation",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThruster,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetOrientation((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThruster_GetOrientation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThruster *arg1 = (iPcMechanicsThruster *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsThruster_GetOrientation",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThruster,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = (arg1)->GetOrientation();
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThruster_SetMaxThrust(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThruster *arg1 = (iPcMechanicsThruster *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcMechanicsThruster_SetMaxThrust",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThruster,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMaxThrust(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThruster_GetMaxThrust(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThruster *arg1 = (iPcMechanicsThruster *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsThruster_GetMaxThrust",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThruster,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetMaxThrust();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThruster_GetThrustForce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThruster *arg1 = (iPcMechanicsThruster *) 0 ;
    float arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcMechanicsThruster_GetThrustForce",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThruster,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetThrustForce(arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThruster_AvailableThrust(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThruster *arg1 = (iPcMechanicsThruster *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsThruster_AvailableThrust",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThruster,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->AvailableThrust();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThruster_ThrustChange(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThruster *arg1 = (iPcMechanicsThruster *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcMechanicsThruster_ThrustChange",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThruster,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ThrustChange(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcMechanicsThruster(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThruster *arg1 = (iPcMechanicsThruster *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMechanicsThruster",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThruster,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcMechanicsThruster_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMechanicsThruster, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iPcMechanicsBalancedGroup_SetType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsBalancedGroup *arg1 = (iPcMechanicsBalancedGroup *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPcMechanicsBalancedGroup_SetType",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsBalancedGroup,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetType((celAxisType )arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsBalancedGroup_GetType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsBalancedGroup *arg1 = (iPcMechanicsBalancedGroup *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsBalancedGroup_GetType",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsBalancedGroup,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetType();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsBalancedGroup_AddThruster(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsBalancedGroup *arg1 = (iPcMechanicsBalancedGroup *) 0 ;
    iPcMechanicsThruster *arg2 = (iPcMechanicsThruster *) 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf:iPcMechanicsBalancedGroup_AddThruster",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsBalancedGroup,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMechanicsThruster,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddThruster(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsBalancedGroup_RemoveThruster(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsBalancedGroup *arg1 = (iPcMechanicsBalancedGroup *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcMechanicsBalancedGroup_RemoveThruster",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsBalancedGroup,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveThruster((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsBalancedGroup_GetThruster(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsBalancedGroup *arg1 = (iPcMechanicsBalancedGroup *) 0 ;
    char *arg2 ;
    iPcMechanicsThruster *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcMechanicsBalancedGroup_GetThruster",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsBalancedGroup,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsThruster *)(arg1)->GetThruster((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsThruster, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsBalancedGroup_AvailableThrust(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsBalancedGroup *arg1 = (iPcMechanicsBalancedGroup *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsBalancedGroup_AvailableThrust",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsBalancedGroup,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->AvailableThrust();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsBalancedGroup_AvailableThrustForce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsBalancedGroup *arg1 = (iPcMechanicsBalancedGroup *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsBalancedGroup_AvailableThrustForce",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsBalancedGroup,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->AvailableThrustForce();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsBalancedGroup_ChangeThrust(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsBalancedGroup *arg1 = (iPcMechanicsBalancedGroup *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcMechanicsBalancedGroup_ChangeThrust",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsBalancedGroup,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ChangeThrust(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcMechanicsBalancedGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsBalancedGroup *arg1 = (iPcMechanicsBalancedGroup *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMechanicsBalancedGroup",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsBalancedGroup,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcMechanicsBalancedGroup_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMechanicsBalancedGroup, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iPcMechanicsThrusterController_SetMechanicsObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThrusterController *arg1 = (iPcMechanicsThrusterController *) 0 ;
    iPcMechanicsObject *arg2 = (iPcMechanicsObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsThrusterController_SetMechanicsObject",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThrusterController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMechanicsObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMechanicsObject(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThrusterController_GetMechanicsObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThrusterController *arg1 = (iPcMechanicsThrusterController *) 0 ;
    iPcMechanicsObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMechanicsThrusterController_GetMechanicsObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThrusterController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsObject *)(arg1)->GetMechanicsObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThrusterController_AddAxis(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThrusterController *arg1 = (iPcMechanicsThrusterController *) 0 ;
    char *arg2 ;
    int arg3 ;
    csVector3 arg4 ;
    csVector3 *argp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsiO:iPcMechanicsThrusterController_AddAxis",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThrusterController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &argp4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg4 = *argp4; 
    (arg1)->AddAxis((char const *)arg2,(celAxisType )arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThrusterController_GetAxis(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThrusterController *arg1 = (iPcMechanicsThrusterController *) 0 ;
    char *arg2 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcMechanicsThrusterController_GetAxis",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThrusterController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetAxis((char const *)arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThrusterController_GetAxisType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThrusterController *arg1 = (iPcMechanicsThrusterController *) 0 ;
    char *arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcMechanicsThrusterController_GetAxisType",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThrusterController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetAxisType((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThrusterController_GetAxisVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThrusterController *arg1 = (iPcMechanicsThrusterController *) 0 ;
    char *arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcMechanicsThrusterController_GetAxisVelocity",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThrusterController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetAxisVelocity((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThrusterController_GetAxisMaxForce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThrusterController *arg1 = (iPcMechanicsThrusterController *) 0 ;
    char *arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcMechanicsThrusterController_GetAxisMaxForce",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThrusterController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetAxisMaxForce((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThrusterController_GetAxisMaxThrust(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThrusterController *arg1 = (iPcMechanicsThrusterController *) 0 ;
    char *arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcMechanicsThrusterController_GetAxisMaxThrust",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThrusterController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetAxisMaxThrust((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThrusterController_AddBalancedGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThrusterController *arg1 = (iPcMechanicsThrusterController *) 0 ;
    iPcMechanicsBalancedGroup *arg2 = (iPcMechanicsBalancedGroup *) 0 ;
    char *arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iPcMechanicsThrusterController_AddBalancedGroup",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThrusterController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMechanicsBalancedGroup,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddBalancedGroup(arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThrusterController_RemoveBalancedGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThrusterController *arg1 = (iPcMechanicsThrusterController *) 0 ;
    char *arg2 ;
    char *arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcMechanicsThrusterController_RemoveBalancedGroup",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThrusterController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveBalancedGroup((char const *)arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThrusterController_ApplyThrust(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThrusterController *arg1 = (iPcMechanicsThrusterController *) 0 ;
    float arg2 ;
    char *arg3 ;
    uint32 *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OfsO:iPcMechanicsThrusterController_ApplyThrust",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThrusterController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_uint32,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->ApplyThrust(arg2,(char const *)arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMechanicsThrusterController_CancelThrust(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThrusterController *arg1 = (iPcMechanicsThrusterController *) 0 ;
    uint32 arg2 ;
    uint32 *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMechanicsThrusterController_CancelThrust",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThrusterController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_uint32,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->CancelThrust(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcMechanicsThrusterController(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMechanicsThrusterController *arg1 = (iPcMechanicsThrusterController *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMechanicsThrusterController",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMechanicsThrusterController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcMechanicsThrusterController_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMechanicsThrusterController, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateMechanicsThrusterReactionary(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcMechanicsThruster *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateMechanicsThrusterReactionary",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsThruster *)celCreateMechanicsThrusterReactionary(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsThruster, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetMechanicsThrusterReactionary(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcMechanicsThruster *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetMechanicsThrusterReactionary",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsThruster *)celGetMechanicsThrusterReactionary(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsThruster, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcMechanicsThruster(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcMechanicsThruster *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcMechanicsThruster",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsThruster *)scfQuery_iPcMechanicsThruster(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsThruster, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQueryPC_iPcMechanicsThruster(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    iPcMechanicsThruster *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQueryPC_iPcMechanicsThruster",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsThruster *)scfQueryPC_iPcMechanicsThruster(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsThruster, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celCreateMechanicsBalancedGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcMechanicsBalancedGroup *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateMechanicsBalancedGroup",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsBalancedGroup *)celCreateMechanicsBalancedGroup(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsBalancedGroup, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetMechanicsBalancedGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcMechanicsBalancedGroup *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetMechanicsBalancedGroup",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsBalancedGroup *)celGetMechanicsBalancedGroup(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsBalancedGroup, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcMechanicsBalancedGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcMechanicsBalancedGroup *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcMechanicsBalancedGroup",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsBalancedGroup *)scfQuery_iPcMechanicsBalancedGroup(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsBalancedGroup, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQueryPC_iPcMechanicsBalancedGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    iPcMechanicsBalancedGroup *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQueryPC_iPcMechanicsBalancedGroup",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsBalancedGroup *)scfQueryPC_iPcMechanicsBalancedGroup(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsBalancedGroup, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celCreateMechanicsThrusterController(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcMechanicsThrusterController *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateMechanicsThrusterController",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsThrusterController *)celCreateMechanicsThrusterController(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsThrusterController, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetMechanicsThrusterController(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcMechanicsThrusterController *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetMechanicsThrusterController",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsThrusterController *)celGetMechanicsThrusterController(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsThrusterController, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcMechanicsThrusterController(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcMechanicsThrusterController *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcMechanicsThrusterController",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsThrusterController *)scfQuery_iPcMechanicsThrusterController(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsThrusterController, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQueryPC_iPcMechanicsThrusterController(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    iPcMechanicsThrusterController *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQueryPC_iPcMechanicsThrusterController",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMechanicsThrusterController *)scfQueryPC_iPcMechanicsThrusterController(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMechanicsThrusterController, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardLayer_GetOffset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardLayer *arg1 = (iBillboardLayer *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboardLayer_GetOffset",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    ((iBillboardLayer const *)arg1)->GetOffset(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardLayer_SetOffset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardLayer *arg1 = (iBillboardLayer *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iBillboardLayer_SetOffset",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetOffset(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardLayer_Move(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardLayer *arg1 = (iBillboardLayer *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iBillboardLayer_Move",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Move(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardLayer_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardLayer *arg1 = (iBillboardLayer *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboardLayer_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iBillboardLayer const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iBillboardLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardLayer *arg1 = (iBillboardLayer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iBillboardLayer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iBillboardLayer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iBillboardLayer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iBillboardEventHandler_Select(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardEventHandler *arg1 = (iBillboardEventHandler *) 0 ;
    iBillboard *arg2 = (iBillboard *) 0 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiii:iBillboardEventHandler_Select",&obj0,&obj1,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Select(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardEventHandler_MouseMove(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardEventHandler *arg1 = (iBillboardEventHandler *) 0 ;
    iBillboard *arg2 = (iBillboard *) 0 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiii:iBillboardEventHandler_MouseMove",&obj0,&obj1,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MouseMove(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardEventHandler_Unselect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardEventHandler *arg1 = (iBillboardEventHandler *) 0 ;
    iBillboard *arg2 = (iBillboard *) 0 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiii:iBillboardEventHandler_Unselect",&obj0,&obj1,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Unselect(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardEventHandler_DoubleClick(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardEventHandler *arg1 = (iBillboardEventHandler *) 0 ;
    iBillboard *arg2 = (iBillboard *) 0 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiii:iBillboardEventHandler_DoubleClick",&obj0,&obj1,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DoubleClick(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iBillboardEventHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardEventHandler *arg1 = (iBillboardEventHandler *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iBillboardEventHandler",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iBillboardEventHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iBillboardEventHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iBillboard_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iBillboard const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetFlags(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    csFlags *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetFlags",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csFlags &_result_ref = (arg1)->GetFlags();
        result = (csFlags *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csFlags, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_SetMaterialName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iBillboard_SetMaterialName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetMaterialName((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_SetMaterialNameFast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iBillboard_SetMaterialNameFast",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetMaterialNameFast((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetMaterialName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetMaterialName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetMaterialName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_DrawMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    char *arg2 ;
    char *arg3 ;
    csVector3 const &arg4_defvalue = csVector3(0, 0, 0) ;
    csVector3 *arg4 = (csVector3 *) &arg4_defvalue ;
    float arg5 = (float) 0.0f ;
    float arg6 = (float) -1.0f ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss|Off:iBillboard_DrawMesh",&obj0,&arg2,&arg3,&obj3,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
        if (arg4 == NULL) {
            PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
        }
    }
    result = (bool)(arg1)->DrawMesh((char const *)arg2,(char const *)arg3,(csVector3 const &)*arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_SetSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iBillboard_SetSize",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSize(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetSize(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetImageSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetImageSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetImageSize(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_SetPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iBillboard_SetPosition",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPosition(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_MoveToPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    csTicks arg2 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOii:iBillboard_MoveToPosition",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->MoveToPosition(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetPosition",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    ((iBillboard const *)arg1)->GetPosition(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_Move(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iBillboard_Move",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Move(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_StackTop(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_StackTop",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StackTop();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_StackBottom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_StackBottom",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StackBottom();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_StackUp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_StackUp",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StackUp();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_StackDown(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_StackDown",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StackDown();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_SetUVTopLeft(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    csVector2 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBillboard_SetUVTopLeft",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetUVTopLeft((csVector2 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetUVTopLeft(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetUVTopLeft",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector2 const &_result_ref = ((iBillboard const *)arg1)->GetUVTopLeft();
        result = (csVector2 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_SetUVBottomRight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    csVector2 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBillboard_SetUVBottomRight",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetUVBottomRight((csVector2 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetUVBottomRight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetUVBottomRight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector2 const &_result_ref = ((iBillboard const *)arg1)->GetUVBottomRight();
        result = (csVector2 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_SetColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    csColor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBillboard_SetColor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetColor((csColor const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    csColor *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csColor const &_result_ref = ((iBillboard const *)arg1)->GetColor();
        result = (csColor *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_SetLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    iBillboardLayer *arg2 = (iBillboardLayer *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBillboard_SetLayer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBillboardLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetLayer(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    iBillboardLayer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetLayer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBillboardLayer *)((iBillboard const *)arg1)->GetLayer();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBillboardLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_AddEventHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    iBillboardEventHandler *arg2 = (iBillboardEventHandler *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBillboard_AddEventHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBillboardEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddEventHandler(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_RemoveEventHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    iBillboardEventHandler *arg2 = (iBillboardEventHandler *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBillboard_RemoveEventHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBillboardEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveEventHandler(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_SetText(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iBillboard_SetText",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetText((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetText(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetText",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iBillboard const *)arg1)->GetText();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_SetTextOffset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iBillboard_SetTextOffset",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetTextOffset(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetTextOffsetDX(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetTextOffsetDX",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iBillboard const *)arg1)->GetTextOffsetDX();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetTextOffsetDY(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetTextOffsetDY",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iBillboard const *)arg1)->GetTextOffsetDY();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_SetTextFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    char *arg2 ;
    float arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osf:iBillboard_SetTextFont",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetTextFont((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetTextFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetTextFont",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iBillboard const *)arg1)->GetTextFont();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetTextFontSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetTextFontSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iBillboard const *)arg1)->GetTextFontSize();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_SetTextFgColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    csColor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBillboard_SetTextFgColor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetTextFgColor((csColor const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetTextFgColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    csColor *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetTextFgColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csColor const &_result_ref = ((iBillboard const *)arg1)->GetTextFgColor();
        result = (csColor *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_ClearTextFgColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_ClearTextFgColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearTextFgColor();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_SetTextBgColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    csColor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBillboard_SetTextBgColor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetTextBgColor((csColor const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetTextBgColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    csColor *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetTextBgColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csColor const &_result_ref = ((iBillboard const *)arg1)->GetTextBgColor();
        result = (csColor *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_SetTextBgTransparent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_SetTextBgTransparent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetTextBgTransparent();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_IsTextBgTransparent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_IsTextBgTransparent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iBillboard const *)arg1)->IsTextBgTransparent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_ClearTextBgColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_ClearTextBgColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearTextBgColor();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iBillboard",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iBillboard_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iBillboard, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iBillboardManager_ScreenToBillboardX(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iBillboardManager_ScreenToBillboardX",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iBillboardManager const *)arg1)->ScreenToBillboardX(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_ScreenToBillboardY(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iBillboardManager_ScreenToBillboardY",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iBillboardManager const *)arg1)->ScreenToBillboardY(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_BillboardToScreenX(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iBillboardManager_BillboardToScreenX",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iBillboardManager const *)arg1)->BillboardToScreenX(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_BillboardToScreenY(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iBillboardManager_BillboardToScreenY",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iBillboardManager const *)arg1)->BillboardToScreenY(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_CreateBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    char *arg2 ;
    iBillboard *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iBillboardManager_CreateBillboard",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBillboard *)(arg1)->CreateBillboard((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBillboard, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_FindBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    char *arg2 ;
    iBillboard *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iBillboardManager_FindBillboard",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBillboard *)((iBillboardManager const *)arg1)->FindBillboard((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBillboard, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_RemoveBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    iBillboard *arg2 = (iBillboard *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBillboardManager_RemoveBillboard",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveBillboard(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_GetBillboardCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboardManager_GetBillboardCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iBillboardManager const *)arg1)->GetBillboardCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_GetBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    size_t arg2 ;
    iBillboard *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBillboardManager_GetBillboard",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iBillboard *)((iBillboardManager const *)arg1)->GetBillboard(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBillboard, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_CreateBillboardLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    char *arg2 ;
    iBillboardLayer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iBillboardManager_CreateBillboardLayer",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBillboardLayer *)(arg1)->CreateBillboardLayer((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBillboardLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_FindBillboardLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    char *arg2 ;
    iBillboardLayer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iBillboardManager_FindBillboardLayer",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBillboardLayer *)((iBillboardManager const *)arg1)->FindBillboardLayer((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBillboardLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_RemoveBillboardLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    iBillboardLayer *arg2 = (iBillboardLayer *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBillboardManager_RemoveBillboardLayer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBillboardLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveBillboardLayer(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_GetBillboardLayerCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboardManager_GetBillboardLayerCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iBillboardManager const *)arg1)->GetBillboardLayerCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_GetBillboardLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    size_t arg2 ;
    iBillboardLayer *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBillboardManager_GetBillboardLayer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iBillboardLayer *)((iBillboardManager const *)arg1)->GetBillboardLayer(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBillboardLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboardManager_RemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_SetFlags(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    uint32 arg2 ;
    uint32 arg3 ;
    uint32 *argp2 ;
    uint32 *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iBillboardManager_SetFlags",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_uint32,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_uint32,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    (arg1)->SetFlags(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_StackTop(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    iBillboard *arg2 = (iBillboard *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBillboardManager_StackTop",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StackTop(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_StackBottom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    iBillboard *arg2 = (iBillboard *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBillboardManager_StackBottom",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StackBottom(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_StackUp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    iBillboard *arg2 = (iBillboard *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBillboardManager_StackUp",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StackUp(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_StackDown(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    iBillboard *arg2 = (iBillboard *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBillboardManager_StackDown",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StackDown(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_StackBefore(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    iBillboard *arg2 = (iBillboard *) 0 ;
    iBillboard *arg3 = (iBillboard *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iBillboardManager_StackBefore",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StackBefore(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_StackAfter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    iBillboard *arg2 = (iBillboard *) 0 ;
    iBillboard *arg3 = (iBillboard *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iBillboardManager_StackAfter",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StackAfter(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_TestCollision(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    iBillboard *arg2 = (iBillboard *) 0 ;
    iBillboard *arg3 = (iBillboard *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iBillboardManager_TestCollision",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->TestCollision(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_SetDefaultTextFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    char *arg2 ;
    float arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osf:iBillboardManager_SetDefaultTextFont",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetDefaultTextFont((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_GetDefaultTextFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboardManager_GetDefaultTextFont",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iBillboardManager const *)arg1)->GetDefaultTextFont();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_GetDefaultTextFontSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboardManager_GetDefaultTextFontSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iBillboardManager const *)arg1)->GetDefaultTextFontSize();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_SetDefaultTextFgColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    csColor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBillboardManager_SetDefaultTextFgColor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetDefaultTextFgColor((csColor const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_GetDefaultTextFgColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    csColor *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboardManager_GetDefaultTextFgColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csColor const &_result_ref = ((iBillboardManager const *)arg1)->GetDefaultTextFgColor();
        result = (csColor *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_SetDefaultTextBgColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    csColor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBillboardManager_SetDefaultTextBgColor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetDefaultTextBgColor((csColor const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_GetDefaultTextBgColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    csColor *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboardManager_GetDefaultTextBgColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csColor const &_result_ref = ((iBillboardManager const *)arg1)->GetDefaultTextBgColor();
        result = (csColor *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_SetDefaultTextBgTransparent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboardManager_SetDefaultTextBgTransparent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDefaultTextBgTransparent();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_GetShowroom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    iSector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboardManager_GetShowroom",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSector *)(arg1)->GetShowroom();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iBillboardManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iBillboardManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iBillboardManager_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iBillboardManager, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iPcBillboard_SetBillboardName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcBillboard *arg1 = (iPcBillboard *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcBillboard_SetBillboardName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetBillboardName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcBillboard_GetBillboardName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcBillboard *arg1 = (iPcBillboard *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcBillboard_GetBillboardName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetBillboardName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcBillboard_GetBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcBillboard *arg1 = (iPcBillboard *) 0 ;
    iBillboard *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcBillboard_GetBillboard",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBillboard *)(arg1)->GetBillboard();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBillboard, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcBillboard_EnableEvents(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcBillboard *arg1 = (iPcBillboard *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcBillboard_EnableEvents",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->EnableEvents(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcBillboard_AreEventsEnabled(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcBillboard *arg1 = (iPcBillboard *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcBillboard_AreEventsEnabled",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcBillboard const *)arg1)->AreEventsEnabled();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcBillboard *arg1 = (iPcBillboard *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcBillboard",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcBillboard_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcBillboard, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcBillboard *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateBillboard",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcBillboard *)celCreateBillboard(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcBillboard, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcBillboard *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetBillboard",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcBillboard *)celGetBillboard(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcBillboard, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcBillboard *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcBillboard",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcBillboard *)scfQuery_iPcBillboard(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcBillboard, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQueryPC_iPcBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    iPcBillboard *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQueryPC_iPcBillboard",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcBillboard *)scfQueryPC_iPcBillboard(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcBillboard, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_SetWorldFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 ;
    char *arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcRegion_SetWorldFile",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetWorldFile((char const *)arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_GetWorldDir(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_GetWorldDir",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iPcRegion const *)arg1)->GetWorldDir();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_GetWorldFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_GetWorldFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iPcRegion const *)arg1)->GetWorldFile();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_SetRegionName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcRegion_SetRegionName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetRegionName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_GetRegionName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_GetRegionName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iPcRegion const *)arg1)->GetRegionName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_CreateEmptySector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcRegion_CreateEmptySector",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CreateEmptySector((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_Load(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_Load",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Load();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_Unload(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_Unload",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Unload();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_FindSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 ;
    iSector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcRegion_FindSector",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSector *)(arg1)->FindSector((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_GetStartSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 = (char *) 0 ;
    iSector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|s:iPcRegion_GetStartSector",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSector *)(arg1)->GetStartSector((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_GetStartPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 = (char *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|s:iPcRegion_GetStartPosition",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetStartPosition((char const *)arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_PointCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    iPcCamera *arg2 = (iPcCamera *) 0 ;
    char *arg3 = (char *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|s:iPcRegion_PointCamera",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PointCamera(arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_GetRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    iRegion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_GetRegion",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iRegion *)(arg1)->GetRegion();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iRegion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_LoadWorld(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcRegion_LoadWorld",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)iPcRegion_LoadWorld(arg1,(char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcRegion",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcRegion_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcRegion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    char *arg3 ;
    iPcRegion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:celCreateRegion",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcRegion *)celCreateRegion(arg1,arg2,(char const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcRegion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Region(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcRegion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Region",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcRegion *)Region(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcRegion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcRegion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcRegion",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcRegion *)scfQuery_iPcRegion(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcRegion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQueryPC_iPcRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    iPcRegion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQueryPC_iPcRegion",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcRegion *)scfQueryPC_iPcRegion(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcRegion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelMapFile_SetPath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelMapFile *arg1 = (iCelMapFile *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelMapFile_SetPath",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelMapFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPath((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelMapFile_SetFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelMapFile *arg1 = (iCelMapFile *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelMapFile_SetFile",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelMapFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFile((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelMapFile_GetPath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelMapFile *arg1 = (iCelMapFile *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelMapFile_GetPath",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelMapFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelMapFile const *)arg1)->GetPath();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelMapFile_GetFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelMapFile *arg1 = (iCelMapFile *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelMapFile_GetFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelMapFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelMapFile const *)arg1)->GetFile();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelMapFile_SetSectorName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelMapFile *arg1 = (iCelMapFile *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelMapFile_SetSectorName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelMapFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSectorName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelMapFile_GetSectorName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelMapFile *arg1 = (iCelMapFile *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelMapFile_GetSectorName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelMapFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelMapFile const *)arg1)->GetSectorName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelMapFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelMapFile *arg1 = (iCelMapFile *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelMapFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelMapFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelMapFile_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelMapFile, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelRegion_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelRegion *arg1 = (iCelRegion *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelRegion_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelRegion const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelRegion_SetCachePath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelRegion *arg1 = (iCelRegion *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelRegion_SetCachePath",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCachePath((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelRegion_GetCachePath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelRegion *arg1 = (iCelRegion *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelRegion_GetCachePath",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelRegion const *)arg1)->GetCachePath();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelRegion_CreateMapFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelRegion *arg1 = (iCelRegion *) 0 ;
    iCelMapFile *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelRegion_CreateMapFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelMapFile *)(arg1)->CreateMapFile();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelMapFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelRegion_GetMapFileCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelRegion *arg1 = (iCelRegion *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelRegion_GetMapFileCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iCelRegion const *)arg1)->GetMapFileCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelRegion_GetMapFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelRegion *arg1 = (iCelRegion *) 0 ;
    int arg2 ;
    iCelMapFile *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iCelRegion_GetMapFile",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelMapFile *)((iCelRegion const *)arg1)->GetMapFile(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelMapFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelRegion_RemoveMapFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelRegion *arg1 = (iCelRegion *) 0 ;
    iCelMapFile *arg2 = (iCelMapFile *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelRegion_RemoveMapFile",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelMapFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveMapFile(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelRegion_RemoveAllMapFiles(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelRegion *arg1 = (iCelRegion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelRegion_RemoveAllMapFiles",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAllMapFiles();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelRegion_AssociateEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelRegion *arg1 = (iCelRegion *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelRegion_AssociateEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AssociateEntity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelRegion_DissociateEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelRegion *arg1 = (iCelRegion *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelRegion_DissociateEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DissociateEntity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelRegion *arg1 = (iCelRegion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelRegion",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelRegion_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelRegion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelZone_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelZone *arg1 = (iCelZone *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelZone_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelZone,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelZone const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelZone_LinkRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelZone *arg1 = (iCelZone *) 0 ;
    iCelRegion *arg2 = (iCelRegion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelZone_LinkRegion",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelZone,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->LinkRegion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelZone_GetRegionCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelZone *arg1 = (iCelZone *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelZone_GetRegionCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelZone,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iCelZone const *)arg1)->GetRegionCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelZone_GetRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelZone *arg1 = (iCelZone *) 0 ;
    size_t arg2 ;
    iCelRegion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelZone_GetRegion",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelZone,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iCelRegion *)((iCelZone const *)arg1)->GetRegion(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelRegion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelZone_FindRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelZone *arg1 = (iCelZone *) 0 ;
    char *arg2 ;
    iCelRegion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelZone_FindRegion",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelZone,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelRegion *)((iCelZone const *)arg1)->FindRegion((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelRegion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelZone_UnlinkRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelZone *arg1 = (iCelZone *) 0 ;
    iCelRegion *arg2 = (iCelRegion *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelZone_UnlinkRegion",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelZone,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->UnlinkRegion(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelZone_UnlinkAllRegions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelZone *arg1 = (iCelZone *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelZone_UnlinkAllRegions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelZone,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UnlinkAllRegions();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelZone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelZone *arg1 = (iCelZone *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelZone",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelZone,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelZone_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelZone, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iPcZoneManager_EnableColliderWrappers(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcZoneManager_EnableColliderWrappers",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->EnableColliderWrappers(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_IsColliderWrappers(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcZoneManager_IsColliderWrappers",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcZoneManager const *)arg1)->IsColliderWrappers();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_SetLoadingMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPcZoneManager_SetLoadingMode",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetLoadingMode(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_GetLoadingMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcZoneManager_GetLoadingMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iPcZoneManager const *)arg1)->GetLoadingMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_Load__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    iDocumentNode *arg2 = (iDocumentNode *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcZoneManager_Load",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Load(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_Load__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    char *arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcZoneManager_Load",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Load((char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_Load(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcZoneManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iDocumentNode, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iPcZoneManager_Load__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcZoneManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iPcZoneManager_Load__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcZoneManager_Load'");
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_CreateZone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    char *arg2 ;
    iCelZone *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcZoneManager_CreateZone",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelZone *)(arg1)->CreateZone((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelZone, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_GetZoneCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcZoneManager_GetZoneCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iPcZoneManager const *)arg1)->GetZoneCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_GetZone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    int arg2 ;
    iCelZone *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPcZoneManager_GetZone",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelZone *)((iPcZoneManager const *)arg1)->GetZone(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelZone, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_FindZone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    char *arg2 ;
    iCelZone *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcZoneManager_FindZone",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelZone *)((iPcZoneManager const *)arg1)->FindZone((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelZone, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_RemoveZone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    iCelZone *arg2 = (iCelZone *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcZoneManager_RemoveZone",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelZone,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveZone(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_RemoveAllZones(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcZoneManager_RemoveAllZones",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAllZones();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_CreateRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    char *arg2 ;
    iCelRegion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcZoneManager_CreateRegion",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelRegion *)(arg1)->CreateRegion((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelRegion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_GetRegionCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcZoneManager_GetRegionCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iPcZoneManager const *)arg1)->GetRegionCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_GetRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    int arg2 ;
    iCelRegion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPcZoneManager_GetRegion",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelRegion *)((iPcZoneManager const *)arg1)->GetRegion(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelRegion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_FindRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    char *arg2 ;
    iCelRegion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcZoneManager_FindRegion",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelRegion *)((iPcZoneManager const *)arg1)->FindRegion((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelRegion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_RemoveRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    iCelRegion *arg2 = (iCelRegion *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcZoneManager_RemoveRegion",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveRegion(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_RemoveAllRegions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcZoneManager_RemoveAllRegions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAllRegions();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_FindStartLocations(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    iStringArray *arg2 = (iStringArray *) 0 ;
    iStringArray *arg3 = (iStringArray *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcZoneManager_FindStartLocations",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iStringArray,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iStringArray,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FindStartLocations(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_GetLastStartLocation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    iString *arg2 = (iString *) 0 ;
    iString *arg3 = (iString *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcZoneManager_GetLastStartLocation",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetLastStartLocation(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_GetLastStartRegionName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcZoneManager_GetLastStartRegionName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetLastStartRegionName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_GetLastStartName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcZoneManager_GetLastStartName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetLastStartName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_PointCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    char *arg2 ;
    char *arg3 ;
    char *arg4 = (char *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss|s:iPcZoneManager_PointCamera",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PointCamera((char const *)arg2,(char const *)arg3,(char const *)arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_PointMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    char *arg2 ;
    char *arg3 ;
    char *arg4 = (char *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss|s:iPcZoneManager_PointMesh",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PointMesh((char const *)arg2,(char const *)arg3,(char const *)arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcZoneManager_ActivateRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    iCelRegion *arg2 = (iCelRegion *) 0 ;
    bool arg3 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:iPcZoneManager_ActivateRegion",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->ActivateRegion(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcZoneManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcZoneManager *arg1 = (iPcZoneManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcZoneManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcZoneManager_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcZoneManager, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateZoneManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcZoneManager *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateZoneManager",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcZoneManager *)celCreateZoneManager(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcZoneManager, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetZoneManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcZoneManager *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetZoneManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcZoneManager *)celGetZoneManager(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcZoneManager, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcZoneManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcZoneManager *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcZoneManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcZoneManager *)scfQuery_iPcZoneManager(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcZoneManager, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_Activate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    bool arg2 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:iPcCommandInput_Activate",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->Activate(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_SetCookedMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcCommandInput_SetCookedMode",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetCookedMode(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_GetCookedMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCommandInput_GetCookedMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcCommandInput const *)arg1)->GetCookedMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_ScreenCoordinates(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    bool arg2 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:iPcCommandInput_ScreenCoordinates",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->ScreenCoordinates(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_ScreenToCentered(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    float arg2 ;
    float arg3 = (float) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of|f:iPcCommandInput_ScreenToCentered",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->ScreenToCentered(arg2,arg3);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_CenteredToScreen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    float arg2 ;
    float arg3 = (float) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of|f:iPcCommandInput_CenteredToScreen",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->CenteredToScreen(arg2,arg3);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_LoadConfig(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCommandInput_LoadConfig",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->LoadConfig((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_Bind(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    char *arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcCommandInput_Bind",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Bind((char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_GetBind(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    char *arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCommandInput_GetBind",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iPcCommandInput const *)arg1)->GetBind((char const *)arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_RemoveBind(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    char *arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcCommandInput_RemoveBind",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveBind((char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_RemoveAllBinds(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCommandInput_RemoveAllBinds",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAllBinds();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcCommandInput(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcCommandInput",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcCommandInput_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcCommandInput, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateCommandInput(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcCommandInput *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateCommandInput",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCommandInput *)celCreateCommandInput(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCommandInput, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetCommandInput(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcCommandInput *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetCommandInput",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCommandInput *)celGetCommandInput(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCommandInput, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcCommandInput(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcCommandInput *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcCommandInput",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCommandInput *)scfQuery_iPcCommandInput(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCommandInput, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravityCallback_Callback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravityCallback *arg1 = (iPcGravityCallback *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravityCallback_Callback",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravityCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Callback();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcGravityCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravityCallback *arg1 = (iPcGravityCallback *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcGravityCallback",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravityCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcGravityCallback_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcGravityCallback, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iPcLinearMovement_SetAnchor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    iPcMesh *arg2 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_SetAnchor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetAnchor(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_GetAnchor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    iPcMesh *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcLinearMovement_GetAnchor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMesh *)((iPcLinearMovement const *)arg1)->GetAnchor();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetAngularVelocity__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_SetAngularVelocity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetAngularVelocity((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetAngularVelocity__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcLinearMovement_SetAngularVelocity",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetAngularVelocity((csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetAngularVelocity(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcLinearMovement, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iPcLinearMovement_SetAngularVelocity__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcLinearMovement, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iPcLinearMovement_SetAngularVelocity__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcLinearMovement_SetAngularVelocity'");
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcLinearMovement_SetSpeed",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSpeed(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_SetVelocity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetVelocity((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_AddVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_AddVelocity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddVelocity((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_ClearWorldVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcLinearMovement_ClearWorldVelocity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearWorldVelocity();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_GetVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_GetVelocity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((iPcLinearMovement const *)arg1)->GetVelocity(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_GetAngularVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_GetAngularVelocity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((iPcLinearMovement const *)arg1)->GetAngularVelocity(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_InitCD__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    float arg3 ;
    iPcCollisionDetection *arg4 = (iPcCollisionDetection *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf|O:iPcLinearMovement_InitCD",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iPcCollisionDetection,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (bool)(arg1)->InitCD(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_InitCD__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    iPcCollisionDetection *arg5 = (iPcCollisionDetection *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO|O:iPcLinearMovement_InitCD",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj4) {
        if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_iPcCollisionDetection,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (bool)(arg1)->InitCD((csVector3 const &)*arg2,(csVector3 const &)*arg3,(csVector3 const &)*arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_GetCDDimensions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    iPcCollisionDetection **arg5 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:iPcLinearMovement_GetCDDimensions",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_p_iPcCollisionDetection,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetCDDimensions(*arg2,*arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_InitCD__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    iPcCollisionDetection *arg2 = (iPcCollisionDetection *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:iPcLinearMovement_InitCD",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcCollisionDetection,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (bool)(arg1)->InitCD(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_InitCD(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcLinearMovement, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_iPcLinearMovement_InitCD__SWIG_2(self,args);
            }
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iPcCollisionDetection, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iPcLinearMovement_InitCD__SWIG_2(self,args);
            }
        }
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcLinearMovement, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iMeshWrapper, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_iPcLinearMovement_InitCD__SWIG_0(self,args);
                    }
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_iPcCollisionDetection, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_iPcLinearMovement_InitCD__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 4) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcLinearMovement, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_iPcLinearMovement_InitCD__SWIG_1(self,args);
                        }
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_iPcCollisionDetection, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            } else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_iPcLinearMovement_InitCD__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcLinearMovement_InitCD'");
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_TimeDiff(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csTicks result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcLinearMovement_TimeDiff",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csTicks)(arg1)->TimeDiff();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_GetDRData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    bool *arg2 = 0 ;
    float *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    float *arg5 = 0 ;
    iSector **arg6 = 0 ;
    csVector3 *arg7 = 0 ;
    csVector3 *arg8 = 0 ;
    float *arg9 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    PyObject * obj7 = 0 ;
    PyObject * obj8 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:iPcLinearMovement_GetDRData",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bool,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj7,(void **) &arg8, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg8 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj8,(void **) &arg9, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg9 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetDRData(*arg2,*arg3,*arg4,*arg5,*arg6,*arg7,*arg8,*arg9);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetDRData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    bool arg2 ;
    float arg3 ;
    csVector3 *arg4 = 0 ;
    float arg5 ;
    iSector *arg6 = (iSector *) 0 ;
    csVector3 *arg7 = 0 ;
    csVector3 *arg8 = 0 ;
    float arg9 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    PyObject * obj7 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOfOfOOOf:iPcLinearMovement_SetDRData",&obj0,&obj1,&arg3,&obj3,&arg5,&obj5,&obj6,&obj7,&arg9)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj7,(void **) &arg8, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg8 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetDRData(arg2,arg3,*arg4,arg5,arg6,*arg7,*arg8,arg9);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetSoftDRData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    bool arg2 ;
    float arg3 ;
    csVector3 *arg4 = 0 ;
    float arg5 ;
    iSector *arg6 = (iSector *) 0 ;
    csVector3 *arg7 = 0 ;
    csVector3 *arg8 = 0 ;
    float arg9 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    PyObject * obj7 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOfOfOOOf:iPcLinearMovement_SetSoftDRData",&obj0,&obj1,&arg3,&obj3,&arg5,&obj5,&obj6,&obj7,&arg9)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj7,(void **) &arg8, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg8 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetSoftDRData(arg2,arg3,*arg4,arg5,arg6,*arg7,*arg8,arg9);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetFullPosition__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    float arg3 ;
    iSector *arg4 = (iSector *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOfO:iPcLinearMovement_SetFullPosition",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFullPosition((csVector3 const &)*arg2,arg3,(iSector const *)arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetPosition__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    float arg3 ;
    iSector *arg4 = (iSector *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOfO:iPcLinearMovement_SetPosition",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPosition((csVector3 const &)*arg2,arg3,(iSector const *)arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_GetLastPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    float *arg3 = 0 ;
    iSector **arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iPcLinearMovement_GetLastPosition",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetLastPosition(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_GetLastFullPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    float *arg3 = 0 ;
    iSector **arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iPcLinearMovement_GetLastFullPosition",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetLastFullPosition(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_IsPath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcLinearMovement_IsPath",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcLinearMovement const *)arg1)->IsPath();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_GetSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    iSector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcLinearMovement_GetSector",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSector *)(arg1)->GetSector();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_ExtrapolatePosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcLinearMovement_ExtrapolatePosition",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ExtrapolatePosition(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_UpdateDRDelta(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csTicks arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_UpdateDRDelta",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->UpdateDRDelta(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_UpdateDR(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csTicks arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_UpdateDR",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->UpdateDR(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetPath__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    iPath *arg2 = (iPath *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_SetPath",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPath(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetPathTime(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcLinearMovement_SetPathTime",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPathTime(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetPathSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcLinearMovement_SetPathSpeed",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPathSpeed(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetPathAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    int arg2 ;
    char *arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:iPcLinearMovement_SetPathAction",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPathAction(arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetPathSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcLinearMovement_SetPathSector",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPathSector((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_IsOnGround(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcLinearMovement_IsOnGround",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcLinearMovement const *)arg1)->IsOnGround();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetOnGround(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_SetOnGround",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetOnGround(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetHugGround(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_SetHugGround",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetHugGround(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetDeltaLimit(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcLinearMovement_SetDeltaLimit",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDeltaLimit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_RotateV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    float arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcLinearMovement_RotateV",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RotateV(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetGravity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcLinearMovement_SetGravity",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetGravity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_GetGravity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcLinearMovement_GetGravity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetGravity();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_ResetGravity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcLinearMovement_ResetGravity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ResetGravity();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_AddGravityCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    iPcGravityCallback *arg2 = (iPcGravityCallback *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_AddGravityCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcGravityCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddGravityCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_RemoveGravityCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    iPcGravityCallback *arg2 = (iPcGravityCallback *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_RemoveGravityCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcGravityCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveGravityCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_GetPortalDisplacement(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcLinearMovement_GetPortalDisplacement",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetPortalDisplacement();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_ClearPortalDisplacement(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcLinearMovement_ClearPortalDisplacement",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearPortalDisplacement();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetFullPosition__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    char *arg2 ;
    float arg3 ;
    iSector *arg4 = (iSector *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsfO:iPcLinearMovement_SetFullPosition",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFullPosition((char const *)arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetFullPosition(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcLinearMovement, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_iPcLinearMovement_SetFullPosition__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcLinearMovement, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_iPcLinearMovement_SetFullPosition__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcLinearMovement_SetFullPosition'");
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetPosition__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    char *arg2 ;
    float arg3 ;
    iSector *arg4 = (iSector *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsfO:iPcLinearMovement_SetPosition",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPosition((char const *)arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetPosition(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcLinearMovement, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_iPcLinearMovement_SetPosition__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcLinearMovement, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_iPcLinearMovement_SetPosition__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcLinearMovement_SetPosition'");
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetPath__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csPath *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_SetPath",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    iPcLinearMovement_SetPath__SWIG_1(arg1,*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetPath(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcLinearMovement, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iPath, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iPcLinearMovement_SetPath__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcLinearMovement, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csPath, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iPcLinearMovement_SetPath__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcLinearMovement_SetPath'");
    return NULL;
}


static PyObject *_wrap_delete_iPcLinearMovement(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcLinearMovement",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcLinearMovement_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcLinearMovement, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateLinearMovement(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcLinearMovement *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateLinearMovement",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcLinearMovement *)celCreateLinearMovement(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcLinearMovement, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetLinearMovement(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcLinearMovement *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetLinearMovement",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcLinearMovement *)celGetLinearMovement(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcLinearMovement, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcLinearMovement(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcLinearMovement *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcLinearMovement",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcLinearMovement *)scfQuery_iPcLinearMovement(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcLinearMovement, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_Forward(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcActorMove_Forward",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->Forward(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_IsMovingForward(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcActorMove_IsMovingForward",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsMovingForward();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_Backward(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcActorMove_Backward",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->Backward(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_IsMovingBackward(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcActorMove_IsMovingBackward",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsMovingBackward();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_StrafeLeft(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcActorMove_StrafeLeft",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->StrafeLeft(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_IsStrafingLeft(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcActorMove_IsStrafingLeft",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsStrafingLeft();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_StrafeRight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcActorMove_StrafeRight",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->StrafeRight(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_IsStrafingRight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcActorMove_IsStrafingRight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsStrafingRight();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_RotateLeft(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcActorMove_RotateLeft",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->RotateLeft(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_IsRotatingLeft(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcActorMove_IsRotatingLeft",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsRotatingLeft();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_RotateRight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcActorMove_RotateRight",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->RotateRight(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_IsRotatingRight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcActorMove_IsRotatingRight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsRotatingRight();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_RotateTo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcActorMove_RotateTo",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RotateTo(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_Run(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcActorMove_Run",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->Run(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_IsRunning(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcActorMove_IsRunning",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsRunning();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_AutoRun(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcActorMove_AutoRun",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->AutoRun(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_IsAutoRunning(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcActorMove_IsAutoRunning",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsAutoRunning();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_Jump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcActorMove_Jump",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Jump();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_ToggleCameraMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcActorMove_ToggleCameraMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ToggleCameraMode();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_SetMovementSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcActorMove_SetMovementSpeed",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMovementSpeed(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_GetMovementSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcActorMove_GetMovementSpeed",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcActorMove const *)arg1)->GetMovementSpeed();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_SetRunningSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcActorMove_SetRunningSpeed",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetRunningSpeed(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_GetRunningSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcActorMove_GetRunningSpeed",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcActorMove const *)arg1)->GetRunningSpeed();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_SetRotationSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcActorMove_SetRotationSpeed",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetRotationSpeed(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_GetRotationSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcActorMove_GetRotationSpeed",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcActorMove const *)arg1)->GetRotationSpeed();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_SetJumpingVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcActorMove_SetJumpingVelocity",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetJumpingVelocity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcActorMove_GetJumpingVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcActorMove_GetJumpingVelocity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcActorMove const *)arg1)->GetJumpingVelocity();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcActorMove(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcActorMove *arg1 = (iPcActorMove *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcActorMove",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcActorMove,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcActorMove_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcActorMove, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateActorMove(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcActorMove *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateActorMove",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcActorMove *)celCreateActorMove(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcActorMove, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetActorMove(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcActorMove *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetActorMove",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcActorMove *)celGetActorMove(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcActorMove, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcActorMove(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcActorMove *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcActorMove",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcActorMove *)scfQuery_iPcActorMove(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcActorMove, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    iPcRegion *arg2 = (iPcRegion *) 0 ;
    bool arg3 = (bool) true ;
    char *arg4 = (char *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|Os:iPcCamera_SetRegion",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->SetRegion(arg2,arg3,(char const *)arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetZoneManager__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    iPcZoneManager *arg2 = (iPcZoneManager *) 0 ;
    bool arg3 ;
    char *arg4 ;
    char *arg5 = (char *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOs|s:iPcCamera_SetZoneManager",&obj0,&obj1,&obj2,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->SetZoneManager(arg2,arg3,(char const *)arg4,(char const *)arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetZoneManager__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    char *arg2 ;
    bool arg3 ;
    char *arg4 ;
    char *arg5 = (char *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOs|s:iPcCamera_SetZoneManager",&obj0,&arg2,&obj2,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->SetZoneManager((char const *)arg2,arg3,(char const *)arg4,(char const *)arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetZoneManager(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 4) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcCamera, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iPcZoneManager, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_iPcCamera_SetZoneManager__SWIG_0(self,args);
                        }
                        {
                            _v = PyString_Check(argv[4]) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_iPcCamera_SetZoneManager__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 4) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcCamera, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_iPcCamera_SetZoneManager__SWIG_1(self,args);
                        }
                        {
                            _v = PyString_Check(argv[4]) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_iPcCamera_SetZoneManager__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcCamera_SetZoneManager'");
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetRectangle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:iPcCamera_SetRectangle",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetRectangle(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    iCamera *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCamera *)((iPcCamera const *)arg1)->GetCamera();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetView(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    iView *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetView",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iView *)((iPcCamera const *)arg1)->GetView();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iView, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetClearZBuffer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcCamera_SetClearZBuffer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetClearZBuffer(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetClearZBuffer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetClearZBuffer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcCamera const *)arg1)->GetClearZBuffer();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetClearScreen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcCamera_SetClearScreen",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetClearScreen(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetClearScreen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetClearScreen",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcCamera const *)arg1)->GetClearScreen();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_DisableDistanceClipping(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_DisableDistanceClipping",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DisableDistanceClipping();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_EnableFixedDistanceClipping(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcCamera_EnableFixedDistanceClipping",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->EnableFixedDistanceClipping(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_EnableAdaptiveDistanceClipping(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offf:iPcCamera_EnableAdaptiveDistanceClipping",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->EnableAdaptiveDistanceClipping(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_UseDistanceClipping(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_UseDistanceClipping",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcCamera const *)arg1)->UseDistanceClipping();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_UseFixedDistanceClipping(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_UseFixedDistanceClipping",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcCamera const *)arg1)->UseFixedDistanceClipping();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetFixedDistance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetFixedDistance",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcCamera const *)arg1)->GetFixedDistance();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetAdaptiveMinFPS(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetAdaptiveMinFPS",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcCamera const *)arg1)->GetAdaptiveMinFPS();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetAdaptiveMaxFPS(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetAdaptiveMaxFPS",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcCamera const *)arg1)->GetAdaptiveMaxFPS();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetAdaptiveMinDistance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetAdaptiveMinDistance",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcCamera const *)arg1)->GetAdaptiveMinDistance();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetAutoDraw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcCamera_SetAutoDraw",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetAutoDraw(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_Draw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_Draw",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Draw();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_UpdateCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_UpdateCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UpdateCamera();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetDrawFlags(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetDrawFlags",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetDrawFlags();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcCamera_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcCamera, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcCamera *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateCamera",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCamera *)celCreateCamera(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcCamera *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCamera *)celGetCamera(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcCamera *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCamera *)scfQuery_iPcCamera(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_SetFollowEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcDefaultCamera_SetFollowEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFollowEntity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_SetMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    int arg2 ;
    bool arg3 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi|O:iPcDefaultCamera_SetMode",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->SetMode((iPcDefaultCamera::CameraMode )arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_GetMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcDefaultCamera_GetMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iPcDefaultCamera const *)arg1)->GetMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_SetModeName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    char *arg2 ;
    bool arg3 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iPcDefaultCamera_SetModeName",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->SetModeName((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_GetModeName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcDefaultCamera_GetModeName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iPcDefaultCamera const *)arg1)->GetModeName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_GetNextMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcDefaultCamera_GetNextMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iPcDefaultCamera const *)arg1)->GetNextMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_SetSpringParameters(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offf:iPcDefaultCamera_SetSpringParameters",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSpringParameters(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_SetMinMaxCameraDistance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    float arg2 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Off:iPcDefaultCamera_SetMinMaxCameraDistance",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMinMaxCameraDistance(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_SetTurnSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcDefaultCamera_SetTurnSpeed",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetTurnSpeed(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_SetSwingCoef(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcDefaultCamera_SetSwingCoef",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSwingCoef(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_SetFirstPersonOffset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcDefaultCamera_SetFirstPersonOffset",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetFirstPersonOffset((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_SetThirdPersonOffset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcDefaultCamera_SetThirdPersonOffset",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetThirdPersonOffset((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_CenterCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcDefaultCamera_CenterCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CenterCamera();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_SetPitch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcDefaultCamera_SetPitch",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPitch(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_GetPitch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcDefaultCamera_GetPitch",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcDefaultCamera const *)arg1)->GetPitch();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_SetPitchVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcDefaultCamera_SetPitchVelocity",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPitchVelocity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_GetPitchVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcDefaultCamera_GetPitchVelocity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcDefaultCamera const *)arg1)->GetPitchVelocity();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_MovePitch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    float arg2 ;
    int arg3 = (int) -1 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of|i:iPcDefaultCamera_MovePitch",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MovePitch(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_SetYaw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    float arg2 ;
    int arg3 = (int) -1 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of|i:iPcDefaultCamera_SetYaw",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetYaw(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_MoveYaw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    float arg2 ;
    int arg3 = (int) -1 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of|i:iPcDefaultCamera_MoveYaw",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MoveYaw(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_GetYaw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    int arg2 = (int) -1 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|i:iPcDefaultCamera_GetYaw",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcDefaultCamera const *)arg1)->GetYaw(arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_SetYawVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcDefaultCamera_SetYawVelocity",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetYawVelocity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_GetYawVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcDefaultCamera_GetYawVelocity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcDefaultCamera const *)arg1)->GetYawVelocity();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDefaultCamera_SetDistance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    float arg2 ;
    int arg3 = (int) -1 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of|i:iPcDefaultCamera_SetDistance",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDistance(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcDefaultCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDefaultCamera *arg1 = (iPcDefaultCamera *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcDefaultCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDefaultCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcDefaultCamera_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcDefaultCamera, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateDefaultCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcDefaultCamera *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateDefaultCamera",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcDefaultCamera *)celCreateDefaultCamera(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcDefaultCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetDefaultCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcDefaultCamera *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetDefaultCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcDefaultCamera *)celGetDefaultCamera(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcDefaultCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcDefaultCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcDefaultCamera *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcDefaultCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcDefaultCamera *)scfQuery_iPcDefaultCamera(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcDefaultCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcSimpleCamera_SetDrawMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSimpleCamera *arg1 = (iPcSimpleCamera *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcSimpleCamera_SetDrawMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSimpleCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetDrawMesh(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcSimpleCamera_SetCameraOffset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSimpleCamera *arg1 = (iPcSimpleCamera *) 0 ;
    csVector3 *arg2 = 0 ;
    bool arg3 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:iPcSimpleCamera_SetCameraOffset",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSimpleCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->SetCameraOffset((csVector3 const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcSimpleCamera_SetLookAtOffset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSimpleCamera *arg1 = (iPcSimpleCamera *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcSimpleCamera_SetLookAtOffset",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSimpleCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetLookAtOffset((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcSimpleCamera_SetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSimpleCamera *arg1 = (iPcSimpleCamera *) 0 ;
    iPcMesh *arg2 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcSimpleCamera_SetMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSimpleCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMesh(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcSimpleCamera_Draw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSimpleCamera *arg1 = (iPcSimpleCamera *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcSimpleCamera_Draw",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSimpleCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Draw();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcSimpleCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSimpleCamera *arg1 = (iPcSimpleCamera *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcSimpleCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSimpleCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcSimpleCamera_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcSimpleCamera, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateSimpleCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcSimpleCamera *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateSimpleCamera",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcSimpleCamera *)celCreateSimpleCamera(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSimpleCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetSimpleCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcSimpleCamera *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetSimpleCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcSimpleCamera *)celGetSimpleCamera(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSimpleCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcSimpleCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcSimpleCamera *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcSimpleCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcSimpleCamera *)scfQuery_iPcSimpleCamera(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSimpleCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelectListener_MouseDown(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelectListener *arg1 = (iPcMeshSelectListener *) 0 ;
    iPcMeshSelect *arg2 = (iPcMeshSelect *) 0 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    iCelEntity *arg6 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiiO:iPcMeshSelectListener_MouseDown",&obj0,&obj1,&arg3,&arg4,&arg5,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelectListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MouseDown(arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelectListener_MouseUp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelectListener *arg1 = (iPcMeshSelectListener *) 0 ;
    iPcMeshSelect *arg2 = (iPcMeshSelect *) 0 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    iCelEntity *arg6 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiiO:iPcMeshSelectListener_MouseUp",&obj0,&obj1,&arg3,&arg4,&arg5,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelectListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MouseUp(arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelectListener_MouseMove(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelectListener *arg1 = (iPcMeshSelectListener *) 0 ;
    iPcMeshSelect *arg2 = (iPcMeshSelect *) 0 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    iCelEntity *arg6 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiiO:iPcMeshSelectListener_MouseMove",&obj0,&obj1,&arg3,&arg4,&arg5,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelectListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MouseMove(arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcMeshSelectListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelectListener *arg1 = (iPcMeshSelectListener *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMeshSelectListener",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelectListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcMeshSelectListener_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMeshSelectListener, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iPcMeshSelect_AddMeshSelectListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    iPcMeshSelectListener *arg2 = (iPcMeshSelectListener *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_AddMeshSelectListener",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMeshSelectListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddMeshSelectListener(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_RemoveMeshSelectListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    iPcMeshSelectListener *arg2 = (iPcMeshSelectListener *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_RemoveMeshSelectListener",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMeshSelectListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveMeshSelectListener(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    iPcCamera *arg2 = (iPcCamera *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetCamera",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCamera(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetMouseButtons__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPcMeshSelect_SetMouseButtons",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMouseButtons(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetMouseButtons__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcMeshSelect_SetMouseButtons",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMouseButtons((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetMouseButtons(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcMeshSelect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iPcMeshSelect_SetMouseButtons__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcMeshSelect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iPcMeshSelect_SetMouseButtons__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcMeshSelect_SetMouseButtons'");
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_GetMouseButtons(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_GetMouseButtons",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iPcMeshSelect const *)arg1)->GetMouseButtons();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetGlobalSelection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetGlobalSelection",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetGlobalSelection(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasGlobalSelection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasGlobalSelection",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasGlobalSelection();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetFollowMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetFollowMode",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetFollowMode(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasFollowMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasFollowMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasFollowMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetFollowAlwaysMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetFollowAlwaysMode",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetFollowAlwaysMode(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasFollowAlwaysMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasFollowAlwaysMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasFollowAlwaysMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetDragMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetDragMode",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetDragMode(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasDragMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasDragMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasDragMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetDragPlaneNormal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    csVector3 *arg2 = 0 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcMeshSelect_SetDragPlaneNormal",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetDragPlaneNormal((csVector3 const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_GetDragPlaneNormal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    csVector3 *arg2 = 0 ;
    bool *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcMeshSelect_GetDragPlaneNormal",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_bool,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((iPcMeshSelect const *)arg1)->GetDragPlaneNormal(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetSendmoveEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetSendmoveEvent",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetSendmoveEvent(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasSendmoveEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasSendmoveEvent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasSendmoveEvent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetSendupEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetSendupEvent",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetSendupEvent(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasSendupEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasSendupEvent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasSendupEvent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetSenddownEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetSenddownEvent",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetSenddownEvent(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasSenddownEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasSenddownEvent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasSenddownEvent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetMaxSelectionDistance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcMeshSelect_SetMaxSelectionDistance",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMaxSelectionDistance(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_GetMaxSelectionDistance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_GetMaxSelectionDistance",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcMeshSelect const *)arg1)->GetMaxSelectionDistance();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcMeshSelect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMeshSelect",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcMeshSelect_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMeshSelect, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateMeshSelect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcMeshSelect *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateMeshSelect",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMeshSelect *)celCreateMeshSelect(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMeshSelect, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetMeshSelect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcMeshSelect *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetMeshSelect",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMeshSelect *)celGetMeshSelect(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMeshSelect, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcMeshSelect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcMeshSelect *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcMeshSelect",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMeshSelect *)scfQuery_iPcMeshSelect(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMeshSelect, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_SetPath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcMesh_SetPath",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPath((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_LoadMesh__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    char *arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcMesh_LoadMesh",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetMesh((char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_LoadMesh__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    bool arg3 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:iPcMesh_LoadMesh",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->SetMesh(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_LoadMesh(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcMesh, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iMeshWrapper, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_iPcMesh_LoadMesh__SWIG_1(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iPcMesh_LoadMesh__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcMesh, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iPcMesh_LoadMesh__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcMesh_LoadMesh'");
    return NULL;
}


static PyObject *_wrap_iPcMesh_CreateEmptyThing(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_CreateEmptyThing",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CreateEmptyThing();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_GetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    iMeshWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_GetMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshWrapper *)((iPcMesh const *)arg1)->GetMesh();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_MoveMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcMesh_MoveMesh",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveMesh(arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_SetAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    char *arg2 ;
    bool arg3 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iPcMesh_SetAction",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->SetAction((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_GetAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_GetAction",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetAction();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_SetReverseAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    bool arg2 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:iPcMesh_SetReverseAction",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->SetReverseAction(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_Hide(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_Hide",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Hide();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_Show(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_Show",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Show();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_IsVisible(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_IsVisible",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMesh const *)arg1)->IsVisible();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcMesh_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMesh, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcMesh *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMesh *)celCreateMesh(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcMesh *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMesh *)celGetMesh(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcMesh *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMesh *)scfQuery_iPcMesh(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcTimer_WakeUp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTimer *arg1 = (iPcTimer *) 0 ;
    csTicks arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcTimer_WakeUp",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->WakeUp(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcTimer_WakeUpFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTimer *arg1 = (iPcTimer *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPcTimer_WakeUpFrame",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->WakeUpFrame(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcTimer_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTimer *arg1 = (iPcTimer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcTimer_Clear",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Clear();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcTimer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTimer *arg1 = (iPcTimer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcTimer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcTimer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcTimer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateTimer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcTimer *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateTimer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcTimer *)celCreateTimer(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcTimer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetTimer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcTimer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetTimer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcTimer *)celGetTimer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcTimer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcTimer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcTimer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcTimer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcTimer *)scfQuery_iPcTimer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcTimer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcSolid_SetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSolid *arg1 = (iPcSolid *) 0 ;
    iPcMesh *arg2 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcSolid_SetMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSolid,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMesh(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcSolid_GetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSolid *arg1 = (iPcSolid *) 0 ;
    iPcMesh *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcSolid_GetMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSolid,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMesh *)((iPcSolid const *)arg1)->GetMesh();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcSolid_GetCollider(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSolid *arg1 = (iPcSolid *) 0 ;
    iCollider *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcSolid_GetCollider",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSolid,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCollider *)(arg1)->GetCollider();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCollider, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSolid *arg1 = (iPcSolid *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcSolid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSolid,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcSolid_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcSolid, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcSolid *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateSolid",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcSolid *)celCreateSolid(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSolid, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcSolid *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetSolid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcSolid *)celGetSolid(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSolid, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcSolid *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcSolid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcSolid *)scfQuery_iPcSolid(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSolid, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_CreateGravityColliderFromMesh__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    iPcMesh *arg2 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_CreateGravityColliderFromMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CreateGravityCollider(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_CreateGravityColliderFromMesh__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcGravity_CreateGravityColliderFromMesh",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->CreateGravityCollider((csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_CreateGravityColliderFromMesh(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcGravity, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iPcMesh, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iPcGravity_CreateGravityColliderFromMesh__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcGravity, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iPcGravity_CreateGravityColliderFromMesh__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcGravity_CreateGravityColliderFromMesh'");
    return NULL;
}


static PyObject *_wrap_iPcGravity_GetGravityCollider(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    iCollider *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_GetGravityCollider",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCollider *)(arg1)->GetGravityCollider();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCollider, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_SetMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    iPcMovable *arg2 = (iPcMovable *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_SetMovable",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMovable(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_GetMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    iPcMovable *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_GetMovable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMovable *)(arg1)->GetMovable();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMovable, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_SetSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    iPcSolid *arg2 = (iPcSolid *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_SetSolid",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcSolid,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSolid(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_GetSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    iPcSolid *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_GetSolid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcSolid *)(arg1)->GetSolid();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSolid, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_SetWeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcGravity_SetWeight",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetWeight(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_GetWeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_GetWeight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcGravity const *)arg1)->GetWeight();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_ClearForces(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_ClearForces",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearForces();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_ClearPermanentForces(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_ClearPermanentForces",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearPermanentForces();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_ResetSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_ResetSpeed",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ResetSpeed();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_ApplyForce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    csVector3 *arg2 = 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf:iPcGravity_ApplyForce",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->ApplyForce((csVector3 const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_ApplyPermanentForce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_ApplyPermanentForce",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->ApplyPermanentForce((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_IsResting(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_IsResting",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcGravity const *)arg1)->IsResting();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_SetActive(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_SetActive",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetActive(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_IsActive(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_IsActive",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcGravity const *)arg1)->IsActive();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcGravity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcGravity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcGravity_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcGravity, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateGravity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcGravity *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateGravity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcGravity *)celCreateGravity(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcGravity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetGravity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcGravity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetGravity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcGravity *)celGetGravity(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcGravity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcGravity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcGravity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcGravity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcGravity *)scfQuery_iPcGravity(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcGravity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_SetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    iPcMesh *arg2 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMovable_SetMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMesh(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_GetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    iPcMesh *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMovable_GetMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMesh *)(arg1)->GetMesh();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_SetPos__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 *arg3 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcMovable_SetPos",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->Move(arg2,(csVector3 const &)*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_SetPos__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    csVector3 *arg2 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMovable_SetPos",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->Move((csVector3 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_SetPos(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcMovable, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iPcMovable_SetPos__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcMovable, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iPcMovable_SetPos__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcMovable_SetPos'");
    return NULL;
}


static PyObject *_wrap_iPcMovable_AddConstraint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    iPcMovableConstraint *arg2 = (iPcMovableConstraint *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMovable_AddConstraint",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMovableConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddConstraint(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_RemoveConstraint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    iPcMovableConstraint *arg2 = (iPcMovableConstraint *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMovable_RemoveConstraint",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMovableConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveConstraint(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_RemoveAllConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMovable_RemoveAllConstraints",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAllConstraints();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMovable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcMovable_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMovable, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iPcMovableConstraint_CheckMove(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovableConstraint *arg1 = (iPcMovableConstraint *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    csVector3 *arg5 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:iPcMovableConstraint_CheckMove",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovableConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->CheckMove(arg2,(csVector3 const &)*arg3,(csVector3 const &)*arg4,*arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcMovableConstraint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovableConstraint *arg1 = (iPcMovableConstraint *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMovableConstraint",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovableConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcMovableConstraint_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMovableConstraint, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcMovable *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateMovable",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMovable *)celCreateMovable(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMovable, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcMovable *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetMovable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMovable *)celGetMovable(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMovable, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcMovable *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcMovable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMovable *)scfQuery_iPcMovable(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMovable, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventoryListener_AddChild(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventoryListener *arg1 = (iPcInventoryListener *) 0 ;
    iPcInventory *arg2 = (iPcInventory *) 0 ;
    iCelEntity *arg3 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcInventoryListener_AddChild",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventoryListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddChild(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventoryListener_RemoveChild(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventoryListener *arg1 = (iPcInventoryListener *) 0 ;
    iPcInventory *arg2 = (iPcInventory *) 0 ;
    iCelEntity *arg3 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcInventoryListener_RemoveChild",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventoryListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveChild(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcInventoryListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventoryListener *arg1 = (iPcInventoryListener *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcInventoryListener",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventoryListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcInventoryListener_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcInventoryListener, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelInventorySpaceSlot_GetEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelInventorySpaceSlot *arg1 = (iCelInventorySpaceSlot *) 0 ;
    iCelParameterBlock *arg2 = (iCelParameterBlock *) 0 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelInventorySpaceSlot_GetEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelInventorySpaceSlot,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)(arg1)->GetEntity(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelInventorySpaceSlot_AddEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelInventorySpaceSlot *arg1 = (iCelInventorySpaceSlot *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iCelParameterBlock *arg3 = (iCelParameterBlock *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelInventorySpaceSlot_AddEntity",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelInventorySpaceSlot,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->AddEntity(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelInventorySpaceSlot_RemoveEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelInventorySpaceSlot *arg1 = (iCelInventorySpaceSlot *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelInventorySpaceSlot_RemoveEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelInventorySpaceSlot,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveEntity(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelInventorySpaceSlot_GetCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelInventorySpaceSlot *arg1 = (iCelInventorySpaceSlot *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelInventorySpaceSlot_GetCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelInventorySpaceSlot,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelInventorySpaceSlot_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelInventorySpaceSlot *arg1 = (iCelInventorySpaceSlot *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelInventorySpaceSlot_RemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelInventorySpaceSlot,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelInventorySpaceSlot_IsEmpty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelInventorySpaceSlot *arg1 = (iCelInventorySpaceSlot *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelInventorySpaceSlot_IsEmpty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelInventorySpaceSlot,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsEmpty();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelInventorySpaceSlot(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelInventorySpaceSlot *arg1 = (iCelInventorySpaceSlot *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelInventorySpaceSlot",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelInventorySpaceSlot,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelInventorySpaceSlot_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelInventorySpaceSlot, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelInventorySpace_GetSpaceTotal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelInventorySpace *arg1 = (iCelInventorySpace *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelInventorySpace_GetSpaceTotal",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelInventorySpace,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iCelInventorySpace const *)arg1)->GetSpaceTotal();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelInventorySpace_GetSpaceLeft(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelInventorySpace *arg1 = (iCelInventorySpace *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelInventorySpace_GetSpaceLeft",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelInventorySpace,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iCelInventorySpace const *)arg1)->GetSpaceLeft();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelInventorySpace_GetSpaceTaken(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelInventorySpace *arg1 = (iCelInventorySpace *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelInventorySpace_GetSpaceTaken",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelInventorySpace,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iCelInventorySpace const *)arg1)->GetSpaceTaken();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelInventorySpace_AddEntity__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelInventorySpace *arg1 = (iCelInventorySpace *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelInventorySpace_AddEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelInventorySpace,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->AddEntity(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelInventorySpace_RemoveEntity__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelInventorySpace *arg1 = (iCelInventorySpace *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelInventorySpace_RemoveEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelInventorySpace,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveEntity(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelInventorySpace_AddEntity__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelInventorySpace *arg1 = (iCelInventorySpace *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iCelParameterBlock *arg3 = (iCelParameterBlock *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelInventorySpace_AddEntity",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelInventorySpace,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->AddEntity(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelInventorySpace_AddEntity(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelInventorySpace, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iCelEntity, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iCelInventorySpace_AddEntity__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelInventorySpace, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iCelEntity, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iCelParameterBlock, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iCelInventorySpace_AddEntity__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iCelInventorySpace_AddEntity'");
    return NULL;
}


static PyObject *_wrap_iCelInventorySpace_RemoveEntity__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelInventorySpace *arg1 = (iCelInventorySpace *) 0 ;
    iCelParameterBlock *arg2 = (iCelParameterBlock *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelInventorySpace_RemoveEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelInventorySpace,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveEntity(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelInventorySpace_RemoveEntity(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelInventorySpace, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iCelEntity, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iCelInventorySpace_RemoveEntity__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelInventorySpace, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iCelParameterBlock, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iCelInventorySpace_RemoveEntity__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iCelInventorySpace_RemoveEntity'");
    return NULL;
}


static PyObject *_wrap_iCelInventorySpace_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelInventorySpace *arg1 = (iCelInventorySpace *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelInventorySpace_RemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelInventorySpace,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelInventorySpace_GetSlot(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelInventorySpace *arg1 = (iCelInventorySpace *) 0 ;
    iCelParameterBlock *arg2 = (iCelParameterBlock *) 0 ;
    iCelInventorySpaceSlot *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelInventorySpace_GetSlot",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelInventorySpace,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelInventorySpaceSlot *)(arg1)->GetSlot(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelInventorySpaceSlot, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelInventorySpace_GetEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelInventorySpace *arg1 = (iCelInventorySpace *) 0 ;
    iCelParameterBlock *arg2 = (iCelParameterBlock *) 0 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelInventorySpace_GetEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelInventorySpace,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)(arg1)->GetEntity(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelInventorySpace(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelInventorySpace *arg1 = (iCelInventorySpace *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelInventorySpace",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelInventorySpace,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelInventorySpace_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelInventorySpace, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iPcInventory_AddInventoryListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    iPcInventoryListener *arg2 = (iPcInventoryListener *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcInventory_AddInventoryListener",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcInventoryListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddInventoryListener(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_RemoveInventoryListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    iPcInventoryListener *arg2 = (iPcInventoryListener *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcInventory_RemoveInventoryListener",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcInventoryListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveInventoryListener(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_AddEntity__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcInventory_AddEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->AddEntity(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_AddEntity__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iCelParameterBlock *arg3 = (iCelParameterBlock *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcInventory_AddEntity",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->AddEntity(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_AddEntity(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcInventory, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iCelEntity, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iPcInventory_AddEntity__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcInventory, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iCelEntity, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iCelParameterBlock, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iPcInventory_AddEntity__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcInventory_AddEntity'");
    return NULL;
}


static PyObject *_wrap_iPcInventory_RemoveEntity__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcInventory_RemoveEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveEntity(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_RemoveEntity__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    iCelParameterBlock *arg2 = (iCelParameterBlock *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcInventory_RemoveEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveEntity(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_RemoveEntity(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcInventory, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iCelEntity, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iPcInventory_RemoveEntity__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcInventory, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iCelParameterBlock, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iPcInventory_RemoveEntity__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcInventory_RemoveEntity'");
    return NULL;
}


static PyObject *_wrap_iPcInventory_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcInventory_RemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveAll();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_GetEntityCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcInventory_GetEntityCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iPcInventory const *)arg1)->GetEntityCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_GetEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    size_t arg2 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcInventory_GetEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iCelEntity *)((iPcInventory const *)arg1)->GetEntity(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_In(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcInventory_In",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcInventory const *)arg1)->In(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_GetEntitySlot(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    iCelParameterBlock *arg2 = (iCelParameterBlock *) 0 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcInventory_GetEntitySlot",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)((iPcInventory const *)arg1)->GetEntitySlot(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_SetStrictCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    bool arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iPcInventory_SetStrictCharacteristics",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->SetStrictCharacteristics((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_HasStrictCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_HasStrictCharacteristics",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcInventory const *)arg1)->HasStrictCharacteristics((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_SetConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    float arg3 ;
    float arg4 ;
    float arg5 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osfff:iPcInventory_SetConstraints",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetConstraints((char const *)arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_GetConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    float *arg3 = 0 ;
    float *arg4 = 0 ;
    float *arg5 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOOO:iPcInventory_GetConstraints",&obj0,&arg2,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((iPcInventory const *)arg1)->GetConstraints((char const *)arg2,*arg3,*arg4,*arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_RemoveConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_RemoveConstraints",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveConstraints((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_RemoveAllConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcInventory_RemoveAllConstraints",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAllConstraints();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_GetCurrentCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_GetCurrentCharacteristic",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcInventory const *)arg1)->GetCurrentCharacteristic((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_MarkDirty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_MarkDirty",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MarkDirty((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_TestConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_TestConstraints",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->TestConstraints((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_Dump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcInventory_Dump",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Dump();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_SetSpace(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    iCelInventorySpace *arg2 = (iCelInventorySpace *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcInventory_SetSpace",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelInventorySpace,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSpace(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_GetSpace(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    iCelInventorySpace *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcInventory_GetSpace",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelInventorySpace *)(arg1)->GetSpace();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelInventorySpace, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcInventory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcInventory_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcInventory, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcInventory *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateInventory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcInventory *)celCreateInventory(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcInventory, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcInventory *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetInventory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcInventory *)celGetInventory(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcInventory, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcInventory *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcInventory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcInventory *)scfQuery_iPcInventory(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcInventory, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_SetCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    float arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osf:iPcCharacteristics_SetCharacteristic",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetCharacteristic((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_SetInheritedCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    float arg3 ;
    float arg4 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osff:iPcCharacteristics_SetInheritedCharacteristic",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetInheritedCharacteristic((char const *)arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_GetCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_GetCharacteristic",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcCharacteristics const *)arg1)->GetCharacteristic((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_GetLocalCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_GetLocalCharacteristic",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcCharacteristics const *)arg1)->GetLocalCharacteristic((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_GetInheritedCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_GetInheritedCharacteristic",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcCharacteristics const *)arg1)->GetInheritedCharacteristic((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_ClearCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_ClearCharacteristic",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->ClearCharacteristic((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_HasCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_HasCharacteristic",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcCharacteristics const *)arg1)->HasCharacteristic((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_ClearAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCharacteristics_ClearAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->ClearAll();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_AddToInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    iPcInventory *arg2 = (iPcInventory *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcCharacteristics_AddToInventory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddToInventory(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_RemoveFromInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    iPcInventory *arg2 = (iPcInventory *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcCharacteristics_RemoveFromInventory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveFromInventory(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_MarkDirty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_MarkDirty",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MarkDirty((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_TestConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_TestConstraints",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->TestConstraints((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_Dump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCharacteristics_Dump",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Dump();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcCharacteristics",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcCharacteristics_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcCharacteristics, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcCharacteristics *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateCharacteristics",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCharacteristics *)celCreateCharacteristics(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCharacteristics, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcCharacteristics *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetCharacteristics",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCharacteristics *)celGetCharacteristics(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCharacteristics, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcCharacteristics *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcCharacteristics",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCharacteristics *)scfQuery_iPcCharacteristics(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCharacteristics, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcTooltip_SetText(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTooltip *arg1 = (iPcTooltip *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcTooltip_SetText",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTooltip,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetText((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcTooltip_Show(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTooltip *arg1 = (iPcTooltip *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iPcTooltip_Show",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTooltip,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Show(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcTooltip_Hide(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTooltip *arg1 = (iPcTooltip *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcTooltip_Hide",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTooltip,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Hide();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcTooltip_IsVisible(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTooltip *arg1 = (iPcTooltip *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcTooltip_IsVisible",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTooltip,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcTooltip const *)arg1)->IsVisible();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcTooltip_SetTextColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTooltip *arg1 = (iPcTooltip *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:iPcTooltip_SetTextColor",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTooltip,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetTextColor(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcTooltip_SetBackgroundColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTooltip *arg1 = (iPcTooltip *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:iPcTooltip_SetBackgroundColor",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTooltip,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetBackgroundColor(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcTooltip_SetFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTooltip *arg1 = (iPcTooltip *) 0 ;
    iFont *arg2 = (iFont *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcTooltip_SetFont",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTooltip,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFont(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcTooltip_SetJustify(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTooltip *arg1 = (iPcTooltip *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPcTooltip_SetJustify",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTooltip,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetJustify((celTooltipJustify )arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcTooltip(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTooltip *arg1 = (iPcTooltip *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcTooltip",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTooltip,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcTooltip_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcTooltip, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateToolTip(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcTooltip *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateToolTip",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcTooltip *)celCreateToolTip(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcTooltip, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetToolTip(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcTooltip *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetToolTip",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcTooltip *)celGetToolTip(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcTooltip, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcTooltip(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcTooltip *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcTooltip",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcTooltip *)scfQuery_iPcTooltip(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcTooltip, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcSoundListener_GetSoundListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSoundListener *arg1 = (iPcSoundListener *) 0 ;
    iSndSysListener *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcSoundListener_GetSoundListener",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSoundListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSndSysListener *)(arg1)->GetSoundListener();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSndSysListener, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcSoundListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSoundListener *arg1 = (iPcSoundListener *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcSoundListener",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSoundListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcSoundListener_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcSoundListener, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iPcSoundSource_GetSoundSource(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSoundSource *arg1 = (iPcSoundSource *) 0 ;
    iSndSysSource *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcSoundSource_GetSoundSource",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSoundSource,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSndSysSource *)(arg1)->GetSoundSource();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSndSysSource, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcSoundSource_SetSoundName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSoundSource *arg1 = (iPcSoundSource *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcSoundSource_SetSoundName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSoundSource,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSoundName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcSoundSource_GetSoundName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSoundSource *arg1 = (iPcSoundSource *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcSoundSource_GetSoundName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSoundSource,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iPcSoundSource const *)arg1)->GetSoundName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcSoundSource(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSoundSource *arg1 = (iPcSoundSource *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcSoundSource",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSoundSource,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcSoundSource_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcSoundSource, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateSoundSource(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcSoundSource *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateSoundSource",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcSoundSource *)celCreateSoundSource(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSoundSource, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetSoundSource(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcSoundSource *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetSoundSource",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcSoundSource *)celGetSoundSource(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSoundSource, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcSoundSource(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcSoundSource *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcSoundSource",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcSoundSource *)scfQuery_iPcSoundSource(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSoundSource, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celCreateSoundListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcSoundListener *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateSoundListener",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcSoundListener *)celCreateSoundListener(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSoundListener, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetSoundListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcSoundListener *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetSoundListener",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcSoundListener *)celGetSoundListener(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSoundListener, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcSoundListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcSoundListener *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcSoundListener",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcSoundListener *)scfQuery_iPcSoundListener(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSoundListener, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcPropertyListener_PropertyChanged(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcPropertyListener *arg1 = (iPcPropertyListener *) 0 ;
    iPcProperties *arg2 = (iPcProperties *) 0 ;
    size_t arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcPropertyListener_PropertyChanged",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcPropertyListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (size_t) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->PropertyChanged(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcPropertyListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcPropertyListener *arg1 = (iPcPropertyListener *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcPropertyListener",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcPropertyListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcPropertyListener_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcPropertyListener, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iPcProperties_AddPropertyListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    iPcPropertyListener *arg2 = (iPcPropertyListener *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcProperties_AddPropertyListener",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcPropertyListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddPropertyListener(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_RemovePropertyListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    iPcPropertyListener *arg2 = (iPcPropertyListener *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcProperties_RemovePropertyListener",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcPropertyListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemovePropertyListener(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetProperty__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    char *arg2 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osf:iPcProperties_SetProperty",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetProperty((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetProperty__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    char *arg2 ;
    long arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osl:iPcProperties_SetProperty",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetProperty((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetProperty__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    char *arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iPcProperties_SetProperty",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetProperty((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetProperty__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    char *arg2 ;
    char *arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcProperties_SetProperty",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetProperty((char const *)arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetProperty__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    char *arg2 ;
    csVector2 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iPcProperties_SetProperty",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetProperty((char const *)arg2,(csVector2 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetProperty__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    char *arg2 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iPcProperties_SetProperty",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetProperty((char const *)arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetProperty__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    char *arg2 ;
    csColor *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iPcProperties_SetProperty",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetProperty((char const *)arg2,(csColor const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetProperty__SWIG_7(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    char *arg2 ;
    iCelPropertyClass *arg3 = (iCelPropertyClass *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iPcProperties_SetProperty",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetProperty((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetProperty__SWIG_8(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    char *arg2 ;
    iCelEntity *arg3 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iPcProperties_SetProperty",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetProperty((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetProperty(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iPcProperties_SetProperty__SWIG_4(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iPcProperties_SetProperty__SWIG_5(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csColor, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iPcProperties_SetProperty__SWIG_6(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iCelPropertyClass, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iPcProperties_SetProperty__SWIG_7(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iCelEntity, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iPcProperties_SetProperty__SWIG_8(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iPcProperties_SetProperty__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iPcProperties_SetProperty__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iPcProperties_SetProperty__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iPcProperties_SetProperty__SWIG_3(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcProperties_SetProperty'");
    return NULL;
}


static PyObject *_wrap_iPcProperties_GetPropertyIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    char *arg2 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcProperties_GetPropertyIndex",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetPropertyIndex((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetPropertyIndex__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf:iPcProperties_SetPropertyIndex",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetPropertyIndex(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetPropertyIndex__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    long arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOl:iPcProperties_SetPropertyIndex",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetPropertyIndex(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetPropertyIndex__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcProperties_SetPropertyIndex",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetPropertyIndex(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetPropertyIndex__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    csVector2 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcProperties_SetPropertyIndex",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetPropertyIndex(arg2,(csVector2 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetPropertyIndex__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcProperties_SetPropertyIndex",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetPropertyIndex(arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetPropertyIndex__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    csColor *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcProperties_SetPropertyIndex",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetPropertyIndex(arg2,(csColor const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetPropertyIndex__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    char *arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iPcProperties_SetPropertyIndex",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetPropertyIndex(arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetPropertyIndex__SWIG_7(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    iCelPropertyClass *arg3 = (iCelPropertyClass *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcProperties_SetPropertyIndex",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPropertyIndex(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetPropertyIndex__SWIG_8(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    iCelEntity *arg3 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcProperties_SetPropertyIndex",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPropertyIndex(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_SetPropertyIndex(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iPcProperties_SetPropertyIndex__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iPcProperties_SetPropertyIndex__SWIG_4(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csColor, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iPcProperties_SetPropertyIndex__SWIG_5(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iCelPropertyClass, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iPcProperties_SetPropertyIndex__SWIG_7(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iCelEntity, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iPcProperties_SetPropertyIndex__SWIG_8(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iPcProperties_SetPropertyIndex__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iPcProperties_SetPropertyIndex__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iPcProperties_SetPropertyIndex__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iPcProperties_SetPropertyIndex__SWIG_6(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcProperties_SetPropertyIndex'");
    return NULL;
}


static PyObject *_wrap_iPcProperties_GetPropertyType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcProperties_GetPropertyType",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (int)((iPcProperties const *)arg1)->GetPropertyType(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_GetPropertyFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcProperties_GetPropertyFloat",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (float)((iPcProperties const *)arg1)->GetPropertyFloat(arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_GetPropertyLong(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    long result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcProperties_GetPropertyLong",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (long)((iPcProperties const *)arg1)->GetPropertyLong(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_GetPropertyBool(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcProperties_GetPropertyBool",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)((iPcProperties const *)arg1)->GetPropertyBool(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_GetPropertyVector__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    csVector2 *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcProperties_GetPropertyVector",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((iPcProperties const *)arg1)->GetPropertyVector(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_GetPropertyVector__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    csVector3 *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcProperties_GetPropertyVector",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((iPcProperties const *)arg1)->GetPropertyVector(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_GetPropertyVector(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iPcProperties_GetPropertyVector__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcProperties, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iPcProperties_GetPropertyVector__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcProperties_GetPropertyVector'");
    return NULL;
}


static PyObject *_wrap_iPcProperties_GetPropertyColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    csColor *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcProperties_GetPropertyColor",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((iPcProperties const *)arg1)->GetPropertyColor(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_GetPropertyString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcProperties_GetPropertyString",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (char *)((iPcProperties const *)arg1)->GetPropertyString(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_GetPropertyPClass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    iCelPropertyClass *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcProperties_GetPropertyPClass",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iCelPropertyClass *)((iPcProperties const *)arg1)->GetPropertyPClass(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClass, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_GetPropertyEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcProperties_GetPropertyEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iCelEntity *)((iPcProperties const *)arg1)->GetPropertyEntity(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_ClearProperty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcProperties_ClearProperty",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->ClearProperty(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcProperties_Clear",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Clear();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_GetPropertyCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcProperties_GetPropertyCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iPcProperties const *)arg1)->GetPropertyCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_GetPropertyName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    size_t arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcProperties_GetPropertyName",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (char *)((iPcProperties const *)arg1)->GetPropertyName(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcProperties_Dump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcProperties_Dump",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Dump();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcProperties(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcProperties *arg1 = (iPcProperties *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcProperties",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcProperties,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcProperties_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcProperties, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateProperties(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcProperties *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateProperties",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcProperties *)celCreateProperties(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcProperties, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetProperties(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcProperties *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetProperties",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcProperties *)celGetProperties(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcProperties, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcProperties(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcProperties *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcProperties",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcProperties *)scfQuery_iPcProperties(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcProperties, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcHover_SetWorldMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcHover *arg1 = (iPcHover *) 0 ;
    SwigValueWrapper< csRef<iPcMesh > > arg2 ;
    csRef<iPcMesh > *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcHover_SetWorldMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcHover,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csRefTiPcMesh_t,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->SetWorldMesh(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcHover_SetWorld(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcHover *arg1 = (iPcHover *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcHover_SetWorld",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcHover,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetWorld((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcHover_SetHeightBeamCutoff(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcHover *arg1 = (iPcHover *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcHover_SetHeightBeamCutoff",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcHover,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetHeightBeamCutoff(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcHover_SetAngularBeamOffset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcHover *arg1 = (iPcHover *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcHover_SetAngularBeamOffset",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcHover,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetAngularBeamOffset(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcHover_SetAngularCutoffHeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcHover *arg1 = (iPcHover *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcHover_SetAngularCutoffHeight",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcHover,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetAngularCutoffHeight(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcHover_SetAngularCorrectionStrength(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcHover *arg1 = (iPcHover *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcHover_SetAngularCorrectionStrength",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcHover,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetAngularCorrectionStrength(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcHover_SetStabiliserFunction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcHover *arg1 = (iPcHover *) 0 ;
    celStabiliserFunction *arg2 = (celStabiliserFunction *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcHover_SetStabiliserFunction",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcHover,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_celStabiliserFunction,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetStabiliserFunction(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcHover_UseDefaultFunction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcHover *arg1 = (iPcHover *) 0 ;
    float arg2 = (float) 1.5f ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|f:iPcHover_UseDefaultFunction",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcHover,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UseDefaultFunction(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcHover_GetHeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcHover *arg1 = (iPcHover *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcHover_GetHeight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcHover,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetHeight();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcHover(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcHover *arg1 = (iPcHover *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcHover",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcHover,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcHover_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcHover, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateHover(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcHover *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateHover",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcHover *)celCreateHover(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcHover, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetHover(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcHover *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetHover",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcHover *)celGetHover(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcHover, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcHover(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcHover *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcHover",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcHover *)scfQuery_iPcHover(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcHover, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_StartTurnLeft(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCraftController_StartTurnLeft",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StartTurnLeft();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_StopTurnLeft(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCraftController_StopTurnLeft",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StopTurnLeft();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_StartTurnRight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCraftController_StartTurnRight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StartTurnRight();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_StopTurnRight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCraftController_StopTurnRight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StopTurnRight();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_StartTurnUp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCraftController_StartTurnUp",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StartTurnUp();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_StopTurnUp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCraftController_StopTurnUp",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StopTurnUp();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_StartTurnDown(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCraftController_StartTurnDown",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StartTurnDown();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_StopTurnDown(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCraftController_StopTurnDown",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StopTurnDown();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_SetAccTurn(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcCraftController_SetAccTurn",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetAccTurn(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_SetAccPitch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcCraftController_SetAccPitch",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetAccPitch(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_SetMaxTurn(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcCraftController_SetMaxTurn",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMaxTurn(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_SetMaxPitch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcCraftController_SetMaxPitch",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMaxPitch(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_SetThrustForce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcCraftController_SetThrustForce",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetThrustForce(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_SetTopSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcCraftController_SetTopSpeed",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetTopSpeed(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_SetRedirectVelocityRatio(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcCraftController_SetRedirectVelocityRatio",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetRedirectVelocityRatio(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_ThrustOn(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCraftController_ThrustOn",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ThrustOn();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_ThrustOff(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCraftController_ThrustOff",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ThrustOff();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_SetAfterBurnerTopSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcCraftController_SetAfterBurnerTopSpeed",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetAfterBurnerTopSpeed(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_AfterBurnerOn(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCraftController_AfterBurnerOn",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AfterBurnerOn();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCraftController_AfterBurnerOff(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCraftController_AfterBurnerOff",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AfterBurnerOff();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcCraftController(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCraftController *arg1 = (iPcCraftController *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcCraftController",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCraftController,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcCraftController_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcCraftController, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateCraftController(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcCraftController *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateCraftController",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCraftController *)celCreateCraftController(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCraftController, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetCraftController(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcCraftController *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetCraftController",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCraftController *)celGetCraftController(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCraftController, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcCraftController(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcCraftController *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcCraftController",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCraftController *)scfQuery_iPcCraftController(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCraftController, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"celInitializer_SetupCelPluginDirs", _wrap_celInitializer_SetupCelPluginDirs, METH_VARARGS },
	 { (char *)"celInitializer__RequestPlugins", _wrap_celInitializer__RequestPlugins, METH_VARARGS },
	 { (char *)"new_celInitializer", _wrap_new_celInitializer, METH_VARARGS },
	 { (char *)"delete_celInitializer", _wrap_delete_celInitializer, METH_VARARGS },
	 { (char *)"celInitializer_swigregister", celInitializer_swigregister, METH_VARARGS },
	 { (char *)"iCelNewEntityCallback_NewEntity", _wrap_iCelNewEntityCallback_NewEntity, METH_VARARGS },
	 { (char *)"delete_iCelNewEntityCallback", _wrap_delete_iCelNewEntityCallback, METH_VARARGS },
	 { (char *)"iCelNewEntityCallback_swigregister", iCelNewEntityCallback_swigregister, METH_VARARGS },
	 { (char *)"iCelEntityRemoveCallback_RemoveEntity", _wrap_iCelEntityRemoveCallback_RemoveEntity, METH_VARARGS },
	 { (char *)"delete_iCelEntityRemoveCallback", _wrap_delete_iCelEntityRemoveCallback, METH_VARARGS },
	 { (char *)"iCelEntityRemoveCallback_swigregister", iCelEntityRemoveCallback_swigregister, METH_VARARGS },
	 { (char *)"iCelTimerListener_TickEveryFrame", _wrap_iCelTimerListener_TickEveryFrame, METH_VARARGS },
	 { (char *)"iCelTimerListener_TickOnce", _wrap_iCelTimerListener_TickOnce, METH_VARARGS },
	 { (char *)"delete_iCelTimerListener", _wrap_delete_iCelTimerListener, METH_VARARGS },
	 { (char *)"iCelTimerListener_swigregister", iCelTimerListener_swigregister, METH_VARARGS },
	 { (char *)"iCelPlLayer_CreateEntityInScope", _wrap_iCelPlLayer_CreateEntityInScope, METH_VARARGS },
	 { (char *)"iCelPlLayer_RemoveEntity", _wrap_iCelPlLayer_RemoveEntity, METH_VARARGS },
	 { (char *)"iCelPlLayer_RemoveEntities", _wrap_iCelPlLayer_RemoveEntities, METH_VARARGS },
	 { (char *)"iCelPlLayer_CreateEntityTemplate", _wrap_iCelPlLayer_CreateEntityTemplate, METH_VARARGS },
	 { (char *)"iCelPlLayer_RemoveEntityTemplate", _wrap_iCelPlLayer_RemoveEntityTemplate, METH_VARARGS },
	 { (char *)"iCelPlLayer_RemoveEntityTemplates", _wrap_iCelPlLayer_RemoveEntityTemplates, METH_VARARGS },
	 { (char *)"iCelPlLayer_FindEntityTemplate", _wrap_iCelPlLayer_FindEntityTemplate, METH_VARARGS },
	 { (char *)"iCelPlLayer_GetEntityTemplateCount", _wrap_iCelPlLayer_GetEntityTemplateCount, METH_VARARGS },
	 { (char *)"iCelPlLayer_GetEntityTemplate", _wrap_iCelPlLayer_GetEntityTemplate, METH_VARARGS },
	 { (char *)"iCelPlLayer_CreateEntity", _wrap_iCelPlLayer_CreateEntity, METH_VARARGS },
	 { (char *)"iCelPlLayer_CreateDataBuffer", _wrap_iCelPlLayer_CreateDataBuffer, METH_VARARGS },
	 { (char *)"iCelPlLayer_AttachEntity", _wrap_iCelPlLayer_AttachEntity, METH_VARARGS },
	 { (char *)"iCelPlLayer_UnattachEntity", _wrap_iCelPlLayer_UnattachEntity, METH_VARARGS },
	 { (char *)"iCelPlLayer_GetEntity", _wrap_iCelPlLayer_GetEntity, METH_VARARGS },
	 { (char *)"iCelPlLayer_GetEntityCount", _wrap_iCelPlLayer_GetEntityCount, METH_VARARGS },
	 { (char *)"iCelPlLayer_GetEntityByIndex", _wrap_iCelPlLayer_GetEntityByIndex, METH_VARARGS },
	 { (char *)"iCelPlLayer_FindEntity", _wrap_iCelPlLayer_FindEntity, METH_VARARGS },
	 { (char *)"iCelPlLayer_GetBehaviour", _wrap_iCelPlLayer_GetBehaviour, METH_VARARGS },
	 { (char *)"iCelPlLayer_FindAttachedEntity", _wrap_iCelPlLayer_FindAttachedEntity, METH_VARARGS },
	 { (char *)"iCelPlLayer_FindNearbyEntities", _wrap_iCelPlLayer_FindNearbyEntities, METH_VARARGS },
	 { (char *)"iCelPlLayer_GetHitEntity", _wrap_iCelPlLayer_GetHitEntity, METH_VARARGS },
	 { (char *)"iCelPlLayer_CreateEmptyEntityList", _wrap_iCelPlLayer_CreateEmptyEntityList, METH_VARARGS },
	 { (char *)"iCelPlLayer_CreateEntityTracker", _wrap_iCelPlLayer_CreateEntityTracker, METH_VARARGS },
	 { (char *)"iCelPlLayer_FindEntityTracker", _wrap_iCelPlLayer_FindEntityTracker, METH_VARARGS },
	 { (char *)"iCelPlLayer_RemoveEntityTracker", _wrap_iCelPlLayer_RemoveEntityTracker, METH_VARARGS },
	 { (char *)"iCelPlLayer_SetEntityAddonAllowed", _wrap_iCelPlLayer_SetEntityAddonAllowed, METH_VARARGS },
	 { (char *)"iCelPlLayer_IsEntityAddonAllowed", _wrap_iCelPlLayer_IsEntityAddonAllowed, METH_VARARGS },
	 { (char *)"iCelPlLayer_LoadPropertyClassFactory", _wrap_iCelPlLayer_LoadPropertyClassFactory, METH_VARARGS },
	 { (char *)"iCelPlLayer_RegisterPropertyClassFactory", _wrap_iCelPlLayer_RegisterPropertyClassFactory, METH_VARARGS },
	 { (char *)"iCelPlLayer_UnregisterPropertyClassFactory", _wrap_iCelPlLayer_UnregisterPropertyClassFactory, METH_VARARGS },
	 { (char *)"iCelPlLayer_GetPropertyClassFactoryCount", _wrap_iCelPlLayer_GetPropertyClassFactoryCount, METH_VARARGS },
	 { (char *)"iCelPlLayer_GetPropertyClassFactory", _wrap_iCelPlLayer_GetPropertyClassFactory, METH_VARARGS },
	 { (char *)"iCelPlLayer_FindPropertyClassFactory", _wrap_iCelPlLayer_FindPropertyClassFactory, METH_VARARGS },
	 { (char *)"iCelPlLayer_CreatePropertyClass", _wrap_iCelPlLayer_CreatePropertyClass, METH_VARARGS },
	 { (char *)"iCelPlLayer_CreateTaggedPropertyClass", _wrap_iCelPlLayer_CreateTaggedPropertyClass, METH_VARARGS },
	 { (char *)"iCelPlLayer_RegisterBehaviourLayer", _wrap_iCelPlLayer_RegisterBehaviourLayer, METH_VARARGS },
	 { (char *)"iCelPlLayer_UnregisterBehaviourLayer", _wrap_iCelPlLayer_UnregisterBehaviourLayer, METH_VARARGS },
	 { (char *)"iCelPlLayer_GetBehaviourLayerCount", _wrap_iCelPlLayer_GetBehaviourLayerCount, METH_VARARGS },
	 { (char *)"iCelPlLayer_GetBehaviourLayer", _wrap_iCelPlLayer_GetBehaviourLayer, METH_VARARGS },
	 { (char *)"iCelPlLayer_FindBehaviourLayer", _wrap_iCelPlLayer_FindBehaviourLayer, METH_VARARGS },
	 { (char *)"iCelPlLayer_Cache", _wrap_iCelPlLayer_Cache, METH_VARARGS },
	 { (char *)"iCelPlLayer_Uncache", _wrap_iCelPlLayer_Uncache, METH_VARARGS },
	 { (char *)"iCelPlLayer_CleanCache", _wrap_iCelPlLayer_CleanCache, METH_VARARGS },
	 { (char *)"iCelPlLayer_FetchStringID", _wrap_iCelPlLayer_FetchStringID, METH_VARARGS },
	 { (char *)"iCelPlLayer_FetchString", _wrap_iCelPlLayer_FetchString, METH_VARARGS },
	 { (char *)"iCelPlLayer_AddEntityRemoveCallback", _wrap_iCelPlLayer_AddEntityRemoveCallback, METH_VARARGS },
	 { (char *)"iCelPlLayer_RemoveEntityRemoveCallback", _wrap_iCelPlLayer_RemoveEntityRemoveCallback, METH_VARARGS },
	 { (char *)"iCelPlLayer_AddNewEntityCallback", _wrap_iCelPlLayer_AddNewEntityCallback, METH_VARARGS },
	 { (char *)"iCelPlLayer_RemoveNewEntityCallback", _wrap_iCelPlLayer_RemoveNewEntityCallback, METH_VARARGS },
	 { (char *)"iCelPlLayer_CallbackEveryFrame", _wrap_iCelPlLayer_CallbackEveryFrame, METH_VARARGS },
	 { (char *)"iCelPlLayer_CallbackOnce", _wrap_iCelPlLayer_CallbackOnce, METH_VARARGS },
	 { (char *)"iCelPlLayer_RemoveCallbackEveryFrame", _wrap_iCelPlLayer_RemoveCallbackEveryFrame, METH_VARARGS },
	 { (char *)"iCelPlLayer_RemoveCallbackOnce", _wrap_iCelPlLayer_RemoveCallbackOnce, METH_VARARGS },
	 { (char *)"iCelPlLayer_AddScope", _wrap_iCelPlLayer_AddScope, METH_VARARGS },
	 { (char *)"delete_iCelPlLayer", _wrap_delete_iCelPlLayer, METH_VARARGS },
	 { (char *)"iCelPlLayer_swigregister", iCelPlLayer_swigregister, METH_VARARGS },
	 { (char *)"iCelEntityTracker_GetName", _wrap_iCelEntityTracker_GetName, METH_VARARGS },
	 { (char *)"iCelEntityTracker_AddEntity", _wrap_iCelEntityTracker_AddEntity, METH_VARARGS },
	 { (char *)"iCelEntityTracker_RemoveEntity", _wrap_iCelEntityTracker_RemoveEntity, METH_VARARGS },
	 { (char *)"iCelEntityTracker_RemoveEntities", _wrap_iCelEntityTracker_RemoveEntities, METH_VARARGS },
	 { (char *)"iCelEntityTracker_FindNearbyEntities", _wrap_iCelEntityTracker_FindNearbyEntities, METH_VARARGS },
	 { (char *)"delete_iCelEntityTracker", _wrap_delete_iCelEntityTracker, METH_VARARGS },
	 { (char *)"iCelEntityTracker_swigregister", iCelEntityTracker_swigregister, METH_VARARGS },
	 { (char *)"csQueryRegistry_iCelPlLayer", _wrap_csQueryRegistry_iCelPlLayer, METH_VARARGS },
	 { (char *)"iCelEntity_QueryObject", _wrap_iCelEntity_QueryObject, METH_VARARGS },
	 { (char *)"iCelEntity_GetName", _wrap_iCelEntity_GetName, METH_VARARGS },
	 { (char *)"iCelEntity_SetName", _wrap_iCelEntity_SetName, METH_VARARGS },
	 { (char *)"iCelEntity_GetID", _wrap_iCelEntity_GetID, METH_VARARGS },
	 { (char *)"iCelEntity_SetID", _wrap_iCelEntity_SetID, METH_VARARGS },
	 { (char *)"iCelEntity_GetPropertyClassList", _wrap_iCelEntity_GetPropertyClassList, METH_VARARGS },
	 { (char *)"iCelEntity_SetBehaviour", _wrap_iCelEntity_SetBehaviour, METH_VARARGS },
	 { (char *)"iCelEntity_GetBehaviour", _wrap_iCelEntity_GetBehaviour, METH_VARARGS },
	 { (char *)"iCelEntity_CreateBehaviour", _wrap_iCelEntity_CreateBehaviour, METH_VARARGS },
	 { (char *)"delete_iCelEntity", _wrap_delete_iCelEntity, METH_VARARGS },
	 { (char *)"iCelEntity_swigregister", iCelEntity_swigregister, METH_VARARGS },
	 { (char *)"iCelEntityList_GetCount", _wrap_iCelEntityList_GetCount, METH_VARARGS },
	 { (char *)"iCelEntityList_Get", _wrap_iCelEntityList_Get, METH_VARARGS },
	 { (char *)"iCelEntityList_Add", _wrap_iCelEntityList_Add, METH_VARARGS },
	 { (char *)"iCelEntityList_Remove", _wrap_iCelEntityList_Remove, METH_VARARGS },
	 { (char *)"iCelEntityList_RemoveAll", _wrap_iCelEntityList_RemoveAll, METH_VARARGS },
	 { (char *)"iCelEntityList_Find", _wrap_iCelEntityList_Find, METH_VARARGS },
	 { (char *)"iCelEntityList_FindByName", _wrap_iCelEntityList_FindByName, METH_VARARGS },
	 { (char *)"delete_iCelEntityList", _wrap_delete_iCelEntityList, METH_VARARGS },
	 { (char *)"iCelEntityList_swigregister", iCelEntityList_swigregister, METH_VARARGS },
	 { (char *)"celRegisterPCFactory", _wrap_celRegisterPCFactory, METH_VARARGS },
	 { (char *)"celCreateEntity", _wrap_celCreateEntity, METH_VARARGS },
	 { (char *)"scfQueryInterface_iCelEntity", _wrap_scfQueryInterface_iCelEntity, METH_VARARGS },
	 { (char *)"celFindNearbyEntities", _wrap_celFindNearbyEntities, METH_VARARGS },
	 { (char *)"iCelBlLayer_GetName", _wrap_iCelBlLayer_GetName, METH_VARARGS },
	 { (char *)"iCelBlLayer_CreateBehaviour", _wrap_iCelBlLayer_CreateBehaviour, METH_VARARGS },
	 { (char *)"delete_iCelBlLayer", _wrap_delete_iCelBlLayer, METH_VARARGS },
	 { (char *)"iCelBlLayer_swigregister", iCelBlLayer_swigregister, METH_VARARGS },
	 { (char *)"csQueryRegistry_iCelBlLayer", _wrap_csQueryRegistry_iCelBlLayer, METH_VARARGS },
	 { (char *)"iCelParameterBlock_GetParameterCount", _wrap_iCelParameterBlock_GetParameterCount, METH_VARARGS },
	 { (char *)"iCelParameterBlock_GetParameter", _wrap_iCelParameterBlock_GetParameter, METH_VARARGS },
	 { (char *)"iCelParameterBlock_GetParameterValue", _wrap_iCelParameterBlock_GetParameterValue, METH_VARARGS },
	 { (char *)"delete_iCelParameterBlock", _wrap_delete_iCelParameterBlock, METH_VARARGS },
	 { (char *)"iCelParameterBlock_swigregister", iCelParameterBlock_swigregister, METH_VARARGS },
	 { (char *)"iCelBehaviour_GetName", _wrap_iCelBehaviour_GetName, METH_VARARGS },
	 { (char *)"iCelBehaviour_GetBehaviourLayer", _wrap_iCelBehaviour_GetBehaviourLayer, METH_VARARGS },
	 { (char *)"iCelBehaviour_SendMessage", _wrap_iCelBehaviour_SendMessage, METH_VARARGS },
	 { (char *)"iCelBehaviour_GetInternalObject", _wrap_iCelBehaviour_GetInternalObject, METH_VARARGS },
	 { (char *)"iCelBehaviour_GetPythonObject", _wrap_iCelBehaviour_GetPythonObject, METH_VARARGS },
	 { (char *)"delete_iCelBehaviour", _wrap_delete_iCelBehaviour, METH_VARARGS },
	 { (char *)"iCelBehaviour_swigregister", iCelBehaviour_swigregister, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetName", _wrap_iCelPropertyClass_GetName, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetTag", _wrap_iCelPropertyClass_SetTag, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetTag", _wrap_iCelPropertyClass_GetTag, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetEntity", _wrap_iCelPropertyClass_GetEntity, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetEntity", _wrap_iCelPropertyClass_SetEntity, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SaveFirstPass", _wrap_iCelPropertyClass_SaveFirstPass, METH_VARARGS },
	 { (char *)"iCelPropertyClass_LoadFirstPass", _wrap_iCelPropertyClass_LoadFirstPass, METH_VARARGS },
	 { (char *)"iCelPropertyClass_Save", _wrap_iCelPropertyClass_Save, METH_VARARGS },
	 { (char *)"iCelPropertyClass_Load", _wrap_iCelPropertyClass_Load, METH_VARARGS },
	 { (char *)"iCelPropertyClass_AddPropertyChangeCallback", _wrap_iCelPropertyClass_AddPropertyChangeCallback, METH_VARARGS },
	 { (char *)"iCelPropertyClass_RemovePropertyChangeCallback", _wrap_iCelPropertyClass_RemovePropertyChangeCallback, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyOrActionType", _wrap_iCelPropertyClass_GetPropertyOrActionType, METH_VARARGS },
	 { (char *)"iCelPropertyClass_IsPropertyReadOnly", _wrap_iCelPropertyClass_IsPropertyReadOnly, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyLong", _wrap_iCelPropertyClass_GetPropertyLong, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyFloat", _wrap_iCelPropertyClass_GetPropertyFloat, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyBool", _wrap_iCelPropertyClass_GetPropertyBool, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyString", _wrap_iCelPropertyClass_GetPropertyString, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyVector", _wrap_iCelPropertyClass_GetPropertyVector, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyColor", _wrap_iCelPropertyClass_GetPropertyColor, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyPClass", _wrap_iCelPropertyClass_GetPropertyPClass, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyEntity", _wrap_iCelPropertyClass_GetPropertyEntity, METH_VARARGS },
	 { (char *)"iCelPropertyClass_PerformAction", _wrap_iCelPropertyClass_PerformAction, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyAndActionCount", _wrap_iCelPropertyClass_GetPropertyAndActionCount, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyOrActionID", _wrap_iCelPropertyClass_GetPropertyOrActionID, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyOrActionDescription", _wrap_iCelPropertyClass_GetPropertyOrActionDescription, METH_VARARGS },
	 { (char *)"iCelPropertyClass_PropertyClassesHaveChanged", _wrap_iCelPropertyClass_PropertyClassesHaveChanged, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPersistentData", _wrap_iCelPropertyClass_GetPersistentData, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPersistentData", _wrap_iCelPropertyClass_SetPersistentData, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyLong", _wrap_iCelPropertyClass_SetPropertyLong, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyFloat", _wrap_iCelPropertyClass_SetPropertyFloat, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyBool", _wrap_iCelPropertyClass_SetPropertyBool, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyString", _wrap_iCelPropertyClass_SetPropertyString, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyVector3", _wrap_iCelPropertyClass_SetPropertyVector3, METH_VARARGS },
	 { (char *)"delete_iCelPropertyClass", _wrap_delete_iCelPropertyClass, METH_VARARGS },
	 { (char *)"iCelPropertyClass_swigregister", iCelPropertyClass_swigregister, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_GetCount", _wrap_iCelPropertyClassList_GetCount, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_Get", _wrap_iCelPropertyClassList_Get, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_Add", _wrap_iCelPropertyClassList_Add, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_Remove", _wrap_iCelPropertyClassList_Remove, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_RemoveByInterface", _wrap_iCelPropertyClassList_RemoveByInterface, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_RemoveByInterfaceAndTag", _wrap_iCelPropertyClassList_RemoveByInterfaceAndTag, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_RemoveAll", _wrap_iCelPropertyClassList_RemoveAll, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_Find", _wrap_iCelPropertyClassList_Find, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_FindByName", _wrap_iCelPropertyClassList_FindByName, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_FindByNameAndTag", _wrap_iCelPropertyClassList_FindByNameAndTag, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_FindByInterface", _wrap_iCelPropertyClassList_FindByInterface, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_FindByInterfaceAndTag", _wrap_iCelPropertyClassList_FindByInterfaceAndTag, METH_VARARGS },
	 { (char *)"delete_iCelPropertyClassList", _wrap_delete_iCelPropertyClassList, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_swigregister", iCelPropertyClassList_swigregister, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_SetDynamicSystem", _wrap_iPcMechanicsSystem_SetDynamicSystem, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_GetDynamicSystem", _wrap_iPcMechanicsSystem_GetDynamicSystem, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_SetStepTime", _wrap_iPcMechanicsSystem_SetStepTime, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_GetStepTime", _wrap_iPcMechanicsSystem_GetStepTime, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_SetGravity", _wrap_iPcMechanicsSystem_SetGravity, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_GetGravity", _wrap_iPcMechanicsSystem_GetGravity, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_AddForceDuration", _wrap_iPcMechanicsSystem_AddForceDuration, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_AddForceFrame", _wrap_iPcMechanicsSystem_AddForceFrame, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_AddForceTagged", _wrap_iPcMechanicsSystem_AddForceTagged, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_RemoveForceTagged", _wrap_iPcMechanicsSystem_RemoveForceTagged, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_ClearForces", _wrap_iPcMechanicsSystem_ClearForces, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_ClearAllForces", _wrap_iPcMechanicsSystem_ClearAllForces, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_CreateBody", _wrap_iPcMechanicsSystem_CreateBody, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_RemoveBody", _wrap_iPcMechanicsSystem_RemoveBody, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_AddBodyToGroup", _wrap_iPcMechanicsSystem_AddBodyToGroup, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_RemoveBodyFromGroup", _wrap_iPcMechanicsSystem_RemoveBodyFromGroup, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_CreateJoint", _wrap_iPcMechanicsSystem_CreateJoint, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_RemoveJoint", _wrap_iPcMechanicsSystem_RemoveJoint, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_DisableStepFast", _wrap_iPcMechanicsSystem_DisableStepFast, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_EnableStepFast", _wrap_iPcMechanicsSystem_EnableStepFast, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_EnableQuickStep", _wrap_iPcMechanicsSystem_EnableQuickStep, METH_VARARGS },
	 { (char *)"delete_iPcMechanicsSystem", _wrap_delete_iPcMechanicsSystem, METH_VARARGS },
	 { (char *)"iPcMechanicsSystem_swigregister", iPcMechanicsSystem_swigregister, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_SetMesh", _wrap_iPcMechanicsObject_SetMesh, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_GetMesh", _wrap_iPcMechanicsObject_GetMesh, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_SetLight", _wrap_iPcMechanicsObject_SetLight, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_GetLight", _wrap_iPcMechanicsObject_GetLight, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_SetCamera", _wrap_iPcMechanicsObject_SetCamera, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_GetCamera", _wrap_iPcMechanicsObject_GetCamera, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_SetMechanicsSystem", _wrap_iPcMechanicsObject_SetMechanicsSystem, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_GetMechanicsSystem", _wrap_iPcMechanicsObject_GetMechanicsSystem, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_GetBody", _wrap_iPcMechanicsObject_GetBody, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_SetFriction", _wrap_iPcMechanicsObject_SetFriction, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_SetMass", _wrap_iPcMechanicsObject_SetMass, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_SetElasticity", _wrap_iPcMechanicsObject_SetElasticity, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_SetDensity", _wrap_iPcMechanicsObject_SetDensity, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_SetSoftness", _wrap_iPcMechanicsObject_SetSoftness, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_SetLift", _wrap_iPcMechanicsObject_SetLift, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_SetDrag", _wrap_iPcMechanicsObject_SetDrag, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_GetFriction", _wrap_iPcMechanicsObject_GetFriction, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_GetMass", _wrap_iPcMechanicsObject_GetMass, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_GetElasticity", _wrap_iPcMechanicsObject_GetElasticity, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_GetDensity", _wrap_iPcMechanicsObject_GetDensity, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_GetSoftness", _wrap_iPcMechanicsObject_GetSoftness, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_GetLift", _wrap_iPcMechanicsObject_GetLift, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_GetDrag", _wrap_iPcMechanicsObject_GetDrag, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_SetLinearVelocity", _wrap_iPcMechanicsObject_SetLinearVelocity, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_SetAngularVelocity", _wrap_iPcMechanicsObject_SetAngularVelocity, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_GetLinearVelocity", _wrap_iPcMechanicsObject_GetLinearVelocity, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_GetAngularVelocity", _wrap_iPcMechanicsObject_GetAngularVelocity, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_MakeStatic", _wrap_iPcMechanicsObject_MakeStatic, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_IsStatic", _wrap_iPcMechanicsObject_IsStatic, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_AttachColliderSphere", _wrap_iPcMechanicsObject_AttachColliderSphere, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_AttachColliderCylinder", _wrap_iPcMechanicsObject_AttachColliderCylinder, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_AttachColliderBox", _wrap_iPcMechanicsObject_AttachColliderBox, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_AttachColliderPlane", _wrap_iPcMechanicsObject_AttachColliderPlane, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_AttachColliderMesh", _wrap_iPcMechanicsObject_AttachColliderMesh, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_AddForceOnce", _wrap_iPcMechanicsObject_AddForceOnce, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_AddForceDuration", _wrap_iPcMechanicsObject_AddForceDuration, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_AddForceFrame", _wrap_iPcMechanicsObject_AddForceFrame, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_AddForceTagged", _wrap_iPcMechanicsObject_AddForceTagged, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_RemoveForceTagged", _wrap_iPcMechanicsObject_RemoveForceTagged, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_ClearForces", _wrap_iPcMechanicsObject_ClearForces, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_AddToGroup", _wrap_iPcMechanicsObject_AddToGroup, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_RemoveFromGroup", _wrap_iPcMechanicsObject_RemoveFromGroup, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_CreateJoint", _wrap_iPcMechanicsObject_CreateJoint, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_LocalToWorld", _wrap_iPcMechanicsObject_LocalToWorld, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_WorldToLocal", _wrap_iPcMechanicsObject_WorldToLocal, METH_VARARGS },
	 { (char *)"delete_iPcMechanicsObject", _wrap_delete_iPcMechanicsObject, METH_VARARGS },
	 { (char *)"iPcMechanicsObject_swigregister", iPcMechanicsObject_swigregister, METH_VARARGS },
	 { (char *)"iPcMechanicsJoint_GetJoint", _wrap_iPcMechanicsJoint_GetJoint, METH_VARARGS },
	 { (char *)"delete_iPcMechanicsJoint", _wrap_delete_iPcMechanicsJoint, METH_VARARGS },
	 { (char *)"iPcMechanicsJoint_swigregister", iPcMechanicsJoint_swigregister, METH_VARARGS },
	 { (char *)"celCreateMechanicsSystem", _wrap_celCreateMechanicsSystem, METH_VARARGS },
	 { (char *)"celGetMechanicsSystem", _wrap_celGetMechanicsSystem, METH_VARARGS },
	 { (char *)"scfQuery_iPcMechanicsSystem", _wrap_scfQuery_iPcMechanicsSystem, METH_VARARGS },
	 { (char *)"scfQueryPC_iPcMechanicsSystem", _wrap_scfQueryPC_iPcMechanicsSystem, METH_VARARGS },
	 { (char *)"celCreateMechanicsObject", _wrap_celCreateMechanicsObject, METH_VARARGS },
	 { (char *)"celGetMechanicsObject", _wrap_celGetMechanicsObject, METH_VARARGS },
	 { (char *)"scfQuery_iPcMechanicsObject", _wrap_scfQuery_iPcMechanicsObject, METH_VARARGS },
	 { (char *)"scfQueryPC_iPcMechanicsObject", _wrap_scfQueryPC_iPcMechanicsObject, METH_VARARGS },
	 { (char *)"celCreateMechanicsJoint", _wrap_celCreateMechanicsJoint, METH_VARARGS },
	 { (char *)"celGetMechanicsJoint", _wrap_celGetMechanicsJoint, METH_VARARGS },
	 { (char *)"scfQuery_iPcMechanicsJoint", _wrap_scfQuery_iPcMechanicsJoint, METH_VARARGS },
	 { (char *)"scfQueryPC_iPcMechanicsJoint", _wrap_scfQueryPC_iPcMechanicsJoint, METH_VARARGS },
	 { (char *)"iPcMechanicsThruster_SetMechanicsObject", _wrap_iPcMechanicsThruster_SetMechanicsObject, METH_VARARGS },
	 { (char *)"iPcMechanicsThruster_GetMechanicsObject", _wrap_iPcMechanicsThruster_GetMechanicsObject, METH_VARARGS },
	 { (char *)"iPcMechanicsThruster_SetPosition", _wrap_iPcMechanicsThruster_SetPosition, METH_VARARGS },
	 { (char *)"iPcMechanicsThruster_GetPosition", _wrap_iPcMechanicsThruster_GetPosition, METH_VARARGS },
	 { (char *)"iPcMechanicsThruster_SetOrientation", _wrap_iPcMechanicsThruster_SetOrientation, METH_VARARGS },
	 { (char *)"iPcMechanicsThruster_GetOrientation", _wrap_iPcMechanicsThruster_GetOrientation, METH_VARARGS },
	 { (char *)"iPcMechanicsThruster_SetMaxThrust", _wrap_iPcMechanicsThruster_SetMaxThrust, METH_VARARGS },
	 { (char *)"iPcMechanicsThruster_GetMaxThrust", _wrap_iPcMechanicsThruster_GetMaxThrust, METH_VARARGS },
	 { (char *)"iPcMechanicsThruster_GetThrustForce", _wrap_iPcMechanicsThruster_GetThrustForce, METH_VARARGS },
	 { (char *)"iPcMechanicsThruster_AvailableThrust", _wrap_iPcMechanicsThruster_AvailableThrust, METH_VARARGS },
	 { (char *)"iPcMechanicsThruster_ThrustChange", _wrap_iPcMechanicsThruster_ThrustChange, METH_VARARGS },
	 { (char *)"delete_iPcMechanicsThruster", _wrap_delete_iPcMechanicsThruster, METH_VARARGS },
	 { (char *)"iPcMechanicsThruster_swigregister", iPcMechanicsThruster_swigregister, METH_VARARGS },
	 { (char *)"iPcMechanicsBalancedGroup_SetType", _wrap_iPcMechanicsBalancedGroup_SetType, METH_VARARGS },
	 { (char *)"iPcMechanicsBalancedGroup_GetType", _wrap_iPcMechanicsBalancedGroup_GetType, METH_VARARGS },
	 { (char *)"iPcMechanicsBalancedGroup_AddThruster", _wrap_iPcMechanicsBalancedGroup_AddThruster, METH_VARARGS },
	 { (char *)"iPcMechanicsBalancedGroup_RemoveThruster", _wrap_iPcMechanicsBalancedGroup_RemoveThruster, METH_VARARGS },
	 { (char *)"iPcMechanicsBalancedGroup_GetThruster", _wrap_iPcMechanicsBalancedGroup_GetThruster, METH_VARARGS },
	 { (char *)"iPcMechanicsBalancedGroup_AvailableThrust", _wrap_iPcMechanicsBalancedGroup_AvailableThrust, METH_VARARGS },
	 { (char *)"iPcMechanicsBalancedGroup_AvailableThrustForce", _wrap_iPcMechanicsBalancedGroup_AvailableThrustForce, METH_VARARGS },
	 { (char *)"iPcMechanicsBalancedGroup_ChangeThrust", _wrap_iPcMechanicsBalancedGroup_ChangeThrust, METH_VARARGS },
	 { (char *)"delete_iPcMechanicsBalancedGroup", _wrap_delete_iPcMechanicsBalancedGroup, METH_VARARGS },
	 { (char *)"iPcMechanicsBalancedGroup_swigregister", iPcMechanicsBalancedGroup_swigregister, METH_VARARGS },
	 { (char *)"iPcMechanicsThrusterController_SetMechanicsObject", _wrap_iPcMechanicsThrusterController_SetMechanicsObject, METH_VARARGS },
	 { (char *)"iPcMechanicsThrusterController_GetMechanicsObject", _wrap_iPcMechanicsThrusterController_GetMechanicsObject, METH_VARARGS },
	 { (char *)"iPcMechanicsThrusterController_AddAxis", _wrap_iPcMechanicsThrusterController_AddAxis, METH_VARARGS },
	 { (char *)"iPcMechanicsThrusterController_GetAxis", _wrap_iPcMechanicsThrusterController_GetAxis, METH_VARARGS },
	 { (char *)"iPcMechanicsThrusterController_GetAxisType", _wrap_iPcMechanicsThrusterController_GetAxisType, METH_VARARGS },
	 { (char *)"iPcMechanicsThrusterController_GetAxisVelocity", _wrap_iPcMechanicsThrusterController_GetAxisVelocity, METH_VARARGS },
	 { (char *)"iPcMechanicsThrusterController_GetAxisMaxForce", _wrap_iPcMechanicsThrusterController_GetAxisMaxForce, METH_VARARGS },
	 { (char *)"iPcMechanicsThrusterController_GetAxisMaxThrust", _wrap_iPcMechanicsThrusterController_GetAxisMaxThrust, METH_VARARGS },
	 { (char *)"iPcMechanicsThrusterController_AddBalancedGroup", _wrap_iPcMechanicsThrusterController_AddBalancedGroup, METH_VARARGS },
	 { (char *)"iPcMechanicsThrusterController_RemoveBalancedGroup", _wrap_iPcMechanicsThrusterController_RemoveBalancedGroup, METH_VARARGS },
	 { (char *)"iPcMechanicsThrusterController_ApplyThrust", _wrap_iPcMechanicsThrusterController_ApplyThrust, METH_VARARGS },
	 { (char *)"iPcMechanicsThrusterController_CancelThrust", _wrap_iPcMechanicsThrusterController_CancelThrust, METH_VARARGS },
	 { (char *)"delete_iPcMechanicsThrusterController", _wrap_delete_iPcMechanicsThrusterController, METH_VARARGS },
	 { (char *)"iPcMechanicsThrusterController_swigregister", iPcMechanicsThrusterController_swigregister, METH_VARARGS },
	 { (char *)"celCreateMechanicsThrusterReactionary", _wrap_celCreateMechanicsThrusterReactionary, METH_VARARGS },
	 { (char *)"celGetMechanicsThrusterReactionary", _wrap_celGetMechanicsThrusterReactionary, METH_VARARGS },
	 { (char *)"scfQuery_iPcMechanicsThruster", _wrap_scfQuery_iPcMechanicsThruster, METH_VARARGS },
	 { (char *)"scfQueryPC_iPcMechanicsThruster", _wrap_scfQueryPC_iPcMechanicsThruster, METH_VARARGS },
	 { (char *)"celCreateMechanicsBalancedGroup", _wrap_celCreateMechanicsBalancedGroup, METH_VARARGS },
	 { (char *)"celGetMechanicsBalancedGroup", _wrap_celGetMechanicsBalancedGroup, METH_VARARGS },
	 { (char *)"scfQuery_iPcMechanicsBalancedGroup", _wrap_scfQuery_iPcMechanicsBalancedGroup, METH_VARARGS },
	 { (char *)"scfQueryPC_iPcMechanicsBalancedGroup", _wrap_scfQueryPC_iPcMechanicsBalancedGroup, METH_VARARGS },
	 { (char *)"celCreateMechanicsThrusterController", _wrap_celCreateMechanicsThrusterController, METH_VARARGS },
	 { (char *)"celGetMechanicsThrusterController", _wrap_celGetMechanicsThrusterController, METH_VARARGS },
	 { (char *)"scfQuery_iPcMechanicsThrusterController", _wrap_scfQuery_iPcMechanicsThrusterController, METH_VARARGS },
	 { (char *)"scfQueryPC_iPcMechanicsThrusterController", _wrap_scfQueryPC_iPcMechanicsThrusterController, METH_VARARGS },
	 { (char *)"iBillboardLayer_GetOffset", _wrap_iBillboardLayer_GetOffset, METH_VARARGS },
	 { (char *)"iBillboardLayer_SetOffset", _wrap_iBillboardLayer_SetOffset, METH_VARARGS },
	 { (char *)"iBillboardLayer_Move", _wrap_iBillboardLayer_Move, METH_VARARGS },
	 { (char *)"iBillboardLayer_GetName", _wrap_iBillboardLayer_GetName, METH_VARARGS },
	 { (char *)"delete_iBillboardLayer", _wrap_delete_iBillboardLayer, METH_VARARGS },
	 { (char *)"iBillboardLayer_swigregister", iBillboardLayer_swigregister, METH_VARARGS },
	 { (char *)"iBillboardEventHandler_Select", _wrap_iBillboardEventHandler_Select, METH_VARARGS },
	 { (char *)"iBillboardEventHandler_MouseMove", _wrap_iBillboardEventHandler_MouseMove, METH_VARARGS },
	 { (char *)"iBillboardEventHandler_Unselect", _wrap_iBillboardEventHandler_Unselect, METH_VARARGS },
	 { (char *)"iBillboardEventHandler_DoubleClick", _wrap_iBillboardEventHandler_DoubleClick, METH_VARARGS },
	 { (char *)"delete_iBillboardEventHandler", _wrap_delete_iBillboardEventHandler, METH_VARARGS },
	 { (char *)"iBillboardEventHandler_swigregister", iBillboardEventHandler_swigregister, METH_VARARGS },
	 { (char *)"iBillboard_GetName", _wrap_iBillboard_GetName, METH_VARARGS },
	 { (char *)"iBillboard_GetFlags", _wrap_iBillboard_GetFlags, METH_VARARGS },
	 { (char *)"iBillboard_SetMaterialName", _wrap_iBillboard_SetMaterialName, METH_VARARGS },
	 { (char *)"iBillboard_SetMaterialNameFast", _wrap_iBillboard_SetMaterialNameFast, METH_VARARGS },
	 { (char *)"iBillboard_GetMaterialName", _wrap_iBillboard_GetMaterialName, METH_VARARGS },
	 { (char *)"iBillboard_DrawMesh", _wrap_iBillboard_DrawMesh, METH_VARARGS },
	 { (char *)"iBillboard_SetSize", _wrap_iBillboard_SetSize, METH_VARARGS },
	 { (char *)"iBillboard_GetSize", _wrap_iBillboard_GetSize, METH_VARARGS },
	 { (char *)"iBillboard_GetImageSize", _wrap_iBillboard_GetImageSize, METH_VARARGS },
	 { (char *)"iBillboard_SetPosition", _wrap_iBillboard_SetPosition, METH_VARARGS },
	 { (char *)"iBillboard_MoveToPosition", _wrap_iBillboard_MoveToPosition, METH_VARARGS },
	 { (char *)"iBillboard_GetPosition", _wrap_iBillboard_GetPosition, METH_VARARGS },
	 { (char *)"iBillboard_Move", _wrap_iBillboard_Move, METH_VARARGS },
	 { (char *)"iBillboard_StackTop", _wrap_iBillboard_StackTop, METH_VARARGS },
	 { (char *)"iBillboard_StackBottom", _wrap_iBillboard_StackBottom, METH_VARARGS },
	 { (char *)"iBillboard_StackUp", _wrap_iBillboard_StackUp, METH_VARARGS },
	 { (char *)"iBillboard_StackDown", _wrap_iBillboard_StackDown, METH_VARARGS },
	 { (char *)"iBillboard_SetUVTopLeft", _wrap_iBillboard_SetUVTopLeft, METH_VARARGS },
	 { (char *)"iBillboard_GetUVTopLeft", _wrap_iBillboard_GetUVTopLeft, METH_VARARGS },
	 { (char *)"iBillboard_SetUVBottomRight", _wrap_iBillboard_SetUVBottomRight, METH_VARARGS },
	 { (char *)"iBillboard_GetUVBottomRight", _wrap_iBillboard_GetUVBottomRight, METH_VARARGS },
	 { (char *)"iBillboard_SetColor", _wrap_iBillboard_SetColor, METH_VARARGS },
	 { (char *)"iBillboard_GetColor", _wrap_iBillboard_GetColor, METH_VARARGS },
	 { (char *)"iBillboard_SetLayer", _wrap_iBillboard_SetLayer, METH_VARARGS },
	 { (char *)"iBillboard_GetLayer", _wrap_iBillboard_GetLayer, METH_VARARGS },
	 { (char *)"iBillboard_AddEventHandler", _wrap_iBillboard_AddEventHandler, METH_VARARGS },
	 { (char *)"iBillboard_RemoveEventHandler", _wrap_iBillboard_RemoveEventHandler, METH_VARARGS },
	 { (char *)"iBillboard_SetText", _wrap_iBillboard_SetText, METH_VARARGS },
	 { (char *)"iBillboard_GetText", _wrap_iBillboard_GetText, METH_VARARGS },
	 { (char *)"iBillboard_SetTextOffset", _wrap_iBillboard_SetTextOffset, METH_VARARGS },
	 { (char *)"iBillboard_GetTextOffsetDX", _wrap_iBillboard_GetTextOffsetDX, METH_VARARGS },
	 { (char *)"iBillboard_GetTextOffsetDY", _wrap_iBillboard_GetTextOffsetDY, METH_VARARGS },
	 { (char *)"iBillboard_SetTextFont", _wrap_iBillboard_SetTextFont, METH_VARARGS },
	 { (char *)"iBillboard_GetTextFont", _wrap_iBillboard_GetTextFont, METH_VARARGS },
	 { (char *)"iBillboard_GetTextFontSize", _wrap_iBillboard_GetTextFontSize, METH_VARARGS },
	 { (char *)"iBillboard_SetTextFgColor", _wrap_iBillboard_SetTextFgColor, METH_VARARGS },
	 { (char *)"iBillboard_GetTextFgColor", _wrap_iBillboard_GetTextFgColor, METH_VARARGS },
	 { (char *)"iBillboard_ClearTextFgColor", _wrap_iBillboard_ClearTextFgColor, METH_VARARGS },
	 { (char *)"iBillboard_SetTextBgColor", _wrap_iBillboard_SetTextBgColor, METH_VARARGS },
	 { (char *)"iBillboard_GetTextBgColor", _wrap_iBillboard_GetTextBgColor, METH_VARARGS },
	 { (char *)"iBillboard_SetTextBgTransparent", _wrap_iBillboard_SetTextBgTransparent, METH_VARARGS },
	 { (char *)"iBillboard_IsTextBgTransparent", _wrap_iBillboard_IsTextBgTransparent, METH_VARARGS },
	 { (char *)"iBillboard_ClearTextBgColor", _wrap_iBillboard_ClearTextBgColor, METH_VARARGS },
	 { (char *)"delete_iBillboard", _wrap_delete_iBillboard, METH_VARARGS },
	 { (char *)"iBillboard_swigregister", iBillboard_swigregister, METH_VARARGS },
	 { (char *)"iBillboardManager_ScreenToBillboardX", _wrap_iBillboardManager_ScreenToBillboardX, METH_VARARGS },
	 { (char *)"iBillboardManager_ScreenToBillboardY", _wrap_iBillboardManager_ScreenToBillboardY, METH_VARARGS },
	 { (char *)"iBillboardManager_BillboardToScreenX", _wrap_iBillboardManager_BillboardToScreenX, METH_VARARGS },
	 { (char *)"iBillboardManager_BillboardToScreenY", _wrap_iBillboardManager_BillboardToScreenY, METH_VARARGS },
	 { (char *)"iBillboardManager_CreateBillboard", _wrap_iBillboardManager_CreateBillboard, METH_VARARGS },
	 { (char *)"iBillboardManager_FindBillboard", _wrap_iBillboardManager_FindBillboard, METH_VARARGS },
	 { (char *)"iBillboardManager_RemoveBillboard", _wrap_iBillboardManager_RemoveBillboard, METH_VARARGS },
	 { (char *)"iBillboardManager_GetBillboardCount", _wrap_iBillboardManager_GetBillboardCount, METH_VARARGS },
	 { (char *)"iBillboardManager_GetBillboard", _wrap_iBillboardManager_GetBillboard, METH_VARARGS },
	 { (char *)"iBillboardManager_CreateBillboardLayer", _wrap_iBillboardManager_CreateBillboardLayer, METH_VARARGS },
	 { (char *)"iBillboardManager_FindBillboardLayer", _wrap_iBillboardManager_FindBillboardLayer, METH_VARARGS },
	 { (char *)"iBillboardManager_RemoveBillboardLayer", _wrap_iBillboardManager_RemoveBillboardLayer, METH_VARARGS },
	 { (char *)"iBillboardManager_GetBillboardLayerCount", _wrap_iBillboardManager_GetBillboardLayerCount, METH_VARARGS },
	 { (char *)"iBillboardManager_GetBillboardLayer", _wrap_iBillboardManager_GetBillboardLayer, METH_VARARGS },
	 { (char *)"iBillboardManager_RemoveAll", _wrap_iBillboardManager_RemoveAll, METH_VARARGS },
	 { (char *)"iBillboardManager_SetFlags", _wrap_iBillboardManager_SetFlags, METH_VARARGS },
	 { (char *)"iBillboardManager_StackTop", _wrap_iBillboardManager_StackTop, METH_VARARGS },
	 { (char *)"iBillboardManager_StackBottom", _wrap_iBillboardManager_StackBottom, METH_VARARGS },
	 { (char *)"iBillboardManager_StackUp", _wrap_iBillboardManager_StackUp, METH_VARARGS },
	 { (char *)"iBillboardManager_StackDown", _wrap_iBillboardManager_StackDown, METH_VARARGS },
	 { (char *)"iBillboardManager_StackBefore", _wrap_iBillboardManager_StackBefore, METH_VARARGS },
	 { (char *)"iBillboardManager_StackAfter", _wrap_iBillboardManager_StackAfter, METH_VARARGS },
	 { (char *)"iBillboardManager_TestCollision", _wrap_iBillboardManager_TestCollision, METH_VARARGS },
	 { (char *)"iBillboardManager_SetDefaultTextFont", _wrap_iBillboardManager_SetDefaultTextFont, METH_VARARGS },
	 { (char *)"iBillboardManager_GetDefaultTextFont", _wrap_iBillboardManager_GetDefaultTextFont, METH_VARARGS },
	 { (char *)"iBillboardManager_GetDefaultTextFontSize", _wrap_iBillboardManager_GetDefaultTextFontSize, METH_VARARGS },
	 { (char *)"iBillboardManager_SetDefaultTextFgColor", _wrap_iBillboardManager_SetDefaultTextFgColor, METH_VARARGS },
	 { (char *)"iBillboardManager_GetDefaultTextFgColor", _wrap_iBillboardManager_GetDefaultTextFgColor, METH_VARARGS },
	 { (char *)"iBillboardManager_SetDefaultTextBgColor", _wrap_iBillboardManager_SetDefaultTextBgColor, METH_VARARGS },
	 { (char *)"iBillboardManager_GetDefaultTextBgColor", _wrap_iBillboardManager_GetDefaultTextBgColor, METH_VARARGS },
	 { (char *)"iBillboardManager_SetDefaultTextBgTransparent", _wrap_iBillboardManager_SetDefaultTextBgTransparent, METH_VARARGS },
	 { (char *)"iBillboardManager_GetShowroom", _wrap_iBillboardManager_GetShowroom, METH_VARARGS },
	 { (char *)"delete_iBillboardManager", _wrap_delete_iBillboardManager, METH_VARARGS },
	 { (char *)"iBillboardManager_swigregister", iBillboardManager_swigregister, METH_VARARGS },
	 { (char *)"iPcBillboard_SetBillboardName", _wrap_iPcBillboard_SetBillboardName, METH_VARARGS },
	 { (char *)"iPcBillboard_GetBillboardName", _wrap_iPcBillboard_GetBillboardName, METH_VARARGS },
	 { (char *)"iPcBillboard_GetBillboard", _wrap_iPcBillboard_GetBillboard, METH_VARARGS },
	 { (char *)"iPcBillboard_EnableEvents", _wrap_iPcBillboard_EnableEvents, METH_VARARGS },
	 { (char *)"iPcBillboard_AreEventsEnabled", _wrap_iPcBillboard_AreEventsEnabled, METH_VARARGS },
	 { (char *)"delete_iPcBillboard", _wrap_delete_iPcBillboard, METH_VARARGS },
	 { (char *)"iPcBillboard_swigregister", iPcBillboard_swigregister, METH_VARARGS },
	 { (char *)"celCreateBillboard", _wrap_celCreateBillboard, METH_VARARGS },
	 { (char *)"celGetBillboard", _wrap_celGetBillboard, METH_VARARGS },
	 { (char *)"scfQuery_iPcBillboard", _wrap_scfQuery_iPcBillboard, METH_VARARGS },
	 { (char *)"scfQueryPC_iPcBillboard", _wrap_scfQueryPC_iPcBillboard, METH_VARARGS },
	 { (char *)"iPcRegion_SetWorldFile", _wrap_iPcRegion_SetWorldFile, METH_VARARGS },
	 { (char *)"iPcRegion_GetWorldDir", _wrap_iPcRegion_GetWorldDir, METH_VARARGS },
	 { (char *)"iPcRegion_GetWorldFile", _wrap_iPcRegion_GetWorldFile, METH_VARARGS },
	 { (char *)"iPcRegion_SetRegionName", _wrap_iPcRegion_SetRegionName, METH_VARARGS },
	 { (char *)"iPcRegion_GetRegionName", _wrap_iPcRegion_GetRegionName, METH_VARARGS },
	 { (char *)"iPcRegion_CreateEmptySector", _wrap_iPcRegion_CreateEmptySector, METH_VARARGS },
	 { (char *)"iPcRegion_Load", _wrap_iPcRegion_Load, METH_VARARGS },
	 { (char *)"iPcRegion_Unload", _wrap_iPcRegion_Unload, METH_VARARGS },
	 { (char *)"iPcRegion_FindSector", _wrap_iPcRegion_FindSector, METH_VARARGS },
	 { (char *)"iPcRegion_GetStartSector", _wrap_iPcRegion_GetStartSector, METH_VARARGS },
	 { (char *)"iPcRegion_GetStartPosition", _wrap_iPcRegion_GetStartPosition, METH_VARARGS },
	 { (char *)"iPcRegion_PointCamera", _wrap_iPcRegion_PointCamera, METH_VARARGS },
	 { (char *)"iPcRegion_GetRegion", _wrap_iPcRegion_GetRegion, METH_VARARGS },
	 { (char *)"iPcRegion_LoadWorld", _wrap_iPcRegion_LoadWorld, METH_VARARGS },
	 { (char *)"delete_iPcRegion", _wrap_delete_iPcRegion, METH_VARARGS },
	 { (char *)"iPcRegion_swigregister", iPcRegion_swigregister, METH_VARARGS },
	 { (char *)"celCreateRegion", _wrap_celCreateRegion, METH_VARARGS },
	 { (char *)"Region", _wrap_Region, METH_VARARGS },
	 { (char *)"scfQuery_iPcRegion", _wrap_scfQuery_iPcRegion, METH_VARARGS },
	 { (char *)"scfQueryPC_iPcRegion", _wrap_scfQueryPC_iPcRegion, METH_VARARGS },
	 { (char *)"iCelMapFile_SetPath", _wrap_iCelMapFile_SetPath, METH_VARARGS },
	 { (char *)"iCelMapFile_SetFile", _wrap_iCelMapFile_SetFile, METH_VARARGS },
	 { (char *)"iCelMapFile_GetPath", _wrap_iCelMapFile_GetPath, METH_VARARGS },
	 { (char *)"iCelMapFile_GetFile", _wrap_iCelMapFile_GetFile, METH_VARARGS },
	 { (char *)"iCelMapFile_SetSectorName", _wrap_iCelMapFile_SetSectorName, METH_VARARGS },
	 { (char *)"iCelMapFile_GetSectorName", _wrap_iCelMapFile_GetSectorName, METH_VARARGS },
	 { (char *)"delete_iCelMapFile", _wrap_delete_iCelMapFile, METH_VARARGS },
	 { (char *)"iCelMapFile_swigregister", iCelMapFile_swigregister, METH_VARARGS },
	 { (char *)"iCelRegion_GetName", _wrap_iCelRegion_GetName, METH_VARARGS },
	 { (char *)"iCelRegion_SetCachePath", _wrap_iCelRegion_SetCachePath, METH_VARARGS },
	 { (char *)"iCelRegion_GetCachePath", _wrap_iCelRegion_GetCachePath, METH_VARARGS },
	 { (char *)"iCelRegion_CreateMapFile", _wrap_iCelRegion_CreateMapFile, METH_VARARGS },
	 { (char *)"iCelRegion_GetMapFileCount", _wrap_iCelRegion_GetMapFileCount, METH_VARARGS },
	 { (char *)"iCelRegion_GetMapFile", _wrap_iCelRegion_GetMapFile, METH_VARARGS },
	 { (char *)"iCelRegion_RemoveMapFile", _wrap_iCelRegion_RemoveMapFile, METH_VARARGS },
	 { (char *)"iCelRegion_RemoveAllMapFiles", _wrap_iCelRegion_RemoveAllMapFiles, METH_VARARGS },
	 { (char *)"iCelRegion_AssociateEntity", _wrap_iCelRegion_AssociateEntity, METH_VARARGS },
	 { (char *)"iCelRegion_DissociateEntity", _wrap_iCelRegion_DissociateEntity, METH_VARARGS },
	 { (char *)"delete_iCelRegion", _wrap_delete_iCelRegion, METH_VARARGS },
	 { (char *)"iCelRegion_swigregister", iCelRegion_swigregister, METH_VARARGS },
	 { (char *)"iCelZone_GetName", _wrap_iCelZone_GetName, METH_VARARGS },
	 { (char *)"iCelZone_LinkRegion", _wrap_iCelZone_LinkRegion, METH_VARARGS },
	 { (char *)"iCelZone_GetRegionCount", _wrap_iCelZone_GetRegionCount, METH_VARARGS },
	 { (char *)"iCelZone_GetRegion", _wrap_iCelZone_GetRegion, METH_VARARGS },
	 { (char *)"iCelZone_FindRegion", _wrap_iCelZone_FindRegion, METH_VARARGS },
	 { (char *)"iCelZone_UnlinkRegion", _wrap_iCelZone_UnlinkRegion, METH_VARARGS },
	 { (char *)"iCelZone_UnlinkAllRegions", _wrap_iCelZone_UnlinkAllRegions, METH_VARARGS },
	 { (char *)"delete_iCelZone", _wrap_delete_iCelZone, METH_VARARGS },
	 { (char *)"iCelZone_swigregister", iCelZone_swigregister, METH_VARARGS },
	 { (char *)"iPcZoneManager_EnableColliderWrappers", _wrap_iPcZoneManager_EnableColliderWrappers, METH_VARARGS },
	 { (char *)"iPcZoneManager_IsColliderWrappers", _wrap_iPcZoneManager_IsColliderWrappers, METH_VARARGS },
	 { (char *)"iPcZoneManager_SetLoadingMode", _wrap_iPcZoneManager_SetLoadingMode, METH_VARARGS },
	 { (char *)"iPcZoneManager_GetLoadingMode", _wrap_iPcZoneManager_GetLoadingMode, METH_VARARGS },
	 { (char *)"iPcZoneManager_Load", _wrap_iPcZoneManager_Load, METH_VARARGS },
	 { (char *)"iPcZoneManager_CreateZone", _wrap_iPcZoneManager_CreateZone, METH_VARARGS },
	 { (char *)"iPcZoneManager_GetZoneCount", _wrap_iPcZoneManager_GetZoneCount, METH_VARARGS },
	 { (char *)"iPcZoneManager_GetZone", _wrap_iPcZoneManager_GetZone, METH_VARARGS },
	 { (char *)"iPcZoneManager_FindZone", _wrap_iPcZoneManager_FindZone, METH_VARARGS },
	 { (char *)"iPcZoneManager_RemoveZone", _wrap_iPcZoneManager_RemoveZone, METH_VARARGS },
	 { (char *)"iPcZoneManager_RemoveAllZones", _wrap_iPcZoneManager_RemoveAllZones, METH_VARARGS },
	 { (char *)"iPcZoneManager_CreateRegion", _wrap_iPcZoneManager_CreateRegion, METH_VARARGS },
	 { (char *)"iPcZoneManager_GetRegionCount", _wrap_iPcZoneManager_GetRegionCount, METH_VARARGS },
	 { (char *)"iPcZoneManager_GetRegion", _wrap_iPcZoneManager_GetRegion, METH_VARARGS },
	 { (char *)"iPcZoneManager_FindRegion", _wrap_iPcZoneManager_FindRegion, METH_VARARGS },
	 { (char *)"iPcZoneManager_RemoveRegion", _wrap_iPcZoneManager_RemoveRegion, METH_VARARGS },
	 { (char *)"iPcZoneManager_RemoveAllRegions", _wrap_iPcZoneManager_RemoveAllRegions, METH_VARARGS },
	 { (char *)"iPcZoneManager_FindStartLocations", _wrap_iPcZoneManager_FindStartLocations, METH_VARARGS },
	 { (char *)"iPcZoneManager_GetLastStartLocation", _wrap_iPcZoneManager_GetLastStartLocation, METH_VARARGS },
	 { (char *)"iPcZoneManager_GetLastStartRegionName", _wrap_iPcZoneManager_GetLastStartRegionName, METH_VARARGS },
	 { (char *)"iPcZoneManager_GetLastStartName", _wrap_iPcZoneManager_GetLastStartName, METH_VARARGS },
	 { (char *)"iPcZoneManager_PointCamera", _wrap_iPcZoneManager_PointCamera, METH_VARARGS },
	 { (char *)"iPcZoneManager_PointMesh", _wrap_iPcZoneManager_PointMesh, METH_VARARGS },
	 { (char *)"iPcZoneManager_ActivateRegion", _wrap_iPcZoneManager_ActivateRegion, METH_VARARGS },
	 { (char *)"delete_iPcZoneManager", _wrap_delete_iPcZoneManager, METH_VARARGS },
	 { (char *)"iPcZoneManager_swigregister", iPcZoneManager_swigregister, METH_VARARGS },
	 { (char *)"celCreateZoneManager", _wrap_celCreateZoneManager, METH_VARARGS },
	 { (char *)"celGetZoneManager", _wrap_celGetZoneManager, METH_VARARGS },
	 { (char *)"scfQuery_iPcZoneManager", _wrap_scfQuery_iPcZoneManager, METH_VARARGS },
	 { (char *)"iPcCommandInput_Activate", _wrap_iPcCommandInput_Activate, METH_VARARGS },
	 { (char *)"iPcCommandInput_SetCookedMode", _wrap_iPcCommandInput_SetCookedMode, METH_VARARGS },
	 { (char *)"iPcCommandInput_GetCookedMode", _wrap_iPcCommandInput_GetCookedMode, METH_VARARGS },
	 { (char *)"iPcCommandInput_ScreenCoordinates", _wrap_iPcCommandInput_ScreenCoordinates, METH_VARARGS },
	 { (char *)"iPcCommandInput_ScreenToCentered", _wrap_iPcCommandInput_ScreenToCentered, METH_VARARGS },
	 { (char *)"iPcCommandInput_CenteredToScreen", _wrap_iPcCommandInput_CenteredToScreen, METH_VARARGS },
	 { (char *)"iPcCommandInput_LoadConfig", _wrap_iPcCommandInput_LoadConfig, METH_VARARGS },
	 { (char *)"iPcCommandInput_Bind", _wrap_iPcCommandInput_Bind, METH_VARARGS },
	 { (char *)"iPcCommandInput_GetBind", _wrap_iPcCommandInput_GetBind, METH_VARARGS },
	 { (char *)"iPcCommandInput_RemoveBind", _wrap_iPcCommandInput_RemoveBind, METH_VARARGS },
	 { (char *)"iPcCommandInput_RemoveAllBinds", _wrap_iPcCommandInput_RemoveAllBinds, METH_VARARGS },
	 { (char *)"delete_iPcCommandInput", _wrap_delete_iPcCommandInput, METH_VARARGS },
	 { (char *)"iPcCommandInput_swigregister", iPcCommandInput_swigregister, METH_VARARGS },
	 { (char *)"celCreateCommandInput", _wrap_celCreateCommandInput, METH_VARARGS },
	 { (char *)"celGetCommandInput", _wrap_celGetCommandInput, METH_VARARGS },
	 { (char *)"scfQuery_iPcCommandInput", _wrap_scfQuery_iPcCommandInput, METH_VARARGS },
	 { (char *)"iPcGravityCallback_Callback", _wrap_iPcGravityCallback_Callback, METH_VARARGS },
	 { (char *)"delete_iPcGravityCallback", _wrap_delete_iPcGravityCallback, METH_VARARGS },
	 { (char *)"iPcGravityCallback_swigregister", iPcGravityCallback_swigregister, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetAnchor", _wrap_iPcLinearMovement_SetAnchor, METH_VARARGS },
	 { (char *)"iPcLinearMovement_GetAnchor", _wrap_iPcLinearMovement_GetAnchor, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetAngularVelocity", _wrap_iPcLinearMovement_SetAngularVelocity, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetSpeed", _wrap_iPcLinearMovement_SetSpeed, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetVelocity", _wrap_iPcLinearMovement_SetVelocity, METH_VARARGS },
	 { (char *)"iPcLinearMovement_AddVelocity", _wrap_iPcLinearMovement_AddVelocity, METH_VARARGS },
	 { (char *)"iPcLinearMovement_ClearWorldVelocity", _wrap_iPcLinearMovement_ClearWorldVelocity, METH_VARARGS },
	 { (char *)"iPcLinearMovement_GetVelocity", _wrap_iPcLinearMovement_GetVelocity, METH_VARARGS },
	 { (char *)"iPcLinearMovement_GetAngularVelocity", _wrap_iPcLinearMovement_GetAngularVelocity, METH_VARARGS },
	 { (char *)"iPcLinearMovement_GetCDDimensions", _wrap_iPcLinearMovement_GetCDDimensions, METH_VARARGS },
	 { (char *)"iPcLinearMovement_InitCD", _wrap_iPcLinearMovement_InitCD, METH_VARARGS },
	 { (char *)"iPcLinearMovement_TimeDiff", _wrap_iPcLinearMovement_TimeDiff, METH_VARARGS },
	 { (char *)"iPcLinearMovement_GetDRData", _wrap_iPcLinearMovement_GetDRData, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetDRData", _wrap_iPcLinearMovement_SetDRData, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetSoftDRData", _wrap_iPcLinearMovement_SetSoftDRData, METH_VARARGS },
	 { (char *)"iPcLinearMovement_GetLastPosition", _wrap_iPcLinearMovement_GetLastPosition, METH_VARARGS },
	 { (char *)"iPcLinearMovement_GetLastFullPosition", _wrap_iPcLinearMovement_GetLastFullPosition, METH_VARARGS },
	 { (char *)"iPcLinearMovement_IsPath", _wrap_iPcLinearMovement_IsPath, METH_VARARGS },
	 { (char *)"iPcLinearMovement_GetSector", _wrap_iPcLinearMovement_GetSector, METH_VARARGS },
	 { (char *)"iPcLinearMovement_ExtrapolatePosition", _wrap_iPcLinearMovement_ExtrapolatePosition, METH_VARARGS },
	 { (char *)"iPcLinearMovement_UpdateDRDelta", _wrap_iPcLinearMovement_UpdateDRDelta, METH_VARARGS },
	 { (char *)"iPcLinearMovement_UpdateDR", _wrap_iPcLinearMovement_UpdateDR, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetPathTime", _wrap_iPcLinearMovement_SetPathTime, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetPathSpeed", _wrap_iPcLinearMovement_SetPathSpeed, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetPathAction", _wrap_iPcLinearMovement_SetPathAction, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetPathSector", _wrap_iPcLinearMovement_SetPathSector, METH_VARARGS },
	 { (char *)"iPcLinearMovement_IsOnGround", _wrap_iPcLinearMovement_IsOnGround, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetOnGround", _wrap_iPcLinearMovement_SetOnGround, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetHugGround", _wrap_iPcLinearMovement_SetHugGround, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetDeltaLimit", _wrap_iPcLinearMovement_SetDeltaLimit, METH_VARARGS },
	 { (char *)"iPcLinearMovement_RotateV", _wrap_iPcLinearMovement_RotateV, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetGravity", _wrap_iPcLinearMovement_SetGravity, METH_VARARGS },
	 { (char *)"iPcLinearMovement_GetGravity", _wrap_iPcLinearMovement_GetGravity, METH_VARARGS },
	 { (char *)"iPcLinearMovement_ResetGravity", _wrap_iPcLinearMovement_ResetGravity, METH_VARARGS },
	 { (char *)"iPcLinearMovement_AddGravityCallback", _wrap_iPcLinearMovement_AddGravityCallback, METH_VARARGS },
	 { (char *)"iPcLinearMovement_RemoveGravityCallback", _wrap_iPcLinearMovement_RemoveGravityCallback, METH_VARARGS },
	 { (char *)"iPcLinearMovement_GetPortalDisplacement", _wrap_iPcLinearMovement_GetPortalDisplacement, METH_VARARGS },
	 { (char *)"iPcLinearMovement_ClearPortalDisplacement", _wrap_iPcLinearMovement_ClearPortalDisplacement, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetFullPosition", _wrap_iPcLinearMovement_SetFullPosition, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetPosition", _wrap_iPcLinearMovement_SetPosition, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetPath", _wrap_iPcLinearMovement_SetPath, METH_VARARGS },
	 { (char *)"delete_iPcLinearMovement", _wrap_delete_iPcLinearMovement, METH_VARARGS },
	 { (char *)"iPcLinearMovement_swigregister", iPcLinearMovement_swigregister, METH_VARARGS },
	 { (char *)"celCreateLinearMovement", _wrap_celCreateLinearMovement, METH_VARARGS },
	 { (char *)"celGetLinearMovement", _wrap_celGetLinearMovement, METH_VARARGS },
	 { (char *)"scfQuery_iPcLinearMovement", _wrap_scfQuery_iPcLinearMovement, METH_VARARGS },
	 { (char *)"iPcActorMove_Forward", _wrap_iPcActorMove_Forward, METH_VARARGS },
	 { (char *)"iPcActorMove_IsMovingForward", _wrap_iPcActorMove_IsMovingForward, METH_VARARGS },
	 { (char *)"iPcActorMove_Backward", _wrap_iPcActorMove_Backward, METH_VARARGS },
	 { (char *)"iPcActorMove_IsMovingBackward", _wrap_iPcActorMove_IsMovingBackward, METH_VARARGS },
	 { (char *)"iPcActorMove_StrafeLeft", _wrap_iPcActorMove_StrafeLeft, METH_VARARGS },
	 { (char *)"iPcActorMove_IsStrafingLeft", _wrap_iPcActorMove_IsStrafingLeft, METH_VARARGS },
	 { (char *)"iPcActorMove_StrafeRight", _wrap_iPcActorMove_StrafeRight, METH_VARARGS },
	 { (char *)"iPcActorMove_IsStrafingRight", _wrap_iPcActorMove_IsStrafingRight, METH_VARARGS },
	 { (char *)"iPcActorMove_RotateLeft", _wrap_iPcActorMove_RotateLeft, METH_VARARGS },
	 { (char *)"iPcActorMove_IsRotatingLeft", _wrap_iPcActorMove_IsRotatingLeft, METH_VARARGS },
	 { (char *)"iPcActorMove_RotateRight", _wrap_iPcActorMove_RotateRight, METH_VARARGS },
	 { (char *)"iPcActorMove_IsRotatingRight", _wrap_iPcActorMove_IsRotatingRight, METH_VARARGS },
	 { (char *)"iPcActorMove_RotateTo", _wrap_iPcActorMove_RotateTo, METH_VARARGS },
	 { (char *)"iPcActorMove_Run", _wrap_iPcActorMove_Run, METH_VARARGS },
	 { (char *)"iPcActorMove_IsRunning", _wrap_iPcActorMove_IsRunning, METH_VARARGS },
	 { (char *)"iPcActorMove_AutoRun", _wrap_iPcActorMove_AutoRun, METH_VARARGS },
	 { (char *)"iPcActorMove_IsAutoRunning", _wrap_iPcActorMove_IsAutoRunning, METH_VARARGS },
	 { (char *)"iPcActorMove_Jump", _wrap_iPcActorMove_Jump, METH_VARARGS },
	 { (char *)"iPcActorMove_ToggleCameraMode", _wrap_iPcActorMove_ToggleCameraMode, METH_VARARGS },
	 { (char *)"iPcActorMove_SetMovementSpeed", _wrap_iPcActorMove_SetMovementSpeed, METH_VARARGS },
	 { (char *)"iPcActorMove_GetMovementSpeed", _wrap_iPcActorMove_GetMovementSpeed, METH_VARARGS },
	 { (char *)"iPcActorMove_SetRunningSpeed", _wrap_iPcActorMove_SetRunningSpeed, METH_VARARGS },
	 { (char *)"iPcActorMove_GetRunningSpeed", _wrap_iPcActorMove_GetRunningSpeed, METH_VARARGS },
	 { (char *)"iPcActorMove_SetRotationSpeed", _wrap_iPcActorMove_SetRotationSpeed, METH_VARARGS },
	 { (char *)"iPcActorMove_GetRotationSpeed", _wrap_iPcActorMove_GetRotationSpeed, METH_VARARGS },
	 { (char *)"iPcActorMove_SetJumpingVelocity", _wrap_iPcActorMove_SetJumpingVelocity, METH_VARARGS },
	 { (char *)"iPcActorMove_GetJumpingVelocity", _wrap_iPcActorMove_GetJumpingVelocity, METH_VARARGS },
	 { (char *)"delete_iPcActorMove", _wrap_delete_iPcActorMove, METH_VARARGS },
	 { (char *)"iPcActorMove_swigregister", iPcActorMove_swigregister, METH_VARARGS },
	 { (char *)"celCreateActorMove", _wrap_celCreateActorMove, METH_VARARGS },
	 { (char *)"celGetActorMove", _wrap_celGetActorMove, METH_VARARGS },
	 { (char *)"scfQuery_iPcActorMove", _wrap_scfQuery_iPcActorMove, METH_VARARGS },
	 { (char *)"iPcCamera_SetRegion", _wrap_iPcCamera_SetRegion, METH_VARARGS },
	 { (char *)"iPcCamera_SetZoneManager", _wrap_iPcCamera_SetZoneManager, METH_VARARGS },
	 { (char *)"iPcCamera_SetRectangle", _wrap_iPcCamera_SetRectangle, METH_VARARGS },
	 { (char *)"iPcCamera_GetCamera", _wrap_iPcCamera_GetCamera, METH_VARARGS },
	 { (char *)"iPcCamera_GetView", _wrap_iPcCamera_GetView, METH_VARARGS },
	 { (char *)"iPcCamera_SetClearZBuffer", _wrap_iPcCamera_SetClearZBuffer, METH_VARARGS },
	 { (char *)"iPcCamera_GetClearZBuffer", _wrap_iPcCamera_GetClearZBuffer, METH_VARARGS },
	 { (char *)"iPcCamera_SetClearScreen", _wrap_iPcCamera_SetClearScreen, METH_VARARGS },
	 { (char *)"iPcCamera_GetClearScreen", _wrap_iPcCamera_GetClearScreen, METH_VARARGS },
	 { (char *)"iPcCamera_DisableDistanceClipping", _wrap_iPcCamera_DisableDistanceClipping, METH_VARARGS },
	 { (char *)"iPcCamera_EnableFixedDistanceClipping", _wrap_iPcCamera_EnableFixedDistanceClipping, METH_VARARGS },
	 { (char *)"iPcCamera_EnableAdaptiveDistanceClipping", _wrap_iPcCamera_EnableAdaptiveDistanceClipping, METH_VARARGS },
	 { (char *)"iPcCamera_UseDistanceClipping", _wrap_iPcCamera_UseDistanceClipping, METH_VARARGS },
	 { (char *)"iPcCamera_UseFixedDistanceClipping", _wrap_iPcCamera_UseFixedDistanceClipping, METH_VARARGS },
	 { (char *)"iPcCamera_GetFixedDistance", _wrap_iPcCamera_GetFixedDistance, METH_VARARGS },
	 { (char *)"iPcCamera_GetAdaptiveMinFPS", _wrap_iPcCamera_GetAdaptiveMinFPS, METH_VARARGS },
	 { (char *)"iPcCamera_GetAdaptiveMaxFPS", _wrap_iPcCamera_GetAdaptiveMaxFPS, METH_VARARGS },
	 { (char *)"iPcCamera_GetAdaptiveMinDistance", _wrap_iPcCamera_GetAdaptiveMinDistance, METH_VARARGS },
	 { (char *)"iPcCamera_SetAutoDraw", _wrap_iPcCamera_SetAutoDraw, METH_VARARGS },
	 { (char *)"iPcCamera_Draw", _wrap_iPcCamera_Draw, METH_VARARGS },
	 { (char *)"iPcCamera_UpdateCamera", _wrap_iPcCamera_UpdateCamera, METH_VARARGS },
	 { (char *)"iPcCamera_GetDrawFlags", _wrap_iPcCamera_GetDrawFlags, METH_VARARGS },
	 { (char *)"delete_iPcCamera", _wrap_delete_iPcCamera, METH_VARARGS },
	 { (char *)"iPcCamera_swigregister", iPcCamera_swigregister, METH_VARARGS },
	 { (char *)"celCreateCamera", _wrap_celCreateCamera, METH_VARARGS },
	 { (char *)"celGetCamera", _wrap_celGetCamera, METH_VARARGS },
	 { (char *)"scfQuery_iPcCamera", _wrap_scfQuery_iPcCamera, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_SetFollowEntity", _wrap_iPcDefaultCamera_SetFollowEntity, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_SetMode", _wrap_iPcDefaultCamera_SetMode, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_GetMode", _wrap_iPcDefaultCamera_GetMode, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_SetModeName", _wrap_iPcDefaultCamera_SetModeName, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_GetModeName", _wrap_iPcDefaultCamera_GetModeName, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_GetNextMode", _wrap_iPcDefaultCamera_GetNextMode, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_SetSpringParameters", _wrap_iPcDefaultCamera_SetSpringParameters, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_SetMinMaxCameraDistance", _wrap_iPcDefaultCamera_SetMinMaxCameraDistance, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_SetTurnSpeed", _wrap_iPcDefaultCamera_SetTurnSpeed, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_SetSwingCoef", _wrap_iPcDefaultCamera_SetSwingCoef, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_SetFirstPersonOffset", _wrap_iPcDefaultCamera_SetFirstPersonOffset, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_SetThirdPersonOffset", _wrap_iPcDefaultCamera_SetThirdPersonOffset, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_CenterCamera", _wrap_iPcDefaultCamera_CenterCamera, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_SetPitch", _wrap_iPcDefaultCamera_SetPitch, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_GetPitch", _wrap_iPcDefaultCamera_GetPitch, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_SetPitchVelocity", _wrap_iPcDefaultCamera_SetPitchVelocity, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_GetPitchVelocity", _wrap_iPcDefaultCamera_GetPitchVelocity, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_MovePitch", _wrap_iPcDefaultCamera_MovePitch, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_SetYaw", _wrap_iPcDefaultCamera_SetYaw, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_MoveYaw", _wrap_iPcDefaultCamera_MoveYaw, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_GetYaw", _wrap_iPcDefaultCamera_GetYaw, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_SetYawVelocity", _wrap_iPcDefaultCamera_SetYawVelocity, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_GetYawVelocity", _wrap_iPcDefaultCamera_GetYawVelocity, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_SetDistance", _wrap_iPcDefaultCamera_SetDistance, METH_VARARGS },
	 { (char *)"delete_iPcDefaultCamera", _wrap_delete_iPcDefaultCamera, METH_VARARGS },
	 { (char *)"iPcDefaultCamera_swigregister", iPcDefaultCamera_swigregister, METH_VARARGS },
	 { (char *)"celCreateDefaultCamera", _wrap_celCreateDefaultCamera, METH_VARARGS },
	 { (char *)"celGetDefaultCamera", _wrap_celGetDefaultCamera, METH_VARARGS },
	 { (char *)"scfQuery_iPcDefaultCamera", _wrap_scfQuery_iPcDefaultCamera, METH_VARARGS },
	 { (char *)"iPcSimpleCamera_SetDrawMesh", _wrap_iPcSimpleCamera_SetDrawMesh, METH_VARARGS },
	 { (char *)"iPcSimpleCamera_SetCameraOffset", _wrap_iPcSimpleCamera_SetCameraOffset, METH_VARARGS },
	 { (char *)"iPcSimpleCamera_SetLookAtOffset", _wrap_iPcSimpleCamera_SetLookAtOffset, METH_VARARGS },
	 { (char *)"iPcSimpleCamera_SetMesh", _wrap_iPcSimpleCamera_SetMesh, METH_VARARGS },
	 { (char *)"iPcSimpleCamera_Draw", _wrap_iPcSimpleCamera_Draw, METH_VARARGS },
	 { (char *)"delete_iPcSimpleCamera", _wrap_delete_iPcSimpleCamera, METH_VARARGS },
	 { (char *)"iPcSimpleCamera_swigregister", iPcSimpleCamera_swigregister, METH_VARARGS },
	 { (char *)"celCreateSimpleCamera", _wrap_celCreateSimpleCamera, METH_VARARGS },
	 { (char *)"celGetSimpleCamera", _wrap_celGetSimpleCamera, METH_VARARGS },
	 { (char *)"scfQuery_iPcSimpleCamera", _wrap_scfQuery_iPcSimpleCamera, METH_VARARGS },
	 { (char *)"iPcMeshSelectListener_MouseDown", _wrap_iPcMeshSelectListener_MouseDown, METH_VARARGS },
	 { (char *)"iPcMeshSelectListener_MouseUp", _wrap_iPcMeshSelectListener_MouseUp, METH_VARARGS },
	 { (char *)"iPcMeshSelectListener_MouseMove", _wrap_iPcMeshSelectListener_MouseMove, METH_VARARGS },
	 { (char *)"delete_iPcMeshSelectListener", _wrap_delete_iPcMeshSelectListener, METH_VARARGS },
	 { (char *)"iPcMeshSelectListener_swigregister", iPcMeshSelectListener_swigregister, METH_VARARGS },
	 { (char *)"iPcMeshSelect_AddMeshSelectListener", _wrap_iPcMeshSelect_AddMeshSelectListener, METH_VARARGS },
	 { (char *)"iPcMeshSelect_RemoveMeshSelectListener", _wrap_iPcMeshSelect_RemoveMeshSelectListener, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetCamera", _wrap_iPcMeshSelect_SetCamera, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetMouseButtons", _wrap_iPcMeshSelect_SetMouseButtons, METH_VARARGS },
	 { (char *)"iPcMeshSelect_GetMouseButtons", _wrap_iPcMeshSelect_GetMouseButtons, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetGlobalSelection", _wrap_iPcMeshSelect_SetGlobalSelection, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasGlobalSelection", _wrap_iPcMeshSelect_HasGlobalSelection, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetFollowMode", _wrap_iPcMeshSelect_SetFollowMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasFollowMode", _wrap_iPcMeshSelect_HasFollowMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetFollowAlwaysMode", _wrap_iPcMeshSelect_SetFollowAlwaysMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasFollowAlwaysMode", _wrap_iPcMeshSelect_HasFollowAlwaysMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetDragMode", _wrap_iPcMeshSelect_SetDragMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasDragMode", _wrap_iPcMeshSelect_HasDragMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetDragPlaneNormal", _wrap_iPcMeshSelect_SetDragPlaneNormal, METH_VARARGS },
	 { (char *)"iPcMeshSelect_GetDragPlaneNormal", _wrap_iPcMeshSelect_GetDragPlaneNormal, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetSendmoveEvent", _wrap_iPcMeshSelect_SetSendmoveEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasSendmoveEvent", _wrap_iPcMeshSelect_HasSendmoveEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetSendupEvent", _wrap_iPcMeshSelect_SetSendupEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasSendupEvent", _wrap_iPcMeshSelect_HasSendupEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetSenddownEvent", _wrap_iPcMeshSelect_SetSenddownEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasSenddownEvent", _wrap_iPcMeshSelect_HasSenddownEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetMaxSelectionDistance", _wrap_iPcMeshSelect_SetMaxSelectionDistance, METH_VARARGS },
	 { (char *)"iPcMeshSelect_GetMaxSelectionDistance", _wrap_iPcMeshSelect_GetMaxSelectionDistance, METH_VARARGS },
	 { (char *)"delete_iPcMeshSelect", _wrap_delete_iPcMeshSelect, METH_VARARGS },
	 { (char *)"iPcMeshSelect_swigregister", iPcMeshSelect_swigregister, METH_VARARGS },
	 { (char *)"celCreateMeshSelect", _wrap_celCreateMeshSelect, METH_VARARGS },
	 { (char *)"celGetMeshSelect", _wrap_celGetMeshSelect, METH_VARARGS },
	 { (char *)"scfQuery_iPcMeshSelect", _wrap_scfQuery_iPcMeshSelect, METH_VARARGS },
	 { (char *)"iPcMesh_SetPath", _wrap_iPcMesh_SetPath, METH_VARARGS },
	 { (char *)"iPcMesh_LoadMesh", _wrap_iPcMesh_LoadMesh, METH_VARARGS },
	 { (char *)"iPcMesh_CreateEmptyThing", _wrap_iPcMesh_CreateEmptyThing, METH_VARARGS },
	 { (char *)"iPcMesh_GetMesh", _wrap_iPcMesh_GetMesh, METH_VARARGS },
	 { (char *)"iPcMesh_MoveMesh", _wrap_iPcMesh_MoveMesh, METH_VARARGS },
	 { (char *)"iPcMesh_SetAction", _wrap_iPcMesh_SetAction, METH_VARARGS },
	 { (char *)"iPcMesh_GetAction", _wrap_iPcMesh_GetAction, METH_VARARGS },
	 { (char *)"iPcMesh_SetReverseAction", _wrap_iPcMesh_SetReverseAction, METH_VARARGS },
	 { (char *)"iPcMesh_Hide", _wrap_iPcMesh_Hide, METH_VARARGS },
	 { (char *)"iPcMesh_Show", _wrap_iPcMesh_Show, METH_VARARGS },
	 { (char *)"iPcMesh_IsVisible", _wrap_iPcMesh_IsVisible, METH_VARARGS },
	 { (char *)"delete_iPcMesh", _wrap_delete_iPcMesh, METH_VARARGS },
	 { (char *)"iPcMesh_swigregister", iPcMesh_swigregister, METH_VARARGS },
	 { (char *)"celCreateMesh", _wrap_celCreateMesh, METH_VARARGS },
	 { (char *)"celGetMesh", _wrap_celGetMesh, METH_VARARGS },
	 { (char *)"scfQuery_iPcMesh", _wrap_scfQuery_iPcMesh, METH_VARARGS },
	 { (char *)"iPcTimer_WakeUp", _wrap_iPcTimer_WakeUp, METH_VARARGS },
	 { (char *)"iPcTimer_WakeUpFrame", _wrap_iPcTimer_WakeUpFrame, METH_VARARGS },
	 { (char *)"iPcTimer_Clear", _wrap_iPcTimer_Clear, METH_VARARGS },
	 { (char *)"delete_iPcTimer", _wrap_delete_iPcTimer, METH_VARARGS },
	 { (char *)"iPcTimer_swigregister", iPcTimer_swigregister, METH_VARARGS },
	 { (char *)"celCreateTimer", _wrap_celCreateTimer, METH_VARARGS },
	 { (char *)"celGetTimer", _wrap_celGetTimer, METH_VARARGS },
	 { (char *)"scfQuery_iPcTimer", _wrap_scfQuery_iPcTimer, METH_VARARGS },
	 { (char *)"iPcSolid_SetMesh", _wrap_iPcSolid_SetMesh, METH_VARARGS },
	 { (char *)"iPcSolid_GetMesh", _wrap_iPcSolid_GetMesh, METH_VARARGS },
	 { (char *)"iPcSolid_GetCollider", _wrap_iPcSolid_GetCollider, METH_VARARGS },
	 { (char *)"delete_iPcSolid", _wrap_delete_iPcSolid, METH_VARARGS },
	 { (char *)"iPcSolid_swigregister", iPcSolid_swigregister, METH_VARARGS },
	 { (char *)"celCreateSolid", _wrap_celCreateSolid, METH_VARARGS },
	 { (char *)"celGetSolid", _wrap_celGetSolid, METH_VARARGS },
	 { (char *)"scfQuery_iPcSolid", _wrap_scfQuery_iPcSolid, METH_VARARGS },
	 { (char *)"iPcGravity_CreateGravityColliderFromMesh", _wrap_iPcGravity_CreateGravityColliderFromMesh, METH_VARARGS },
	 { (char *)"iPcGravity_GetGravityCollider", _wrap_iPcGravity_GetGravityCollider, METH_VARARGS },
	 { (char *)"iPcGravity_SetMovable", _wrap_iPcGravity_SetMovable, METH_VARARGS },
	 { (char *)"iPcGravity_GetMovable", _wrap_iPcGravity_GetMovable, METH_VARARGS },
	 { (char *)"iPcGravity_SetSolid", _wrap_iPcGravity_SetSolid, METH_VARARGS },
	 { (char *)"iPcGravity_GetSolid", _wrap_iPcGravity_GetSolid, METH_VARARGS },
	 { (char *)"iPcGravity_SetWeight", _wrap_iPcGravity_SetWeight, METH_VARARGS },
	 { (char *)"iPcGravity_GetWeight", _wrap_iPcGravity_GetWeight, METH_VARARGS },
	 { (char *)"iPcGravity_ClearForces", _wrap_iPcGravity_ClearForces, METH_VARARGS },
	 { (char *)"iPcGravity_ClearPermanentForces", _wrap_iPcGravity_ClearPermanentForces, METH_VARARGS },
	 { (char *)"iPcGravity_ResetSpeed", _wrap_iPcGravity_ResetSpeed, METH_VARARGS },
	 { (char *)"iPcGravity_ApplyForce", _wrap_iPcGravity_ApplyForce, METH_VARARGS },
	 { (char *)"iPcGravity_ApplyPermanentForce", _wrap_iPcGravity_ApplyPermanentForce, METH_VARARGS },
	 { (char *)"iPcGravity_IsResting", _wrap_iPcGravity_IsResting, METH_VARARGS },
	 { (char *)"iPcGravity_SetActive", _wrap_iPcGravity_SetActive, METH_VARARGS },
	 { (char *)"iPcGravity_IsActive", _wrap_iPcGravity_IsActive, METH_VARARGS },
	 { (char *)"delete_iPcGravity", _wrap_delete_iPcGravity, METH_VARARGS },
	 { (char *)"iPcGravity_swigregister", iPcGravity_swigregister, METH_VARARGS },
	 { (char *)"celCreateGravity", _wrap_celCreateGravity, METH_VARARGS },
	 { (char *)"celGetGravity", _wrap_celGetGravity, METH_VARARGS },
	 { (char *)"scfQuery_iPcGravity", _wrap_scfQuery_iPcGravity, METH_VARARGS },
	 { (char *)"iPcMovable_SetMesh", _wrap_iPcMovable_SetMesh, METH_VARARGS },
	 { (char *)"iPcMovable_GetMesh", _wrap_iPcMovable_GetMesh, METH_VARARGS },
	 { (char *)"iPcMovable_SetPos", _wrap_iPcMovable_SetPos, METH_VARARGS },
	 { (char *)"iPcMovable_AddConstraint", _wrap_iPcMovable_AddConstraint, METH_VARARGS },
	 { (char *)"iPcMovable_RemoveConstraint", _wrap_iPcMovable_RemoveConstraint, METH_VARARGS },
	 { (char *)"iPcMovable_RemoveAllConstraints", _wrap_iPcMovable_RemoveAllConstraints, METH_VARARGS },
	 { (char *)"delete_iPcMovable", _wrap_delete_iPcMovable, METH_VARARGS },
	 { (char *)"iPcMovable_swigregister", iPcMovable_swigregister, METH_VARARGS },
	 { (char *)"iPcMovableConstraint_CheckMove", _wrap_iPcMovableConstraint_CheckMove, METH_VARARGS },
	 { (char *)"delete_iPcMovableConstraint", _wrap_delete_iPcMovableConstraint, METH_VARARGS },
	 { (char *)"iPcMovableConstraint_swigregister", iPcMovableConstraint_swigregister, METH_VARARGS },
	 { (char *)"celCreateMovable", _wrap_celCreateMovable, METH_VARARGS },
	 { (char *)"celGetMovable", _wrap_celGetMovable, METH_VARARGS },
	 { (char *)"scfQuery_iPcMovable", _wrap_scfQuery_iPcMovable, METH_VARARGS },
	 { (char *)"iPcInventoryListener_AddChild", _wrap_iPcInventoryListener_AddChild, METH_VARARGS },
	 { (char *)"iPcInventoryListener_RemoveChild", _wrap_iPcInventoryListener_RemoveChild, METH_VARARGS },
	 { (char *)"delete_iPcInventoryListener", _wrap_delete_iPcInventoryListener, METH_VARARGS },
	 { (char *)"iPcInventoryListener_swigregister", iPcInventoryListener_swigregister, METH_VARARGS },
	 { (char *)"iCelInventorySpaceSlot_GetEntity", _wrap_iCelInventorySpaceSlot_GetEntity, METH_VARARGS },
	 { (char *)"iCelInventorySpaceSlot_AddEntity", _wrap_iCelInventorySpaceSlot_AddEntity, METH_VARARGS },
	 { (char *)"iCelInventorySpaceSlot_RemoveEntity", _wrap_iCelInventorySpaceSlot_RemoveEntity, METH_VARARGS },
	 { (char *)"iCelInventorySpaceSlot_GetCount", _wrap_iCelInventorySpaceSlot_GetCount, METH_VARARGS },
	 { (char *)"iCelInventorySpaceSlot_RemoveAll", _wrap_iCelInventorySpaceSlot_RemoveAll, METH_VARARGS },
	 { (char *)"iCelInventorySpaceSlot_IsEmpty", _wrap_iCelInventorySpaceSlot_IsEmpty, METH_VARARGS },
	 { (char *)"delete_iCelInventorySpaceSlot", _wrap_delete_iCelInventorySpaceSlot, METH_VARARGS },
	 { (char *)"iCelInventorySpaceSlot_swigregister", iCelInventorySpaceSlot_swigregister, METH_VARARGS },
	 { (char *)"iCelInventorySpace_GetSpaceTotal", _wrap_iCelInventorySpace_GetSpaceTotal, METH_VARARGS },
	 { (char *)"iCelInventorySpace_GetSpaceLeft", _wrap_iCelInventorySpace_GetSpaceLeft, METH_VARARGS },
	 { (char *)"iCelInventorySpace_GetSpaceTaken", _wrap_iCelInventorySpace_GetSpaceTaken, METH_VARARGS },
	 { (char *)"iCelInventorySpace_AddEntity", _wrap_iCelInventorySpace_AddEntity, METH_VARARGS },
	 { (char *)"iCelInventorySpace_RemoveEntity", _wrap_iCelInventorySpace_RemoveEntity, METH_VARARGS },
	 { (char *)"iCelInventorySpace_RemoveAll", _wrap_iCelInventorySpace_RemoveAll, METH_VARARGS },
	 { (char *)"iCelInventorySpace_GetSlot", _wrap_iCelInventorySpace_GetSlot, METH_VARARGS },
	 { (char *)"iCelInventorySpace_GetEntity", _wrap_iCelInventorySpace_GetEntity, METH_VARARGS },
	 { (char *)"delete_iCelInventorySpace", _wrap_delete_iCelInventorySpace, METH_VARARGS },
	 { (char *)"iCelInventorySpace_swigregister", iCelInventorySpace_swigregister, METH_VARARGS },
	 { (char *)"iPcInventory_AddInventoryListener", _wrap_iPcInventory_AddInventoryListener, METH_VARARGS },
	 { (char *)"iPcInventory_RemoveInventoryListener", _wrap_iPcInventory_RemoveInventoryListener, METH_VARARGS },
	 { (char *)"iPcInventory_AddEntity", _wrap_iPcInventory_AddEntity, METH_VARARGS },
	 { (char *)"iPcInventory_RemoveEntity", _wrap_iPcInventory_RemoveEntity, METH_VARARGS },
	 { (char *)"iPcInventory_RemoveAll", _wrap_iPcInventory_RemoveAll, METH_VARARGS },
	 { (char *)"iPcInventory_GetEntityCount", _wrap_iPcInventory_GetEntityCount, METH_VARARGS },
	 { (char *)"iPcInventory_GetEntity", _wrap_iPcInventory_GetEntity, METH_VARARGS },
	 { (char *)"iPcInventory_In", _wrap_iPcInventory_In, METH_VARARGS },
	 { (char *)"iPcInventory_GetEntitySlot", _wrap_iPcInventory_GetEntitySlot, METH_VARARGS },
	 { (char *)"iPcInventory_SetStrictCharacteristics", _wrap_iPcInventory_SetStrictCharacteristics, METH_VARARGS },
	 { (char *)"iPcInventory_HasStrictCharacteristics", _wrap_iPcInventory_HasStrictCharacteristics, METH_VARARGS },
	 { (char *)"iPcInventory_SetConstraints", _wrap_iPcInventory_SetConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_GetConstraints", _wrap_iPcInventory_GetConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_RemoveConstraints", _wrap_iPcInventory_RemoveConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_RemoveAllConstraints", _wrap_iPcInventory_RemoveAllConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_GetCurrentCharacteristic", _wrap_iPcInventory_GetCurrentCharacteristic, METH_VARARGS },
	 { (char *)"iPcInventory_MarkDirty", _wrap_iPcInventory_MarkDirty, METH_VARARGS },
	 { (char *)"iPcInventory_TestConstraints", _wrap_iPcInventory_TestConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_Dump", _wrap_iPcInventory_Dump, METH_VARARGS },
	 { (char *)"iPcInventory_SetSpace", _wrap_iPcInventory_SetSpace, METH_VARARGS },
	 { (char *)"iPcInventory_GetSpace", _wrap_iPcInventory_GetSpace, METH_VARARGS },
	 { (char *)"delete_iPcInventory", _wrap_delete_iPcInventory, METH_VARARGS },
	 { (char *)"iPcInventory_swigregister", iPcInventory_swigregister, METH_VARARGS },
	 { (char *)"celCreateInventory", _wrap_celCreateInventory, METH_VARARGS },
	 { (char *)"celGetInventory", _wrap_celGetInventory, METH_VARARGS },
	 { (char *)"scfQuery_iPcInventory", _wrap_scfQuery_iPcInventory, METH_VARARGS },
	 { (char *)"iPcCharacteristics_SetCharacteristic", _wrap_iPcCharacteristics_SetCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_SetInheritedCharacteristic", _wrap_iPcCharacteristics_SetInheritedCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_GetCharacteristic", _wrap_iPcCharacteristics_GetCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_GetLocalCharacteristic", _wrap_iPcCharacteristics_GetLocalCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_GetInheritedCharacteristic", _wrap_iPcCharacteristics_GetInheritedCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_ClearCharacteristic", _wrap_iPcCharacteristics_ClearCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_HasCharacteristic", _wrap_iPcCharacteristics_HasCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_ClearAll", _wrap_iPcCharacteristics_ClearAll, METH_VARARGS },
	 { (char *)"iPcCharacteristics_AddToInventory", _wrap_iPcCharacteristics_AddToInventory, METH_VARARGS },
	 { (char *)"iPcCharacteristics_RemoveFromInventory", _wrap_iPcCharacteristics_RemoveFromInventory, METH_VARARGS },
	 { (char *)"iPcCharacteristics_MarkDirty", _wrap_iPcCharacteristics_MarkDirty, METH_VARARGS },
	 { (char *)"iPcCharacteristics_TestConstraints", _wrap_iPcCharacteristics_TestConstraints, METH_VARARGS },
	 { (char *)"iPcCharacteristics_Dump", _wrap_iPcCharacteristics_Dump, METH_VARARGS },
	 { (char *)"delete_iPcCharacteristics", _wrap_delete_iPcCharacteristics, METH_VARARGS },
	 { (char *)"iPcCharacteristics_swigregister", iPcCharacteristics_swigregister, METH_VARARGS },
	 { (char *)"celCreateCharacteristics", _wrap_celCreateCharacteristics, METH_VARARGS },
	 { (char *)"celGetCharacteristics", _wrap_celGetCharacteristics, METH_VARARGS },
	 { (char *)"scfQuery_iPcCharacteristics", _wrap_scfQuery_iPcCharacteristics, METH_VARARGS },
	 { (char *)"iPcTooltip_SetText", _wrap_iPcTooltip_SetText, METH_VARARGS },
	 { (char *)"iPcTooltip_Show", _wrap_iPcTooltip_Show, METH_VARARGS },
	 { (char *)"iPcTooltip_Hide", _wrap_iPcTooltip_Hide, METH_VARARGS },
	 { (char *)"iPcTooltip_IsVisible", _wrap_iPcTooltip_IsVisible, METH_VARARGS },
	 { (char *)"iPcTooltip_SetTextColor", _wrap_iPcTooltip_SetTextColor, METH_VARARGS },
	 { (char *)"iPcTooltip_SetBackgroundColor", _wrap_iPcTooltip_SetBackgroundColor, METH_VARARGS },
	 { (char *)"iPcTooltip_SetFont", _wrap_iPcTooltip_SetFont, METH_VARARGS },
	 { (char *)"iPcTooltip_SetJustify", _wrap_iPcTooltip_SetJustify, METH_VARARGS },
	 { (char *)"delete_iPcTooltip", _wrap_delete_iPcTooltip, METH_VARARGS },
	 { (char *)"iPcTooltip_swigregister", iPcTooltip_swigregister, METH_VARARGS },
	 { (char *)"celCreateToolTip", _wrap_celCreateToolTip, METH_VARARGS },
	 { (char *)"celGetToolTip", _wrap_celGetToolTip, METH_VARARGS },
	 { (char *)"scfQuery_iPcTooltip", _wrap_scfQuery_iPcTooltip, METH_VARARGS },
	 { (char *)"iPcSoundListener_GetSoundListener", _wrap_iPcSoundListener_GetSoundListener, METH_VARARGS },
	 { (char *)"delete_iPcSoundListener", _wrap_delete_iPcSoundListener, METH_VARARGS },
	 { (char *)"iPcSoundListener_swigregister", iPcSoundListener_swigregister, METH_VARARGS },
	 { (char *)"iPcSoundSource_GetSoundSource", _wrap_iPcSoundSource_GetSoundSource, METH_VARARGS },
	 { (char *)"iPcSoundSource_SetSoundName", _wrap_iPcSoundSource_SetSoundName, METH_VARARGS },
	 { (char *)"iPcSoundSource_GetSoundName", _wrap_iPcSoundSource_GetSoundName, METH_VARARGS },
	 { (char *)"delete_iPcSoundSource", _wrap_delete_iPcSoundSource, METH_VARARGS },
	 { (char *)"iPcSoundSource_swigregister", iPcSoundSource_swigregister, METH_VARARGS },
	 { (char *)"celCreateSoundSource", _wrap_celCreateSoundSource, METH_VARARGS },
	 { (char *)"celGetSoundSource", _wrap_celGetSoundSource, METH_VARARGS },
	 { (char *)"scfQuery_iPcSoundSource", _wrap_scfQuery_iPcSoundSource, METH_VARARGS },
	 { (char *)"celCreateSoundListener", _wrap_celCreateSoundListener, METH_VARARGS },
	 { (char *)"celGetSoundListener", _wrap_celGetSoundListener, METH_VARARGS },
	 { (char *)"scfQuery_iPcSoundListener", _wrap_scfQuery_iPcSoundListener, METH_VARARGS },
	 { (char *)"iPcPropertyListener_PropertyChanged", _wrap_iPcPropertyListener_PropertyChanged, METH_VARARGS },
	 { (char *)"delete_iPcPropertyListener", _wrap_delete_iPcPropertyListener, METH_VARARGS },
	 { (char *)"iPcPropertyListener_swigregister", iPcPropertyListener_swigregister, METH_VARARGS },
	 { (char *)"iPcProperties_AddPropertyListener", _wrap_iPcProperties_AddPropertyListener, METH_VARARGS },
	 { (char *)"iPcProperties_RemovePropertyListener", _wrap_iPcProperties_RemovePropertyListener, METH_VARARGS },
	 { (char *)"iPcProperties_SetProperty", _wrap_iPcProperties_SetProperty, METH_VARARGS },
	 { (char *)"iPcProperties_GetPropertyIndex", _wrap_iPcProperties_GetPropertyIndex, METH_VARARGS },
	 { (char *)"iPcProperties_SetPropertyIndex", _wrap_iPcProperties_SetPropertyIndex, METH_VARARGS },
	 { (char *)"iPcProperties_GetPropertyType", _wrap_iPcProperties_GetPropertyType, METH_VARARGS },
	 { (char *)"iPcProperties_GetPropertyFloat", _wrap_iPcProperties_GetPropertyFloat, METH_VARARGS },
	 { (char *)"iPcProperties_GetPropertyLong", _wrap_iPcProperties_GetPropertyLong, METH_VARARGS },
	 { (char *)"iPcProperties_GetPropertyBool", _wrap_iPcProperties_GetPropertyBool, METH_VARARGS },
	 { (char *)"iPcProperties_GetPropertyVector", _wrap_iPcProperties_GetPropertyVector, METH_VARARGS },
	 { (char *)"iPcProperties_GetPropertyColor", _wrap_iPcProperties_GetPropertyColor, METH_VARARGS },
	 { (char *)"iPcProperties_GetPropertyString", _wrap_iPcProperties_GetPropertyString, METH_VARARGS },
	 { (char *)"iPcProperties_GetPropertyPClass", _wrap_iPcProperties_GetPropertyPClass, METH_VARARGS },
	 { (char *)"iPcProperties_GetPropertyEntity", _wrap_iPcProperties_GetPropertyEntity, METH_VARARGS },
	 { (char *)"iPcProperties_ClearProperty", _wrap_iPcProperties_ClearProperty, METH_VARARGS },
	 { (char *)"iPcProperties_Clear", _wrap_iPcProperties_Clear, METH_VARARGS },
	 { (char *)"iPcProperties_GetPropertyCount", _wrap_iPcProperties_GetPropertyCount, METH_VARARGS },
	 { (char *)"iPcProperties_GetPropertyName", _wrap_iPcProperties_GetPropertyName, METH_VARARGS },
	 { (char *)"iPcProperties_Dump", _wrap_iPcProperties_Dump, METH_VARARGS },
	 { (char *)"delete_iPcProperties", _wrap_delete_iPcProperties, METH_VARARGS },
	 { (char *)"iPcProperties_swigregister", iPcProperties_swigregister, METH_VARARGS },
	 { (char *)"celCreateProperties", _wrap_celCreateProperties, METH_VARARGS },
	 { (char *)"celGetProperties", _wrap_celGetProperties, METH_VARARGS },
	 { (char *)"scfQuery_iPcProperties", _wrap_scfQuery_iPcProperties, METH_VARARGS },
	 { (char *)"iPcHover_SetWorldMesh", _wrap_iPcHover_SetWorldMesh, METH_VARARGS },
	 { (char *)"iPcHover_SetWorld", _wrap_iPcHover_SetWorld, METH_VARARGS },
	 { (char *)"iPcHover_SetHeightBeamCutoff", _wrap_iPcHover_SetHeightBeamCutoff, METH_VARARGS },
	 { (char *)"iPcHover_SetAngularBeamOffset", _wrap_iPcHover_SetAngularBeamOffset, METH_VARARGS },
	 { (char *)"iPcHover_SetAngularCutoffHeight", _wrap_iPcHover_SetAngularCutoffHeight, METH_VARARGS },
	 { (char *)"iPcHover_SetAngularCorrectionStrength", _wrap_iPcHover_SetAngularCorrectionStrength, METH_VARARGS },
	 { (char *)"iPcHover_SetStabiliserFunction", _wrap_iPcHover_SetStabiliserFunction, METH_VARARGS },
	 { (char *)"iPcHover_UseDefaultFunction", _wrap_iPcHover_UseDefaultFunction, METH_VARARGS },
	 { (char *)"iPcHover_GetHeight", _wrap_iPcHover_GetHeight, METH_VARARGS },
	 { (char *)"delete_iPcHover", _wrap_delete_iPcHover, METH_VARARGS },
	 { (char *)"iPcHover_swigregister", iPcHover_swigregister, METH_VARARGS },
	 { (char *)"celCreateHover", _wrap_celCreateHover, METH_VARARGS },
	 { (char *)"celGetHover", _wrap_celGetHover, METH_VARARGS },
	 { (char *)"scfQuery_iPcHover", _wrap_scfQuery_iPcHover, METH_VARARGS },
	 { (char *)"iPcCraftController_StartTurnLeft", _wrap_iPcCraftController_StartTurnLeft, METH_VARARGS },
	 { (char *)"iPcCraftController_StopTurnLeft", _wrap_iPcCraftController_StopTurnLeft, METH_VARARGS },
	 { (char *)"iPcCraftController_StartTurnRight", _wrap_iPcCraftController_StartTurnRight, METH_VARARGS },
	 { (char *)"iPcCraftController_StopTurnRight", _wrap_iPcCraftController_StopTurnRight, METH_VARARGS },
	 { (char *)"iPcCraftController_StartTurnUp", _wrap_iPcCraftController_StartTurnUp, METH_VARARGS },
	 { (char *)"iPcCraftController_StopTurnUp", _wrap_iPcCraftController_StopTurnUp, METH_VARARGS },
	 { (char *)"iPcCraftController_StartTurnDown", _wrap_iPcCraftController_StartTurnDown, METH_VARARGS },
	 { (char *)"iPcCraftController_StopTurnDown", _wrap_iPcCraftController_StopTurnDown, METH_VARARGS },
	 { (char *)"iPcCraftController_SetAccTurn", _wrap_iPcCraftController_SetAccTurn, METH_VARARGS },
	 { (char *)"iPcCraftController_SetAccPitch", _wrap_iPcCraftController_SetAccPitch, METH_VARARGS },
	 { (char *)"iPcCraftController_SetMaxTurn", _wrap_iPcCraftController_SetMaxTurn, METH_VARARGS },
	 { (char *)"iPcCraftController_SetMaxPitch", _wrap_iPcCraftController_SetMaxPitch, METH_VARARGS },
	 { (char *)"iPcCraftController_SetThrustForce", _wrap_iPcCraftController_SetThrustForce, METH_VARARGS },
	 { (char *)"iPcCraftController_SetTopSpeed", _wrap_iPcCraftController_SetTopSpeed, METH_VARARGS },
	 { (char *)"iPcCraftController_SetRedirectVelocityRatio", _wrap_iPcCraftController_SetRedirectVelocityRatio, METH_VARARGS },
	 { (char *)"iPcCraftController_ThrustOn", _wrap_iPcCraftController_ThrustOn, METH_VARARGS },
	 { (char *)"iPcCraftController_ThrustOff", _wrap_iPcCraftController_ThrustOff, METH_VARARGS },
	 { (char *)"iPcCraftController_SetAfterBurnerTopSpeed", _wrap_iPcCraftController_SetAfterBurnerTopSpeed, METH_VARARGS },
	 { (char *)"iPcCraftController_AfterBurnerOn", _wrap_iPcCraftController_AfterBurnerOn, METH_VARARGS },
	 { (char *)"iPcCraftController_AfterBurnerOff", _wrap_iPcCraftController_AfterBurnerOff, METH_VARARGS },
	 { (char *)"delete_iPcCraftController", _wrap_delete_iPcCraftController, METH_VARARGS },
	 { (char *)"iPcCraftController_swigregister", iPcCraftController_swigregister, METH_VARARGS },
	 { (char *)"celCreateCraftController", _wrap_celCreateCraftController, METH_VARARGS },
	 { (char *)"celGetCraftController", _wrap_celGetCraftController, METH_VARARGS },
	 { (char *)"scfQuery_iPcCraftController", _wrap_scfQuery_iPcCraftController, METH_VARARGS },
	 { NULL, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_celInitializerTo_p_csInitializer(void *x) {
    return (void *)((csInitializer *)  ((celInitializer *) x));
}
static void *_p_csColor4To_p_csColor(void *x) {
    return (void *)((csColor *)  ((csColor4 *) x));
}
static void *_p_iSndSysSourceSoftware3DTo_p_iSndSysSource(void *x) {
    return (void *)((iSndSysSource *) (iSndSysSourceSoftware *) ((iSndSysSourceSoftware3D *) x));
}
static void *_p_iSndSysSourceSoftwareTo_p_iSndSysSource(void *x) {
    return (void *)((iSndSysSource *)  ((iSndSysSourceSoftware *) x));
}
static void *_p_iAwsRGBKeyTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsKey *) ((iAwsRGBKey *) x));
}
static void *_p_iEventTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEvent *) x));
}
static void *_p_iRendererLightmapTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iRendererLightmap *) x));
}
static void *_p_iSuperLightmapTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSuperLightmap *) x));
}
static void *_p_iConsoleOutputTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iConsoleOutput *) x));
}
static void *_p_iParticlesObjectStateTo_p_iBase(void *x) {
    return (void *)((iBase *) (iParticlesStateBase *) ((iParticlesObjectState *) x));
}
static void *_p_iTerrainObjectStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTerrainObjectState *) x));
}
static void *_p_iClipper2DTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iClipper2D *) x));
}
static void *_p_iDebugHelperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDebugHelper *) x));
}
static void *_p_iODEDynamicStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iODEDynamicState *) x));
}
static void *_p_iMaterialEngineTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMaterialEngine *) x));
}
static void *_p_iDocumentAttributeTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDocumentAttribute *) x));
}
static void *_p_iImageIOTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iImageIO *) x));
}
static void *_p_iODEHingeJointTo_p_iBase(void *x) {
    return (void *)((iBase *) (iODEGeneralJointState *) ((iODEHingeJoint *) x));
}
static void *_p_iPcMovableConstraintTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcMovableConstraint *) x));
}
static void *_p_iBillboardLayerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iBillboardLayer *) x));
}
static void *_p_iBillboardTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iBillboard *) x));
}
static void *_p_iPcBillboardTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcBillboard *) x));
}
static void *_p_iLoaderStatusTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLoaderStatus *) x));
}
static void *_p_iImageTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iImage *) x));
}
static void *_p_iODEBallJointTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iODEBallJoint *) x));
}
static void *_p_iPcCharacteristicsTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcCharacteristics *) x));
}
static void *_p_iTextureHandleTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTextureHandle *) x));
}
static void *_p_iGeneralMeshStateTo_p_iBase(void *x) {
    return (void *)((iBase *) (iGeneralMeshCommonState *) ((iGeneralMeshState *) x));
}
static void *_p_iDynamicsTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDynamics *) x));
}
static void *_p_iParameterESMTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iParameterESM *) x));
}
static void *_p_iSndSysSoftwareOutputFilterTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSndSysSoftwareOutputFilter *) x));
}
static void *_p_iPcCommandInputTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcCommandInput *) x));
}
static void *_p_iAwsIntKeyTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsKey *) ((iAwsIntKey *) x));
}
static void *_p_iSaverTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSaver *) x));
}
static void *_p_iODEDynamicSystemStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iODEDynamicSystemState *) x));
}
static void *_p_iMeshListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshList *) x));
}
static void *_p_iEventPlugTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEventPlug *) x));
}
static void *_p_iCelPropertyClassTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelPropertyClass *) x));
}
static void *_p_iODEJointStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iODEJointState *) x));
}
static void *_p_iODEGeneralJointStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iODEGeneralJointState *) x));
}
static void *_p_iSndSysWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSndSysWrapper *) x));
}
static void *_p_iTextureWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTextureWrapper *) x));
}
static void *_p_iMaterialWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMaterialWrapper *) x));
}
static void *_p_iMeshWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshWrapper *) x));
}
static void *_p_iMeshFactoryWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshFactoryWrapper *) x));
}
static void *_p_iStringTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iString *) x));
}
static void *_p_iSequenceWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSequenceWrapper *) x));
}
static void *_p_iEngineTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEngine *) x));
}
static void *_p_iConsoleWatcherTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iConsoleWatcher *) x));
}
static void *_p_iPcMechanicsThrusterTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcMechanicsThruster *) x));
}
static void *_p_iPcInventoryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcInventory *) x));
}
static void *_p_iMaterialTo_p_iBase(void *x) {
    return (void *)((iBase *) (iShaderVariableContext *) ((iMaterial *) x));
}
static void *_p_iSimpleFormerStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSimpleFormerState *) x));
}
static void *_p_iSprite2DUVAnimationTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSprite2DUVAnimation *) x));
}
static void *_p_iPolygonMeshTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPolygonMesh *) x));
}
static void *_p_iParticlesFactoryStateTo_p_iBase(void *x) {
    return (void *)((iBase *) (iParticlesStateBase *) ((iParticlesFactoryState *) x));
}
static void *_p_iTerrainFactoryStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTerrainFactoryState *) x));
}
static void *_p_iThingFactoryStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iThingFactoryState *) x));
}
static void *_p_iSpriteCal3DFactoryStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSpriteCal3DFactoryState *) x));
}
static void *_p_iSprite3DFactoryStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSprite3DFactoryState *) x));
}
static void *_p_iSprite2DFactoryStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSprite2DFactoryState *) x));
}
static void *_p_iGeneralFactoryStateTo_p_iBase(void *x) {
    return (void *)((iBase *) (iGeneralMeshCommonState *) ((iGeneralFactoryState *) x));
}
static void *_p_iSCFTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSCF *) x));
}
static void *_p_iDocumentTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDocument *) x));
}
static void *_p_iGraphics2DTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iGraphics2D *) x));
}
static void *_p_iShaderPriorityListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iShaderPriorityList *) x));
}
static void *_p_iCelEntityListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelEntityList *) x));
}
static void *_p_iSndSysSourceSoftware3DTo_p_iBase(void *x) {
    return (void *)((iBase *) (iSndSysSource *)(iSndSysSourceSoftware *) ((iSndSysSourceSoftware3D *) x));
}
static void *_p_iMeshObjectTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshObject *) x));
}
static void *_p_iDataBufferTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDataBuffer *) x));
}
static void *_p_iScriptObjectTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iScriptObject *) x));
}
static void *_p_iSequenceTimedOperationTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSequenceTimedOperation *) x));
}
static void *_p_iPcDefaultCameraTo_p_iBase(void *x) {
    return (void *)((iBase *) (iPcCamera *) ((iPcDefaultCamera *) x));
}
static void *_p_iFontServerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFontServer *) x));
}
static void *_p_iStringArrayTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iStringArray *) x));
}
static void *_p_iReporterTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iReporter *) x));
}
static void *_p_iPcHoverTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcHover *) x));
}
static void *_p_iPathTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPath *) x));
}
static void *_p_iPluginIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPluginIterator *) x));
}
static void *_p_iEventAttributeIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEventAttributeIterator *) x));
}
static void *_p_iObjectRegistryIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iObjectRegistryIterator *) x));
}
static void *_p_iObjectIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iObjectIterator *) x));
}
static void *_p_iLightIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLightIterator *) x));
}
static void *_p_iSectorIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSectorIterator *) x));
}
static void *_p_iMeshWrapperIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshWrapperIterator *) x));
}
static void *_p_iVisibilityObjectIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVisibilityObjectIterator *) x));
}
static void *_p_iConfigIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iConfigIterator *) x));
}
static void *_p_iDocumentAttributeIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDocumentAttributeIterator *) x));
}
static void *_p_iDocumentNodeIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDocumentNodeIterator *) x));
}
static void *_p_iReporterIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iReporterIterator *) x));
}
static void *_p_iMapNodeTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMapNode *) x));
}
static void *_p_iGenMeshAnimationControlTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iGenMeshAnimationControl *) x));
}
static void *_p_iEventNameRegistryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEventNameRegistry *) x));
}
static void *_p_iObjectRegistryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iObjectRegistry *) x));
}
static void *_p_iCelPlLayerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelPlLayer *) x));
}
static void *_p_iCelBlLayerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelBlLayer *) x));
}
static void *_p_iPcLinearMovementTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcLinearMovement *) x));
}
static void *_p_iObjectNameChangeListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iObjectNameChangeListener *) x));
}
static void *_p_iSndSysListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSndSysListener *) x));
}
static void *_p_iObjectModelListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iObjectModelListener *) x));
}
static void *_p_iCameraSectorListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCameraSectorListener *) x));
}
static void *_p_iMovableListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMovableListener *) x));
}
static void *_p_iVisibilityCullerListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVisibilityCullerListener *) x));
}
static void *_p_iDocumentSystemTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDocumentSystem *) x));
}
static void *_p_iReporterListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iReporterListener *) x));
}
static void *_p_iStandardReporterListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iStandardReporterListener *) x));
}
static void *_p_iCelTimerListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelTimerListener *) x));
}
static void *_p_iPcMeshSelectListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcMeshSelectListener *) x));
}
static void *_p_iPcInventoryListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcInventoryListener *) x));
}
static void *_p_iPcSoundListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcSoundListener *) x));
}
static void *_p_iPcPropertyListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcPropertyListener *) x));
}
static void *_p_iPcTimerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcTimer *) x));
}
static void *_p_iSndSysRendererSoftwareTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSndSysRendererSoftware *) x));
}
static void *_p_iSndSysSourceSoftwareTo_p_iBase(void *x) {
    return (void *)((iBase *) (iSndSysSource *) ((iSndSysSourceSoftware *) x));
}
static void *_p_iSprite2DUVAnimationFrameTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSprite2DUVAnimationFrame *) x));
}
static void *_p_iTerraFormerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTerraFormer *) x));
}
static void *_p_iSectorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSector *) x));
}
static void *_p_iCelZoneTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelZone *) x));
}
static void *_p_iSequenceTriggerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSequenceTrigger *) x));
}
static void *_p_iPortalContainerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPortalContainer *) x));
}
static void *_p_iAwsKeyContainerTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsKey *) ((iAwsKeyContainer *) x));
}
static void *_p_iODESliderJointTo_p_iBase(void *x) {
    return (void *)((iBase *) (iODEGeneralJointState *) ((iODESliderJoint *) x));
}
static void *_p_iODEAMotorJointTo_p_iBase(void *x) {
    return (void *)((iBase *) (iODEGeneralJointState *) ((iODEAMotorJoint *) x));
}
static void *_p_iODEHinge2JointTo_p_iBase(void *x) {
    return (void *)((iBase *) (iODEGeneralJointState *) ((iODEHinge2Joint *) x));
}
static void *_p_iPcGravityTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcGravity *) x));
}
static void *_p_iCameraPositionListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCameraPositionList *) x));
}
static void *_p_iRegionListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iRegionList *) x));
}
static void *_p_iSpriteActionTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSpriteAction *) x));
}
static void *_p_iLightListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLightList *) x));
}
static void *_p_iSndSysRendererCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSndSysRendererCallback *) x));
}
static void *_p_iSndSysStreamCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSndSysStreamCallback *) x));
}
static void *_p_iParticlesColorCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iParticlesColorCallback *) x));
}
static void *_p_iMeshObjectDrawCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshObjectDrawCallback *) x));
}
static void *_p_iPortalCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPortalCallback *) x));
}
static void *_p_iLightCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLightCallback *) x));
}
static void *_p_iSectorCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSectorCallback *) x));
}
static void *_p_iSectorMeshCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSectorMeshCallback *) x));
}
static void *_p_iLightVisibleCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLightVisibleCallback *) x));
}
static void *_p_iEngineFrameCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEngineFrameCallback *) x));
}
static void *_p_iEngineSectorCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEngineSectorCallback *) x));
}
static void *_p_iTextureCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTextureCallback *) x));
}
static void *_p_iMeshDrawCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshDrawCallback *) x));
}
static void *_p_iObjectTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iObject *) x));
}
static void *_p_iVisibilityObjectTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVisibilityObject *) x));
}
static void *_p_iOffscreenCanvasCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iOffscreenCanvasCallback *) x));
}
static void *_p_iDynamicsMoveCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDynamicsMoveCallback *) x));
}
static void *_p_iDynamicsCollisionCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDynamicsCollisionCallback *) x));
}
static void *_p_iDynamicsColliderCollisionCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDynamicsColliderCollisionCallback *) x));
}
static void *_p_iODEFrameUpdateCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iODEFrameUpdateCallback *) x));
}
static void *_p_iCelNewEntityCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelNewEntityCallback *) x));
}
static void *_p_iCelEntityRemoveCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelEntityRemoveCallback *) x));
}
static void *_p_iPcMechanicsObjectTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcMechanicsObject *) x));
}
static void *_p_iPcGravityCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcGravityCallback *) x));
}
static void *_p_iCameraTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCamera *) x));
}
static void *_p_iCommandLineParserTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCommandLineParser *) x));
}
static void *_p_iMeshFactoryListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshFactoryList *) x));
}
static void *_p_iPcCameraTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcCamera *) x));
}
static void *_p_iPcSimpleCameraTo_p_iBase(void *x) {
    return (void *)((iBase *) (iPcCamera *) ((iPcSimpleCamera *) x));
}
static void *_p_iVirtualClockTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVirtualClock *) x));
}
static void *_p_iMeshObjectTypeTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshObjectType *) x));
}
static void *_p_iGraphics3DTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iGraphics3D *) x));
}
static void *_p_iMovieRecorderTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMovieRecorder *) x));
}
static void *_p_iSprite2DStateTo_p_iBase(void *x) {
    return (void *)((iBase *) (iSprite2DFactoryState *) ((iSprite2DState *) x));
}
static void *_p_iThingEnvironmentTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iThingEnvironment *) x));
}
static void *_p_iMovableTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMovable *) x));
}
static void *_p_iPcMovableTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcMovable *) x));
}
static void *_p_iSectorListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSectorList *) x));
}
static void *_p_iShaderVariableContextTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iShaderVariableContext *) x));
}
static void *_p_iSndSysSoftwareFilter3DTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSndSysSoftwareFilter3D *) x));
}
static void *_p_iCollideSystemTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCollideSystem *) x));
}
static void *_p_iDynamicSystemTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDynamicSystem *) x));
}
static void *_p_iPcMechanicsSystemTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcMechanicsSystem *) x));
}
static void *_p_iShaderCompilerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iShaderCompiler *) x));
}
static void *_p_iParticlesPhysicsTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iParticlesPhysics *) x));
}
static void *_p_iLightingProcessDataTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLightingProcessData *) x));
}
static void *_p_iCelEntityTrackerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelEntityTracker *) x));
}
static void *_p_iCameraPositionTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCameraPosition *) x));
}
static void *_p_iBinaryLoaderPluginTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iBinaryLoaderPlugin *) x));
}
static void *_p_iLoaderPluginTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLoaderPlugin *) x));
}
static void *_p_iHaloTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iHalo *) x));
}
static void *_p_iSpriteCal3DSocketTo_p_iBase(void *x) {
    return (void *)((iBase *) (iSpriteSocket *) ((iSpriteCal3DSocket *) x));
}
static void *_p_iSndSysStreamTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSndSysStream *) x));
}
static void *_p_iVisibilityCullerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVisibilityCuller *) x));
}
static void *_p_iGeneralMeshCommonStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iGeneralMeshCommonState *) x));
}
static void *_p_iConfigFileTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iConfigFile *) x));
}
static void *_p_iEventQueueTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEventQueue *) x));
}
static void *_p_iRigidBodyTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iRigidBody *) x));
}
static void *_p_iPcSoundSourceTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcSoundSource *) x));
}
static void *_p_iEventOutletTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEventOutlet *) x));
}
static void *_p_iAwsComponentNodeTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsKey *)(iAwsKeyContainer *) ((iAwsComponentNode *) x));
}
static void *_p_iDocumentNodeTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDocumentNode *) x));
}
static void *_p_iKeyboardDriverTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iKeyboardDriver *) x));
}
static void *_p_iSpriteCal3DStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSpriteCal3DState *) x));
}
static void *_p_iSprite3DStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSprite3DState *) x));
}
static void *_p_iBodyGroupTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iBodyGroup *) x));
}
static void *_p_iFrustumViewTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFrustumView *) x));
}
static void *_p_iCelBehaviourTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelBehaviour *) x));
}
static void *_p_iEventHandlerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEventHandler *) x));
}
static void *_p_iAnimTimeUpdateHandlerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAnimTimeUpdateHandler *) x));
}
static void *_p__csPyEventHandlerTo_p_iBase(void *x) {
    return (void *)((iBase *) (iEventHandler *) ((_csPyEventHandler *) x));
}
static void *_p_iBillboardEventHandlerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iBillboardEventHandler *) x));
}
static void *_p_iPortalTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPortal *) x));
}
static void *_p_iPcTooltipTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcTooltip *) x));
}
static void *_p_iAwsTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAws *) x));
}
static void *_p_iEngineSequenceParametersTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEngineSequenceParameters *) x));
}
static void *_p_iAwsKeyTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsKey *) x));
}
static void *_p_iGenMeshAnimationControlTypeTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iGenMeshAnimationControlType *) x));
}
static void *_p_iFileTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFile *) x));
}
static void *_p_iKeyComposerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iKeyComposer *) x));
}
static void *_p_iMaterialListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMaterialList *) x));
}
static void *_p_iAwsRectKeyTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsKey *) ((iAwsRectKey *) x));
}
static void *_p_iLightingProcessInfoTo_p_iBase(void *x) {
    return (void *)((iBase *) (iFrustumViewUserdata *) ((iLightingProcessInfo *) x));
}
static void *_p_iSpriteSocketTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSpriteSocket *) x));
}
static void *_p_iPcActorMoveTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcActorMove *) x));
}
static void *_p_iSndSysRendererTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSndSysRenderer *) x));
}
static void *_p_iComponentTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iComponent *) x));
}
static void *_p_iAwsComponentTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsSource *) ((iAwsComponent *) x));
}
static void *_p_iAwsStringKeyTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsKey *) ((iAwsStringKey *) x));
}
static void *_p_iSndSysSourceTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSndSysSource *) x));
}
static void *_p_iAwsSourceTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsSource *) x));
}
static void *_p_iCelEntityTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelEntity *) x));
}
static void *_p_iVFSTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVFS *) x));
}
static void *_p_iJoystickDriverTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iJoystickDriver *) x));
}
static void *_p_iMouseDriverTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMouseDriver *) x));
}
static void *_p_iSndSysSoftwareDriverTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSndSysSoftwareDriver *) x));
}
static void *_p_iMeshObjectFactoryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshObjectFactory *) x));
}
static void *_p_iGenMeshAnimationControlFactoryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iGenMeshAnimationControlFactory *) x));
}
static void *_p_iAwsConnectionNodeFactoryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsConnectionNodeFactory *) x));
}
static void *_p_iAwsKeyFactoryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsKeyFactory *) x));
}
static void *_p_iAwsComponentFactoryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsComponentFactory *) x));
}
static void *_p_iFactoryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFactory *) x));
}
static void *_p_iSndSysLoaderTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSndSysLoader *) x));
}
static void *_p_iLoaderTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLoader *) x));
}
static void *_p_iFrustumViewUserdataTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFrustumViewUserdata *) x));
}
static void *_p_iAwsSinkTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsSink *) x));
}
static void *_p_iCelInventorySpaceTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelInventorySpace *) x));
}
static void *_p_iShaderTo_p_iBase(void *x) {
    return (void *)((iBase *) (iShaderVariableContext *) ((iShader *) x));
}
static void *_p_iTextureListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTextureList *) x));
}
static void *_p_iNativeWindowTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iNativeWindow *) x));
}
static void *_p_iPcMechanicsJointTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcMechanicsJoint *) x));
}
static void *_p_iCelRegionTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelRegion *) x));
}
static void *_p_iSpriteFrameTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSpriteFrame *) x));
}
static void *_p_iPcMechanicsBalancedGroupTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcMechanicsBalancedGroup *) x));
}
static void *_p_iFontDeleteNotifyTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFontDeleteNotify *) x));
}
static void *_p_iThingStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iThingState *) x));
}
static void *_p_iAwsFloatKeyTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsKey *) ((iAwsFloatKey *) x));
}
static void *_p_iPcMechanicsThrusterControllerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcMechanicsThrusterController *) x));
}
static void *_p_iPcCraftControllerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcCraftController *) x));
}
static void *_p_iJointTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iJoint *) x));
}
static void *_p_iPcPropertiesTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcProperties *) x));
}
static void *_p_iShaderVariableAccessorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iShaderVariableAccessor *) x));
}
static void *_p_iFontTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFont *) x));
}
static void *_p_iTerraSamplerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTerraSampler *) x));
}
static void *_p_iAwsSlotTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsSlot *) x));
}
static void *_p_iSceneNodeTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSceneNode *) x));
}
static void *_p_iLightTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLight *) x));
}
static void *_p_iViewTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iView *) x));
}
static void *_p_iCelInventorySpaceSlotTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelInventorySpaceSlot *) x));
}
static void *_p_iColliderTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCollider *) x));
}
static void *_p_iDynamicsSystemColliderTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDynamicsSystemCollider *) x));
}
static void *_p_iODEUniversalJointTo_p_iBase(void *x) {
    return (void *)((iBase *) (iODEGeneralJointState *) ((iODEUniversalJoint *) x));
}
static void *_p_iCelParameterBlockTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelParameterBlock *) x));
}
static void *_p_iPcMeshSelectTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcMeshSelect *) x));
}
static void *_p_iPolygonHandleTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPolygonHandle *) x));
}
static void *_p_iObjectModelTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iObjectModel *) x));
}
static void *_p_iAwsConnectionKeyTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsKey *) ((iAwsConnectionKey *) x));
}
static void *_p_iCelPropertyClassListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelPropertyClassList *) x));
}
static void *_p_iRegionTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iRegion *) x));
}
static void *_p_iStringSetTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iStringSet *) x));
}
static void *_p_iPcRegionTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcRegion *) x));
}
static void *_p_iCelMapFileTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelMapFile *) x));
}
static void *_p_iPluginManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPluginManager *) x));
}
static void *_p_iCacheManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCacheManager *) x));
}
static void *_p_iSndSysManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSndSysManager *) x));
}
static void *_p_iAwsLayoutManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsLayoutManager *) x));
}
static void *_p_iAwsSinkManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsSinkManager *) x));
}
static void *_p_iAwsPrefManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsPrefManager *) x));
}
static void *_p_iParticlesStateBaseTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iParticlesStateBase *) x));
}
static void *_p_iConfigManagerTo_p_iBase(void *x) {
    return (void *)((iBase *) (iConfigFile *) ((iConfigManager *) x));
}
static void *_p_iNativeWindowManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iNativeWindowManager *) x));
}
static void *_p_iShaderManagerTo_p_iBase(void *x) {
    return (void *)((iBase *) (iShaderVariableContext *) ((iShaderManager *) x));
}
static void *_p_iTextureManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTextureManager *) x));
}
static void *_p_iEngineSequenceManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEngineSequenceManager *) x));
}
static void *_p_iBillboardManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iBillboardManager *) x));
}
static void *_p_iPcZoneManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcZoneManager *) x));
}
static void *_p_iAwsPointKeyTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsKey *) ((iAwsPointKey *) x));
}
static void *_p_iScriptTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iScript *) x));
}
static void *_p_iPcSolidTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcSolid *) x));
}
static void *_p_iSndSysDataTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSndSysData *) x));
}
static void *_p_iPcMeshTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcMesh *) x));
}
static void *_p_iEventCordTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEventCord *) x));
}
static void *_p_iPcDefaultCameraTo_p_iPcCamera(void *x) {
    return (void *)((iPcCamera *)  ((iPcDefaultCamera *) x));
}
static void *_p_iPcSimpleCameraTo_p_iPcCamera(void *x) {
    return (void *)((iPcCamera *)  ((iPcSimpleCamera *) x));
}
static swig_type_info _swigt__p_iCollider[] = {{"_p_iCollider", 0, "iCollider *", 0},{"_p_iCollider"},{0}};
static swig_type_info _swigt__p_iDocumentNode[] = {{"_p_iDocumentNode", 0, "iDocumentNode *", 0},{"_p_iDocumentNode"},{0}};
static swig_type_info _swigt__p_iObjectRegistry[] = {{"_p_iObjectRegistry", 0, "iObjectRegistry *", 0},{"_p_iObjectRegistry"},{0}};
static swig_type_info _swigt__p_iPcMovableConstraint[] = {{"_p_iPcMovableConstraint", 0, "iPcMovableConstraint *", 0},{"_p_iPcMovableConstraint"},{0}};
static swig_type_info _swigt__p_iCelPropertyClassList[] = {{"_p_iCelPropertyClassList", 0, "iCelPropertyClassList *", 0},{"_p_iCelPropertyClassList"},{0}};
static swig_type_info _swigt__p_celPersistenceType[] = {{"_p_celPersistenceType", 0, "celPersistenceType *", 0},{"_p_celPersistenceType"},{0}};
static swig_type_info _swigt__p_celInitializer[] = {{"_p_celInitializer", 0, "celInitializer *", 0},{"_p_celInitializer"},{0}};
static swig_type_info _swigt__p_csInitializer[] = {{"_p_csInitializer", 0, "csInitializer *", 0},{"_p_csInitializer"},{"_p_celInitializer", _p_celInitializerTo_p_csInitializer},{0}};
static swig_type_info _swigt__p_csStringID[] = {{"_p_csStringID", 0, "csStringID *", 0},{"_p_csStringID"},{0}};
static swig_type_info _swigt__p_size_t[] = {{"_p_size_t", 0, "size_t *", 0},{"_p_size_t"},{0}};
static swig_type_info _swigt__p_iPcDefaultCamera[] = {{"_p_iPcDefaultCamera", 0, "iPcDefaultCamera *", 0},{"_p_iPcDefaultCamera"},{0}};
static swig_type_info _swigt__p_iCelPropertyClassFactory[] = {{"_p_iCelPropertyClassFactory", 0, "iCelPropertyClassFactory *", 0},{"_p_iCelPropertyClassFactory"},{0}};
static swig_type_info _swigt__p_iSector[] = {{"_p_iSector", 0, "iSector *", 0},{"_p_iSector"},{0}};
static swig_type_info _swigt__p_p_iSector[] = {{"_p_p_iSector", 0, "iSector **", 0},{"_p_p_iSector"},{0}};
static swig_type_info _swigt__p_iCelParameterBlock[] = {{"_p_iCelParameterBlock", 0, "iCelParameterBlock *", 0},{"_p_iCelParameterBlock"},{0}};
static swig_type_info _swigt__p_csPtrTiCelEntityList_t[] = {{"_p_csPtrTiCelEntityList_t", 0, "csPtr<iCelEntityList > *", 0},{"_p_csPtrTiCelEntityList_t"},{0}};
static swig_type_info _swigt__p_bool[] = {{"_p_bool", 0, "bool *", 0},{"_p_bool"},{0}};
static swig_type_info _swigt__p_iPcCharacteristics[] = {{"_p_iPcCharacteristics", 0, "iPcCharacteristics *", 0},{"_p_iPcCharacteristics"},{0}};
static swig_type_info _swigt__p_iPcMeshSelect[] = {{"_p_iPcMeshSelect", 0, "iPcMeshSelect *", 0},{"_p_iPcMeshSelect"},{0}};
static swig_type_info _swigt__p_iPcTooltip[] = {{"_p_iPcTooltip", 0, "iPcTooltip *", 0},{"_p_iPcTooltip"},{0}};
static swig_type_info _swigt__p_iPcProperties[] = {{"_p_iPcProperties", 0, "iPcProperties *", 0},{"_p_iPcProperties"},{0}};
static swig_type_info _swigt__p_iCelEntityTracker[] = {{"_p_iCelEntityTracker", 0, "iCelEntityTracker *", 0},{"_p_iCelEntityTracker"},{0}};
static swig_type_info _swigt__p_csColor[] = {{"_p_csColor", 0, "csColor *", 0},{"_p_csColor"},{"_p_csColor4", _p_csColor4To_p_csColor},{0}};
static swig_type_info _swigt__p_iCelRegion[] = {{"_p_iCelRegion", 0, "iCelRegion *", 0},{"_p_iCelRegion"},{0}};
static swig_type_info _swigt__p_iCelEntity[] = {{"_p_iCelEntity", 0, "iCelEntity *", 0},{"_p_iCelEntity"},{0}};
static swig_type_info _swigt__p_iPcLight[] = {{"_p_iPcLight", 0, "iPcLight *", 0},{"_p_iPcLight"},{0}};
static swig_type_info _swigt__p_void[] = {{"_p_void", 0, "void *", 0},{"_p_void"},{0}};
static swig_type_info _swigt__p_int[] = {{"_p_int", 0, "int *", 0},{"_p_int"},{0}};
static swig_type_info _swigt__p_csPtrTiCelDataBuffer_t[] = {{"_p_csPtrTiCelDataBuffer_t", 0, "csPtr<iCelDataBuffer > *", 0},{"_p_csPtrTiCelDataBuffer_t"},{0}};
static swig_type_info _swigt__p_iCelMapFile[] = {{"_p_iCelMapFile", 0, "iCelMapFile *", 0},{"_p_iCelMapFile"},{0}};
static swig_type_info _swigt__p_iPath[] = {{"_p_iPath", 0, "iPath *", 0},{"_p_iPath"},{0}};
static swig_type_info _swigt__p_iJoint[] = {{"_p_iJoint", 0, "iJoint *", 0},{"_p_iJoint"},{0}};
static swig_type_info _swigt__p_iCelEntityList[] = {{"_p_iCelEntityList", 0, "iCelEntityList *", 0},{"_p_iCelEntityList"},{0}};
static swig_type_info _swigt__p_celData[] = {{"_p_celData", 0, "celData *", 0},{"_p_celData"},{0}};
static swig_type_info _swigt__p_iPcMechanicsObject[] = {{"_p_iPcMechanicsObject", 0, "iPcMechanicsObject *", 0},{"_p_iPcMechanicsObject"},{0}};
static swig_type_info _swigt__p_iObject[] = {{"_p_iObject", 0, "iObject *", 0},{"_p_iObject"},{0}};
static swig_type_info _swigt__p_celEntityTemplateParams[] = {{"_p_celEntityTemplateParams", 0, "celEntityTemplateParams const *", 0},{"_p_celEntityTemplateParams"},{0}};
static swig_type_info _swigt__p_iPcBillboard[] = {{"_p_iPcBillboard", 0, "iPcBillboard *", 0},{"_p_iPcBillboard"},{0}};
static swig_type_info _swigt__p_iBillboard[] = {{"_p_iBillboard", 0, "iBillboard *", 0},{"_p_iBillboard"},{0}};
static swig_type_info _swigt__p_iPcLinearMovement[] = {{"_p_iPcLinearMovement", 0, "iPcLinearMovement *", 0},{"_p_iPcLinearMovement"},{0}};
static swig_type_info _swigt__p_csPath[] = {{"_p_csPath", 0, "csPath *", 0},{"_p_csPath"},{0}};
static swig_type_info _swigt__p_iSndSysSource[] = {{"_p_iSndSysSource", 0, "iSndSysSource *", 0},{"_p_iSndSysSourceSoftware3D", _p_iSndSysSourceSoftware3DTo_p_iSndSysSource},{"_p_iSndSysSource"},{"_p_iSndSysSourceSoftware", _p_iSndSysSourceSoftwareTo_p_iSndSysSource},{0}};
static swig_type_info _swigt__p_iString[] = {{"_p_iString", 0, "iString *", 0},{"_p_iString"},{0}};
static swig_type_info _swigt__p_csString[] = {{"_p_csString", 0, "csString *", 0},{"_p_csString"},{0}};
static swig_type_info _swigt__p_iPcCommandInput[] = {{"_p_iPcCommandInput", 0, "iPcCommandInput *", 0},{"_p_iPcCommandInput"},{0}};
static swig_type_info _swigt__p_iCelEntityTemplate[] = {{"_p_iCelEntityTemplate", 0, "iCelEntityTemplate *", 0},{"_p_iCelEntityTemplate"},{0}};
static swig_type_info _swigt__p_csFlags[] = {{"_p_csFlags", 0, "csFlags *", 0},{"_p_csFlags"},{0}};
static swig_type_info _swigt__p_csOrthoTransform[] = {{"_p_csOrthoTransform", 0, "csOrthoTransform *", 0},{"_p_csOrthoTransform"},{0}};
static swig_type_info _swigt__p_iCelPropertyClass[] = {{"_p_iCelPropertyClass", 0, "iCelPropertyClass *", 0},{"_p_iCelPropertyClass"},{0}};
static swig_type_info _swigt__p_iStringArray[] = {{"_p_iStringArray", 0, "iStringArray *", 0},{"_p_iStringArray"},{0}};
static swig_type_info _swigt__p_iPcMovable[] = {{"_p_iPcMovable", 0, "iPcMovable *", 0},{"_p_iPcMovable"},{0}};
static swig_type_info _swigt__p_iBillboardEventHandler[] = {{"_p_iBillboardEventHandler", 0, "iBillboardEventHandler *", 0},{"_p_iBillboardEventHandler"},{0}};
static swig_type_info _swigt__p_iPcCollisionDetection[] = {{"_p_iPcCollisionDetection", 0, "iPcCollisionDetection *", 0},{"_p_iPcCollisionDetection"},{0}};
static swig_type_info _swigt__p_p_iPcCollisionDetection[] = {{"_p_p_iPcCollisionDetection", 0, "iPcCollisionDetection **", 0},{"_p_p_iPcCollisionDetection"},{0}};
static swig_type_info _swigt__p_iPcActorMove[] = {{"_p_iPcActorMove", 0, "iPcActorMove *", 0},{"_p_iPcActorMove"},{0}};
static swig_type_info _swigt__p_iMeshWrapper[] = {{"_p_iMeshWrapper", 0, "iMeshWrapper *", 0},{"_p_iMeshWrapper"},{0}};
static swig_type_info _swigt__p_iFont[] = {{"_p_iFont", 0, "iFont *", 0},{"_p_iFont"},{0}};
static swig_type_info _swigt__p_celStabiliserFunction[] = {{"_p_celStabiliserFunction", 0, "celStabiliserFunction *", 0},{"_p_celStabiliserFunction"},{0}};
static swig_type_info _swigt__p_iCelPropertyChangeCallback[] = {{"_p_iCelPropertyChangeCallback", 0, "iCelPropertyChangeCallback *", 0},{"_p_iCelPropertyChangeCallback"},{0}};
static swig_type_info _swigt__p_iCelEntityRemoveCallback[] = {{"_p_iCelEntityRemoveCallback", 0, "iCelEntityRemoveCallback *", 0},{"_p_iCelEntityRemoveCallback"},{0}};
static swig_type_info _swigt__p_iCelNewEntityCallback[] = {{"_p_iCelNewEntityCallback", 0, "iCelNewEntityCallback *", 0},{"_p_iCelNewEntityCallback"},{0}};
static swig_type_info _swigt__p_iPcMechanicsBalancedGroup[] = {{"_p_iPcMechanicsBalancedGroup", 0, "iPcMechanicsBalancedGroup *", 0},{"_p_iPcMechanicsBalancedGroup"},{0}};
static swig_type_info _swigt__p_uint32[] = {{"_p_uint32", 0, "uint32 *", 0},{"_p_uint32"},{0}};
static swig_type_info _swigt__p_iPcGravityCallback[] = {{"_p_iPcGravityCallback", 0, "iPcGravityCallback *", 0},{"_p_iPcGravityCallback"},{0}};
static swig_type_info _swigt__p_iPcZoneManager[] = {{"_p_iPcZoneManager", 0, "iPcZoneManager *", 0},{"_p_iPcZoneManager"},{0}};
static swig_type_info _swigt__p_iBillboardManager[] = {{"_p_iBillboardManager", 0, "iBillboardManager *", 0},{"_p_iBillboardManager"},{0}};
static swig_type_info _swigt__p_iPcCamera[] = {{"_p_iPcCamera", 0, "iPcCamera *", 0},{"_p_iPcDefaultCamera", _p_iPcDefaultCameraTo_p_iPcCamera},{"_p_iPcCamera"},{"_p_iPcSimpleCamera", _p_iPcSimpleCameraTo_p_iPcCamera},{0}};
static swig_type_info _swigt__p_iCamera[] = {{"_p_iCamera", 0, "iCamera *", 0},{"_p_iCamera"},{0}};
static swig_type_info _swigt__p_iPcMesh[] = {{"_p_iPcMesh", 0, "iPcMesh *", 0},{"_p_iPcMesh"},{0}};
static swig_type_info _swigt__p_iPcSimpleCamera[] = {{"_p_iPcSimpleCamera", 0, "iPcSimpleCamera *", 0},{"_p_iPcSimpleCamera"},{0}};
static swig_type_info _swigt__p_iCelBehaviour[] = {{"_p_iCelBehaviour", 0, "iCelBehaviour *", 0},{"_p_iCelBehaviour"},{0}};
static swig_type_info _swigt__p_csPtrTiRigidBody_t[] = {{"_p_csPtrTiRigidBody_t", 0, "csPtr<iRigidBody > *", 0},{"_p_csPtrTiRigidBody_t"},{0}};
static swig_type_info _swigt__p_iCelZone[] = {{"_p_iCelZone", 0, "iCelZone *", 0},{"_p_iCelZone"},{0}};
static swig_type_info _swigt__p_iBillboardLayer[] = {{"_p_iBillboardLayer", 0, "iBillboardLayer *", 0},{"_p_iBillboardLayer"},{0}};
static swig_type_info _swigt__p_iPcTimer[] = {{"_p_iPcTimer", 0, "iPcTimer *", 0},{"_p_iPcTimer"},{0}};
static swig_type_info _swigt__p_iPcSoundSource[] = {{"_p_iPcSoundSource", 0, "iPcSoundSource *", 0},{"_p_iPcSoundSource"},{0}};
static swig_type_info _swigt__p_iPcHover[] = {{"_p_iPcHover", 0, "iPcHover *", 0},{"_p_iPcHover"},{0}};
static swig_type_info _swigt__p_csPlane3[] = {{"_p_csPlane3", 0, "csPlane3 *", 0},{"_p_csPlane3"},{0}};
static swig_type_info _swigt__p_csVector2[] = {{"_p_csVector2", 0, "csVector2 *", 0},{"_p_csVector2"},{0}};
static swig_type_info _swigt__p_iPcMechanicsThruster[] = {{"_p_iPcMechanicsThruster", 0, "iPcMechanicsThruster *", 0},{"_p_iPcMechanicsThruster"},{0}};
static swig_type_info _swigt__p_iCelDataBuffer[] = {{"_p_iCelDataBuffer", 0, "iCelDataBuffer *", 0},{"_p_iCelDataBuffer"},{0}};
static swig_type_info _swigt__p_csVector3[] = {{"_p_csVector3", 0, "csVector3 *", 0},{"_p_csVector3"},{0}};
static swig_type_info _swigt__p_celPersistenceResult[] = {{"_p_celPersistenceResult", 0, "celPersistenceResult *", 0},{"_p_celPersistenceResult"},{0}};
static swig_type_info _swigt__p_iPcGravity[] = {{"_p_iPcGravity", 0, "iPcGravity *", 0},{"_p_iPcGravity"},{0}};
static swig_type_info _swigt__p_csRefTiPcMesh_t[] = {{"_p_csRefTiPcMesh_t", 0, "csRef<iPcMesh > *", 0},{"_p_csRefTiPcMesh_t"},{0}};
static swig_type_info _swigt__p_iRigidBody[] = {{"_p_iRigidBody", 0, "iRigidBody *", 0},{"_p_iRigidBody"},{0}};
static swig_type_info _swigt__p_iDynamicSystem[] = {{"_p_iDynamicSystem", 0, "iDynamicSystem *", 0},{"_p_iDynamicSystem"},{0}};
static swig_type_info _swigt__p_iPcMechanicsSystem[] = {{"_p_iPcMechanicsSystem", 0, "iPcMechanicsSystem *", 0},{"_p_iPcMechanicsSystem"},{0}};
static swig_type_info _swigt__p_iPcMechanicsJoint[] = {{"_p_iPcMechanicsJoint", 0, "iPcMechanicsJoint *", 0},{"_p_iPcMechanicsJoint"},{0}};
static swig_type_info _swigt__p_iCelInventorySpace[] = {{"_p_iCelInventorySpace", 0, "iCelInventorySpace *", 0},{"_p_iCelInventorySpace"},{0}};
static swig_type_info _swigt__p_basetype[] = {{"_p_basetype", 0, "basetype *", 0},{"_p_basetype"},{0}};
static swig_type_info _swigt__p_csArrayTcsPluginRequest_t[] = {{"_p_csArrayTcsPluginRequest_t", 0, "csArray<csPluginRequest > *", 0},{"_p_csArrayTcsPluginRequest_t"},{0}};
static swig_type_info _swigt__p_iPcSolid[] = {{"_p_iPcSolid", 0, "iPcSolid *", 0},{"_p_iPcSolid"},{0}};
static swig_type_info _swigt__p_csBox3[] = {{"_p_csBox3", 0, "csBox3 *", 0},{"_p_csBox3"},{0}};
static swig_type_info _swigt__p_iView[] = {{"_p_iView", 0, "iView *", 0},{"_p_iView"},{0}};
static swig_type_info _swigt__p_iCelInventorySpaceSlot[] = {{"_p_iCelInventorySpaceSlot", 0, "iCelInventorySpaceSlot *", 0},{"_p_iCelInventorySpaceSlot"},{0}};
static swig_type_info _swigt__p_csPtrTiCelEntity_t[] = {{"_p_csPtrTiCelEntity_t", 0, "csPtr<iCelEntity > *", 0},{"_p_csPtrTiCelEntity_t"},{0}};
static swig_type_info _swigt__p_iCelTimerListener[] = {{"_p_iCelTimerListener", 0, "iCelTimerListener *", 0},{"_p_iCelTimerListener"},{0}};
static swig_type_info _swigt__p_iPcMeshSelectListener[] = {{"_p_iPcMeshSelectListener", 0, "iPcMeshSelectListener *", 0},{"_p_iPcMeshSelectListener"},{0}};
static swig_type_info _swigt__p_iPcInventoryListener[] = {{"_p_iPcInventoryListener", 0, "iPcInventoryListener *", 0},{"_p_iPcInventoryListener"},{0}};
static swig_type_info _swigt__p_iPcSoundListener[] = {{"_p_iPcSoundListener", 0, "iPcSoundListener *", 0},{"_p_iPcSoundListener"},{0}};
static swig_type_info _swigt__p_iSndSysListener[] = {{"_p_iSndSysListener", 0, "iSndSysListener *", 0},{"_p_iSndSysListener"},{0}};
static swig_type_info _swigt__p_iPcPropertyListener[] = {{"_p_iPcPropertyListener", 0, "iPcPropertyListener *", 0},{"_p_iPcPropertyListener"},{0}};
static swig_type_info _swigt__p_celDataType[] = {{"_p_celDataType", 0, "celDataType *", 0},{"_p_celDataType"},{0}};
static swig_type_info _swigt__p_iPcMechanicsThrusterController[] = {{"_p_iPcMechanicsThrusterController", 0, "iPcMechanicsThrusterController *", 0},{"_p_iPcMechanicsThrusterController"},{0}};
static swig_type_info _swigt__p_float[] = {{"_p_float", 0, "float *", 0},{"_p_float"},{0}};
static swig_type_info _swigt__p_iPcCraftController[] = {{"_p_iPcCraftController", 0, "iPcCraftController *", 0},{"_p_iPcCraftController"},{0}};
static swig_type_info _swigt__p_iBase[] = {{"_p_iBase", 0, "iBase *", 0},{"_p_iAwsRGBKey", _p_iAwsRGBKeyTo_p_iBase},{"_p_iRendererLightmap", _p_iRendererLightmapTo_p_iBase},{"_p_iSuperLightmap", _p_iSuperLightmapTo_p_iBase},{"_p_iConsoleOutput", _p_iConsoleOutputTo_p_iBase},{"_p_iParticlesObjectState", _p_iParticlesObjectStateTo_p_iBase},{"_p_iTerrainObjectState", _p_iTerrainObjectStateTo_p_iBase},{"_p_iClipper2D", _p_iClipper2DTo_p_iBase},{"_p_iDebugHelper", _p_iDebugHelperTo_p_iBase},{"_p_iODEDynamicState", _p_iODEDynamicStateTo_p_iBase},{"_p_iDocumentAttribute", _p_iDocumentAttributeTo_p_iBase},{"_p_iODEHingeJoint", _p_iODEHingeJointTo_p_iBase},{"_p_iMaterialEngine", _p_iMaterialEngineTo_p_iBase},{"_p_iPcMovableConstraint", _p_iPcMovableConstraintTo_p_iBase},{"_p_iImageIO", _p_iImageIOTo_p_iBase},{"_p_iBillboardLayer", _p_iBillboardLayerTo_p_iBase},{"_p_iPath", _p_iPathTo_p_iBase},{"_p_iBillboard", _p_iBillboardTo_p_iBase},{"_p_iPcBillboard", _p_iPcBillboardTo_p_iBase},{"_p_iSCF", _p_iSCFTo_p_iBase},{"_p_iLoaderStatus", _p_iLoaderStatusTo_p_iBase},{"_p_iODEBallJoint", _p_iODEBallJointTo_p_iBase},{"_p_iPcCharacteristics", _p_iPcCharacteristicsTo_p_iBase},{"_p_iTextureHandle", _p_iTextureHandleTo_p_iBase},{"_p_iGeneralMeshState", _p_iGeneralMeshStateTo_p_iBase},{"_p_iDynamics", _p_iDynamicsTo_p_iBase},{"_p_iParameterESM", _p_iParameterESMTo_p_iBase},{"_p_iSndSysSoftwareOutputFilter", _p_iSndSysSoftwareOutputFilterTo_p_iBase},{"_p_iPcCommandInput", _p_iPcCommandInputTo_p_iBase},{"_p_iAwsIntKey", _p_iAwsIntKeyTo_p_iBase},{"_p_iODEDynamicSystemState", _p_iODEDynamicSystemStateTo_p_iBase},{"_p_iMeshList", _p_iMeshListTo_p_iBase},{"_p_iEventPlug", _p_iEventPlugTo_p_iBase},{"_p_iCelPropertyClass", _p_iCelPropertyClassTo_p_iBase},{"_p_iODEJointState", _p_iODEJointStateTo_p_iBase},{"_p_iODEGeneralJointState", _p_iODEGeneralJointStateTo_p_iBase},{"_p_iSndSysWrapper", _p_iSndSysWrapperTo_p_iBase},{"_p_iTextureWrapper", _p_iTextureWrapperTo_p_iBase},{"_p_iMaterialWrapper", _p_iMaterialWrapperTo_p_iBase},{"_p_iMeshWrapper", _p_iMeshWrapperTo_p_iBase},{"_p_iMeshFactoryWrapper", _p_iMeshFactoryWrapperTo_p_iBase},{"_p_iSequenceWrapper", _p_iSequenceWrapperTo_p_iBase},{"_p_iString", _p_iStringTo_p_iBase},{"_p_iConsoleWatcher", _p_iConsoleWatcherTo_p_iBase},{"_p_iPcInventory", _p_iPcInventoryTo_p_iBase},{"_p_iPcMechanicsThruster", _p_iPcMechanicsThrusterTo_p_iBase},{"_p_iEngine", _p_iEngineTo_p_iBase},{"_p_iSimpleFormerState", _p_iSimpleFormerStateTo_p_iBase},{"_p_iMaterial", _p_iMaterialTo_p_iBase},{"_p_iSprite2DUVAnimation", _p_iSprite2DUVAnimationTo_p_iBase},{"_p_iPolygonMesh", _p_iPolygonMeshTo_p_iBase},{"_p_iParticlesFactoryState", _p_iParticlesFactoryStateTo_p_iBase},{"_p_iTerrainFactoryState", _p_iTerrainFactoryStateTo_p_iBase},{"_p_iThingFactoryState", _p_iThingFactoryStateTo_p_iBase},{"_p_iSpriteCal3DFactoryState", _p_iSpriteCal3DFactoryStateTo_p_iBase},{"_p_iSprite3DFactoryState", _p_iSprite3DFactoryStateTo_p_iBase},{"_p_iSprite2DFactoryState", _p_iSprite2DFactoryStateTo_p_iBase},{"_p_iGeneralFactoryState", _p_iGeneralFactoryStateTo_p_iBase},{"_p_iGraphics2D", _p_iGraphics2DTo_p_iBase},{"_p_iDocument", _p_iDocumentTo_p_iBase},{"_p_iShaderPriorityList", _p_iShaderPriorityListTo_p_iBase},{"_p_iCelEntityList", _p_iCelEntityListTo_p_iBase},{"_p_iSndSysSourceSoftware3D", _p_iSndSysSourceSoftware3DTo_p_iBase},{"_p_iDataBuffer", _p_iDataBufferTo_p_iBase},{"_p_iMeshObject", _p_iMeshObjectTo_p_iBase},{"_p_iScriptObject", _p_iScriptObjectTo_p_iBase},{"_p_iPcDefaultCamera", _p_iPcDefaultCameraTo_p_iBase},{"_p_iSequenceTimedOperation", _p_iSequenceTimedOperationTo_p_iBase},{"_p_iHalo", _p_iHaloTo_p_iBase},{"_p_iFontServer", _p_iFontServerTo_p_iBase},{"_p_iStringArray", _p_iStringArrayTo_p_iBase},{"_p_iPcHover", _p_iPcHoverTo_p_iBase},{"_p_iReporter", _p_iReporterTo_p_iBase},{"_p_iPluginIterator", _p_iPluginIteratorTo_p_iBase},{"_p_iEventAttributeIterator", _p_iEventAttributeIteratorTo_p_iBase},{"_p_iObjectRegistryIterator", _p_iObjectRegistryIteratorTo_p_iBase},{"_p_iObjectIterator", _p_iObjectIteratorTo_p_iBase},{"_p_iLightIterator", _p_iLightIteratorTo_p_iBase},{"_p_iSectorIterator", _p_iSectorIteratorTo_p_iBase},{"_p_iMeshWrapperIterator", _p_iMeshWrapperIteratorTo_p_iBase},{"_p_iVisibilityObjectIterator", _p_iVisibilityObjectIteratorTo_p_iBase},{"_p_iConfigIterator", _p_iConfigIteratorTo_p_iBase},{"_p_iDocumentAttributeIterator", _p_iDocumentAttributeIteratorTo_p_iBase},{"_p_iDocumentNodeIterator", _p_iDocumentNodeIteratorTo_p_iBase},{"_p_iReporterIterator", _p_iReporterIteratorTo_p_iBase},{"_p_iMapNode", _p_iMapNodeTo_p_iBase},{"_p_iGenMeshAnimationControl", _p_iGenMeshAnimationControlTo_p_iBase},{"_p_iEventNameRegistry", _p_iEventNameRegistryTo_p_iBase},{"_p_iObjectRegistry", _p_iObjectRegistryTo_p_iBase},{"_p_iCelPlLayer", _p_iCelPlLayerTo_p_iBase},{"_p_iCelBlLayer", _p_iCelBlLayerTo_p_iBase},{"_p_iPcLinearMovement", _p_iPcLinearMovementTo_p_iBase},{"_p_iObjectNameChangeListener", _p_iObjectNameChangeListenerTo_p_iBase},{"_p_iSndSysListener", _p_iSndSysListenerTo_p_iBase},{"_p_iObjectModelListener", _p_iObjectModelListenerTo_p_iBase},{"_p_iCameraSectorListener", _p_iCameraSectorListenerTo_p_iBase},{"_p_iMovableListener", _p_iMovableListenerTo_p_iBase},{"_p_iVisibilityCullerListener", _p_iVisibilityCullerListenerTo_p_iBase},{"_p_iReporterListener", _p_iReporterListenerTo_p_iBase},{"_p_iStandardReporterListener", _p_iStandardReporterListenerTo_p_iBase},{"_p_iCelTimerListener", _p_iCelTimerListenerTo_p_iBase},{"_p_iPcMeshSelectListener", _p_iPcMeshSelectListenerTo_p_iBase},{"_p_iPcInventoryListener", _p_iPcInventoryListenerTo_p_iBase},{"_p_iPcSoundListener", _p_iPcSoundListenerTo_p_iBase},{"_p_iPcPropertyListener", _p_iPcPropertyListenerTo_p_iBase},{"_p_iDocumentSystem", _p_iDocumentSystemTo_p_iBase},{"_p_iPcTimer", _p_iPcTimerTo_p_iBase},{"_p_iSndSysRendererSoftware", _p_iSndSysRendererSoftwareTo_p_iBase},{"_p_iSndSysSourceSoftware", _p_iSndSysSourceSoftwareTo_p_iBase},{"_p_iSprite2DUVAnimationFrame", _p_iSprite2DUVAnimationFrameTo_p_iBase},{"_p_iTerraFormer", _p_iTerraFormerTo_p_iBase},{"_p_iCelZone", _p_iCelZoneTo_p_iBase},{"_p_iSector", _p_iSectorTo_p_iBase},{"_p_iSequenceTrigger", _p_iSequenceTriggerTo_p_iBase},{"_p_iPcGravity", _p_iPcGravityTo_p_iBase},{"_p_iPortalContainer", _p_iPortalContainerTo_p_iBase},{"_p_iAwsKeyContainer", _p_iAwsKeyContainerTo_p_iBase},{"_p_iODESliderJoint", _p_iODESliderJointTo_p_iBase},{"_p_iODEAMotorJoint", _p_iODEAMotorJointTo_p_iBase},{"_p_iODEHinge2Joint", _p_iODEHinge2JointTo_p_iBase},{"_p_iCameraPositionList", _p_iCameraPositionListTo_p_iBase},{"_p_iRegionList", _p_iRegionListTo_p_iBase},{"_p_iSpriteAction", _p_iSpriteActionTo_p_iBase},{"_p_iBase"},{"_p_iLightList", _p_iLightListTo_p_iBase},{"_p_iFile", _p_iFileTo_p_iBase},{"_p_iSndSysRendererCallback", _p_iSndSysRendererCallbackTo_p_iBase},{"_p_iSndSysStreamCallback", _p_iSndSysStreamCallbackTo_p_iBase},{"_p_iParticlesColorCallback", _p_iParticlesColorCallbackTo_p_iBase},{"_p_iMeshObjectDrawCallback", _p_iMeshObjectDrawCallbackTo_p_iBase},{"_p_iPortalCallback", _p_iPortalCallbackTo_p_iBase},{"_p_iLightCallback", _p_iLightCallbackTo_p_iBase},{"_p_iSectorCallback", _p_iSectorCallbackTo_p_iBase},{"_p_iSectorMeshCallback", _p_iSectorMeshCallbackTo_p_iBase},{"_p_iLightVisibleCallback", _p_iLightVisibleCallbackTo_p_iBase},{"_p_iEngineFrameCallback", _p_iEngineFrameCallbackTo_p_iBase},{"_p_iEngineSectorCallback", _p_iEngineSectorCallbackTo_p_iBase},{"_p_iTextureCallback", _p_iTextureCallbackTo_p_iBase},{"_p_iMeshDrawCallback", _p_iMeshDrawCallbackTo_p_iBase},{"_p_iOffscreenCanvasCallback", _p_iOffscreenCanvasCallbackTo_p_iBase},{"_p_iDynamicsMoveCallback", _p_iDynamicsMoveCallbackTo_p_iBase},{"_p_iDynamicsCollisionCallback", _p_iDynamicsCollisionCallbackTo_p_iBase},{"_p_iDynamicsColliderCollisionCallback", _p_iDynamicsColliderCollisionCallbackTo_p_iBase},{"_p_iODEFrameUpdateCallback", _p_iODEFrameUpdateCallbackTo_p_iBase},{"_p_iCelNewEntityCallback", _p_iCelNewEntityCallbackTo_p_iBase},{"_p_iCelEntityRemoveCallback", _p_iCelEntityRemoveCallbackTo_p_iBase},{"_p_iPcGravityCallback", _p_iPcGravityCallbackTo_p_iBase},{"_p_iObject", _p_iObjectTo_p_iBase},{"_p_iVisibilityObject", _p_iVisibilityObjectTo_p_iBase},{"_p_iPcMechanicsObject", _p_iPcMechanicsObjectTo_p_iBase},{"_p_iCamera", _p_iCameraTo_p_iBase},{"_p_iPcCamera", _p_iPcCameraTo_p_iBase},{"_p_iPcSimpleCamera", _p_iPcSimpleCameraTo_p_iBase},{"_p_iCommandLineParser", _p_iCommandLineParserTo_p_iBase},{"_p_iMeshFactoryList", _p_iMeshFactoryListTo_p_iBase},{"_p_iGraphics3D", _p_iGraphics3DTo_p_iBase},{"_p_iVirtualClock", _p_iVirtualClockTo_p_iBase},{"_p_iMeshObjectType", _p_iMeshObjectTypeTo_p_iBase},{"_p_iMovieRecorder", _p_iMovieRecorderTo_p_iBase},{"_p_iSprite2DState", _p_iSprite2DStateTo_p_iBase},{"_p_iThingEnvironment", _p_iThingEnvironmentTo_p_iBase},{"_p_iMovable", _p_iMovableTo_p_iBase},{"_p_iPcMovable", _p_iPcMovableTo_p_iBase},{"_p_iAws", _p_iAwsTo_p_iBase},{"_p_iSectorList", _p_iSectorListTo_p_iBase},{"_p_iShaderVariableContext", _p_iShaderVariableContextTo_p_iBase},{"_p_iSndSysSoftwareFilter3D", _p_iSndSysSoftwareFilter3DTo_p_iBase},{"_p_iCollideSystem", _p_iCollideSystemTo_p_iBase},{"_p_iDynamicSystem", _p_iDynamicSystemTo_p_iBase},{"_p_iPcMechanicsSystem", _p_iPcMechanicsSystemTo_p_iBase},{"_p_iShaderCompiler", _p_iShaderCompilerTo_p_iBase},{"_p_iParticlesPhysics", _p_iParticlesPhysicsTo_p_iBase},{"_p_iLightingProcessData", _p_iLightingProcessDataTo_p_iBase},{"_p_iCelEntityTracker", _p_iCelEntityTrackerTo_p_iBase},{"_p_iCameraPosition", _p_iCameraPositionTo_p_iBase},{"_p_iBinaryLoaderPlugin", _p_iBinaryLoaderPluginTo_p_iBase},{"_p_iLoaderPlugin", _p_iLoaderPluginTo_p_iBase},{"_p_iSpriteCal3DSocket", _p_iSpriteCal3DSocketTo_p_iBase},{"_p_iSndSysStream", _p_iSndSysStreamTo_p_iBase},{"_p_iVisibilityCuller", _p_iVisibilityCullerTo_p_iBase},{"_p_iGeneralMeshCommonState", _p_iGeneralMeshCommonStateTo_p_iBase},{"_p_iConfigFile", _p_iConfigFileTo_p_iBase},{"_p_iEventQueue", _p_iEventQueueTo_p_iBase},{"_p_iVFS", _p_iVFSTo_p_iBase},{"_p_iRigidBody", _p_iRigidBodyTo_p_iBase},{"_p_iPcSoundSource", _p_iPcSoundSourceTo_p_iBase},{"_p_iEventOutlet", _p_iEventOutletTo_p_iBase},{"_p_iAwsComponentNode", _p_iAwsComponentNodeTo_p_iBase},{"_p_iDocumentNode", _p_iDocumentNodeTo_p_iBase},{"_p_iFont", _p_iFontTo_p_iBase},{"_p_iKeyboardDriver", _p_iKeyboardDriverTo_p_iBase},{"_p_iSpriteCal3DState", _p_iSpriteCal3DStateTo_p_iBase},{"_p_iSprite3DState", _p_iSprite3DStateTo_p_iBase},{"_p_iBodyGroup", _p_iBodyGroupTo_p_iBase},{"_p_iFrustumView", _p_iFrustumViewTo_p_iBase},{"_p_iCelBehaviour", _p_iCelBehaviourTo_p_iBase},{"_p_iEventHandler", _p_iEventHandlerTo_p_iBase},{"_p_iAnimTimeUpdateHandler", _p_iAnimTimeUpdateHandlerTo_p_iBase},{"_p__csPyEventHandler", _p__csPyEventHandlerTo_p_iBase},{"_p_iBillboardEventHandler", _p_iBillboardEventHandlerTo_p_iBase},{"_p_iPortal", _p_iPortalTo_p_iBase},{"_p_iPcTooltip", _p_iPcTooltipTo_p_iBase},{"_p_iEngineSequenceParameters", _p_iEngineSequenceParametersTo_p_iBase},{"_p_iAwsKey", _p_iAwsKeyTo_p_iBase},{"_p_iView", _p_iViewTo_p_iBase},{"_p_iGenMeshAnimationControlType", _p_iGenMeshAnimationControlTypeTo_p_iBase},{"_p_iKeyComposer", _p_iKeyComposerTo_p_iBase},{"_p_iMaterialList", _p_iMaterialListTo_p_iBase},{"_p_iAwsRectKey", _p_iAwsRectKeyTo_p_iBase},{"_p_iLightingProcessInfo", _p_iLightingProcessInfoTo_p_iBase},{"_p_iJoint", _p_iJointTo_p_iBase},{"_p_iSpriteSocket", _p_iSpriteSocketTo_p_iBase},{"_p_iPcActorMove", _p_iPcActorMoveTo_p_iBase},{"_p_iSndSysRenderer", _p_iSndSysRendererTo_p_iBase},{"_p_iComponent", _p_iComponentTo_p_iBase},{"_p_iAwsComponent", _p_iAwsComponentTo_p_iBase},{"_p_iLight", _p_iLightTo_p_iBase},{"_p_iAwsStringKey", _p_iAwsStringKeyTo_p_iBase},{"_p_iSndSysSource", _p_iSndSysSourceTo_p_iBase},{"_p_iAwsSource", _p_iAwsSourceTo_p_iBase},{"_p_iCelEntity", _p_iCelEntityTo_p_iBase},{"_p_iJoystickDriver", _p_iJoystickDriverTo_p_iBase},{"_p_iMouseDriver", _p_iMouseDriverTo_p_iBase},{"_p_iSndSysSoftwareDriver", _p_iSndSysSoftwareDriverTo_p_iBase},{"_p_iMeshObjectFactory", _p_iMeshObjectFactoryTo_p_iBase},{"_p_iGenMeshAnimationControlFactory", _p_iGenMeshAnimationControlFactoryTo_p_iBase},{"_p_iAwsConnectionNodeFactory", _p_iAwsConnectionNodeFactoryTo_p_iBase},{"_p_iAwsKeyFactory", _p_iAwsKeyFactoryTo_p_iBase},{"_p_iAwsComponentFactory", _p_iAwsComponentFactoryTo_p_iBase},{"_p_iFactory", _p_iFactoryTo_p_iBase},{"_p_iSndSysLoader", _p_iSndSysLoaderTo_p_iBase},{"_p_iLoader", _p_iLoaderTo_p_iBase},{"_p_iFrustumViewUserdata", _p_iFrustumViewUserdataTo_p_iBase},{"_p_iAwsSink", _p_iAwsSinkTo_p_iBase},{"_p_iCelInventorySpace", _p_iCelInventorySpaceTo_p_iBase},{"_p_iShader", _p_iShaderTo_p_iBase},{"_p_iTextureList", _p_iTextureListTo_p_iBase},{"_p_iNativeWindow", _p_iNativeWindowTo_p_iBase},{"_p_iPcMechanicsJoint", _p_iPcMechanicsJointTo_p_iBase},{"_p_iCelRegion", _p_iCelRegionTo_p_iBase},{"_p_iSpriteFrame", _p_iSpriteFrameTo_p_iBase},{"_p_iPcMechanicsBalancedGroup", _p_iPcMechanicsBalancedGroupTo_p_iBase},{"_p_iFontDeleteNotify", _p_iFontDeleteNotifyTo_p_iBase},{"_p_iThingState", _p_iThingStateTo_p_iBase},{"_p_iAwsFloatKey", _p_iAwsFloatKeyTo_p_iBase},{"_p_iPcMechanicsThrusterController", _p_iPcMechanicsThrusterControllerTo_p_iBase},{"_p_iPcCraftController", _p_iPcCraftControllerTo_p_iBase},{"_p_iPcProperties", _p_iPcPropertiesTo_p_iBase},{"_p_iShaderVariableAccessor", _p_iShaderVariableAccessorTo_p_iBase},{"_p_iTerraSampler", _p_iTerraSamplerTo_p_iBase},{"_p_iEvent", _p_iEventTo_p_iBase},{"_p_iAwsSlot", _p_iAwsSlotTo_p_iBase},{"_p_iSceneNode", _p_iSceneNodeTo_p_iBase},{"_p_iCelInventorySpaceSlot", _p_iCelInventorySpaceSlotTo_p_iBase},{"_p_iImage", _p_iImageTo_p_iBase},{"_p_iCollider", _p_iColliderTo_p_iBase},{"_p_iDynamicsSystemCollider", _p_iDynamicsSystemColliderTo_p_iBase},{"_p_iODEUniversalJoint", _p_iODEUniversalJointTo_p_iBase},{"_p_iCelParameterBlock", _p_iCelParameterBlockTo_p_iBase},{"_p_iPcMeshSelect", _p_iPcMeshSelectTo_p_iBase},{"_p_iPolygonHandle", _p_iPolygonHandleTo_p_iBase},{"_p_iObjectModel", _p_iObjectModelTo_p_iBase},{"_p_iAwsConnectionKey", _p_iAwsConnectionKeyTo_p_iBase},{"_p_iCelPropertyClassList", _p_iCelPropertyClassListTo_p_iBase},{"_p_iRegion", _p_iRegionTo_p_iBase},{"_p_iStringSet", _p_iStringSetTo_p_iBase},{"_p_iPcRegion", _p_iPcRegionTo_p_iBase},{"_p_iCelMapFile", _p_iCelMapFileTo_p_iBase},{"_p_iPluginManager", _p_iPluginManagerTo_p_iBase},{"_p_iCacheManager", _p_iCacheManagerTo_p_iBase},{"_p_iSndSysManager", _p_iSndSysManagerTo_p_iBase},{"_p_iAwsLayoutManager", _p_iAwsLayoutManagerTo_p_iBase},{"_p_iAwsSinkManager", _p_iAwsSinkManagerTo_p_iBase},{"_p_iAwsPrefManager", _p_iAwsPrefManagerTo_p_iBase},{"_p_iParticlesStateBase", _p_iParticlesStateBaseTo_p_iBase},{"_p_iConfigManager", _p_iConfigManagerTo_p_iBase},{"_p_iNativeWindowManager", _p_iNativeWindowManagerTo_p_iBase},{"_p_iShaderManager", _p_iShaderManagerTo_p_iBase},{"_p_iTextureManager", _p_iTextureManagerTo_p_iBase},{"_p_iEngineSequenceManager", _p_iEngineSequenceManagerTo_p_iBase},{"_p_iBillboardManager", _p_iBillboardManagerTo_p_iBase},{"_p_iPcZoneManager", _p_iPcZoneManagerTo_p_iBase},{"_p_iAwsPointKey", _p_iAwsPointKeyTo_p_iBase},{"_p_iScript", _p_iScriptTo_p_iBase},{"_p_iPcSolid", _p_iPcSolidTo_p_iBase},{"_p_iSaver", _p_iSaverTo_p_iBase},{"_p_iSndSysData", _p_iSndSysDataTo_p_iBase},{"_p_iPcMesh", _p_iPcMeshTo_p_iBase},{"_p_iEventCord", _p_iEventCordTo_p_iBase},{0}};
static swig_type_info _swigt__p_iCelBlLayer[] = {{"_p_iCelBlLayer", 0, "iCelBlLayer *", 0},{"_p_iCelBlLayer"},{0}};
static swig_type_info _swigt__p_iCelPlLayer[] = {{"_p_iCelPlLayer", 0, "iCelPlLayer *", 0},{"_p_iCelPlLayer"},{0}};
static swig_type_info _swigt__p_iPcInventory[] = {{"_p_iPcInventory", 0, "iPcInventory *", 0},{"_p_iPcInventory"},{0}};
static swig_type_info _swigt__p_iRegion[] = {{"_p_iRegion", 0, "iRegion *", 0},{"_p_iRegion"},{0}};
static swig_type_info _swigt__p_iPcRegion[] = {{"_p_iPcRegion", 0, "iPcRegion *", 0},{"_p_iPcRegion"},{0}};

static swig_type_info *swig_types_initial[] = {
_swigt__p_iCollider, 
_swigt__p_iDocumentNode, 
_swigt__p_iObjectRegistry, 
_swigt__p_iPcMovableConstraint, 
_swigt__p_iCelPropertyClassList, 
_swigt__p_celPersistenceType, 
_swigt__p_celInitializer, 
_swigt__p_csInitializer, 
_swigt__p_csStringID, 
_swigt__p_size_t, 
_swigt__p_iPcDefaultCamera, 
_swigt__p_iCelPropertyClassFactory, 
_swigt__p_iSector, 
_swigt__p_p_iSector, 
_swigt__p_iCelParameterBlock, 
_swigt__p_csPtrTiCelEntityList_t, 
_swigt__p_bool, 
_swigt__p_iPcCharacteristics, 
_swigt__p_iPcMeshSelect, 
_swigt__p_iPcTooltip, 
_swigt__p_iPcProperties, 
_swigt__p_iCelEntityTracker, 
_swigt__p_csColor, 
_swigt__p_iCelRegion, 
_swigt__p_iCelEntity, 
_swigt__p_iPcLight, 
_swigt__p_void, 
_swigt__p_int, 
_swigt__p_csPtrTiCelDataBuffer_t, 
_swigt__p_iCelMapFile, 
_swigt__p_iPath, 
_swigt__p_iJoint, 
_swigt__p_iCelEntityList, 
_swigt__p_celData, 
_swigt__p_iPcMechanicsObject, 
_swigt__p_iObject, 
_swigt__p_celEntityTemplateParams, 
_swigt__p_iPcBillboard, 
_swigt__p_iBillboard, 
_swigt__p_iPcLinearMovement, 
_swigt__p_csPath, 
_swigt__p_iSndSysSource, 
_swigt__p_iString, 
_swigt__p_csString, 
_swigt__p_iPcCommandInput, 
_swigt__p_iCelEntityTemplate, 
_swigt__p_csFlags, 
_swigt__p_csOrthoTransform, 
_swigt__p_iCelPropertyClass, 
_swigt__p_iStringArray, 
_swigt__p_iPcMovable, 
_swigt__p_iBillboardEventHandler, 
_swigt__p_iPcCollisionDetection, 
_swigt__p_p_iPcCollisionDetection, 
_swigt__p_iPcActorMove, 
_swigt__p_iMeshWrapper, 
_swigt__p_iFont, 
_swigt__p_celStabiliserFunction, 
_swigt__p_iCelPropertyChangeCallback, 
_swigt__p_iCelEntityRemoveCallback, 
_swigt__p_iCelNewEntityCallback, 
_swigt__p_iPcMechanicsBalancedGroup, 
_swigt__p_uint32, 
_swigt__p_iPcGravityCallback, 
_swigt__p_iPcZoneManager, 
_swigt__p_iBillboardManager, 
_swigt__p_iPcCamera, 
_swigt__p_iCamera, 
_swigt__p_iPcMesh, 
_swigt__p_iPcSimpleCamera, 
_swigt__p_iCelBehaviour, 
_swigt__p_csPtrTiRigidBody_t, 
_swigt__p_iCelZone, 
_swigt__p_iBillboardLayer, 
_swigt__p_iPcTimer, 
_swigt__p_iPcSoundSource, 
_swigt__p_iPcHover, 
_swigt__p_csPlane3, 
_swigt__p_csVector2, 
_swigt__p_iPcMechanicsThruster, 
_swigt__p_iCelDataBuffer, 
_swigt__p_csVector3, 
_swigt__p_celPersistenceResult, 
_swigt__p_iPcGravity, 
_swigt__p_csRefTiPcMesh_t, 
_swigt__p_iRigidBody, 
_swigt__p_iDynamicSystem, 
_swigt__p_iPcMechanicsSystem, 
_swigt__p_iPcMechanicsJoint, 
_swigt__p_iCelInventorySpace, 
_swigt__p_basetype, 
_swigt__p_csArrayTcsPluginRequest_t, 
_swigt__p_iPcSolid, 
_swigt__p_csBox3, 
_swigt__p_iView, 
_swigt__p_iCelInventorySpaceSlot, 
_swigt__p_csPtrTiCelEntity_t, 
_swigt__p_iCelTimerListener, 
_swigt__p_iPcMeshSelectListener, 
_swigt__p_iPcInventoryListener, 
_swigt__p_iPcSoundListener, 
_swigt__p_iSndSysListener, 
_swigt__p_iPcPropertyListener, 
_swigt__p_celDataType, 
_swigt__p_iPcMechanicsThrusterController, 
_swigt__p_float, 
_swigt__p_iPcCraftController, 
_swigt__p_iBase, 
_swigt__p_iCelBlLayer, 
_swigt__p_iCelPlLayer, 
_swigt__p_iPcInventory, 
_swigt__p_iRegion, 
_swigt__p_iPcRegion, 
0
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{ SWIG_PY_INT,     (char *)"CEL_EVENT_PRE", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_EVENT_VIEW", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_EVENT_POST", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_AT_NONE", (long) CEL_AT_NONE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_AT_ROTATION", (long) CEL_AT_ROTATION, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_AT_TRANSLATION", (long) CEL_AT_TRANSLATION, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_BILLBOARD_VISIBLE", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_BILLBOARD_MOVABLE", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_BILLBOARD_CLICKABLE", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_BILLBOARD_RESTACK", (long) 8, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_ZONEERROR_OK", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_ZONEERROR_BADREGION", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_ZONEERROR_BADSTART", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_ZONEERROR_LOAD", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_ZONE_NORMAL", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_ZONE_KEEP", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_ZONE_LOADALL", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcDefaultCamera_freelook", (long) iPcDefaultCamera::freelook, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcDefaultCamera_firstperson", (long) iPcDefaultCamera::firstperson, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcDefaultCamera_thirdperson", (long) iPcDefaultCamera::thirdperson, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcDefaultCamera_m64_thirdperson", (long) iPcDefaultCamera::m64_thirdperson, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcDefaultCamera_lara_thirdperson", (long) iPcDefaultCamera::lara_thirdperson, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcDefaultCamera_actual_data", (long) iPcDefaultCamera::actual_data, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcDefaultCamera_last_actual", (long) iPcDefaultCamera::last_actual, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcDefaultCamera_transition", (long) iPcDefaultCamera::transition, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcDefaultCamera_camerror", (long) iPcDefaultCamera::camerror, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcDefaultCamera_CameraMode_count", (long) iPcDefaultCamera::CameraMode_count, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_MOUSE_BUTTON1", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_MOUSE_BUTTON2", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_MOUSE_BUTTON3", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_PCMESH_PROPERTY_MESH", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_PCMOVABLE_PROPERTY_POSITION", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_MOVE_FAIL", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_MOVE_SUCCEED", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_MOVE_PARTIAL", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_TOOLTIP_LEFT", (long) CEL_TOOLTIP_LEFT, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_TOOLTIP_CENTER", (long) CEL_TOOLTIP_CENTER, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_TOOLTIP_RIGHT", (long) CEL_TOOLTIP_RIGHT, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_NONE", (long) CEL_DATA_NONE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_BOOL", (long) CEL_DATA_BOOL, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_BYTE", (long) CEL_DATA_BYTE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_WORD", (long) CEL_DATA_WORD, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_LONG", (long) CEL_DATA_LONG, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_UBYTE", (long) CEL_DATA_UBYTE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_UWORD", (long) CEL_DATA_UWORD, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_ULONG", (long) CEL_DATA_ULONG, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_FLOAT", (long) CEL_DATA_FLOAT, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_VECTOR2", (long) CEL_DATA_VECTOR2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_VECTOR3", (long) CEL_DATA_VECTOR3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_STRING", (long) CEL_DATA_STRING, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_PCLASS", (long) CEL_DATA_PCLASS, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_ENTITY", (long) CEL_DATA_ENTITY, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_ACTION", (long) CEL_DATA_ACTION, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_COLOR", (long) CEL_DATA_COLOR, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_IBASE", (long) CEL_DATA_IBASE, 0, 0, 0},
{0}};

#ifdef __cplusplus
}
#endif

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT(void) SWIG_init(void) {
    static PyObject *SWIG_globals = 0; 
    static int       typeinit = 0;
    PyObject *m, *d;
    int       i;
    if (!SWIG_globals) SWIG_globals = SWIG_newvarlink();
    m = Py_InitModule((char *) SWIG_name, SwigMethods);
    d = PyModule_GetDict(m);
    
    if (!typeinit) {
        for (i = 0; swig_types_initial[i]; i++) {
            swig_types[i] = SWIG_TypeRegister(swig_types_initial[i]);
        }
        typeinit = 1;
    }
    SWIG_InstallConstants(d,swig_const_table);
    
}

