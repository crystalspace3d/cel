/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.19
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    inline SwigValueWrapper() : tt(0) { }
    inline ~SwigValueWrapper() { if (tt) delete tt; } 
    inline SwigValueWrapper& operator=(const T& t) { tt = new T(t); return *this; }
    inline operator T&() const { return *tt; }
    inline T *operator&() { return tt; }
};                                                    
#endif


#include "Python.h"

/***********************************************************************
 * common.swg
 *
 *     This file contains generic SWIG runtime support for pointer
 *     type checking as well as a few commonly used macros to control
 *     external linkage.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 *
 * Copyright (c) 1999-2000, The University of Chicago
 * 
 * This file may be freely redistributed without license or fee provided
 * this copyright message remains intact.
 ************************************************************************/

#include <string.h>

#if defined(_WIN32) || defined(__WIN32__)
#       if defined(_MSC_VER)
#               if defined(STATIC_LINKED)
#                       define SWIGEXPORT(a) a
#                       define SWIGIMPORT(a) extern a
#               else
#                       define SWIGEXPORT(a) __declspec(dllexport) a
#                       define SWIGIMPORT(a) extern a
#               endif
#       else
#               if defined(__BORLANDC__)
#                       define SWIGEXPORT(a) a _export
#                       define SWIGIMPORT(a) a _export
#               else
#                       define SWIGEXPORT(a) a
#                       define SWIGIMPORT(a) a
#               endif
#       endif
#else
#       define SWIGEXPORT(a) a
#       define SWIGIMPORT(a) a
#endif

#ifdef SWIG_GLOBAL
#define SWIGRUNTIME(a) SWIGEXPORT(a)
#else
#define SWIGRUNTIME(a) static a
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

typedef struct swig_type_info {
  const char             *name;                 
  swig_converter_func     converter;
  const char             *str;
  void                   *clientdata;	
  swig_dycast_func        dcast;
  struct swig_type_info  *next;
  struct swig_type_info  *prev;
} swig_type_info;

#ifdef SWIG_NOINCLUDE

SWIGIMPORT(swig_type_info *) SWIG_TypeRegister(swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeCheck(char *c, swig_type_info *);
SWIGIMPORT(void *)           SWIG_TypeCast(swig_type_info *, void *);
SWIGIMPORT(swig_type_info *) SWIG_TypeDynamicCast(swig_type_info *, void **);
SWIGIMPORT(const char *)     SWIG_TypeName(const swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeQuery(const char *);
SWIGIMPORT(void)             SWIG_TypeClientData(swig_type_info *, void *);

#else

static swig_type_info *swig_type_list = 0;

/* Register a type mapping with the type-checking */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeRegister(swig_type_info *ti)
{
  swig_type_info *tc, *head, *ret, *next;
  /* Check to see if this type has already been registered */
  tc = swig_type_list;
  while (tc) {
    if (strcmp(tc->name, ti->name) == 0) {
      /* Already exists in the table.  Just add additional types to the list */
      if (tc->clientdata) ti->clientdata = tc->clientdata;	
      head = tc;
      next = tc->next;
      goto l1;
    }
    tc = tc->prev;
  }
  head = ti;
  next = 0;

  /* Place in list */
  ti->prev = swig_type_list;
  swig_type_list = ti;

  /* Build linked lists */
 l1:
  ret = head;
  tc = ti + 1;
  /* Patch up the rest of the links */
  while (tc->name) {
    head->next = tc;
    tc->prev = head;
    head = tc;
    tc++;
  }
  if (next) next->prev = head;  /**/
  head->next = next;
  return ret;
}

/* Check the typename */
SWIGRUNTIME(swig_type_info *) 
SWIG_TypeCheck(char *c, swig_type_info *ty)
{
  swig_type_info *s;
  if (!ty) return 0;        /* Void pointer */
  s = ty->next;             /* First element always just a name */
  do {
    if (strcmp(s->name,c) == 0) {
      if (s == ty->next) return s;
      /* Move s to the top of the linked list */
      s->prev->next = s->next;
      if (s->next) {
	s->next->prev = s->prev;
      }
      /* Insert s as second element in the list */
      s->next = ty->next;
      if (ty->next) ty->next->prev = s;
      ty->next = s;
      s->prev = ty;  /**/
      return s;
    }
    s = s->next;
  } while (s && (s != ty->next));
  return 0;
}

/* Cast a pointer up an inheritance hierarchy */
SWIGRUNTIME(void *) 
SWIG_TypeCast(swig_type_info *ty, void *ptr) 
{
  if ((!ty) || (!ty->converter)) return ptr;
  return (*ty->converter)(ptr);
}

/* Dynamic pointer casting. Down an inheritance hierarchy */
SWIGRUNTIME(swig_type_info *) 
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) 
{
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
     ty = (*ty->dcast)(ptr);
     if (ty) lastty = ty;
  }
  return lastty;
}

/* Return the name associated with this type */
SWIGRUNTIME(const char *)
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/* Search for a swig_type_info structure */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeQuery(const char *name) {
  swig_type_info *ty = swig_type_list;
  while (ty) {
    if (ty->str && (strcmp(name,ty->str) == 0)) return ty;
    if (ty->name && (strcmp(name,ty->name) == 0)) return ty;
    ty = ty->prev;
  }
  return 0;
}

/* Set the clientdata field for a type */
SWIGRUNTIME(void)
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_type_info *tc, *equiv;
  if (ti->clientdata == clientdata) return;
  ti->clientdata = clientdata;
  equiv = ti->next;
  while (equiv) {
    if (!equiv->converter) {
      tc = swig_type_list;
      while (tc) {
	if ((strcmp(tc->name, equiv->name) == 0))
	  SWIG_TypeClientData(tc,clientdata);
	tc = tc->prev;
      }
    }
    equiv = equiv->next;
  }
}
#endif

#ifdef __cplusplus
}

#endif

/***********************************************************************
 * python.swg
 *
 *     This file contains the runtime support for Python modules
 *     and includes code for managing global variables and pointer
 *     type checking.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 ************************************************************************/

#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif

#define SWIG_PY_INT     1
#define SWIG_PY_FLOAT   2
#define SWIG_PY_STRING  3
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Flags for pointer conversion */

#define SWIG_POINTER_EXCEPTION     0x1
#define SWIG_POINTER_DISOWN        0x2

/* Exception handling in wrappers */
#define SWIG_fail   goto fail

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;

#ifdef SWIG_NOINCLUDE

SWIGEXPORT(PyObject *)        SWIG_newvarlink(void);
SWIGEXPORT(void)              SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
SWIGEXPORT(int)               SWIG_ConvertPtr(PyObject *, void **, swig_type_info *, int);
SWIGEXPORT(int)               SWIG_ConvertPacked(PyObject *, void *, int sz, swig_type_info *, int);
SWIGEXPORT(char *)            SWIG_PackData(char *c, void *, int);
SWIGEXPORT(char *)            SWIG_UnpackData(char *c, void *, int);
SWIGEXPORT(PyObject *)        SWIG_NewPointerObj(void *, swig_type_info *,int own);
SWIGEXPORT(PyObject *)        SWIG_NewPackedObj(void *, int sz, swig_type_info *);
SWIGEXPORT(void)              SWIG_InstallConstants(PyObject *d, swig_const_info constants[]);
#else

/* -----------------------------------------------------------------------------
 * global variable support code.
 * ----------------------------------------------------------------------------- */

typedef struct swig_globalvar {   
  char       *name;                  /* Name of global variable */
  PyObject *(*get_attr)(void);       /* Return the current value */
  int       (*set_attr)(PyObject *); /* Set the value */
  struct swig_globalvar *next;
} swig_globalvar;

typedef struct swig_varlinkobject {
  PyObject_HEAD
  swig_globalvar *vars;
} swig_varlinkobject;

static PyObject *
swig_varlink_repr(swig_varlinkobject *v) {
  v = v;
  return PyString_FromString("<Global variables>");
}

static int
swig_varlink_print(swig_varlinkobject *v, FILE *fp, int flags) {
  swig_globalvar  *var;
  flags = flags;
  fprintf(fp,"Global variables { ");
  for (var = v->vars; var; var=var->next) {
    fprintf(fp,"%s", var->name);
    if (var->next) fprintf(fp,", ");
  }
  fprintf(fp," }\n");
  return 0;
}

static PyObject *
swig_varlink_getattr(swig_varlinkobject *v, char *n) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->get_attr)();
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return NULL;
}

static int
swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->set_attr)(p);
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return 1;
}

statichere PyTypeObject varlinktype = {
  PyObject_HEAD_INIT(0)              
  0,
  (char *)"swigvarlink",                      /* Type name    */
  sizeof(swig_varlinkobject),         /* Basic size   */
  0,                                  /* Itemsize     */
  0,                                  /* Deallocator  */ 
  (printfunc) swig_varlink_print,     /* Print        */
  (getattrfunc) swig_varlink_getattr, /* get attr     */
  (setattrfunc) swig_varlink_setattr, /* Set attr     */
  0,                                  /* tp_compare   */
  (reprfunc) swig_varlink_repr,       /* tp_repr      */    
  0,                                  /* tp_as_number */
  0,                                  /* tp_as_mapping*/
  0,                                  /* tp_hash      */
};

/* Create a variable linking object for use later */
SWIGRUNTIME(PyObject *)
SWIG_newvarlink(void) {
  swig_varlinkobject *result = 0;
  result = PyMem_NEW(swig_varlinkobject,1);
  varlinktype.ob_type = &PyType_Type;    /* Patch varlinktype into a PyType */
  result->ob_type = &varlinktype;
  result->vars = 0;
  result->ob_refcnt = 0;
  Py_XINCREF((PyObject *) result);
  return ((PyObject*) result);
}

SWIGRUNTIME(void)
SWIG_addvarlink(PyObject *p, char *name,
	   PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
  swig_varlinkobject *v;
  swig_globalvar *gv;
  v= (swig_varlinkobject *) p;
  gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
  gv->name = (char *) malloc(strlen(name)+1);
  strcpy(gv->name,name);
  gv->get_attr = get_attr;
  gv->set_attr = set_attr;
  gv->next = v->vars;
  v->vars = gv;
}

/* Pack binary data into a string */
SWIGRUNTIME(char *)
SWIG_PackData(char *c, void *ptr, int sz) {
  static char hex[17] = "0123456789abcdef";
  int i;
  unsigned char *u = (unsigned char *) ptr;
  register unsigned char uu;
  for (i = 0; i < sz; i++,u++) {
    uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* Unpack binary data from a string */
SWIGRUNTIME(char *)
SWIG_UnpackData(char *c, void *ptr, int sz) {
  register unsigned char uu = 0;
  register int d;
  unsigned char *u = (unsigned char *) ptr;
  int i;
  for (i = 0; i < sz; i++, u++) {
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    *u = uu;
  }
  return c;
}

/* Convert a pointer value */
SWIGRUNTIME(int)
SWIG_ConvertPtr(PyObject *obj, void **ptr, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c;
  static PyObject *SWIG_this = 0;
  int    newref = 0;
  PyObject  *pyobj = 0;

  if (!obj) return 0;
  if (obj == Py_None) {
    *ptr = 0;
    return 0;
  }
#ifdef SWIG_COBJECT_TYPES
  if (!(PyCObject_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyCObject_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  }  
  *ptr = PyCObject_AsVoidPtr(obj);
  c = (char *) PyCObject_GetDesc(obj);
  if (newref) Py_DECREF(obj);
  goto cobject;
#else
  if (!(PyString_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyString_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  } 
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') {
    *ptr = (void *) 0;
    if (strcmp(c,"NULL") == 0) {
      if (newref) { Py_DECREF(obj); }
      return 0;
    } else {
      if (newref) { Py_DECREF(obj); }
      goto type_error;
    }
  }
  c++;
  c = SWIG_UnpackData(c,ptr,sizeof(void *));
  if (newref) { Py_DECREF(obj); }
#endif

#ifdef SWIG_COBJECT_TYPES
cobject:
#endif

  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
    *ptr = SWIG_TypeCast(tc,(void*) *ptr);
  }

  if ((pyobj) && (flags & SWIG_POINTER_DISOWN)) {
      PyObject *zero = PyInt_FromLong(0);
      PyObject_SetAttrString(pyobj,(char*)"thisown",zero);
      Py_DECREF(zero);
  }
  return 0;

type_error:
  if (flags & SWIG_POINTER_EXCEPTION) {
    if (ty) {
      char *temp = (char *) malloc(64+strlen(ty->name));
      sprintf(temp,"Type error. Expected %s", ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Convert a packed value value */
SWIGRUNTIME(int)
SWIG_ConvertPacked(PyObject *obj, void *ptr, int sz, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c;

  if ((!obj) || (!PyString_Check(obj))) goto type_error;
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') goto type_error;
  c++;
  c = SWIG_UnpackData(c,ptr,sz);
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
  }
  return 0;

type_error:

  if (flags) {
    if (ty) {
      char *temp = (char *) malloc(64+strlen(ty->name));
      sprintf(temp,"Type error. Expected %s", ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Create a new pointer object */
SWIGRUNTIME(PyObject *)
SWIG_NewPointerObj(void *ptr, swig_type_info *type, int own) {
  PyObject *robj;
  if (!ptr) {
    Py_INCREF(Py_None);
    return Py_None;
  }
#ifdef SWIG_COBJECT_TYPES
  robj = PyCObject_FromVoidPtrAndDesc((void *) ptr, (char *) type->name, NULL);
#else
  {
    char result[1024];
    char *r = result;
    *(r++) = '_';
    r = SWIG_PackData(r,&ptr,sizeof(void *));
    strcpy(r,type->name);
    robj = PyString_FromString(result);
  }
#endif
  if (!robj || (robj == Py_None)) return robj;
  if (type->clientdata) {
    PyObject *inst;
    PyObject *args = Py_BuildValue((char*)"(O)", robj);
    Py_DECREF(robj);
    inst = PyObject_CallObject((PyObject *) type->clientdata, args);
    Py_DECREF(args);
    if (inst) {
      if (own) {
	PyObject *n = PyInt_FromLong(1);
	PyObject_SetAttrString(inst,(char*)"thisown",n);
	Py_DECREF(n);
      }
      robj = inst;
    }
  }
  return robj;
}

SWIGRUNTIME(PyObject *)
SWIG_NewPackedObj(void *ptr, int sz, swig_type_info *type) {
  char result[1024];
  char *r = result;
  if ((2*sz + 1 + strlen(type->name)) > 1000) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  strcpy(r,type->name);
  return PyString_FromString(result);
}

/* Install Constants */
SWIGRUNTIME(void)
SWIG_InstallConstants(PyObject *d, swig_const_info constants[]) {
  int i;
  PyObject *obj;
  for (i = 0; constants[i].type; i++) {
    switch(constants[i].type) {
    case SWIG_PY_INT:
      obj = PyInt_FromLong(constants[i].lvalue);
      break;
    case SWIG_PY_FLOAT:
      obj = PyFloat_FromDouble(constants[i].dvalue);
      break;
    case SWIG_PY_STRING:
      obj = PyString_FromString((char *) constants[i].pvalue);
      break;
    case SWIG_PY_POINTER:
      obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
      break;
    case SWIG_PY_BINARY:
      obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
      break;
    default:
      obj = 0;
      break;
    }
    if (obj) {
      PyDict_SetItemString(d,constants[i].name,obj);
      Py_DECREF(obj);
    }
  }
}

#endif

#ifdef __cplusplus
}
#endif








/* -------- TYPES TABLE (BEGIN) -------- */

#define  SWIGTYPE_p_iSaver swig_types[0] 
#define  SWIGTYPE_p_csRGBpixel swig_types[1] 
#define  SWIGTYPE_p_iLightingInfo swig_types[2] 
#define  SWIGTYPE_p_p_csReversibleTransform swig_types[3] 
#define  SWIGTYPE_p_csOrthoTransform swig_types[4] 
#define  SWIGTYPE_p_csReversibleTransform swig_types[5] 
#define  SWIGTYPE_p_csTransform swig_types[6] 
#define  SWIGTYPE_p_csVector3Array swig_types[7] 
#define  SWIGTYPE_p_iEventQueue swig_types[8] 
#define  SWIGTYPE_p_iLoaderContext swig_types[9] 
#define  SWIGTYPE_p_csFrustumContext swig_types[10] 
#define  SWIGTYPE_p_csPolygon3DStatic swig_types[11] 
#define  SWIGTYPE_p_iPolygon3DStatic swig_types[12] 
#define  SWIGTYPE_p_iCollectionList swig_types[13] 
#define  SWIGTYPE_p_iCameraPositionList swig_types[14] 
#define  SWIGTYPE_p_iRegionList swig_types[15] 
#define  SWIGTYPE_p_float swig_types[16] 
#define  SWIGTYPE_p_csStreamFormatCap swig_types[17] 
#define  SWIGTYPE_p_iVFS swig_types[18] 
#define  SWIGTYPE_p_csPtrTiNetworkPacket2_t swig_types[19] 
#define  SWIGTYPE_p_iDynLight swig_types[20] 
#define  SWIGTYPE_p_csQuaternion swig_types[21] 
#define  SWIGTYPE_p_iThingEnvironment swig_types[22] 
#define  SWIGTYPE_p_csRefTiBase_t swig_types[23] 
#define  SWIGTYPE_p_csPtrTiBase_t swig_types[24] 
#define  SWIGTYPE_p_iEffectDefinition swig_types[25] 
#define  SWIGTYPE_p_iClipper2D swig_types[26] 
#define  SWIGTYPE_p_iConsoleOutput swig_types[27] 
#define  SWIGTYPE_p_iObjectRegistry swig_types[28] 
#define  SWIGTYPE_p_csRGBcolor swig_types[29] 
#define  SWIGTYPE_p_iSector swig_types[30] 
#define  SWIGTYPE_p_csSector swig_types[31] 
#define  SWIGTYPE_p_iSkeletonBone swig_types[32] 
#define  SWIGTYPE_p_p_iSector swig_types[33] 
#define  SWIGTYPE_p_csStringSet swig_types[34] 
#define  SWIGTYPE_p_iLightList swig_types[35] 
#define  SWIGTYPE_p_iStandardReporterListener swig_types[36] 
#define  SWIGTYPE_p_iReporterListener swig_types[37] 
#define  SWIGTYPE_p_iSoundListener swig_types[38] 
#define  SWIGTYPE_p_iMovableListener swig_types[39] 
#define  SWIGTYPE_p_iObjectModelListener swig_types[40] 
#define  SWIGTYPE_p_iNetworkListener swig_types[41] 
#define  SWIGTYPE_p_iFont swig_types[42] 
#define  SWIGTYPE_p_p_iImage swig_types[43] 
#define  SWIGTYPE_p_iImage swig_types[44] 
#define  SWIGTYPE_p_csImageArea swig_types[45] 
#define  SWIGTYPE_p_iOffscreenCanvasCallback swig_types[46] 
#define  SWIGTYPE_p_iMeshObjectDrawCallback swig_types[47] 
#define  SWIGTYPE_p_iMeshDrawCallback swig_types[48] 
#define  SWIGTYPE_p_iTextureCallback swig_types[49] 
#define  SWIGTYPE_p_iLightCallback swig_types[50] 
#define  SWIGTYPE_p_iSectorCallback swig_types[51] 
#define  SWIGTYPE_p_iDynamicsMoveCallback swig_types[52] 
#define  SWIGTYPE_p_iDynamicsCollisionCallback swig_types[53] 
#define  SWIGTYPE_p_csTinyDocumentSystem swig_types[54] 
#define  SWIGTYPE_p_iDocumentSystem swig_types[55] 
#define  SWIGTYPE_p_csRectRegion swig_types[56] 
#define  SWIGTYPE_p_iDynamicSystem swig_types[57] 
#define  SWIGTYPE_p_iCollideSystem swig_types[58] 
#define  SWIGTYPE_p_iRegion swig_types[59] 
#define  SWIGTYPE_p_csPtrTiParameterESM_t swig_types[60] 
#define  SWIGTYPE_p_iPcRegion swig_types[61] 
#define  SWIGTYPE_p_csRefTiDocumentAttribute_t swig_types[62] 
#define  SWIGTYPE_p_uint8 swig_types[63] 
#define  SWIGTYPE_p_iReporterIterator swig_types[64] 
#define  SWIGTYPE_p_iStreamIterator swig_types[65] 
#define  SWIGTYPE_p_iDocumentNodeIterator swig_types[66] 
#define  SWIGTYPE_p_iDocumentAttributeIterator swig_types[67] 
#define  SWIGTYPE_p_iConfigIterator swig_types[68] 
#define  SWIGTYPE_p_iPluginIterator swig_types[69] 
#define  SWIGTYPE_p_iObjectRegistryIterator swig_types[70] 
#define  SWIGTYPE_p_iObjectIterator swig_types[71] 
#define  SWIGTYPE_p_iVisibilityObjectIterator swig_types[72] 
#define  SWIGTYPE_p_iMeshWrapperIterator swig_types[73] 
#define  SWIGTYPE_p_csStringSetIterator swig_types[74] 
#define  SWIGTYPE_p_iLightIterator swig_types[75] 
#define  SWIGTYPE_p_iSectorIterator swig_types[76] 
#define  SWIGTYPE_p_iEventOutlet swig_types[77] 
#define  SWIGTYPE_p_csFrustum swig_types[78] 
#define  SWIGTYPE_p_csColoredVertices swig_types[79] 
#define  SWIGTYPE_p_csSegment2 swig_types[80] 
#define  SWIGTYPE_p_csSegment3 swig_types[81] 
#define  SWIGTYPE_p_iCelPropertyClassList swig_types[82] 
#define  SWIGTYPE_p_csVector2 swig_types[83] 
#define  SWIGTYPE_p_iMeshObject swig_types[84] 
#define  SWIGTYPE_p_p_csVector3 swig_types[85] 
#define  SWIGTYPE_p_csDVector3 swig_types[86] 
#define  SWIGTYPE_p_csVector3 swig_types[87] 
#define  SWIGTYPE_p_csFrustumViewObjectFunc swig_types[88] 
#define  SWIGTYPE_p_iDataObject swig_types[89] 
#define  SWIGTYPE_p_iVisibilityObject swig_types[90] 
#define  SWIGTYPE_p_iObject swig_types[91] 
#define  SWIGTYPE_p_csObject swig_types[92] 
#define  SWIGTYPE_p_iSharedVariableList swig_types[93] 
#define  SWIGTYPE_csEventHandlerFunc swig_types[94] 
#define  SWIGTYPE_p_iFlareHalo swig_types[95] 
#define  SWIGTYPE_p_iEventHandler swig_types[96] 
#define  SWIGTYPE_p_iFrustumView swig_types[97] 
#define  SWIGTYPE_p_iSoundWrapper swig_types[98] 
#define  SWIGTYPE_p_p_iMeshWrapper swig_types[99] 
#define  SWIGTYPE_p_iMeshWrapper swig_types[100] 
#define  SWIGTYPE_p_iTextureWrapper swig_types[101] 
#define  SWIGTYPE_p_p_iTextureWrapper swig_types[102] 
#define  SWIGTYPE_p_iMaterialWrapper swig_types[103] 
#define  SWIGTYPE_p_iMeshFactoryWrapper swig_types[104] 
#define  SWIGTYPE_p_iSequenceWrapper swig_types[105] 
#define  SWIGTYPE_p_csColliderWrapper swig_types[106] 
#define  SWIGTYPE_p__csPyEventHandler swig_types[107] 
#define  SWIGTYPE_p_iNovaHalo swig_types[108] 
#define  SWIGTYPE_p_iRenderView swig_types[109] 
#define  SWIGTYPE_p_csEventKeyData swig_types[110] 
#define  SWIGTYPE_p_iLoaderStatus swig_types[111] 
#define  SWIGTYPE_p_csVertexStatus swig_types[112] 
#define  SWIGTYPE_p_iCelBehaviour swig_types[113] 
#define  SWIGTYPE_p_iMeshList swig_types[114] 
#define  SWIGTYPE_p_iConsoleWatcher swig_types[115] 
#define  SWIGTYPE_p_iBase swig_types[116] 
#define  SWIGTYPE_p_iFontServer swig_types[117] 
#define  SWIGTYPE_p_G3DPolygonDPFX swig_types[118] 
#define  SWIGTYPE_p_csPtrTiDynLight_t swig_types[119] 
#define  SWIGTYPE_p_iPcLinearMovement swig_types[120] 
#define  SWIGTYPE_p_csPtrTiSequenceTrigger_t swig_types[121] 
#define  SWIGTYPE_scfFactoryFunc swig_types[122] 
#define  SWIGTYPE_p_csPixelFormat swig_types[123] 
#define  SWIGTYPE_p_csModelConverterFormat swig_types[124] 
#define  SWIGTYPE_p_csCollisionPair swig_types[125] 
#define  SWIGTYPE_p_csView swig_types[126] 
#define  SWIGTYPE_p_iStreamFormat swig_types[127] 
#define  SWIGTYPE_p_iVisibilityCuller swig_types[128] 
#define  SWIGTYPE_p_uint16 swig_types[129] 
#define  SWIGTYPE_p_iFile swig_types[130] 
#define  SWIGTYPE_p_csNetworkDriverCapabilities swig_types[131] 
#define  SWIGTYPE_p_csPtrTiEngineSequenceParameters_t swig_types[132] 
#define  SWIGTYPE_p_iSoundLoader swig_types[133] 
#define  SWIGTYPE_p_iLoader swig_types[134] 
#define  SWIGTYPE_p_iSpriteSocket swig_types[135] 
#define  SWIGTYPE_p_iPcInventory swig_types[136] 
#define  SWIGTYPE_p_csTextureLayer swig_types[137] 
#define  SWIGTYPE_p_iDocumentAttribute swig_types[138] 
#define  SWIGTYPE_p_iSpriteFrame swig_types[139] 
#define  SWIGTYPE_p_csEventNetworkData swig_types[140] 
#define  SWIGTYPE_p_iMaterialEngine swig_types[141] 
#define  SWIGTYPE_p_iVirtualClock swig_types[142] 
#define  SWIGTYPE_p_iEngine swig_types[143] 
#define  SWIGTYPE_p_int16 swig_types[144] 
#define  SWIGTYPE_p_iNetworkEndPoint swig_types[145] 
#define  SWIGTYPE_p_iLightingProcessInfo swig_types[146] 
#define  SWIGTYPE_p_iPcCommandInput swig_types[147] 
#define  SWIGTYPE_p_csPtrTcsFrustum_t swig_types[148] 
#define  SWIGTYPE_p_iReporter swig_types[149] 
#define  SWIGTYPE_p_csPtrTiLoaderContext_t swig_types[150] 
#define  SWIGTYPE_p_csPtrTiShadowBlock_t swig_types[151] 
#define  SWIGTYPE_p_iVertexBufferManagerClient swig_types[152] 
#define  SWIGTYPE_p_csEventCommandData swig_types[153] 
#define  SWIGTYPE_p_iSoundData swig_types[154] 
#define  SWIGTYPE_p_iCelPropertyClass swig_types[155] 
#define  SWIGTYPE_p_iProgressMeter swig_types[156] 
#define  SWIGTYPE_p_csString swig_types[157] 
#define  SWIGTYPE_p_iString swig_types[158] 
#define  SWIGTYPE_p_iPcCharacteristics swig_types[159] 
#define  SWIGTYPE_p_iKeyboardDriver swig_types[160] 
#define  SWIGTYPE_p_iSoundDriver swig_types[161] 
#define  SWIGTYPE_p_iShadowBlockList swig_types[162] 
#define  SWIGTYPE_p_iJoystickDriver swig_types[163] 
#define  SWIGTYPE_p_iMouseDriver swig_types[164] 
#define  SWIGTYPE_p_iNetworkDriver swig_types[165] 
#define  SWIGTYPE_p_iSCF swig_types[166] 
#define  SWIGTYPE_p_double swig_types[167] 
#define  SWIGTYPE_p_bool swig_types[168] 
#define  SWIGTYPE_p_char swig_types[169] 
#define  SWIGTYPE_p_p_char swig_types[170] 
#define  SWIGTYPE_p_iModelData swig_types[171] 
#define  SWIGTYPE_p_csPtrTiVertexBuffer_t swig_types[172] 
#define  SWIGTYPE_p_iSequenceTimedOperation swig_types[173] 
#define  SWIGTYPE_p_G3DPolygonDP swig_types[174] 
#define  SWIGTYPE_p_iJoint swig_types[175] 
#define  SWIGTYPE_p_iLightingProcessData swig_types[176] 
#define  SWIGTYPE_p_uint32 swig_types[177] 
#define  SWIGTYPE_p_iEngineSequenceParameters swig_types[178] 
#define  SWIGTYPE_p_G3DTexturePlane swig_types[179] 
#define  SWIGTYPE_p_iBodyGroup swig_types[180] 
#define  SWIGTYPE_p_csMeshedPolygon swig_types[181] 
#define  SWIGTYPE_p_iCelEntityList swig_types[182] 
#define  SWIGTYPE_p_iSprite2DUVAnimationFrame swig_types[183] 
#define  SWIGTYPE_p_iCollection swig_types[184] 
#define  SWIGTYPE_p_iNetworkConnection swig_types[185] 
#define  SWIGTYPE_p_iPcMeshSelect swig_types[186] 
#define  SWIGTYPE_p_iStatLight swig_types[187] 
#define  SWIGTYPE_p_csStatLight swig_types[188] 
#define  SWIGTYPE_p_csPtrTiSoundData_t swig_types[189] 
#define  SWIGTYPE_p_csPtrTiModelData_t swig_types[190] 
#define  SWIGTYPE_p_csFlags swig_types[191] 
#define  SWIGTYPE_p_csLightMapMapping swig_types[192] 
#define  SWIGTYPE_p_csPtrTiLightingProcessData_t swig_types[193] 
#define  SWIGTYPE_p_iDocument swig_types[194] 
#define  SWIGTYPE_p_iNetworkSocket2 swig_types[195] 
#define  SWIGTYPE_p_csIntersect2 swig_types[196] 
#define  SWIGTYPE_p_csIntersect3 swig_types[197] 
#define  SWIGTYPE_p_csFileTime swig_types[198] 
#define  SWIGTYPE_p_iMaterialList swig_types[199] 
#define  SWIGTYPE_p_p_iLight swig_types[200] 
#define  SWIGTYPE_p_iLight swig_types[201] 
#define  SWIGTYPE_p_csBox2 swig_types[202] 
#define  SWIGTYPE_p_csMath2 swig_types[203] 
#define  SWIGTYPE_p_csBox3 swig_types[204] 
#define  SWIGTYPE_p_csMath3 swig_types[205] 
#define  SWIGTYPE_p_iMaterial swig_types[206] 
#define  SWIGTYPE_p_int32 swig_types[207] 
#define  SWIGTYPE_p_iConfigFile swig_types[208] 
#define  SWIGTYPE_p_csPtrTiReporterIterator_t swig_types[209] 
#define  SWIGTYPE_p_csRefTiDocumentAttributeIterator_t swig_types[210] 
#define  SWIGTYPE_p_csRefTiDocumentNodeIterator_t swig_types[211] 
#define  SWIGTYPE_p_csPtrTiPluginIterator_t swig_types[212] 
#define  SWIGTYPE_p_csPtrTiObjectRegistryIterator_t swig_types[213] 
#define  SWIGTYPE_p_csPtrTiVisibilityObjectIterator_t swig_types[214] 
#define  SWIGTYPE_p_csPtrTiMeshWrapperIterator_t swig_types[215] 
#define  SWIGTYPE_p_csPtrTiObjectIterator_t swig_types[216] 
#define  SWIGTYPE_p_csPtrTiSectorIterator_t swig_types[217] 
#define  SWIGTYPE_p_csPtrTiLightIterator_t swig_types[218] 
#define  SWIGTYPE_p__2_basetype swig_types[219] 
#define  SWIGTYPE_p__1_basetype swig_types[220] 
#define  SWIGTYPE_p_basetype swig_types[221] 
#define  SWIGTYPE_p_p_iEvent swig_types[222] 
#define  SWIGTYPE_p_iEvent swig_types[223] 
#define  SWIGTYPE_p_csPtrTiObjectWatcher_t swig_types[224] 
#define  SWIGTYPE_p_iThingState swig_types[225] 
#define  SWIGTYPE_p_csPtrTiSequenceWrapper_t swig_types[226] 
#define  SWIGTYPE_p_iHalo swig_types[227] 
#define  SWIGTYPE_p_p_iCollider swig_types[228] 
#define  SWIGTYPE_p_iCollider swig_types[229] 
#define  SWIGTYPE_p_iPcMesh swig_types[230] 
#define  SWIGTYPE_p_csColor swig_types[231] 
#define  SWIGTYPE_p_iPcTimer swig_types[232] 
#define  SWIGTYPE_p_unsigned_char swig_types[233] 
#define  SWIGTYPE_p_csLight swig_types[234] 
#define  SWIGTYPE_p_iDocumentNode swig_types[235] 
#define  SWIGTYPE_p_iSequenceTrigger swig_types[236] 
#define  SWIGTYPE_p_iGraphics2D swig_types[237] 
#define  SWIGTYPE_p_iCameraPosition swig_types[238] 
#define  SWIGTYPE_p_G3DPolygonMesh swig_types[239] 
#define  SWIGTYPE_p_iPolygonMesh swig_types[240] 
#define  SWIGTYPE_p_iTextureList swig_types[241] 
#define  SWIGTYPE_p_iPcMovableConstraint swig_types[242] 
#define  SWIGTYPE_p_iView swig_types[243] 
#define  SWIGTYPE_p_csPtrTiLoaderStatus_t swig_types[244] 
#define  SWIGTYPE_p_csPtrTiRigidBody_t swig_types[245] 
#define  SWIGTYPE_p_csRefTiRigidBody_t swig_types[246] 
#define  SWIGTYPE_p_csRefTiDocumentNode_t swig_types[247] 
#define  SWIGTYPE_p_iSectorList swig_types[248] 
#define  SWIGTYPE_p_csWrapPtr swig_types[249] 
#define  SWIGTYPE_p_iSoundHandle swig_types[250] 
#define  SWIGTYPE_p_iMaterialHandle swig_types[251] 
#define  SWIGTYPE_p_iTextureHandle swig_types[252] 
#define  SWIGTYPE_p_G3DPolygonDFP swig_types[253] 
#define  SWIGTYPE_p_iCommandLineParser swig_types[254] 
#define  SWIGTYPE_p_iFontDeleteNotify swig_types[255] 
#define  SWIGTYPE_p_iCelPlLayer swig_types[256] 
#define  SWIGTYPE_p_iCelBlLayer swig_types[257] 
#define  SWIGTYPE_p_csInitializer swig_types[258] 
#define  SWIGTYPE_p_int8 swig_types[259] 
#define  SWIGTYPE_p_iSoundSource swig_types[260] 
#define  SWIGTYPE_p_iMeshFactoryList swig_types[261] 
#define  SWIGTYPE_p_csRefTiTextureHandle_t swig_types[262] 
#define  SWIGTYPE_p_csPtrTiMaterialHandle_t swig_types[263] 
#define  SWIGTYPE_p_iSoundRender swig_types[264] 
#define  SWIGTYPE_p_size_t swig_types[265] 
#define  SWIGTYPE_p_va_list swig_types[266] 
#define  SWIGTYPE_p_csGraphics3DCaps swig_types[267] 
#define  SWIGTYPE_p_iGraphics3D swig_types[268] 
#define  SWIGTYPE_p_iSkeleton swig_types[269] 
#define  SWIGTYPE_p_iMeshObjectType swig_types[270] 
#define  SWIGTYPE_p_iRigidBody swig_types[271] 
#define  SWIGTYPE_p_iNativeWindowManager swig_types[272] 
#define  SWIGTYPE_p_iVertexBufferManager swig_types[273] 
#define  SWIGTYPE_p_iTextureManager swig_types[274] 
#define  SWIGTYPE_p_iCacheManager swig_types[275] 
#define  SWIGTYPE_p_iPluginManager swig_types[276] 
#define  SWIGTYPE_p_iConfigManager swig_types[277] 
#define  SWIGTYPE_p_csRect swig_types[278] 
#define  SWIGTYPE_p_iDynamics swig_types[279] 
#define  SWIGTYPE_p_iEngineSequenceManager swig_types[280] 
#define  SWIGTYPE_p_iSequenceManager swig_types[281] 
#define  SWIGTYPE_p_iNetworkManager swig_types[282] 
#define  SWIGTYPE_p_iParameterESM swig_types[283] 
#define  SWIGTYPE_p_csStringID swig_types[284] 
#define  SWIGTYPE_p_csRefTiSkeletonBone_t swig_types[285] 
#define  SWIGTYPE_p_iCrossHalo swig_types[286] 
#define  SWIGTYPE_p_csReporterHelper swig_types[287] 
#define  SWIGTYPE_p_csColliderHelper swig_types[288] 
#define  SWIGTYPE_p_csEventJoystickData swig_types[289] 
#define  SWIGTYPE_p_csCommandLineHelper swig_types[290] 
#define  SWIGTYPE_p_iDebugHelper swig_types[291] 
#define  SWIGTYPE_p_csGeomDebugHelper swig_types[292] 
#define  SWIGTYPE_p_csPoly2DFactory swig_types[293] 
#define  SWIGTYPE_p_iFactory swig_types[294] 
#define  SWIGTYPE_p_iMeshObjectFactory swig_types[295] 
#define  SWIGTYPE_p_G3DTriangleMesh swig_types[296] 
#define  SWIGTYPE_p_csFog swig_types[297] 
#define  SWIGTYPE_p_csPtrTiShadowBlockList_t swig_types[298] 
#define  SWIGTYPE_p_csPtrTiEventOutlet_t swig_types[299] 
#define  SWIGTYPE_p_csPixelCoord swig_types[300] 
#define  SWIGTYPE_p_iCamera swig_types[301] 
#define  SWIGTYPE_p_iPcCamera swig_types[302] 
#define  SWIGTYPE_p_uint64 swig_types[303] 
#define  SWIGTYPE_p_iSharedVariable swig_types[304] 
#define  SWIGTYPE_p_iShadowReceiver swig_types[305] 
#define  SWIGTYPE_p_iFrustumViewUserdata swig_types[306] 
#define  SWIGTYPE_p_csMouseCursorID swig_types[307] 
#define  SWIGTYPE_p_int swig_types[308] 
#define  SWIGTYPE_p_iObjectModel swig_types[309] 
#define  SWIGTYPE_p_csPolygon3D swig_types[310] 
#define  SWIGTYPE_p_iPolygon3D swig_types[311] 
#define  SWIGTYPE_p_p_iPolygon3D swig_types[312] 
#define  SWIGTYPE_p_iModelConverter swig_types[313] 
#define  SWIGTYPE_p_p_void swig_types[314] 
#define  SWIGTYPE_p_void swig_types[315] 
#define  SWIGTYPE_p_iStrVector swig_types[316] 
#define  SWIGTYPE_p_csVector swig_types[317] 
#define  SWIGTYPE_p_iMovable swig_types[318] 
#define  SWIGTYPE_p_csPoly2D swig_types[319] 
#define  SWIGTYPE_p_iPcMovable swig_types[320] 
#define  SWIGTYPE_p_csSprite2DVertex swig_types[321] 
#define  SWIGTYPE_p_iNativeWindow swig_types[322] 
#define  SWIGTYPE_p_iVideoStream swig_types[323] 
#define  SWIGTYPE_p_iAudioStream swig_types[324] 
#define  SWIGTYPE_p_iStream swig_types[325] 
#define  SWIGTYPE_p_csDataStream swig_types[326] 
#define  SWIGTYPE_p_iBinaryLoaderPlugin swig_types[327] 
#define  SWIGTYPE_p_iLoaderPlugin swig_types[328] 
#define  SWIGTYPE_p_csBSpline swig_types[329] 
#define  SWIGTYPE_p_iNetworkPacket2 swig_types[330] 
#define  SWIGTYPE_p_csEventMouseData swig_types[331] 
#define  SWIGTYPE_p_csTriangle swig_types[332] 
#define  SWIGTYPE_p_csSpline swig_types[333] 
#define  SWIGTYPE_p_csCubicSpline swig_types[334] 
#define  SWIGTYPE_p_csCatmullRomSpline swig_types[335] 
#define  SWIGTYPE_p_iImageIO swig_types[336] 
#define  SWIGTYPE_p_int64 swig_types[337] 
#define  SWIGTYPE_p_iSprite2DState swig_types[338] 
#define  SWIGTYPE_p_iVertexBuffer swig_types[339] 
#define  SWIGTYPE_p_iPolygonBuffer swig_types[340] 
#define  SWIGTYPE_p_p_iVertexBuffer swig_types[341] 
#define  SWIGTYPE_p_iSprite3DState swig_types[342] 
#define  SWIGTYPE_p_iDataBuffer swig_types[343] 
#define  SWIGTYPE_p_iLightMap swig_types[344] 
#define  SWIGTYPE_p_csSphere swig_types[345] 
#define  SWIGTYPE_p_iPolygonTexture swig_types[346] 
#define  SWIGTYPE_p_iImageIO__FileFormatDescription swig_types[347] 
#define  SWIGTYPE_p_csImageIOFileFormatDescription swig_types[348] 
#define  SWIGTYPE_p_csCodecDescription swig_types[349] 
#define  SWIGTYPE_p_csAudioStreamDescription swig_types[350] 
#define  SWIGTYPE_p_csVideoStreamDescription swig_types[351] 
#define  SWIGTYPE_p_csStreamDescription swig_types[352] 
#define  SWIGTYPE_p_iComponent swig_types[353] 
#define  SWIGTYPE_p_iSpriteAction swig_types[354] 
#define  SWIGTYPE_p_iThingFactoryState swig_types[355] 
#define  SWIGTYPE_p_iSprite3DFactoryState swig_types[356] 
#define  SWIGTYPE_p_iSprite2DFactoryState swig_types[357] 
#define  SWIGTYPE_p_csPoly3D swig_types[358] 
#define  SWIGTYPE_p_iSkeletonState swig_types[359] 
#define  SWIGTYPE_p_G3DFogInfo swig_types[360] 
#define  SWIGTYPE_p_csPluginPaths swig_types[361] 
#define  SWIGTYPE_p_iPcSolid swig_types[362] 
#define  SWIGTYPE_p_csMatrix2 swig_types[363] 
#define  SWIGTYPE_p_csZScaleMatrix3 swig_types[364] 
#define  SWIGTYPE_p_csYScaleMatrix3 swig_types[365] 
#define  SWIGTYPE_p_csXScaleMatrix3 swig_types[366] 
#define  SWIGTYPE_p_csZRotMatrix3 swig_types[367] 
#define  SWIGTYPE_p_csYRotMatrix3 swig_types[368] 
#define  SWIGTYPE_p_csXRotMatrix3 swig_types[369] 
#define  SWIGTYPE_p_csMatrix3 swig_types[370] 
#define  SWIGTYPE_p_iSprite2DUVAnimation swig_types[371] 
#define  SWIGTYPE_p_iCelEntity swig_types[372] 
#define  SWIGTYPE_p_csSquaredDist swig_types[373] 
#define  SWIGTYPE_p_iNetworkPacket swig_types[374] 
#define  SWIGTYPE_p_csPoint swig_types[375] 
#define  SWIGTYPE_p_iEventPlug swig_types[376] 
#define  SWIGTYPE_p_iSequence swig_types[377] 
#define  SWIGTYPE_p_csPlane2 swig_types[378] 
#define  SWIGTYPE_p_iEventCord swig_types[379] 
#define  SWIGTYPE_p_csPlane3 swig_types[380] 
#define  SWIGTYPE_p_iPcGravity swig_types[381] 
#define  SWIGTYPE_p_iPortal swig_types[382] 
static swig_type_info *swig_types[384];

/* -------- TYPES TABLE (END) -------- */


/*-----------------------------------------------
              @(target):= _blcelc.so
  ------------------------------------------------*/
#define SWIG_init    init_blcelc

#define SWIG_name    "_blcelc"

    #include "css.h"
  


#include "imap/saver.h"
#include "ivaria/reporter.h"
#include "ivaria/dynamics.h"
#include "ivaria/engseq.h"
#include "iutil/cache.h"
#include "csutil/xmltiny.h"
#include "igeom/objmodel.h"
#include "inetwork/sockerr.h"
#include "inetwork/netman.h"
#include "inetwork/socket2.h"

// Mark Gossage: somewhere in winuser.h there are a couple of #defines to
// rename RegisterClass and UnregisterClass (which are windoze fns).
// They also accidentally rename the iSCF fns too.
#ifdef RegisterClass
#	undef RegisterClass
#endif
#ifdef UnregisterClass
#	undef UnregisterClass
#endif




	// This pointer wrapper can be used to prevent code-bloat by macro's acting
	// as template functions.
	// Examples are SCF_QUERY_INTERFACE and CS_QUERY_REGISTRY.
	// Thanks to Mat Sutcliffe <oktal@gmx.co.uk>.
	// Note that this works _only_ if you're _not_ using virtual inheritance!
	//
	// renej: The VoidPtr is added to handle case where the void pointer is
	// the actual pointer. Ref<iBase> is used for pointers that need casting
	// when transferred to the scripting language.

	struct csWrapPtr
	{
	  csRef<iBase> Ref;
	  void *VoidPtr;
	  const char *Type;
	  csWrapPtr (const char *t, iBase *r)
		: Ref (r), VoidPtr (0), Type (t) {}
	  csWrapPtr (const char *t, csPtr<iBase> r)
		: Ref (r), VoidPtr (0), Type (t) {}
	  csWrapPtr (const char *t, csRef<iBase> r)
		: Ref (r), VoidPtr(0), Type (t) {}
	  csWrapPtr (const char *t, void *p)
		: VoidPtr (p), Type (t) {}
	  csWrapPtr (const csWrapPtr &p)
		: Ref (p.Ref), VoidPtr (p.VoidPtr), Type (p.Type) {}
	};



PyObject *
_csRef_to_Python (const csRef<iBase> & ref, void * ptr, const char * name)
{
	if (!ref.IsValid())
	{
		Py_INCREF(Py_None);
		return Py_None;
	}
	ref->IncRef();
	return SWIG_NewPointerObj((void *)ptr, SWIG_TypeQuery(name), 1);
}


PyObject *
_csWrapPtr_to_Python (const csWrapPtr & wp)
{
	csWrapPtr iBase__DynamicCast(iBase *, const char *);
	if (!wp.VoidPtr && !wp.Ref.IsValid())
	{
		Py_INCREF(Py_None);
		return Py_None;
	}
	PyObject * result;
	CS_ALLOC_STACK_ARRAY(char, type_name, strlen(wp.Type) + 3);
	strcat(strcpy(type_name, wp.Type), " *");
	iBase * ibase;
	if (wp.VoidPtr)
	{
		void * ptr = wp.VoidPtr;
		result = SWIG_NewPointerObj(ptr, SWIG_TypeQuery(type_name), 1);
		ibase = (iBase *) SWIG_TypeCast(SWIG_TypeQuery("iBase *"), ptr);
	}
	else
	{
		ibase = (iBase *) wp.Ref;
		void * ptr = iBase__DynamicCast(ibase, wp.Type).VoidPtr;
		result = SWIG_NewPointerObj(ptr, SWIG_TypeQuery(type_name), 1);
	}
	PyObject * ibase_obj = SWIG_NewPointerObj(
		(void *) ibase, SWIG_TypeQuery(type_name), 1);
	PyObject * res_obj = PyObject_CallMethod(ibase_obj, "IncRef", "()");
	if (!res_obj)
	{
		// Calling IncRef() failed; something wrong here.
		Py_XDECREF(result);
		result = 0;
	}
	Py_XDECREF(ibase_obj);
	Py_XDECREF(res_obj);
	return result;
}

void delete_iBase(iBase *self){ {if (self) {self->DecRef();}}; }
csWrapPtr iBase__DynamicCast(iBase *self,char const *to_name){
		void * ptr;
		if (!to_name || !to_name[0] || !self) ptr = 0;
		/*@c:\proj\cs\cs\include/ivaria/cspace.i,29,APPLY_FOR_EACH_INTERFACE@*/	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iAudioStream")) ptr = (void*)(iAudioStream*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iBase")) ptr = (void*)(iBase*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iBinaryLoaderPlugin")) ptr = (void*)(iBinaryLoaderPlugin*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iBodyGroup")) ptr = (void*)(iBodyGroup*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iCamera")) ptr = (void*)(iCamera*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iCameraPosition")) ptr = (void*)(iCameraPosition*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iCacheManager")) ptr = (void*)(iCacheManager*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iCollider")) ptr = (void*)(iCollider*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iCollideSystem")) ptr = (void*)(iCollideSystem*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iComponent")) ptr = (void*)(iComponent*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iConfigFile")) ptr = (void*)(iConfigFile*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iConfigIterator")) ptr = (void*)(iConfigIterator*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iConfigManager")) ptr = (void*)(iConfigManager*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iDataBuffer")) ptr = (void*)(iDataBuffer*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iDebugHelper")) ptr = (void*)(iDebugHelper*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iDocument")) ptr = (void*)(iDocument*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iDocumentSystem")) ptr = (void*)(iDocumentSystem*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iDynamics")) ptr = (void*)(iDynamics*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iDynamicSystem")) ptr = (void*)(iDynamicSystem*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iEngine")) ptr = (void*)(iEngine*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iEvent")) ptr = (void*)(iEvent*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iEventHandler")) ptr = (void*)(iEventHandler*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iEventQueue")) ptr = (void*)(iEventQueue*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iFactory")) ptr = (void*)(iFactory*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iFile")) ptr = (void*)(iFile*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iFont")) ptr = (void*)(iFont*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iFontServer")) ptr = (void*)(iFontServer*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iFrustumView")) ptr = (void*)(iFrustumView*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iFrustumViewUserdata")) ptr = (void*)(iFrustumViewUserdata*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iGraphics3D")) ptr = (void*)(iGraphics3D*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iGraphics2D")) ptr = (void*)(iGraphics2D*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iHalo")) ptr = (void*)(iHalo*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iImage")) ptr = (void*)(iImage*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iImageIO")) ptr = (void*)(iImageIO*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iJoint")) ptr = (void*)(iJoint*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iKeyboardDriver")) ptr = (void*)(iKeyboardDriver*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iLightList")) ptr = (void*)(iLightList*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iLoader")) ptr = (void*)(iLoader*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iLoaderPlugin")) ptr = (void*)(iLoaderPlugin*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iMaterial")) ptr = (void*)(iMaterial*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iMaterialWrapper")) ptr = (void*)(iMaterialWrapper*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iMeshFactoryWrapper")) ptr = (void*)(iMeshFactoryWrapper*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iMeshObject")) ptr = (void*)(iMeshObject*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iMeshObjectFactory")) ptr = (void*)(iMeshObjectFactory*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iMeshObjectType")) ptr = (void*)(iMeshObjectType*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iMeshWrapper")) ptr = (void*)(iMeshWrapper*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iModelConverter")) ptr = (void*)(iModelConverter*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iMovable")) ptr = (void*)(iMovable*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iMovableListener")) ptr = (void*)(iMovableListener*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iNetworkConnection")) ptr = (void*)(iNetworkConnection*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iNetworkDriver")) ptr = (void*)(iNetworkDriver*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iNetworkEndPoint")) ptr = (void*)(iNetworkEndPoint*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iNetworkListener")) ptr = (void*)(iNetworkListener*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iNetworkManager")) ptr = (void*)(iNetworkManager*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iNetworkPacket")) ptr = (void*)(iNetworkPacket*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iNetworkSocket2")) ptr = (void*)(iNetworkSocket2*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iObject")) ptr = (void*)(iObject*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iObjectModel")) ptr = (void*)(iObjectModel*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iObjectModelListener")) ptr = (void*)(iObjectModelListener*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iObjectRegistry")) ptr = (void*)(iObjectRegistry*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iPluginManager")) ptr = (void*)(iPluginManager*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iPolygon3D")) ptr = (void*)(iPolygon3D*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iPolygonMesh")) ptr = (void*)(iPolygonMesh*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iPolygonTexture")) ptr = (void*)(iPolygonTexture*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iSCF")) ptr = (void*)(iSCF*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iScript")) ptr = (void*)(iScript*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iSector")) ptr = (void*)(iSector*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iSectorList")) ptr = (void*)(iSectorList*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iSoundHandle")) ptr = (void*)(iSoundHandle*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iSoundLoader")) ptr = (void*)(iSoundLoader*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iSoundRender")) ptr = (void*)(iSoundRender*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iSoundWrapper")) ptr = (void*)(iSoundWrapper*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iSoundDriver")) ptr = (void*)(iSoundDriver*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iSoundSource")) ptr = (void*)(iSoundSource*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iSprite2DState")) ptr = (void*)(iSprite2DState*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iSprite3DState")) ptr = (void*)(iSprite3DState*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iStatLight")) ptr = (void*)(iStatLight*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iStream")) ptr = (void*)(iStream*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iStreamIterator")) ptr = (void*)(iStreamIterator*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iStreamFormat")) ptr = (void*)(iStreamFormat*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iString")) ptr = (void*)(iString*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iStrVector")) ptr = (void*)(iStrVector*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iTextureHandle")) ptr = (void*)(iTextureHandle*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iTextureList")) ptr = (void*)(iTextureList*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iTextureManager")) ptr = (void*)(iTextureManager*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iTextureWrapper")) ptr = (void*)(iTextureWrapper*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iThingState")) ptr = (void*)(iThingState*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iVFS")) ptr = (void*)(iVFS*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iVideoStream")) ptr = (void*)(iVideoStream*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iView")) ptr = (void*)(iView*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iVirtualClock")) ptr = (void*)(iVirtualClock*)self;
/*@@*/
	/*@c:\proj\cs\cs\include/ivaria/cspace.i,863,CAST_FROM_BASE@*/
	else if (!strcmp(to_name,"iVisibilityCuller")) ptr = (void*)(iVisibilityCuller*)self;
/*@@*/
/*@@*/
		else ptr = 0;
		return csWrapPtr(to_name, ptr);
	}
void delete_iFactory(iFactory *self){ {if (self) {self->DecRef();}}; }
extern void scfInitialize(csPluginPaths *);
extern void scfInitialize(int,char const *const []);
void delete_iSCF(iSCF *self){ {if (self) {self->DecRef();}}; }
void delete_iDebugHelper(iDebugHelper *self){ {if (self) {self->DecRef();}}; }
csColor csColor_operator_a___(csColor const *self,csColor const &c){ return *self + c; }
csColor csColor_operator_s___(csColor const *self,csColor const &c){ return *self - c; }
csColor csColor_operator_m___(csColor const *self,float f){ return *self * f; }
csColor csColor___rmul__(csColor const *self,float f){ return f * *self; }
void delete_iString(iString *self){ {if (self) {self->DecRef();}}; }
csVector2 csVector2_operator_a___(csVector2 const *self,csVector2 const &v){ return *self + v; }
csVector2 csVector2_operator_s___(csVector2 const *self,csVector2 const &v){ return *self - v; }
float csVector2_operator_m_____SWIG_0(csVector2 const *self,csVector2 const &v){ return *self * v; }
csVector2 csVector2_operator_m_____SWIG_1(csVector2 const *self,float f){ return *self * f; }
csVector2 csVector2_operator_d___(csVector2 const *self,float f){ return *self * f; }
bool csVector2_operator_ee___(csVector2 const *self,csVector2 const &v){ return *self == v; }
bool csVector2_operator_Ne___(csVector2 const *self,csVector2 const &v){ return *self != v; }
bool csVector2_operator_l___(csVector2 const *self,float f){ return *self < f; }
bool csVector2_operator_g___(csVector2 const *self,float f){ return f > *self; }
csVector2 csVector2___rmul__(csVector2 const *self,float f){ return f * *self; }
float csVector2___abs__(csVector2 const *self){ return self->Norm(); }
float csVector2___getitem__(csVector2 const *self,int i){ return i ? self->y : self->x; }
void csVector2___setitem__(csVector2 *self,int i,float v){ if (i) self->y = v; else self->x = v; }
csVector3 csVector3_operator_a___(csVector3 const *self,csVector3 const &v){ return *self + v; }
csVector3 csVector3_operator_s___(csVector3 const *self,csVector3 const &v){ return *self - v; }
float csVector3_operator_m_____SWIG_0(csVector3 const *self,csVector3 const &v){ return *self * v; }
csVector3 csVector3_operator_m_____SWIG_1(csVector3 const *self,float f){ return *self * f; }
csVector3 csVector3_operator_d_____SWIG_0(csVector3 const *self,float f){ return *self * f; }
bool csVector3_operator_ee___(csVector3 const *self,csVector3 const &v){ return *self == v; }
bool csVector3_operator_Ne___(csVector3 const *self,csVector3 const &v){ return *self != v; }
bool csVector3_operator_l___(csVector3 const *self,float f){ return *self < f; }
bool csVector3_operator_g___(csVector3 const *self,float f){ return f > *self; }
csVector3 &csVector3_operator_me_____SWIG_1(csVector3 *self,csTransform const &t){ return *self *= t; }
csVector3 &csVector3_operator_de_____SWIG_1(csVector3 *self,csReversibleTransform const &t){ return *self /= t; }
csVector3 csVector3_operator_d_____SWIG_1(csVector3 *self,csReversibleTransform const &t){ return *self / t; }
csVector3 csVector3_project(csVector3 const *self,csVector3 const &what){ return what << *self; }
csVector3 csVector3___rmul__(csVector3 const *self,float f){ return f * *self; }
float csVector3___abs__(csVector3 const *self){ return self->Norm(); }
float csVector3___getitem__(csVector3 const *self,int i){ return self->operator[](i); }
void csVector3___setitem__(csVector3 *self,int i,float v){ self->operator[](i) = v; }
bool csVector3___nonzero__(csVector3 const *self){ return !self->IsZero(); }
csMatrix3 csMatrix3_operator_a___(csMatrix3 *self,csMatrix3 const &m){ return *self + m; }
csMatrix3 csMatrix3_operator_s___(csMatrix3 *self,csMatrix3 const &m){ return *self - m; }
csMatrix3 csMatrix3_operator_m_____SWIG_0(csMatrix3 *self,csMatrix3 const &m){ return *self * m; }
csVector3 csMatrix3_operator_m_____SWIG_1(csMatrix3 *self,csVector3 const &v){ return *self * v; }
csMatrix3 csMatrix3_operator_m_____SWIG_2(csMatrix3 *self,float f){ return *self * f; }
csMatrix3 csMatrix3_operator_d___(csMatrix3 *self,float f){ return *self / f; }
bool csMatrix3_operator_ee___(csMatrix3 const *self,csMatrix3 const &m){ return *self == m; }
bool csMatrix3_operator_Ne___(csMatrix3 const *self,csMatrix3 const &m){ return *self != m; }
bool csMatrix3_operator_l___(csMatrix3 const *self,float f){ return *self < f; }
csMatrix3 csMatrix3_operator_m_____SWIG_3(csMatrix3 const *self,csTransform const &t){ return *self * t; }
csMatrix3 &csMatrix3_operator_me_____SWIG_2(csMatrix3 *self,csTransform const &t){ return *self *= t; }
csMatrix3 csMatrix3___rmul__(csMatrix3 *self,float f){ return f * *self; }
csVector3 csTransform_operator_m_____SWIG_0(csTransform const *self,csVector3 const &v){ return *self * v; }
csPlane3 csTransform_operator_m_____SWIG_1(csTransform const *self,csPlane3 const &p){ return *self * p; }
csSphere csTransform_operator_m_____SWIG_2(csTransform const *self,csSphere const &s){ return *self * s; }
csMatrix3 csTransform_operator_m_____SWIG_3(csTransform const *self,csMatrix3 const &m){ return *self * m; }
csTransform csTransform_operator_m_____SWIG_4(csTransform const *self,csReversibleTransform const &t){ return *self * t; }
csVector3 csTransform___rmul____SWIG_0(csTransform const *self,csVector3 const &v){ return v * *self; }
csPlane3 csTransform___rmul____SWIG_1(csTransform const *self,csPlane3 const &p){ return p * *self; }
csSphere csTransform___rmul____SWIG_2(csTransform const *self,csSphere const &s){ return s * *self; }
csReversibleTransform &csReversibleTransform_operator_me___(csReversibleTransform *self,csReversibleTransform const &t){ return *self *= t; }
csReversibleTransform csReversibleTransform_operator_m___(csReversibleTransform *self,csReversibleTransform const &t){ return *self * t; }
csReversibleTransform &csReversibleTransform_operator_de___(csReversibleTransform *self,csReversibleTransform const &t){ return *self /= t; }
csReversibleTransform csReversibleTransform_operator_d___(csReversibleTransform *self,csReversibleTransform const &t){ return *self / t; }
csSphere &csSphere_operator_me___(csSphere *self,csTransform const &t){ return *self *= t; }
csSphere csSphere_operator_d___(csSphere *self,csReversibleTransform const &t){ return *self / t; }
csPlane3 &csPlane3_operator_me___(csPlane3 *self,csTransform const &t){ return *self *= t; }
csPlane3 &csPlane3_operator_de___(csPlane3 *self,csReversibleTransform const &t){ return *self /= t; }
csPlane3 csPlane3_operator_d___(csPlane3 *self,csReversibleTransform const &t){ return *self / t; }

static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;

    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }
        o3 = PyTuple_New(1);            
        PyTuple_SetItem(o3, 0, o);      

        o2 = target;
        target = PySequence_Concat(o2, o3); 
        Py_DECREF(o2);                      
        Py_DECREF(o3);
    }
    return target;
}

csVector2 &csPoly2D___getitem__(csPoly2D *self,int i){ return self->operator[](i); }
csVector3 &csPoly3D___getitem__(csPoly3D *self,int i){ return self->operator[](i); }
csQuaternion csQuaternion_operator_a___(csQuaternion *self,csQuaternion const &q){ return *self + q; }
csQuaternion csQuaternion_operator_s___(csQuaternion *self,csQuaternion const &q){ return *self - q; }
csQuaternion csQuaternion_operator_m___(csQuaternion *self,csQuaternion const &q){ return *self * q; }
bool csInitializer__RequestPlugin(iObjectRegistry *object_reg,char const *plugName,char const *intName,int scfId,int version){
		return csInitializer::RequestPlugins(
			object_reg, plugName, intName, scfId, version,    0
		);
	}
void delete_iPolygonMesh(iPolygonMesh *self){ {if (self) {self->DecRef();}}; }
void delete_iObjectModelListener(iObjectModelListener *self){ {if (self) {self->DecRef();}}; }
void delete_iObjectModel(iObjectModel *self){ {if (self) {self->DecRef();}}; }
void delete_iFrustumViewUserdata(iFrustumViewUserdata *self){ {if (self) {self->DecRef();}}; }
void delete_iFrustumView(iFrustumView *self){ {if (self) {self->DecRef();}}; }
void delete_iLightList(iLightList *self){ {if (self) {self->DecRef();}}; }
void delete_iStatLight(iStatLight *self){ {if (self) {self->DecRef();}}; }
void delete_iSector(iSector *self){ {if (self) {self->DecRef();}}; }
void delete_iSectorList(iSectorList *self){ {if (self) {self->DecRef();}}; }
void delete_iEngine(iEngine *self){ {if (self) {self->DecRef();}}; }
void delete_iCamera(iCamera *self){ {if (self) {self->DecRef();}}; }
void delete_iCameraPosition(iCameraPosition *self){ {if (self) {self->DecRef();}}; }
void delete_iTextureWrapper(iTextureWrapper *self){ {if (self) {self->DecRef();}}; }
void delete_iTextureList(iTextureList *self){ {if (self) {self->DecRef();}}; }
void delete_iMaterialWrapper(iMaterialWrapper *self){ {if (self) {self->DecRef();}}; }
void delete_iMeshWrapper(iMeshWrapper *self){ {if (self) {self->DecRef();}}; }
void delete_iMeshFactoryWrapper(iMeshFactoryWrapper *self){ {if (self) {self->DecRef();}}; }
void delete_iMovableListener(iMovableListener *self){ {if (self) {self->DecRef();}}; }
void delete_iMovable(iMovable *self){ {if (self) {self->DecRef();}}; }
void delete_iVisibilityCuller(iVisibilityCuller *self){ {if (self) {self->DecRef();}}; }
void delete_iModelConverter(iModelConverter *self){ {if (self) {self->DecRef();}}; }
void delete_iMeshObject(iMeshObject *self){ {if (self) {self->DecRef();}}; }
void delete_iMeshObjectFactory(iMeshObjectFactory *self){ {if (self) {self->DecRef();}}; }
void delete_iMeshObjectType(iMeshObjectType *self){ {if (self) {self->DecRef();}}; }
csSprite2DVertex *iSprite2DState_GetVertexByIndex(iSprite2DState *self,int index){
    return &(self->GetVertices()[index]);
  }
void delete_iSprite2DState(iSprite2DState *self){ {if (self) {self->DecRef();}}; }
void delete_iSprite3DState(iSprite3DState *self){ {if (self) {self->DecRef();}}; }
void delete_iThingState(iThingState *self){ {if (self) {self->DecRef();}}; }
void delete_iPolygon3D(iPolygon3D *self){ {if (self) {self->DecRef();}}; }
void delete_iPolygonTexture(iPolygonTexture *self){ {if (self) {self->DecRef();}}; }
void delete_iLoader(iLoader *self){ {if (self) {self->DecRef();}}; }
void delete_iLoaderPlugin(iLoaderPlugin *self){ {if (self) {self->DecRef();}}; }
void delete_iBinaryLoaderPlugin(iBinaryLoaderPlugin *self){ {if (self) {self->DecRef();}}; }
void delete_iSoundHandle(iSoundHandle *self){ {if (self) {self->DecRef();}}; }
void delete_iSoundLoader(iSoundLoader *self){ {if (self) {self->DecRef();}}; }
void delete_iSoundRender(iSoundRender *self){ {if (self) {self->DecRef();}}; }
void delete_iSoundWrapper(iSoundWrapper *self){ {if (self) {self->DecRef();}}; }
void delete_iSoundDriver(iSoundDriver *self){ {if (self) {self->DecRef();}}; }
void delete_iSoundSource(iSoundSource *self){ {if (self) {self->DecRef();}}; }
void delete_iComponent(iComponent *self){ {if (self) {self->DecRef();}}; }
void delete_iCacheManager(iCacheManager *self){ {if (self) {self->DecRef();}}; }
void delete_iFile(iFile *self){ {if (self) {self->DecRef();}}; }
void delete_iVFS(iVFS *self){ {if (self) {self->DecRef();}}; }
void delete_iObject(iObject *self){ {if (self) {self->DecRef();}}; }
void delete_iObjectRegistry(iObjectRegistry *self){ {if (self) {self->DecRef();}}; }
void delete_iVirtualClock(iVirtualClock *self){ {if (self) {self->DecRef();}}; }
void delete_iEvent(iEvent *self){ {if (self) {self->DecRef();}}; }
void delete_iEventQueue(iEventQueue *self){ {if (self) {self->DecRef();}}; }
void delete_iEventHandler(iEventHandler *self){ {if (self) {self->DecRef();}}; }
void delete_iPluginManager(iPluginManager *self){ {if (self) {self->DecRef();}}; }
void delete_iKeyboardDriver(iKeyboardDriver *self){ {if (self) {self->DecRef();}}; }
void delete_iConfigFile(iConfigFile *self){ {if (self) {self->DecRef();}}; }
void delete_iConfigIterator(iConfigIterator *self){ {if (self) {self->DecRef();}}; }
void delete_iConfigManager(iConfigManager *self){ {if (self) {self->DecRef();}}; }
void delete_iStrVector(iStrVector *self){ {if (self) {self->DecRef();}}; }
void delete_iDocument(iDocument *self){ {if (self) {self->DecRef();}}; }
void delete_iDocumentSystem(iDocumentSystem *self){ {if (self) {self->DecRef();}}; }
void delete_iDataBuffer(iDataBuffer *self){ {if (self) {self->DecRef();}}; }
void delete_iGraphics3D(iGraphics3D *self){ {if (self) {self->DecRef();}}; }
void delete_iGraphics2D(iGraphics2D *self){ {if (self) {self->DecRef();}}; }
void delete_iFont(iFont *self){ {if (self) {self->DecRef();}}; }
void delete_iFontServer(iFontServer *self){ {if (self) {self->DecRef();}}; }
void delete_iHalo(iHalo *self){ {if (self) {self->DecRef();}}; }
void delete_iTextureHandle(iTextureHandle *self){ {if (self) {self->DecRef();}}; }
void delete_iTextureManager(iTextureManager *self){ {if (self) {self->DecRef();}}; }
void delete_iMaterial(iMaterial *self){ {if (self) {self->DecRef();}}; }
void delete_iStreamIterator(iStreamIterator *self){ {if (self) {self->DecRef();}}; }
void delete_iStreamFormat(iStreamFormat *self){ {if (self) {self->DecRef();}}; }
void delete_iStream(iStream *self){ {if (self) {self->DecRef();}}; }
void delete_iVideoStream(iVideoStream *self){ {if (self) {self->DecRef();}}; }
void delete_iAudioStream(iAudioStream *self){ {if (self) {self->DecRef();}}; }
void delete_iImage(iImage *self){ {if (self) {self->DecRef();}}; }
void delete_iImageIO(iImageIO *self){ {if (self) {self->DecRef();}}; }
void delete_iView(iView *self){ {if (self) {self->DecRef();}}; }
void delete_iCollider(iCollider *self){ {if (self) {self->DecRef();}}; }
void delete_iCollideSystem(iCollideSystem *self){ {if (self) {self->DecRef();}}; }
csCollisionPair *iCollideSystem_GetCollisionPairByIndex(iCollideSystem *self,int index){
		return self->GetCollisionPairs() + index;
	}
void delete_iDynamics(iDynamics *self){ {if (self) {self->DecRef();}}; }
void delete_iDynamicSystem(iDynamicSystem *self){ {if (self) {self->DecRef();}}; }
void delete_iBodyGroup(iBodyGroup *self){ {if (self) {self->DecRef();}}; }
void delete_iJoint(iJoint *self){ {if (self) {self->DecRef();}}; }
void delete_iNetworkPacket(iNetworkPacket *self){ {if (self) {self->DecRef();}}; }
void delete_iNetworkManager(iNetworkManager *self){ {if (self) {self->DecRef();}}; }
void delete_iNetworkEndPoint(iNetworkEndPoint *self){ {if (self) {self->DecRef();}}; }
void delete_iNetworkConnection(iNetworkConnection *self){ {if (self) {self->DecRef();}}; }
void delete_iNetworkListener(iNetworkListener *self){ {if (self) {self->DecRef();}}; }
void delete_iNetworkDriver(iNetworkDriver *self){ {if (self) {self->DecRef();}}; }
void delete_iNetworkSocket2(iNetworkSocket2 *self){ {if (self) {self->DecRef();}}; }

	csEventKeyData * iEvent_Key_get (iEvent * event)
		{ return &event->Key; }
	csEventMouseData * iEvent_Mouse_get (iEvent * event)
		{ return &event->Mouse; }
	csEventJoystickData * iEvent_Joystick_get (iEvent * event)
		{ return &event->Joystick; }
	csEventCommandData * iEvent_Command_get (iEvent * event)
		{ return &event->Command; }
	csEventNetworkData * iEvent_Network_get (iEvent * event)
		{ return &event->Network; }



	struct _csPyEventHandler : public iEventHandler
	{
		SCF_DECLARE_IBASE;
		_csPyEventHandler (PyObject * obj) : _pySelf(obj)
		{
			SCF_CONSTRUCT_IBASE(0);
			IncRef();
		}
		virtual ~_csPyEventHandler () { DecRef(); }
		virtual bool HandleEvent (iEvent & event)
		{
			PyObject * event_obj = SWIG_NewPointerObj(
				(void *) &event, SWIG_TypeQuery("iEvent *"), 0
			);
			PyObject * result = PyObject_CallMethod(
				_pySelf, "HandleEvent", "(O)", event_obj
			);
			Py_DECREF(event_obj);
			if (!result)
			{
				return false;
			}
			bool res = PyInt_AsLong(result);
			Py_DECREF(result);
			return res;
		}
	private:
		PyObject * _pySelf;
	};



	SCF_IMPLEMENT_IBASE(_csPyEventHandler)
	SCF_IMPLEMENT_IBASE_END



csWrapPtr _CS_QUERY_REGISTRY (iObjectRegistry *reg, const char *iface,
	int iface_ver)
{
  return csWrapPtr (iface, reg->Get
    (iface, iSCF::SCF->GetInterfaceID (iface), iface_ver));
}

csWrapPtr _CS_QUERY_REGISTRY_TAG_INTERFACE (iObjectRegistry *reg,
	const char *tag, const char *iface, int iface_ver)
{
  return csWrapPtr (iface, reg->Get
    (tag, iSCF::SCF->GetInterfaceID (iface), iface_ver));
}

csWrapPtr _SCF_QUERY_INTERFACE (iBase *obj, const char *iface, int iface_ver)
{
  return csWrapPtr (iface, obj->QueryInterface
    (iSCF::SCF->GetInterfaceID (iface), iface_ver));
}

csWrapPtr _SCF_QUERY_INTERFACE_SAFE (iBase *obj, const char *iface,
	int iface_ver)
{
  return csWrapPtr (iface, iBase::QueryInterfaceSafe
    (obj, iSCF::SCF->GetInterfaceID (iface), iface_ver));
}

csWrapPtr _CS_QUERY_PLUGIN_CLASS (iPluginManager *obj, const char *id,
	const char *iface, int iface_ver)
{
  return csWrapPtr (iface, obj->QueryPlugin (id, iface, iface_ver));
}

csWrapPtr _CS_LOAD_PLUGIN (iPluginManager *obj, const char *id,
	const char *iface, int iface_ver)
{
  return csWrapPtr (iface, obj->LoadPlugin (id, iface, iface_ver));
}

csWrapPtr _CS_GET_CHILD_OBJECT (iObject *obj, const char *iface, int iface_ver)
{
  return csWrapPtr (iface, obj->GetChild
    (iSCF::SCF->GetInterfaceID (iface), iface_ver));
}

csWrapPtr _CS_GET_NAMED_CHILD_OBJECT (iObject *obj, const char *iface,
	int iface_ver, const char *name)
{
  return csWrapPtr (iface, obj->GetChild
    (iSCF::SCF->GetInterfaceID (iface), iface_ver, name));
}

csWrapPtr _CS_GET_FIRST_NAMED_CHILD_OBJECT (iObject *obj, const char *iface,
	int iface_ver, const char *name)
{
  return csWrapPtr (iface, obj->GetChild
    (iSCF::SCF->GetInterfaceID (iface), iface_ver, name, true));
}



#include "physicallayer/pl.h"
#include "physicallayer/propfact.h"
#include "physicallayer/propclas.h"
#include "physicallayer/entity.h"
#include "physicallayer/persist.h"
#include "behaviourlayer/bl.h"
#include "behaviourlayer/behave.h"
#include "propclass/region.h"
#include "propclass/camera.h"
#include "propclass/mesh.h"
#include "propclass/meshsel.h"
#include "propclass/timer.h"
#include "propclass/solid.h"
#include "propclass/gravity.h"
#include "propclass/move.h"
#include "propclass/inv.h"
#include "propclass/chars.h"
#include "propclass/linmove.h"
#include "propclass/input.h"
#include "plugins/behaviourlayer/python/blpython.h"


iCelPlLayer *csQueryRegistry_iCelPlLayer (iObjectRegistry *object_reg)
{
  csRef<iCelPlLayer> pl = CS_QUERY_REGISTRY (object_reg, iCelPlLayer);
  return pl;
}

iCelBehaviour *iCelEntity_CreateBehaviour(iCelEntity *self,iCelBlLayer *bl,char const *name){
      csRef<iCelBehaviour> bh(bl->CreateBehaviour(self, name));
      if (!bh.IsValid()) return 0;
      self->SetBehaviour(bh);
      return bh;
    }

bool celRegisterPCFactory (iObjectRegistry* object_reg, const char* pcfactname)
{
  csRef<iPluginManager> plugin_mgr = CS_QUERY_REGISTRY (object_reg,
  	iPluginManager);
  csRef<iBase> pf = CS_LOAD_PLUGIN_ALWAYS(plugin_mgr, pcfactname);
  if (!pf) return false;
  return true;
}


iCelEntity *celCreateEntity(iCelPlLayer *pl, const char *name)
{
  csRef<iCelEntity> en = pl->CreateEntity();
  if (!en.IsValid()) return 0;
  en->SetName (name);
  en->IncRef ();
  return en;
}


iCelEntity *scfQueryInterface_iCelEntity (iBase *base)
{
  csRef<iCelEntity> ent = SCF_QUERY_INTERFACE (base, iCelEntity);
  return ent;
}


iCelEntityList *celFindNearbyEntities (iObjectRegistry *object_reg,
	iSector *sector, csVector3 pos, float radius)
{
  csRef<iCelPlLayer> pl = CS_QUERY_REGISTRY (object_reg, iCelPlLayer);
  if (!pl.IsValid()) return 0;
  csRef<iCelEntityList> entlist = pl->FindNearbyEntities (sector, pos, radius);
  entlist->IncRef();
  return entlist;
}


iCelBlLayer *csQueryRegistry_iCelBlLayer (iObjectRegistry *object_reg)
{
  csRef<iCelBlLayer> bl = CS_QUERY_REGISTRY (object_reg, iCelBlLayer);
  return bl;
}

PyObject *iCelBehaviour_GetPythonObject(iCelBehaviour *self){
      PyObject* obj = (PyObject*)(self->GetInternalObject());
      Py_INCREF (obj);
      return obj;
    }
bool iCelPropertyClass_SetPropertyLong(iCelPropertyClass *self,csStringID id,long l){ return self->SetProperty (id, l); }
bool iCelPropertyClass_SetPropertyFloat(iCelPropertyClass *self,csStringID id,float f){ return self->SetProperty (id, f); }
bool iCelPropertyClass_SetPropertyBool(iCelPropertyClass *self,csStringID id,bool b){ return self->SetProperty (id, b); }
bool iCelPropertyClass_SetPropertyString(iCelPropertyClass *self,csStringID id,char const *s){ return self->SetProperty (id, s); }
bool iCelPropertyClass_SetPropertyVector3(iCelPropertyClass *self,csStringID id,csVector3 const &v){ return self->SetProperty (id, v); }
bool iPcRegion_LoadWorld(iPcRegion *self,char const *vfsdir,char const *name){
      self->SetWorldFile (vfsdir, name);
      return self->Load ();
    }

iPcRegion *celCreateRegion (iCelPlLayer *pl, iCelEntity *entity,
	const char *name)
{
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity, "pcregion");
  if (!pc.IsValid()) return 0;
  csRef<iPcRegion> pcregion = SCF_QUERY_INTERFACE(pc, iPcRegion);
  if (!pcregion.IsValid()) return 0;
  pcregion->SetRegionName (name);
  return pcregion;
}


iPcRegion *scfQuery_iPcRegion (iCelPropertyClass *pc)
{ 
  csRef<iPcRegion> pcregion = SCF_QUERY_INTERFACE(pc, iPcRegion);
  if (pcregion) pcregion->IncRef ();
  return pcregion;
}


iPcRegion *celQueryPC_iPcRegion (iCelPropertyClassList *pclist)
{
  csRef<iPcRegion> pcregion = CEL_QUERY_PROPCLASS(pclist, iPcRegion);
  if (pcregion) pcregion->IncRef ();
  return pcregion;
}


iPcCommandInput *celCreateCommandInput (iCelPlLayer *pl, iCelEntity *entity)
{
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity, "pckeyinput");
  if (!pc.IsValid()) return 0;
  csRef<iPcCommandInput> pcinput = SCF_QUERY_INTERFACE(pc, iPcCommandInput);
  if (!pcinput.IsValid()) return 0;
  return pcinput;
}


iPcLinearMovement *celCreateLinearMovement(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,
  	"pclinearmovement");
  if (!pc.IsValid()) return 0;
  csRef<iPcLinearMovement> pclm = SCF_QUERY_INTERFACE(pc, iPcLinearMovement);
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcCamera *celCreateCamera (iCelPlLayer *pl, iCelEntity *entity)
{
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity, "pccamera");
  if (!pc.IsValid()) return 0;
  csRef<iPcCamera> pccam = SCF_QUERY_INTERFACE(pc, iPcCamera);
  if (!pccam.IsValid()) return 0;
  return pccam;
}


iPcCamera *scfQuery_iPcCamera (iCelPropertyClass *pc)
{
  csRef<iPcCamera> pccamera = SCF_QUERY_INTERFACE(pc, iPcCamera);
  if (pccamera) pccamera->IncRef ();
  return pccamera;
}


iPcMeshSelect *celCreateMeshSelect (iCelPlLayer *pl, iCelEntity *entity)
{
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity, "pcmeshselect");
  if (!pc.IsValid()) return 0;
  csRef<iPcMeshSelect> pcmeshselect = SCF_QUERY_INTERFACE(pc, iPcMeshSelect);
  if (!pcmeshselect.IsValid()) return 0;
  return pcmeshselect;
}


iPcMesh *celCreateMesh (iCelPlLayer *pl, iCelEntity *entity)
{
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity, "pcmesh");
  if (!pc.IsValid()) return 0;
  csRef<iPcMesh> pcmesh = SCF_QUERY_INTERFACE(pc, iPcMesh);
  if (!pcmesh.IsValid()) return 0;
  return pcmesh;
}


iPcMesh *scfQuery_iPcMesh (iCelPropertyClass *pc)
{
  csRef<iPcMesh> pcMesh = SCF_QUERY_INTERFACE(pc, iPcMesh);
  if (pcMesh) pcMesh->IncRef ();
  return pcMesh;
}


iPcTimer *celCreateTimer (iCelPlLayer *pl, iCelEntity *entity)
{
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity, "pctimer");
  if (!pc.IsValid()) return 0;
  csRef<iPcTimer> pctimer = SCF_QUERY_INTERFACE(pc, iPcTimer);
  if (!pctimer.IsValid()) return 0;
  return pctimer;
}


iPcTimer *scfQuery_iPcTimer (iCelPropertyClass *pc)
{
  csRef<iPcTimer> pcTimer = SCF_QUERY_INTERFACE(pc, iPcTimer);
  if (pcTimer) pcTimer->IncRef ();
  return pcTimer;
}


iPcSolid *celCreateSolid (iCelPlLayer *pl, iCelEntity *entity)
{
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity, "pcsolid");
  if (!pc.IsValid()) return 0;
  csRef<iPcSolid> pcsolid = SCF_QUERY_INTERFACE(pc, iPcSolid);
  if (!pcsolid.IsValid()) return 0;
  return pcsolid;
}


iPcGravity *celCreateGravity (iCelPlLayer *pl, iCelEntity *entity)
{
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity, "pcgravity");
  if (!pc.IsValid()) return 0;
  csRef<iPcGravity> pcgravity = SCF_QUERY_INTERFACE(pc, iPcGravity);
  if (!pcgravity.IsValid()) return 0;
  return pcgravity;
}


iPcMovable *celCreateMovable (iCelPlLayer *pl, iCelEntity *entity)
{
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity, "pcmovable");
  if (!pc.IsValid()) return 0;
  csRef<iPcMovable> pcmovable = SCF_QUERY_INTERFACE(pc, iPcMovable);
  if (!pcmovable.IsValid()) return 0;
  return pcmovable;
}


iPcInventory *celCreateInventory (iCelPlLayer *pl, iCelEntity *entity)
{
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity, "pcinventory");
  if (!pc.IsValid()) return 0;
  csRef<iPcInventory> pcinv = SCF_QUERY_INTERFACE(pc, iPcInventory);
  if (!pcinv.IsValid()) return 0;
  return pcinv;
}


iPcInventory *scfQuery_iPcInventory (iCelPropertyClass *pc)
{
  csRef<iPcInventory> pcInventory = SCF_QUERY_INTERFACE(pc, iPcInventory);
  if (pcInventory) pcInventory->IncRef ();
  return pcInventory;
}


iPcCharacteristics *celCreateCharacteristics (iCelPlLayer *pl,
	iCelEntity *entity)
{
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass (entity,
  	"pccharacteristics");
  if (!pc.IsValid()) return 0;
  csRef<iPcCharacteristics> pccharacteristics = SCF_QUERY_INTERFACE (pc,
  	iPcCharacteristics);
  if (!pccharacteristics.IsValid()) return 0;
  return pccharacteristics;
}

#ifdef __cplusplus
extern "C" {
#endif
static PyObject *_wrap_csWrapPtr_Ref_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csWrapPtr *arg1 = (csWrapPtr *) 0 ;
    csRef<iBase > *arg2 = (csRef<iBase > *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csWrapPtr_Ref_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csWrapPtr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRefTiBase_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Ref = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csWrapPtr_Ref_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csWrapPtr *arg1 = (csWrapPtr *) 0 ;
    csRef<iBase > *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csWrapPtr_Ref_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csWrapPtr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csRef<iBase > *)& ((arg1)->Ref);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csRefTiBase_t, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csWrapPtr_VoidPtr_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csWrapPtr *arg1 = (csWrapPtr *) 0 ;
    void *arg2 = (void *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csWrapPtr_VoidPtr_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csWrapPtr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->VoidPtr = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csWrapPtr_VoidPtr_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csWrapPtr *arg1 = (csWrapPtr *) 0 ;
    void *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csWrapPtr_VoidPtr_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csWrapPtr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *) ((arg1)->VoidPtr);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csWrapPtr_Type_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csWrapPtr *arg1 = (csWrapPtr *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csWrapPtr_Type_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csWrapPtr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->Type);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csWrapPtr__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    iBase *arg2 = (iBase *) 0 ;
    csWrapPtr *result;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sO:new_csWrapPtr",&arg1,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csWrapPtr *)new csWrapPtr((char const *)arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csWrapPtr, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csWrapPtr__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    SwigValueWrapper< csPtr<iBase > > arg2 ;
    csWrapPtr *result;
    csPtr<iBase > *argp2 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sO:new_csWrapPtr",&arg1,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csPtrTiBase_t,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (csWrapPtr *)new csWrapPtr((char const *)arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csWrapPtr, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csWrapPtr__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    SwigValueWrapper< csRef<iBase > > arg2 ;
    csWrapPtr *result;
    csRef<iBase > *argp2 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sO:new_csWrapPtr",&arg1,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csRefTiBase_t,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (csWrapPtr *)new csWrapPtr((char const *)arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csWrapPtr, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csWrapPtr__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    void *arg2 = (void *) 0 ;
    csWrapPtr *result;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sO:new_csWrapPtr",&arg1,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csWrapPtr *)new csWrapPtr((char const *)arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csWrapPtr, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csWrapPtr__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csWrapPtr *arg1 = 0 ;
    csWrapPtr *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csWrapPtr",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csWrapPtr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csWrapPtr *)new csWrapPtr((csWrapPtr const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csWrapPtr, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csWrapPtr(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csWrapPtr, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csWrapPtr__SWIG_4(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csPtrTiBase_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_csWrapPtr__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csRefTiBase_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_csWrapPtr__SWIG_2(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iBase, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_csWrapPtr__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, 0, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_csWrapPtr__SWIG_3(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csWrapPtr'");
    return NULL;
}


static PyObject *_wrap_delete_csWrapPtr(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csWrapPtr *arg1 = (csWrapPtr *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csWrapPtr",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csWrapPtr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csWrapPtr_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csWrapPtr, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iBase_IncRef(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBase *arg1 = (iBase *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBase_IncRef",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->IncRef();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBase_DecRef(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBase *arg1 = (iBase *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBase_DecRef",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DecRef();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBase_GetRefCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBase *arg1 = (iBase *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBase_GetRefCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetRefCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBase_QueryInterface(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBase *arg1 = (iBase *) 0 ;
    scfInterfaceID arg2 ;
    int arg3 ;
    void *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iBase_QueryInterface",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (scfInterfaceID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (void *)(arg1)->QueryInterface(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBase_QueryInterfaceSafe(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBase *arg1 = (iBase *) 0 ;
    scfInterfaceID arg2 ;
    int arg3 ;
    void *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iBase_QueryInterfaceSafe",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (scfInterfaceID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (void *)iBase::QueryInterfaceSafe(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iBase(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBase *arg1 = (iBase *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iBase",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iBase(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBase__DynamicCast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBase *arg1 = (iBase *) 0 ;
    char *arg2 ;
    SwigValueWrapper< csWrapPtr > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iBase__DynamicCast",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = iBase__DynamicCast(arg1,(char const *)arg2);
    
    {
        resultobj = _csWrapPtr_to_Python(result);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iBase_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iBase, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iFactory_CreateInstance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFactory *arg1 = (iFactory *) 0 ;
    void *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFactory_CreateInstance",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFactory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *)(arg1)->CreateInstance();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFactory_TryUnload(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFactory *arg1 = (iFactory *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFactory_TryUnload",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFactory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->TryUnload();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFactory_QueryDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFactory *arg1 = (iFactory *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFactory_QueryDescription",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFactory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->QueryDescription();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFactory_QueryDependencies(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFactory *arg1 = (iFactory *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFactory_QueryDependencies",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFactory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->QueryDependencies();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFactory_QueryClassID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFactory *arg1 = (iFactory *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFactory_QueryClassID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFactory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->QueryClassID();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFactory *arg1 = (iFactory *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iFactory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFactory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iFactory(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iFactory_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iFactory, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_scfInitialize__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPluginPaths *arg1 = (csPluginPaths *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfInitialize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPluginPaths,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    scfInitialize(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfInitialize__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    char **arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfInitialize",&obj0)) goto fail;
    {
        if (!PyList_Check(obj0))
        {
            PyErr_SetString(PyExc_TypeError, "not a list");
            return 0;
        }
        arg1 = PyList_Size(obj0);
        typedef char * Char_Ptr;
        arg2 = new Char_Ptr[arg1 + 1];
        for (int i = 0; i < arg1; ++i)
        {
            PyObject * o = PyList_GetItem(obj0, i);
            if (!PyString_Check(o))
            {
                PyErr_SetString(PyExc_TypeError, "list must contain strings");
                delete [] arg2;
                return 0;
            }
            arg2[i] = PyString_AsString(o);
        }
        arg2[arg1] = 0;
    }
    scfInitialize(arg1,(char const *const (*))arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        delete [] arg2;
    }
    return resultobj;
    fail:
    {
        delete [] arg2;
    }
    return NULL;
}


static PyObject *_wrap_scfInitialize(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPluginPaths, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_scfInitialize__SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_scfInitialize__SWIG_1(self,args);
            }
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_scfInitialize__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'scfInitialize'");
    return NULL;
}


static PyObject *_wrap_scfCompatibleVersion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    bool result;
    
    if(!PyArg_ParseTuple(args,(char *)"ii:scfCompatibleVersion",&arg1,&arg2)) goto fail;
    result = (bool)scfCompatibleVersion(arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static int _wrap_iSCF_SCF_set(PyObject *_val) {
    {
        void *temp;
        if ((SWIG_ConvertPtr(_val,(void **) &temp, SWIGTYPE_p_iSCF, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN)) == -1) {
            PyErr_SetString(PyExc_TypeError, "C variable 'iSCF::SCF (iSCF *)'");
            return 1;
        }
        iSCF::SCF = (iSCF *) temp;
    }
    return 0;
}


static PyObject *_wrap_iSCF_SCF_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) iSCF::SCF, SWIGTYPE_p_iSCF, 0);
    return pyobj;
}


static PyObject *_wrap_iSCF_RegisterClasses__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 = (iSCF *) 0 ;
    iDocument *arg2 = (iDocument *) 0 ;
    char *arg3 = (char *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|s:iSCF_RegisterClasses",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iDocument,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RegisterClasses(arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSCF_RegisterClasses__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 = (iSCF *) 0 ;
    char *arg2 ;
    char *arg3 = (char *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|s:iSCF_RegisterClasses",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RegisterClasses((char const *)arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSCF_RegisterClasses__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 = (iSCF *) 0 ;
    char *arg2 ;
    iDocument *arg3 = (iDocument *) 0 ;
    char *arg4 = (char *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|s:iSCF_RegisterClasses",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iDocument,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RegisterClasses((char const *)arg2,arg3,(char const *)arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSCF_RegisterClasses(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSCF, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iDocument, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_iSCF_RegisterClasses__SWIG_0(self,args);
                }
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iSCF_RegisterClasses__SWIG_0(self,args);
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSCF, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_iSCF_RegisterClasses__SWIG_1(self,args);
                }
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iSCF_RegisterClasses__SWIG_1(self,args);
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSCF, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iDocument, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_iSCF_RegisterClasses__SWIG_2(self,args);
                    }
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_iSCF_RegisterClasses__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iSCF_RegisterClasses'");
    return NULL;
}


static PyObject *_wrap_iSCF_ClassRegistered(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 = (iSCF *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSCF_ClassRegistered",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->ClassRegistered((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSCF_CreateInstance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 = (iSCF *) 0 ;
    char *arg2 ;
    char *arg3 ;
    int arg4 ;
    void *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ossi:iSCF_CreateInstance",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *)(arg1)->CreateInstance((char const *)arg2,(char const *)arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSCF_GetClassDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 = (iSCF *) 0 ;
    char *arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSCF_GetClassDescription",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetClassDescription((char const *)arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSCF_GetClassDependencies(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 = (iSCF *) 0 ;
    char *arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSCF_GetClassDependencies",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetClassDependencies((char const *)arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSCF_UnloadUnusedModules(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 = (iSCF *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSCF_UnloadUnusedModules",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UnloadUnusedModules();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSCF_RegisterClass__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 = (iSCF *) 0 ;
    char *arg2 ;
    char *arg3 ;
    char *arg4 ;
    char *arg5 ;
    char *arg6 = (char *) 0 ;
    char *arg7 = (char *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ossss|ss:iSCF_RegisterClass",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RegisterClass((char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSCF_RegisterClass__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 = (iSCF *) 0 ;
    scfFactoryFunc arg2 = (scfFactoryFunc) 0 ;
    char *arg3 ;
    char *arg4 ;
    char *arg5 = (char *) 0 ;
    char *arg6 = (char *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOss|ss:iSCF_RegisterClass",&obj0,&obj1,&arg3,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_scfFactoryFunc,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RegisterClass(arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSCF_RegisterClass(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[8];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 7); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 4) && (argc <= 6)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSCF, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_scfFactoryFunc, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_iSCF_RegisterClass__SWIG_1(self,args);
                        }
                        {
                            _v = PyString_Check(argv[4]) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_iSCF_RegisterClass__SWIG_1(self,args);
                            }
                            {
                                _v = PyString_Check(argv[5]) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_iSCF_RegisterClass__SWIG_1(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 5) && (argc <= 7)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSCF, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = PyString_Check(argv[4]) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_iSCF_RegisterClass__SWIG_0(self,args);
                            }
                            {
                                _v = PyString_Check(argv[5]) ? 1 : 0;
                            }
                            if (_v) {
                                if (argc <= 6) {
                                    return _wrap_iSCF_RegisterClass__SWIG_0(self,args);
                                }
                                {
                                    _v = PyString_Check(argv[6]) ? 1 : 0;
                                }
                                if (_v) {
                                    return _wrap_iSCF_RegisterClass__SWIG_0(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iSCF_RegisterClass'");
    return NULL;
}


static PyObject *_wrap_iSCF_RegisterFactoryFunc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 = (iSCF *) 0 ;
    scfFactoryFunc arg2 = (scfFactoryFunc) 0 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iSCF_RegisterFactoryFunc",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_scfFactoryFunc,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RegisterFactoryFunc(arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSCF_UnregisterClass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 = (iSCF *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSCF_UnregisterClass",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->UnregisterClass((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSCF_GetInterfaceID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 = (iSCF *) 0 ;
    char *arg2 ;
    scfInterfaceID result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSCF_GetInterfaceID",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (scfInterfaceID)(arg1)->GetInterfaceID((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSCF_Finish(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 = (iSCF *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSCF_Finish",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Finish();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSCF_QueryClassList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 = (iSCF *) 0 ;
    char *arg2 ;
    iStrVector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSCF_QueryClassList",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iStrVector *)(arg1)->QueryClassList((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iStrVector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSCF_ScanPluginsPath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 = (iSCF *) 0 ;
    char *arg2 ;
    bool arg3 = (bool) false ;
    char *arg4 = (char *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|Os:iSCF_ScanPluginsPath",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->ScanPluginsPath((char const *)arg2,arg3,(char const *)arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSCF_RegisterPlugin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 = (iSCF *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSCF_RegisterPlugin",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RegisterPlugin((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSCF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 = (iSCF *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSCF",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iSCF(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSCF_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSCF, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iFactory_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iFactory_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iFactory_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iFactory_VERSION);
    return pyobj;
}


static int _wrap_iBase_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iBase_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iBase_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iBase_VERSION);
    return pyobj;
}


static int _wrap_iSCF_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSCF_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSCF_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSCF_VERSION);
    return pyobj;
}


static int _wrap_iDebugHelper_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iDebugHelper_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iDebugHelper_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iDebugHelper_VERSION);
    return pyobj;
}


static PyObject *_wrap_iDebugHelper_GetSupportedTests(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDebugHelper *arg1 = (iDebugHelper *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDebugHelper_GetSupportedTests",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iDebugHelper const *)arg1)->GetSupportedTests();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDebugHelper_UnitTest(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDebugHelper *arg1 = (iDebugHelper *) 0 ;
    SwigValueWrapper< csPtr<iString > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDebugHelper_UnitTest",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->UnitTest();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iString> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iString *)ref), (void *)(iString *)ref, "iString" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDebugHelper_StateTest(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDebugHelper *arg1 = (iDebugHelper *) 0 ;
    SwigValueWrapper< csPtr<iString > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDebugHelper_StateTest",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->StateTest();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iString> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iString *)ref), (void *)(iString *)ref, "iString" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDebugHelper_Benchmark(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDebugHelper *arg1 = (iDebugHelper *) 0 ;
    int arg2 ;
    csTicks result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iDebugHelper_Benchmark",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csTicks)(arg1)->Benchmark(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDebugHelper_Dump__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDebugHelper *arg1 = (iDebugHelper *) 0 ;
    SwigValueWrapper< csPtr<iString > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDebugHelper_Dump",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Dump();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iString> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iString *)ref), (void *)(iString *)ref, "iString" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDebugHelper_Dump__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDebugHelper *arg1 = (iDebugHelper *) 0 ;
    iGraphics3D *arg2 = (iGraphics3D *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iDebugHelper_Dump",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Dump(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDebugHelper_Dump(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iDebugHelper, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_iDebugHelper_Dump__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iDebugHelper, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iGraphics3D, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iDebugHelper_Dump__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iDebugHelper_Dump'");
    return NULL;
}


static PyObject *_wrap_iDebugHelper_DebugCommand(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDebugHelper *arg1 = (iDebugHelper *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iDebugHelper_DebugCommand",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->DebugCommand((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iDebugHelper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDebugHelper *arg1 = (iDebugHelper *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iDebugHelper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iDebugHelper(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iDebugHelper_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iDebugHelper, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csColor_red_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csColor_red_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->red = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColor_red_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csColor_red_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->red);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColor_green_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csColor_green_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->green = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColor_green_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csColor_green_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->green);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColor_blue_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csColor_blue_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->blue = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColor_blue_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csColor_blue_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->blue);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csColor__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csColor")) goto fail;
    result = (csColor *)new csColor();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColor, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csColor__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    float arg2 ;
    float arg3 ;
    csColor *result;
    
    if(!PyArg_ParseTuple(args,(char *)"fff:new_csColor",&arg1,&arg2,&arg3)) goto fail;
    result = (csColor *)new csColor(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColor, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csColor__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = 0 ;
    csColor *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csColor *)new csColor((csColor const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColor, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csColor(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_csColor__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csColor, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csColor__SWIG_2(self,args);
        }
    }
    if (argc == 3) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_new_csColor__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csColor'");
    return NULL;
}


static PyObject *_wrap_csColor_Set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offf:csColor_Set",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Set(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColor_Clamp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offf:csColor_Clamp",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Clamp(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColor_ClampDown(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csColor_ClampDown",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClampDown();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColor_assign(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    csColor *arg2 = 0 ;
    csColor *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csColor_assign",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csColor &_result_ref = (arg1)->operator =((csColor const &)*arg2);
        result = (csColor *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColor___imul__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    float arg2 ;
    csColor *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csColor___imul__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csColor &_result_ref = (arg1)->operator *=(arg2);
        result = (csColor *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColor___iadd__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    csColor *arg2 = 0 ;
    csColor *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csColor___iadd__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csColor &_result_ref = (arg1)->operator +=((csColor const &)*arg2);
        result = (csColor *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColor___isub__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    csColor *arg2 = 0 ;
    csColor *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csColor___isub__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csColor &_result_ref = (arg1)->operator -=((csColor const &)*arg2);
        result = (csColor *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColor_Add(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offf:csColor_Add",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Add(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColor_Subtract(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offf:csColor_Subtract",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Subtract(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColor___add__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    csColor *arg2 = 0 ;
    csColor result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csColor___add__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csColor_operator_a___((csColor const *)arg1,(csColor const &)*arg2);
    
    {
        csColor * resultptr;
        resultptr = new csColor((csColor &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csColor, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColor___sub__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    csColor *arg2 = 0 ;
    csColor result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csColor___sub__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csColor_operator_s___((csColor const *)arg1,(csColor const &)*arg2);
    
    {
        csColor * resultptr;
        resultptr = new csColor((csColor &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csColor, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColor___mul__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    float arg2 ;
    csColor result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csColor___mul__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = csColor_operator_m___((csColor const *)arg1,arg2);
    
    {
        csColor * resultptr;
        resultptr = new csColor((csColor &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csColor, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColor___rmul__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    float arg2 ;
    csColor result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csColor___rmul__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = csColor___rmul__((csColor const *)arg1,arg2);
    
    {
        csColor * resultptr;
        resultptr = new csColor((csColor &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csColor, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColor *arg1 = (csColor *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csColor_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csColor, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csCommandLineHelper_Help(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    iCommandLineParser *arg2 = (iCommandLineParser *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:csCommandLineHelper_Help",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCommandLineParser,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    csCommandLineHelper::Help(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCommandLineHelper_CheckHelp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    iCommandLineParser *arg2 = (iCommandLineParser *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:csCommandLineHelper_CheckHelp",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCommandLineParser,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (bool)csCommandLineHelper::CheckHelp(arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csCommandLineHelper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCommandLineHelper *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csCommandLineHelper")) goto fail;
    result = (csCommandLineHelper *)new csCommandLineHelper();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csCommandLineHelper, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csCommandLineHelper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCommandLineHelper *arg1 = (csCommandLineHelper *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csCommandLineHelper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCommandLineHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csCommandLineHelper_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csCommandLineHelper, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csStringSetIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csStringSet *arg1 = (csStringSet *) 0 ;
    csStringSetIterator *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csStringSetIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csStringSet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csStringSetIterator *)new csStringSetIterator(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csStringSetIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csStringSetIterator_HasNext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csStringSetIterator *arg1 = (csStringSetIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csStringSetIterator_HasNext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csStringSetIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->HasNext();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csStringSetIterator_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csStringSetIterator *arg1 = (csStringSetIterator *) 0 ;
    csStringID result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csStringSetIterator_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csStringSetIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Next();
    
    {
        csStringID * resultptr;
        resultptr = new csStringID((csStringID &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csStringID, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csStringSetIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csStringSetIterator *arg1 = (csStringSetIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csStringSetIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csStringSetIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csStringSetIterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csStringSetIterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csStringSet(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    uint32 arg1 = (uint32) 211 ;
    csStringSet *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"|O:new_csStringSet",&obj0)) goto fail;
    if (obj0) {
        arg1 = (uint32) PyInt_AsLong(obj0);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (csStringSet *)new csStringSet(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csStringSet, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csStringSet(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csStringSet *arg1 = (csStringSet *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csStringSet",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csStringSet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csStringSet_Request__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csStringSet *arg1 = (csStringSet *) 0 ;
    char *arg2 ;
    csStringID result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:csStringSet_Request",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csStringSet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Request((char const *)arg2);
    
    {
        csStringID * resultptr;
        resultptr = new csStringID((csStringID &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csStringID, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csStringSet_Request__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csStringSet *arg1 = (csStringSet *) 0 ;
    csStringID arg2 ;
    char *result;
    csStringID *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csStringSet_Request",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csStringSet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (char *)(arg1)->Request(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csStringSet_Request(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csStringSet, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csStringID, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csStringSet_Request__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csStringSet, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csStringSet_Request__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csStringSet_Request'");
    return NULL;
}


static PyObject *_wrap_csStringSet_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csStringSet *arg1 = (csStringSet *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csStringSet_Clear",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csStringSet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Clear();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csStringSet_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csStringSet, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iString_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iString_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iString_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iString_VERSION);
    return pyobj;
}


static PyObject *_wrap_iString_SetCapacity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    size_t arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iString_SetCapacity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetCapacity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_GetCapacity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iString_GetCapacity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iString const *)arg1)->GetCapacity();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_SetGrowsBy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    size_t arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iString_SetGrowsBy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetGrowsBy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_GetGrowsBy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iString_GetGrowsBy",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iString const *)arg1)->GetGrowsBy();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_SetGrowsExponentially(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iString_SetGrowsExponentially",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetGrowsExponentially(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_GetGrowsExponentially(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iString_GetGrowsExponentially",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iString const *)arg1)->GetGrowsExponentially();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_Truncate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    size_t arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iString_Truncate",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->Truncate(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_Reclaim(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iString_Reclaim",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Reclaim();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iString_Clear",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Clear();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_Clone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    iString *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iString_Clone",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iString *)((iString const *)arg1)->Clone();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_GetData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iString_GetData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iString const *)arg1)->GetData();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_Length(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iString_Length",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iString const *)arg1)->Length();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_IsEmpty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iString_IsEmpty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iString const *)arg1)->IsEmpty();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_SetAt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    size_t arg2 ;
    char arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOc:iString_SetAt",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetAt(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_GetAt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    size_t arg2 ;
    char result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iString_GetAt",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (char)((iString const *)arg1)->GetAt(arg2);
    
    resultobj = Py_BuildValue((char*)"c",result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_Insert(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    size_t arg2 ;
    iString *arg3 = (iString *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iString_Insert",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Insert(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_Overwrite(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    size_t arg2 ;
    iString *arg3 = (iString *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iString_Overwrite",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Overwrite(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_Append__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    char *arg2 ;
    size_t arg3 = (size_t) (size_t) -1 ;
    iString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iString_Append",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (size_t) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        iString &_result_ref = (arg1)->Append((char const *)arg2,arg3);
        result = (iString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_Append__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    iString *arg2 = (iString *) 0 ;
    size_t arg3 = (size_t) (size_t) -1 ;
    iString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:iString_Append",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (size_t) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        iString &_result_ref = (arg1)->Append((iString const *)arg2,arg3);
        result = (iString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_Append(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iString, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_iString_Append__SWIG_1(self,args);
                }
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iString_Append__SWIG_1(self,args);
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_iString_Append__SWIG_0(self,args);
                }
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iString_Append__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iString_Append'");
    return NULL;
}


static PyObject *_wrap_iString_SubString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    iString *arg2 = (iString *) 0 ;
    size_t arg3 ;
    size_t arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iString_SubString",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (size_t) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    arg4 = (size_t) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SubString(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_FindFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    char arg2 ;
    size_t arg3 = (size_t) (size_t) -1 ;
    size_t result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oc|O:iString_FindFirst",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (size_t) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (arg1)->FindFirst(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_FindLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    char arg2 ;
    size_t arg3 = (size_t) (size_t) -1 ;
    size_t result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oc|O:iString_FindLast",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (size_t) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (arg1)->FindLast(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_Format__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    char *arg2 ;
    void *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iString_Format",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Format((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_Format(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *varargs;
    PyObject *newargs;
    
    newargs = PyTuple_GetSlice(args,0,2);
    varargs = PyTuple_GetSlice(args,2,PyTuple_Size(args)+1);
    resultobj = _wrap_iString_Format__varargs__(self,newargs,varargs);
    Py_XDECREF(newargs);
    Py_XDECREF(varargs);
    return resultobj;
}


static PyObject *_wrap_iString_FormatV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    char *arg2 ;
    va_list arg3 ;
    va_list *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iString_FormatV",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_va_list,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    (arg1)->FormatV((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_Replace(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    iString *arg2 = (iString *) 0 ;
    size_t arg3 = (size_t) (size_t) -1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:iString_Replace",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (size_t) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->Replace((iString const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_Compare(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    iString *arg2 = (iString *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iString_Compare",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iString const *)arg1)->Compare((iString const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString_CompareNoCase(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    iString *arg2 = (iString *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iString_CompareNoCase",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iString const *)arg1)->CompareNoCase((iString const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString___iadd____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    iString *arg2 = 0 ;
    iString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iString___iadd__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        iString &_result_ref = (arg1)->operator +=((iString const &)*arg2);
        result = (iString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString___iadd____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    char *arg2 ;
    iString *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iString___iadd__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        iString &_result_ref = (arg1)->operator +=((char const *)arg2);
        result = (iString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString___iadd__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iString, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iString___iadd____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iString___iadd____SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iString___iadd__'");
    return NULL;
}


static PyObject *_wrap_iString___add__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    iString *arg2 = 0 ;
    iString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iString___add__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        iString &_result_ref = ((iString const *)arg1)->operator +((iString const &)*arg2);
        result = (iString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iString___eq__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    iString *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iString___eq__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((iString const *)arg1)->operator ==((iString const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iString *arg1 = (iString *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iString",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iString(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iString_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iString, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csString_SetCapacity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    size_t arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csString_SetCapacity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetCapacity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_GetCapacity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csString_GetCapacity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csString const *)arg1)->GetCapacity();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_SetGrowsBy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    size_t arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csString_SetGrowsBy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetGrowsBy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_GetGrowsBy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csString_GetGrowsBy",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csString const *)arg1)->GetGrowsBy();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_SetGrowsExponentially(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csString_SetGrowsExponentially",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetGrowsExponentially(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_GetGrowsExponentially(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csString_GetGrowsExponentially",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((csString const *)arg1)->GetGrowsExponentially();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Free(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csString_Free",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Free();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Truncate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    size_t arg2 ;
    csString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csString_Truncate",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    {
        csString &_result_ref = (arg1)->Truncate(arg2);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Reclaim(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    csString *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csString_Reclaim",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csString &_result_ref = (arg1)->Reclaim();
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    csString *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csString_Clear",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csString &_result_ref = (arg1)->Clear();
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_GetData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csString_GetData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((csString const *)arg1)->GetData();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Length(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csString_Length",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csString const *)arg1)->Length();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_IsEmpty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csString_IsEmpty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((csString const *)arg1)->IsEmpty();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_SetAt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    size_t arg2 ;
    char arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOc:csString_SetAt",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetAt(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_GetAt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    size_t arg2 ;
    char result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csString_GetAt",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (char)((csString const *)arg1)->GetAt(arg2);
    
    resultobj = Py_BuildValue((char*)"c",result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_DeleteAt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    size_t arg2 ;
    size_t arg3 = (size_t) 1 ;
    csString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:csString_DeleteAt",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj2) {
        arg3 = (size_t) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        csString &_result_ref = (arg1)->DeleteAt(arg2,arg3);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Insert__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    size_t arg2 ;
    csString *arg3 = 0 ;
    csString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csString_Insert",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csString &_result_ref = (arg1)->Insert(arg2,(csString const &)*arg3);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Insert__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    size_t arg2 ;
    char arg3 ;
    csString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOc:csString_Insert",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    {
        csString &_result_ref = (arg1)->Insert(arg2,arg3);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Insert(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_csString_Insert__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyString_Check(argv[2]) && (PyString_Size(argv[2]) == 1)) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_csString_Insert__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csString_Insert'");
    return NULL;
}


static PyObject *_wrap_csString_Overwrite(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    size_t arg2 ;
    csString *arg3 = 0 ;
    csString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csString_Overwrite",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csString &_result_ref = (arg1)->Overwrite(arg2,(csString const &)*arg3);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Append__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    char *arg2 ;
    size_t arg3 = (size_t) (size_t) -1 ;
    csString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:csString_Append",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (size_t) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        csString &_result_ref = (arg1)->Append((char const *)arg2,arg3);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Append__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    csString *arg2 = 0 ;
    size_t arg3 = (size_t) (size_t) -1 ;
    csString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:csString_Append",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        arg3 = (size_t) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        csString &_result_ref = (arg1)->Append((csString const &)*arg2,arg3);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Append__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    char arg2 ;
    csString *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oc:csString_Append",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csString &_result_ref = (arg1)->Append(arg2);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Append__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    unsigned char arg2 ;
    csString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csString_Append",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    {
        csString &_result_ref = (arg1)->Append(arg2);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Append(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_csString_Append__SWIG_1(self,args);
                }
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_csString_Append__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csString_Append__SWIG_3(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyString_Check(argv[1]) && (PyString_Size(argv[1]) == 1)) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csString_Append__SWIG_2(self,args);
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_csString_Append__SWIG_0(self,args);
                }
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_csString_Append__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csString_Append'");
    return NULL;
}


static PyObject *_wrap_csString_SubString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    csString *arg2 = 0 ;
    size_t arg3 ;
    size_t arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:csString_SubString",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg3 = (size_t) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    arg4 = (size_t) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SubString(*arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_FindFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    char arg2 ;
    size_t arg3 = (size_t) (size_t) -1 ;
    size_t result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oc|O:csString_FindFirst",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (size_t) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (arg1)->FindFirst(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_FindLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    char arg2 ;
    size_t arg3 = (size_t) (size_t) -1 ;
    size_t result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oc|O:csString_FindLast",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (size_t) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (arg1)->FindLast(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Replace__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    csString *arg2 = 0 ;
    size_t arg3 = (size_t) (size_t) -1 ;
    csString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:csString_Replace",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        arg3 = (size_t) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        csString &_result_ref = (arg1)->Replace((csString const &)*arg2,arg3);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Replace__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    char *arg2 ;
    size_t arg3 = (size_t) (size_t) -1 ;
    csString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:csString_Replace",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (size_t) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        csString &_result_ref = (arg1)->Replace((char const *)arg2,arg3);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Replace(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_csString_Replace__SWIG_0(self,args);
                }
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_csString_Replace__SWIG_0(self,args);
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_csString_Replace__SWIG_1(self,args);
                }
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_csString_Replace__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csString_Replace'");
    return NULL;
}


static PyObject *_wrap_csString_Compare__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    csString *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csString_Compare",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((csString const *)arg1)->Compare((csString const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Compare__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:csString_Compare",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((csString const *)arg1)->Compare((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Compare(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csString_Compare__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csString_Compare__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csString_Compare'");
    return NULL;
}


static PyObject *_wrap_csString_CompareNoCase__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    csString *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csString_CompareNoCase",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((csString const *)arg1)->CompareNoCase((csString const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_CompareNoCase__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:csString_CompareNoCase",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((csString const *)arg1)->CompareNoCase((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_CompareNoCase(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csString_CompareNoCase__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csString_CompareNoCase__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csString_CompareNoCase'");
    return NULL;
}


static PyObject *_wrap_new_csString__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csString")) goto fail;
    result = (csString *)new csString();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csString__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    size_t arg1 ;
    csString *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csString",&obj0)) goto fail;
    arg1 = (size_t) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    result = (csString *)new csString(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csString__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = 0 ;
    csString *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csString",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csString *)new csString((csString const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csString__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    csString *result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:new_csString",&arg1)) goto fail;
    result = (csString *)new csString((char const *)arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csString__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char arg1 ;
    csString *result;
    
    if(!PyArg_ParseTuple(args,(char *)"c:new_csString",&arg1)) goto fail;
    result = (csString *)new csString(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csString__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned char arg1 ;
    csString *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csString",&obj0)) goto fail;
    arg1 = (unsigned char) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    result = (csString *)new csString(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csString(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_csString__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csString__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csString__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_csString__SWIG_5(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            _v = (PyString_Check(argv[0]) && (PyString_Size(argv[0]) == 1)) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_csString__SWIG_4(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_csString__SWIG_3(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csString'");
    return NULL;
}


static PyObject *_wrap_delete_csString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csString",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Clone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    csString result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csString_Clone",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csString const *)arg1)->Clone();
    
    {
        csString * resultptr;
        resultptr = new csString((csString &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csString, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_LTrim(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    csString *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csString_LTrim",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csString &_result_ref = (arg1)->LTrim();
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_RTrim(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    csString *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csString_RTrim",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csString &_result_ref = (arg1)->RTrim();
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Trim(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    csString *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csString_Trim",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csString &_result_ref = (arg1)->Trim();
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Collapse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    csString *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csString_Collapse",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csString &_result_ref = (arg1)->Collapse();
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Format__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    char *arg2 ;
    void *arg3 = 0 ;
    csString *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:csString_Format",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csString &_result_ref = (arg1)->Format((char const *)arg2,arg3);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_Format(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *varargs;
    PyObject *newargs;
    
    newargs = PyTuple_GetSlice(args,0,2);
    varargs = PyTuple_GetSlice(args,2,PyTuple_Size(args)+1);
    resultobj = _wrap_csString_Format__varargs__(self,newargs,varargs);
    Py_XDECREF(newargs);
    Py_XDECREF(varargs);
    return resultobj;
}


static PyObject *_wrap_csString_FormatV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    char *arg2 ;
    va_list arg3 ;
    csString *result;
    va_list *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:csString_FormatV",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_va_list,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    {
        csString &_result_ref = (arg1)->FormatV((char const *)arg2,arg3);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_PadLeft__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    size_t arg2 ;
    char arg3 = (char) ' ' ;
    csString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|c:csString_PadLeft",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    {
        csString &_result_ref = (arg1)->PadLeft(arg2,arg3);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_AsPadLeft(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    size_t arg2 ;
    char arg3 = (char) ' ' ;
    csString result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|c:csString_AsPadLeft",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (arg1)->AsPadLeft(arg2,arg3);
    
    {
        csString * resultptr;
        resultptr = new csString((csString &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csString, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_PadLeft__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    size_t arg2 ;
    char arg3 = (char) ' ' ;
    csString result;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sO|c:csString_PadLeft",&arg1,&obj1,&arg3)) goto fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = csString::PadLeft((char const *)arg1,arg2,arg3);
    
    {
        csString * resultptr;
        resultptr = new csString((csString &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csString, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_PadLeft(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_csString_PadLeft__SWIG_0(self,args);
                }
                {
                    _v = (PyString_Check(argv[2]) && (PyString_Size(argv[2]) == 1)) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_csString_PadLeft__SWIG_0(self,args);
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_csString_PadLeft__SWIG_1(self,args);
                }
                {
                    _v = (PyString_Check(argv[2]) && (PyString_Size(argv[2]) == 1)) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_csString_PadLeft__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csString_PadLeft'");
    return NULL;
}


static PyObject *_wrap_csString_PadRight__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    size_t arg2 ;
    char arg3 = (char) ' ' ;
    csString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|c:csString_PadRight",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    {
        csString &_result_ref = (arg1)->PadRight(arg2,arg3);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_AsPadRight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    size_t arg2 ;
    char arg3 = (char) ' ' ;
    csString result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|c:csString_AsPadRight",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (arg1)->AsPadRight(arg2,arg3);
    
    {
        csString * resultptr;
        resultptr = new csString((csString &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csString, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_PadRight__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    size_t arg2 ;
    char arg3 = (char) ' ' ;
    csString result;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sO|c:csString_PadRight",&arg1,&obj1,&arg3)) goto fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = csString::PadRight((char const *)arg1,arg2,arg3);
    
    {
        csString * resultptr;
        resultptr = new csString((csString &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csString, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_PadRight(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_csString_PadRight__SWIG_0(self,args);
                }
                {
                    _v = (PyString_Check(argv[2]) && (PyString_Size(argv[2]) == 1)) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_csString_PadRight__SWIG_0(self,args);
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_csString_PadRight__SWIG_1(self,args);
                }
                {
                    _v = (PyString_Check(argv[2]) && (PyString_Size(argv[2]) == 1)) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_csString_PadRight__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csString_PadRight'");
    return NULL;
}


static PyObject *_wrap_csString_PadCenter__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    size_t arg2 ;
    char arg3 = (char) ' ' ;
    csString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|c:csString_PadCenter",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    {
        csString &_result_ref = (arg1)->PadCenter(arg2,arg3);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_AsPadCenter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    size_t arg2 ;
    char arg3 = (char) ' ' ;
    csString result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|c:csString_AsPadCenter",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (arg1)->AsPadCenter(arg2,arg3);
    
    {
        csString * resultptr;
        resultptr = new csString((csString &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csString, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_PadCenter__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    size_t arg2 ;
    char arg3 = (char) ' ' ;
    csString result;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sO|c:csString_PadCenter",&arg1,&obj1,&arg3)) goto fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = csString::PadCenter((char const *)arg1,arg2,arg3);
    
    {
        csString * resultptr;
        resultptr = new csString((csString &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csString, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_PadCenter(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_csString_PadCenter__SWIG_0(self,args);
                }
                {
                    _v = (PyString_Check(argv[2]) && (PyString_Size(argv[2]) == 1)) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_csString_PadCenter__SWIG_0(self,args);
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_size_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_csString_PadCenter__SWIG_1(self,args);
                }
                {
                    _v = (PyString_Check(argv[2]) && (PyString_Size(argv[2]) == 1)) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_csString_PadCenter__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csString_PadCenter'");
    return NULL;
}


static PyObject *_wrap_csString_assign__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    csString *arg2 = 0 ;
    csString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csString_assign",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csString const &_result_ref = (arg1)->operator =((csString const &)*arg2);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_assign__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    char *arg2 ;
    csString *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:csString_assign",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csString const &_result_ref = (arg1)->operator =((char const *)arg2);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_assign(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csString_assign__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csString_assign__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csString_assign'");
    return NULL;
}


static PyObject *_wrap_csString___iadd____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    csString *arg2 = 0 ;
    csString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csString___iadd__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csString &_result_ref = (arg1)->operator +=((csString const &)*arg2);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString___iadd____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    char *arg2 ;
    csString *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:csString___iadd__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csString &_result_ref = (arg1)->operator +=((char const *)arg2);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString___iadd__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csString___iadd____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csString___iadd____SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csString___iadd__'");
    return NULL;
}


static PyObject *_wrap_csString___add__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    csString *arg2 = 0 ;
    csString *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csString___add__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csString const &_result_ref = ((csString const *)arg1)->operator +((csString const &)*arg2);
        result = (csString *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString___eq____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    csString *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csString___eq__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((csString const *)arg1)->operator ==((csString const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString___eq____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:csString___eq__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((csString const *)arg1)->operator ==((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString___eq__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csString___eq____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csString___eq____SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csString___eq__'");
    return NULL;
}


static PyObject *_wrap_csString___ne____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    csString *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csString___ne__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((csString const *)arg1)->operator !=((csString const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString___ne____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:csString___ne__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((csString const *)arg1)->operator !=((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString___ne__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csString___ne____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csString, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csString___ne____SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csString___ne__'");
    return NULL;
}


static PyObject *_wrap_csString_Detach(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csString_Detach",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->Detach();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csString_strlwr(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString *arg1 = (csString *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csString_strlwr",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->strlwr();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csString_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csString, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csVector2_x_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector2_x_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2_x_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector2_x_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->x);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2_y_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector2_y_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2_y_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector2_y_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->y);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csVector2__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csVector2")) goto fail;
    result = (csVector2 *)new csVector2();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csVector2__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    float arg2 ;
    csVector2 *result;
    
    if(!PyArg_ParseTuple(args,(char *)"ff:new_csVector2",&arg1,&arg2)) goto fail;
    result = (csVector2 *)new csVector2(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csVector2(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_csVector2__SWIG_0(self,args);
    }
    if (argc == 2) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_csVector2__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csVector2'");
    return NULL;
}


static PyObject *_wrap_csVector2_Set__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    float arg2 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Off:csVector2_Set",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Set(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2_Set__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    csVector2 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector2_Set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Set((csVector2 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2_Set(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csVector2_Set__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_csVector2_Set__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csVector2_Set'");
    return NULL;
}


static PyObject *_wrap_csVector2_Norm(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector2_Norm",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((csVector2 const *)arg1)->Norm();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2_SquaredNorm(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector2_SquaredNorm",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((csVector2 const *)arg1)->SquaredNorm();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2_Rotate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector2_Rotate",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Rotate(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2___iadd__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    csVector2 *arg2 = 0 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector2___iadd__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csVector2 &_result_ref = (arg1)->operator +=((csVector2 const &)*arg2);
        result = (csVector2 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2___isub__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    csVector2 *arg2 = 0 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector2___isub__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csVector2 &_result_ref = (arg1)->operator -=((csVector2 const &)*arg2);
        result = (csVector2 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2___imul__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    float arg2 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector2___imul__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector2 &_result_ref = (arg1)->operator *=(arg2);
        result = (csVector2 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2___idiv__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    float arg2 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector2___idiv__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector2 &_result_ref = (arg1)->operator /=(arg2);
        result = (csVector2 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2___pos__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    csVector2 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector2___pos__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csVector2 const *)arg1)->operator +();
    
    {
        csVector2 * resultptr;
        resultptr = new csVector2((csVector2 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector2, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2___neg__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    csVector2 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector2___neg__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csVector2 const *)arg1)->operator -();
    
    {
        csVector2 * resultptr;
        resultptr = new csVector2((csVector2 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector2, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2___add__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    csVector2 *arg2 = 0 ;
    csVector2 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector2___add__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csVector2_operator_a___((csVector2 const *)arg1,(csVector2 const &)*arg2);
    
    {
        csVector2 * resultptr;
        resultptr = new csVector2((csVector2 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector2, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2___sub__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    csVector2 *arg2 = 0 ;
    csVector2 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector2___sub__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csVector2_operator_s___((csVector2 const *)arg1,(csVector2 const &)*arg2);
    
    {
        csVector2 * resultptr;
        resultptr = new csVector2((csVector2 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector2, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2___mul____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    csVector2 *arg2 = 0 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector2___mul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csVector2_operator_m_____SWIG_0((csVector2 const *)arg1,(csVector2 const &)*arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2___mul____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    float arg2 ;
    csVector2 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector2___mul__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = csVector2_operator_m_____SWIG_1((csVector2 const *)arg1,arg2);
    
    {
        csVector2 * resultptr;
        resultptr = new csVector2((csVector2 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector2, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2___mul__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csVector2___mul____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csVector2___mul____SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csVector2___mul__'");
    return NULL;
}


static PyObject *_wrap_csVector2___div__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    float arg2 ;
    csVector2 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector2___div__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = csVector2_operator_d___((csVector2 const *)arg1,arg2);
    
    {
        csVector2 * resultptr;
        resultptr = new csVector2((csVector2 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector2, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2___eq__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    csVector2 *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector2___eq__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csVector2_operator_ee___((csVector2 const *)arg1,(csVector2 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2___ne__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    csVector2 *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector2___ne__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csVector2_operator_Ne___((csVector2 const *)arg1,(csVector2 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2___lt__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    float arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector2___lt__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)csVector2_operator_l___((csVector2 const *)arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2___gt__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    float arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector2___gt__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)csVector2_operator_g___((csVector2 const *)arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2___rmul__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    float arg2 ;
    csVector2 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector2___rmul__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = csVector2___rmul__((csVector2 const *)arg1,arg2);
    
    {
        csVector2 * resultptr;
        resultptr = new csVector2((csVector2 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector2, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2___abs__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector2___abs__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)csVector2___abs__((csVector2 const *)arg1);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2___getitem__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    int arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csVector2___getitem__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)csVector2___getitem__((csVector2 const *)arg1,arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector2___setitem__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    int arg2 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oif:csVector2___setitem__",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    csVector2___setitem__(arg1,arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csVector2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csVector2",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csVector2_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csVector2, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csVector3_x_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector3_x_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3_x_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector3_x_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->x);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3_y_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector3_y_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3_y_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector3_y_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->y);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3_z_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector3_z_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->z = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3_z_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector3_z_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->z);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csVector3__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csVector3")) goto fail;
    result = (csVector3 *)new csVector3();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csVector3__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    csVector3 *result;
    
    if(!PyArg_ParseTuple(args,(char *)"f:new_csVector3",&arg1)) goto fail;
    result = (csVector3 *)new csVector3(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csVector3__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    float arg2 ;
    float arg3 = (float) 0 ;
    csVector3 *result;
    
    if(!PyArg_ParseTuple(args,(char *)"ff|f:new_csVector3",&arg1,&arg2,&arg3)) goto fail;
    result = (csVector3 *)new csVector3(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csVector3__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csVector3",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csVector3 *)new csVector3((csVector3 const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csVector3__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csDVector3 *arg1 = 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csVector3",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csDVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csVector3 *)new csVector3((csDVector3 const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csVector3(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_csVector3__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csVector3__SWIG_3(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csDVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csVector3__SWIG_4(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_csVector3__SWIG_1(self,args);
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_new_csVector3__SWIG_2(self,args);
                }
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_new_csVector3__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csVector3'");
    return NULL;
}


static PyObject *_wrap_csVector3_Cross(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csVector3_Cross",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Cross((csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___iadd__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector3___iadd__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csVector3 &_result_ref = (arg1)->operator +=((csVector3 const &)*arg2);
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___isub__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector3___isub__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csVector3 &_result_ref = (arg1)->operator -=((csVector3 const &)*arg2);
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___imul____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    float arg2 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector3___imul__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 &_result_ref = (arg1)->operator *=(arg2);
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___idiv____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    float arg2 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector3___idiv__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 &_result_ref = (arg1)->operator /=(arg2);
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___pos__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector3___pos__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csVector3 const *)arg1)->operator +();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___neg__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector3___neg__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csVector3 const *)arg1)->operator -();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3_Set__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offf:csVector3_Set",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Set(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3_Set__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector3_Set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Set((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3_Set(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csVector3_Set__SWIG_1(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyFloat_Check(argv[3]) || PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_csVector3_Set__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csVector3_Set'");
    return NULL;
}


static PyObject *_wrap_csVector3_Norm(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector3_Norm",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((csVector3 const *)arg1)->Norm();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3_SquaredNorm(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector3_SquaredNorm",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((csVector3 const *)arg1)->SquaredNorm();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3_Unit(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector3_Unit",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csVector3 const *)arg1)->Unit();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3_Normalize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector3_Normalize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Normalize();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3_IsZero(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    float arg2 = (float) SMALL_EPSILON ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|f:csVector3_IsZero",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((csVector3 const *)arg1)->IsZero(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___add__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector3___add__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csVector3_operator_a___((csVector3 const *)arg1,(csVector3 const &)*arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___sub__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector3___sub__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csVector3_operator_s___((csVector3 const *)arg1,(csVector3 const &)*arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___mul____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    csVector3 *arg2 = 0 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector3___mul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csVector3_operator_m_____SWIG_0((csVector3 const *)arg1,(csVector3 const &)*arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___mul____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    float arg2 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector3___mul__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = csVector3_operator_m_____SWIG_1((csVector3 const *)arg1,arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___mul__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csVector3___mul____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csVector3___mul____SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csVector3___mul__'");
    return NULL;
}


static PyObject *_wrap_csVector3___div____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    float arg2 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector3___div__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = csVector3_operator_d_____SWIG_0((csVector3 const *)arg1,arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___eq__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    csVector3 *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector3___eq__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csVector3_operator_ee___((csVector3 const *)arg1,(csVector3 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___ne__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    csVector3 *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector3___ne__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csVector3_operator_Ne___((csVector3 const *)arg1,(csVector3 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___lt__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    float arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector3___lt__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)csVector3_operator_l___((csVector3 const *)arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___gt__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    float arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector3___gt__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)csVector3_operator_g___((csVector3 const *)arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___imul____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    csTransform *arg2 = 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector3___imul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csVector3 &_result_ref = csVector3_operator_me_____SWIG_1(arg1,(csTransform const &)*arg2);
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___imul__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csTransform, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csVector3___imul____SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csVector3___imul____SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csVector3___imul__'");
    return NULL;
}


static PyObject *_wrap_csVector3___idiv____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    csReversibleTransform *arg2 = 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector3___idiv__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csVector3 &_result_ref = csVector3_operator_de_____SWIG_1(arg1,(csReversibleTransform const &)*arg2);
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___idiv__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csVector3___idiv____SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csVector3___idiv____SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csVector3___idiv__'");
    return NULL;
}


static PyObject *_wrap_csVector3___div____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    csReversibleTransform *arg2 = 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector3___div__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csVector3_operator_d_____SWIG_1(arg1,(csReversibleTransform const &)*arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___div__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csVector3___div____SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csVector3___div____SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csVector3___div__'");
    return NULL;
}


static PyObject *_wrap_csVector3_project(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector3_project",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csVector3_project((csVector3 const *)arg1,(csVector3 const &)*arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___rmul__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    float arg2 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector3___rmul__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = csVector3___rmul__((csVector3 const *)arg1,arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___abs__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector3___abs__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)csVector3___abs__((csVector3 const *)arg1);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___getitem__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    int arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csVector3___getitem__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)csVector3___getitem__((csVector3 const *)arg1,arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___setitem__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    int arg2 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oif:csVector3___setitem__",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    csVector3___setitem__(arg1,arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3___nonzero__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector3___nonzero__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)csVector3___nonzero__((csVector3 const *)arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csVector3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csVector3",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csVector3_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csVector3, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csMatrix2_m11_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix2_m11_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->m11 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2_m11_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix2_m11_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->m11);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2_m12_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix2_m12_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->m12 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2_m12_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix2_m12_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->m12);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2_m21_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix2_m21_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->m21 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2_m21_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix2_m21_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->m21);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2_m22_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix2_m22_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->m22 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2_m22_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix2_m22_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->m22);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csMatrix2__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csMatrix2")) goto fail;
    result = (csMatrix2 *)new csMatrix2();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix2, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csMatrix2__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    csMatrix2 *result;
    
    if(!PyArg_ParseTuple(args,(char *)"ffff:new_csMatrix2",&arg1,&arg2,&arg3,&arg4)) goto fail;
    result = (csMatrix2 *)new csMatrix2(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix2, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csMatrix2(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_csMatrix2__SWIG_0(self,args);
    }
    if (argc == 4) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyFloat_Check(argv[3]) || PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_new_csMatrix2__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csMatrix2'");
    return NULL;
}


static PyObject *_wrap_csMatrix2_Row1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    csVector2 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix2_Row1",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csMatrix2 const *)arg1)->Row1();
    
    {
        csVector2 * resultptr;
        resultptr = new csVector2((csVector2 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector2, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2_Row2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    csVector2 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix2_Row2",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csMatrix2 const *)arg1)->Row2();
    
    {
        csVector2 * resultptr;
        resultptr = new csVector2((csVector2 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector2, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2_Col1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    csVector2 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix2_Col1",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csMatrix2 const *)arg1)->Col1();
    
    {
        csVector2 * resultptr;
        resultptr = new csVector2((csVector2 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector2, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2_Col2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    csVector2 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix2_Col2",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csMatrix2 const *)arg1)->Col2();
    
    {
        csVector2 * resultptr;
        resultptr = new csVector2((csVector2 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector2, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2_Set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    float arg5 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offff:csMatrix2_Set",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Set(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2___iadd__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    csMatrix2 *arg2 = 0 ;
    csMatrix2 *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMatrix2___iadd__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csMatrix2 &_result_ref = (arg1)->operator +=((csMatrix2 const &)*arg2);
        result = (csMatrix2 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2___isub__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    csMatrix2 *arg2 = 0 ;
    csMatrix2 *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMatrix2___isub__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csMatrix2 &_result_ref = (arg1)->operator -=((csMatrix2 const &)*arg2);
        result = (csMatrix2 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2___imul____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    csMatrix2 *arg2 = 0 ;
    csMatrix2 *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMatrix2___imul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csMatrix2 &_result_ref = (arg1)->operator *=((csMatrix2 const &)*arg2);
        result = (csMatrix2 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2___imul____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    float arg2 ;
    csMatrix2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix2___imul__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csMatrix2 &_result_ref = (arg1)->operator *=(arg2);
        result = (csMatrix2 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2___imul__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csMatrix2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csMatrix2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csMatrix2___imul____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csMatrix2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csMatrix2___imul____SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csMatrix2___imul__'");
    return NULL;
}


static PyObject *_wrap_csMatrix2___idiv__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    float arg2 ;
    csMatrix2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix2___idiv__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csMatrix2 &_result_ref = (arg1)->operator /=(arg2);
        result = (csMatrix2 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2___pos__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    csMatrix2 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix2___pos__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csMatrix2 const *)arg1)->operator +();
    
    {
        csMatrix2 * resultptr;
        resultptr = new csMatrix2((csMatrix2 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csMatrix2, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2___neg__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    csMatrix2 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix2___neg__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csMatrix2 const *)arg1)->operator -();
    
    {
        csMatrix2 * resultptr;
        resultptr = new csMatrix2((csMatrix2 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csMatrix2, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2_Transpose(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix2_Transpose",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Transpose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2_GetTranspose(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    csMatrix2 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix2_GetTranspose",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csMatrix2 const *)arg1)->GetTranspose();
    
    {
        csMatrix2 * resultptr;
        resultptr = new csMatrix2((csMatrix2 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csMatrix2, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2_GetInverse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    csMatrix2 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix2_GetInverse",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csMatrix2 const *)arg1)->GetInverse();
    
    {
        csMatrix2 * resultptr;
        resultptr = new csMatrix2((csMatrix2 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csMatrix2, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2_Invert(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix2_Invert",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Invert();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2_Determinant(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix2_Determinant",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((csMatrix2 const *)arg1)->Determinant();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix2_Identity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix2_Identity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Identity();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csMatrix2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix2 *arg1 = (csMatrix2 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csMatrix2",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csMatrix2_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csMatrix2, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csMatrix3_m11_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix3_m11_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->m11 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_m11_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_m11_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->m11);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_m12_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix3_m12_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->m12 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_m12_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_m12_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->m12);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_m13_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix3_m13_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->m13 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_m13_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_m13_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->m13);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_m21_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix3_m21_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->m21 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_m21_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_m21_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->m21);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_m22_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix3_m22_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->m22 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_m22_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_m22_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->m22);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_m23_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix3_m23_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->m23 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_m23_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_m23_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->m23);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_m31_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix3_m31_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->m31 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_m31_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_m31_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->m31);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_m32_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix3_m32_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->m32 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_m32_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_m32_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->m32);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_m33_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix3_m33_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->m33 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_m33_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_m33_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->m33);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csMatrix3__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csMatrix3")) goto fail;
    result = (csMatrix3 *)new csMatrix3();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csMatrix3__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    float arg5 ;
    float arg6 ;
    float arg7 ;
    float arg8 ;
    float arg9 ;
    csMatrix3 *result;
    
    if(!PyArg_ParseTuple(args,(char *)"fffffffff:new_csMatrix3",&arg1,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7,&arg8,&arg9)) goto fail;
    result = (csMatrix3 *)new csMatrix3(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csMatrix3__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = 0 ;
    csMatrix3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csMatrix3",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csMatrix3 *)new csMatrix3((csQuaternion const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csMatrix3(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[10];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 9); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_csMatrix3__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csQuaternion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csMatrix3__SWIG_2(self,args);
        }
    }
    if (argc == 9) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyFloat_Check(argv[3]) || PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyFloat_Check(argv[4]) || PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = (PyFloat_Check(argv[5]) || PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                {
                                    _v = (PyFloat_Check(argv[6]) || PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    {
                                        _v = (PyFloat_Check(argv[7]) || PyInt_Check(argv[7]) || PyLong_Check(argv[7])) ? 1 : 0;
                                    }
                                    if (_v) {
                                        {
                                            _v = (PyFloat_Check(argv[8]) || PyInt_Check(argv[8]) || PyLong_Check(argv[8])) ? 1 : 0;
                                        }
                                        if (_v) {
                                            return _wrap_new_csMatrix3__SWIG_1(self,args);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csMatrix3'");
    return NULL;
}


static PyObject *_wrap_csMatrix3_Row1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_Row1",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csMatrix3 const *)arg1)->Row1();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_Row2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_Row2",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csMatrix3 const *)arg1)->Row2();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_Row3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_Row3",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csMatrix3 const *)arg1)->Row3();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_Col1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_Col1",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csMatrix3 const *)arg1)->Col1();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_Col2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_Col2",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csMatrix3 const *)arg1)->Col2();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_Col3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_Col3",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csMatrix3 const *)arg1)->Col3();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_Set__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    float arg5 ;
    float arg6 ;
    float arg7 ;
    float arg8 ;
    float arg9 ;
    float arg10 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offfffffff:csMatrix3_Set",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7,&arg8,&arg9,&arg10)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Set(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_Set__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csQuaternion *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMatrix3_Set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Set((csQuaternion const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_Set(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[11];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 10); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csQuaternion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csMatrix3_Set__SWIG_1(self,args);
            }
        }
    }
    if (argc == 10) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyFloat_Check(argv[3]) || PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyFloat_Check(argv[4]) || PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = (PyFloat_Check(argv[5]) || PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                {
                                    _v = (PyFloat_Check(argv[6]) || PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    {
                                        _v = (PyFloat_Check(argv[7]) || PyInt_Check(argv[7]) || PyLong_Check(argv[7])) ? 1 : 0;
                                    }
                                    if (_v) {
                                        {
                                            _v = (PyFloat_Check(argv[8]) || PyInt_Check(argv[8]) || PyLong_Check(argv[8])) ? 1 : 0;
                                        }
                                        if (_v) {
                                            {
                                                _v = (PyFloat_Check(argv[9]) || PyInt_Check(argv[9]) || PyLong_Check(argv[9])) ? 1 : 0;
                                            }
                                            if (_v) {
                                                return _wrap_csMatrix3_Set__SWIG_0(self,args);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csMatrix3_Set'");
    return NULL;
}


static PyObject *_wrap_csMatrix3___iadd__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csMatrix3 *arg2 = 0 ;
    csMatrix3 *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMatrix3___iadd__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csMatrix3 &_result_ref = (arg1)->operator +=((csMatrix3 const &)*arg2);
        result = (csMatrix3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3___isub__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csMatrix3 *arg2 = 0 ;
    csMatrix3 *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMatrix3___isub__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csMatrix3 &_result_ref = (arg1)->operator -=((csMatrix3 const &)*arg2);
        result = (csMatrix3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3___imul____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csMatrix3 *arg2 = 0 ;
    csMatrix3 *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMatrix3___imul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csMatrix3 &_result_ref = (arg1)->operator *=((csMatrix3 const &)*arg2);
        result = (csMatrix3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3___imul____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float arg2 ;
    csMatrix3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix3___imul__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csMatrix3 &_result_ref = (arg1)->operator *=(arg2);
        result = (csMatrix3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3___idiv__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float arg2 ;
    csMatrix3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix3___idiv__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csMatrix3 &_result_ref = (arg1)->operator /=(arg2);
        result = (csMatrix3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3___pos__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csMatrix3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3___pos__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csMatrix3 const *)arg1)->operator +();
    
    {
        csMatrix3 * resultptr;
        resultptr = new csMatrix3((csMatrix3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csMatrix3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3___neg__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csMatrix3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3___neg__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csMatrix3 const *)arg1)->operator -();
    
    {
        csMatrix3 * resultptr;
        resultptr = new csMatrix3((csMatrix3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csMatrix3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_Transpose(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_Transpose",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Transpose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_GetTranspose(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csMatrix3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_GetTranspose",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csMatrix3 const *)arg1)->GetTranspose();
    
    {
        csMatrix3 * resultptr;
        resultptr = new csMatrix3((csMatrix3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csMatrix3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_GetInverse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csMatrix3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_GetInverse",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csMatrix3 const *)arg1)->GetInverse();
    
    {
        csMatrix3 * resultptr;
        resultptr = new csMatrix3((csMatrix3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csMatrix3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_Invert(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_Invert",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Invert();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_Determinant(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_Determinant",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((csMatrix3 const *)arg1)->Determinant();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_Identity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_Identity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Identity();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3_IsIdentity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMatrix3_IsIdentity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((csMatrix3 const *)arg1)->IsIdentity();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3___add__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csMatrix3 *arg2 = 0 ;
    csMatrix3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMatrix3___add__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csMatrix3_operator_a___(arg1,(csMatrix3 const &)*arg2);
    
    {
        csMatrix3 * resultptr;
        resultptr = new csMatrix3((csMatrix3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csMatrix3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3___sub__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csMatrix3 *arg2 = 0 ;
    csMatrix3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMatrix3___sub__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csMatrix3_operator_s___(arg1,(csMatrix3 const &)*arg2);
    
    {
        csMatrix3 * resultptr;
        resultptr = new csMatrix3((csMatrix3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csMatrix3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3___mul____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csMatrix3 *arg2 = 0 ;
    csMatrix3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMatrix3___mul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csMatrix3_operator_m_____SWIG_0(arg1,(csMatrix3 const &)*arg2);
    
    {
        csMatrix3 * resultptr;
        resultptr = new csMatrix3((csMatrix3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csMatrix3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3___mul____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMatrix3___mul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csMatrix3_operator_m_____SWIG_1(arg1,(csVector3 const &)*arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3___mul____SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float arg2 ;
    csMatrix3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix3___mul__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = csMatrix3_operator_m_____SWIG_2(arg1,arg2);
    
    {
        csMatrix3 * resultptr;
        resultptr = new csMatrix3((csMatrix3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csMatrix3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3___div__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float arg2 ;
    csMatrix3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix3___div__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = csMatrix3_operator_d___(arg1,arg2);
    
    {
        csMatrix3 * resultptr;
        resultptr = new csMatrix3((csMatrix3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csMatrix3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3___eq__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csMatrix3 *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMatrix3___eq__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csMatrix3_operator_ee___((csMatrix3 const *)arg1,(csMatrix3 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3___ne__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csMatrix3 *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMatrix3___ne__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csMatrix3_operator_Ne___((csMatrix3 const *)arg1,(csMatrix3 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3___lt__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix3___lt__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)csMatrix3_operator_l___((csMatrix3 const *)arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3___mul____SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csTransform *arg2 = 0 ;
    csMatrix3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMatrix3___mul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csMatrix3_operator_m_____SWIG_3((csMatrix3 const *)arg1,(csTransform const &)*arg2);
    
    {
        csMatrix3 * resultptr;
        resultptr = new csMatrix3((csMatrix3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csMatrix3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3___mul__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csMatrix3___mul____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csMatrix3___mul____SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csTransform, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csMatrix3___mul____SWIG_3(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csMatrix3___mul____SWIG_2(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csMatrix3___mul__'");
    return NULL;
}


static PyObject *_wrap_csMatrix3___imul____SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    csTransform *arg2 = 0 ;
    csMatrix3 *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMatrix3___imul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csMatrix3 &_result_ref = csMatrix3_operator_me_____SWIG_2(arg1,(csTransform const &)*arg2);
        result = (csMatrix3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMatrix3___imul__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csMatrix3___imul____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csTransform, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csMatrix3___imul____SWIG_2(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csMatrix3___imul____SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csMatrix3___imul__'");
    return NULL;
}


static PyObject *_wrap_csMatrix3___rmul__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    float arg2 ;
    csMatrix3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csMatrix3___rmul__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = csMatrix3___rmul__(arg1,arg2);
    
    {
        csMatrix3 * resultptr;
        resultptr = new csMatrix3((csMatrix3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csMatrix3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csMatrix3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = (csMatrix3 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csMatrix3",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csMatrix3_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csMatrix3, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csXRotMatrix3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    csXRotMatrix3 *result;
    
    if(!PyArg_ParseTuple(args,(char *)"f:new_csXRotMatrix3",&arg1)) goto fail;
    result = (csXRotMatrix3 *)new csXRotMatrix3(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csXRotMatrix3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csXRotMatrix3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csXRotMatrix3 *arg1 = (csXRotMatrix3 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csXRotMatrix3",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csXRotMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csXRotMatrix3_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csXRotMatrix3, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csYRotMatrix3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    csYRotMatrix3 *result;
    
    if(!PyArg_ParseTuple(args,(char *)"f:new_csYRotMatrix3",&arg1)) goto fail;
    result = (csYRotMatrix3 *)new csYRotMatrix3(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csYRotMatrix3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csYRotMatrix3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csYRotMatrix3 *arg1 = (csYRotMatrix3 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csYRotMatrix3",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csYRotMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csYRotMatrix3_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csYRotMatrix3, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csZRotMatrix3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    csZRotMatrix3 *result;
    
    if(!PyArg_ParseTuple(args,(char *)"f:new_csZRotMatrix3",&arg1)) goto fail;
    result = (csZRotMatrix3 *)new csZRotMatrix3(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csZRotMatrix3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csZRotMatrix3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csZRotMatrix3 *arg1 = (csZRotMatrix3 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csZRotMatrix3",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csZRotMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csZRotMatrix3_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csZRotMatrix3, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csXScaleMatrix3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    csXScaleMatrix3 *result;
    
    if(!PyArg_ParseTuple(args,(char *)"f:new_csXScaleMatrix3",&arg1)) goto fail;
    result = (csXScaleMatrix3 *)new csXScaleMatrix3(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csXScaleMatrix3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csXScaleMatrix3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csXScaleMatrix3 *arg1 = (csXScaleMatrix3 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csXScaleMatrix3",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csXScaleMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csXScaleMatrix3_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csXScaleMatrix3, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csYScaleMatrix3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    csYScaleMatrix3 *result;
    
    if(!PyArg_ParseTuple(args,(char *)"f:new_csYScaleMatrix3",&arg1)) goto fail;
    result = (csYScaleMatrix3 *)new csYScaleMatrix3(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csYScaleMatrix3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csYScaleMatrix3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csYScaleMatrix3 *arg1 = (csYScaleMatrix3 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csYScaleMatrix3",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csYScaleMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csYScaleMatrix3_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csYScaleMatrix3, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csZScaleMatrix3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    csZScaleMatrix3 *result;
    
    if(!PyArg_ParseTuple(args,(char *)"f:new_csZScaleMatrix3",&arg1)) goto fail;
    result = (csZScaleMatrix3 *)new csZScaleMatrix3(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csZScaleMatrix3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csZScaleMatrix3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csZScaleMatrix3 *arg1 = (csZScaleMatrix3 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csZScaleMatrix3",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csZScaleMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csZScaleMatrix3_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csZScaleMatrix3, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csTransform__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csTransform")) goto fail;
    result = (csTransform *)new csTransform();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csTransform, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csTransform__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    csTransform *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_csTransform",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csTransform *)new csTransform((csMatrix3 const &)*arg1,(csVector3 const &)*arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csTransform, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csTransform(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_csTransform__SWIG_0(self,args);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_csTransform__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csTransform'");
    return NULL;
}


static PyObject *_wrap_csTransform_Identity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csTransform_Identity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Identity();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform_IsIdentity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csTransform_IsIdentity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((csTransform const *)arg1)->IsIdentity();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform_GetO2T(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csMatrix3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csTransform_GetO2T",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csMatrix3 const &_result_ref = ((csTransform const *)arg1)->GetO2T();
        result = (csMatrix3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform_GetO2TTranslation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csTransform_GetO2TTranslation",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = ((csTransform const *)arg1)->GetO2TTranslation();
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform_GetOrigin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csTransform_GetOrigin",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = ((csTransform const *)arg1)->GetOrigin();
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform_SetO2T(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csMatrix3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTransform_SetO2T",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetO2T((csMatrix3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform_SetO2TTranslation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTransform_SetO2TTranslation",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetO2TTranslation((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform_SetOrigin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTransform_SetOrigin",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetOrigin((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform_Translate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTransform_Translate",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Translate((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform_Other2This__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTransform_Other2This",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = ((csTransform const *)arg1)->Other2This((csVector3 const &)*arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform_Other2ThisRelative__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTransform_Other2ThisRelative",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = ((csTransform const *)arg1)->Other2ThisRelative((csVector3 const &)*arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform_Other2This__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csPlane3 *arg2 = 0 ;
    csPlane3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTransform_Other2This",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = ((csTransform const *)arg1)->Other2This((csPlane3 const &)*arg2);
    
    {
        csPlane3 * resultptr;
        resultptr = new csPlane3((csPlane3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPlane3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform_Other2ThisRelative__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csPlane3 *arg2 = 0 ;
    csPlane3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTransform_Other2ThisRelative",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = ((csTransform const *)arg1)->Other2ThisRelative((csPlane3 const &)*arg2);
    
    {
        csPlane3 * resultptr;
        resultptr = new csPlane3((csPlane3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPlane3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform_Other2ThisRelative(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csTransform_Other2ThisRelative__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csTransform_Other2ThisRelative__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csTransform_Other2ThisRelative'");
    return NULL;
}


static PyObject *_wrap_csTransform_Other2This__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csPlane3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csPlane3 *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:csTransform_Other2This",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((csTransform const *)arg1)->Other2This((csPlane3 const &)*arg2,(csVector3 const &)*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform_Other2This__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csSphere *arg2 = 0 ;
    csSphere result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTransform_Other2This",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csSphere,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = ((csTransform const *)arg1)->Other2This((csSphere const &)*arg2);
    
    {
        csSphere * resultptr;
        resultptr = new csSphere((csSphere &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csSphere, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform_Other2This(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csTransform_Other2This__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csTransform_Other2This__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csSphere, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csTransform_Other2This__SWIG_3(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_csTransform_Other2This__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csTransform_Other2This'");
    return NULL;
}


static PyObject *_wrap_csTransform_GetReflect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = 0 ;
    csTransform result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csTransform_GetReflect",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csTransform::GetReflect((csPlane3 const &)*arg1);
    
    {
        csTransform * resultptr;
        resultptr = new csTransform((csTransform &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csTransform, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform___mul____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTransform___mul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csTransform_operator_m_____SWIG_0((csTransform const *)arg1,(csVector3 const &)*arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform___mul____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csPlane3 *arg2 = 0 ;
    csPlane3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTransform___mul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csTransform_operator_m_____SWIG_1((csTransform const *)arg1,(csPlane3 const &)*arg2);
    
    {
        csPlane3 * resultptr;
        resultptr = new csPlane3((csPlane3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPlane3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform___mul____SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csSphere *arg2 = 0 ;
    csSphere result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTransform___mul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csSphere,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csTransform_operator_m_____SWIG_2((csTransform const *)arg1,(csSphere const &)*arg2);
    
    {
        csSphere * resultptr;
        resultptr = new csSphere((csSphere &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csSphere, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform___mul____SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csMatrix3 *arg2 = 0 ;
    csMatrix3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTransform___mul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csTransform_operator_m_____SWIG_3((csTransform const *)arg1,(csMatrix3 const &)*arg2);
    
    {
        csMatrix3 * resultptr;
        resultptr = new csMatrix3((csMatrix3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csMatrix3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform___mul____SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csReversibleTransform *arg2 = 0 ;
    csTransform result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTransform___mul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csTransform_operator_m_____SWIG_4((csTransform const *)arg1,(csReversibleTransform const &)*arg2);
    
    {
        csTransform * resultptr;
        resultptr = new csTransform((csTransform &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csTransform, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform___mul__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csTransform___mul____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csTransform___mul____SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csSphere, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csTransform___mul____SWIG_2(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csTransform___mul____SWIG_3(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csTransform___mul____SWIG_4(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csTransform___mul__'");
    return NULL;
}


static PyObject *_wrap_csTransform___rmul____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTransform___rmul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csTransform___rmul____SWIG_0((csTransform const *)arg1,(csVector3 const &)*arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform___rmul____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csPlane3 *arg2 = 0 ;
    csPlane3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTransform___rmul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csTransform___rmul____SWIG_1((csTransform const *)arg1,(csPlane3 const &)*arg2);
    
    {
        csPlane3 * resultptr;
        resultptr = new csPlane3((csPlane3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPlane3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform___rmul____SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    csSphere *arg2 = 0 ;
    csSphere result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTransform___rmul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csSphere,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csTransform___rmul____SWIG_2((csTransform const *)arg1,(csSphere const &)*arg2);
    
    {
        csSphere * resultptr;
        resultptr = new csSphere((csSphere &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csSphere, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTransform___rmul__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csTransform___rmul____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csTransform___rmul____SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csSphere, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csTransform___rmul____SWIG_2(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csTransform___rmul__'");
    return NULL;
}


static PyObject *_wrap_delete_csTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = (csTransform *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csTransform",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csTransform_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csTransform, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csReversibleTransform__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csReversibleTransform")) goto fail;
    result = (csReversibleTransform *)new csReversibleTransform();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csReversibleTransform, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csReversibleTransform__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    csReversibleTransform *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_csReversibleTransform",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csReversibleTransform *)new csReversibleTransform((csMatrix3 const &)*arg1,(csVector3 const &)*arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csReversibleTransform, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csReversibleTransform__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = 0 ;
    csReversibleTransform *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csReversibleTransform",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csReversibleTransform *)new csReversibleTransform((csTransform const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csReversibleTransform, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csReversibleTransform__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = 0 ;
    csReversibleTransform *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csReversibleTransform",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csReversibleTransform *)new csReversibleTransform((csReversibleTransform const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csReversibleTransform, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csReversibleTransform(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_csReversibleTransform__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csReversibleTransform__SWIG_3(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csReversibleTransform__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_csReversibleTransform__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csReversibleTransform'");
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_GetT2O(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csMatrix3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csReversibleTransform_GetT2O",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csMatrix3 const &_result_ref = ((csReversibleTransform const *)arg1)->GetT2O();
        result = (csMatrix3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_GetT2OTranslation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csReversibleTransform_GetT2OTranslation",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csReversibleTransform const *)arg1)->GetT2OTranslation();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_GetInverse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csReversibleTransform result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csReversibleTransform_GetInverse",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csReversibleTransform const *)arg1)->GetInverse();
    
    {
        csReversibleTransform * resultptr;
        resultptr = new csReversibleTransform((csReversibleTransform &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csReversibleTransform, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_SetO2T(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csMatrix3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csReversibleTransform_SetO2T",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetO2T((csMatrix3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_SetT2O(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csMatrix3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csReversibleTransform_SetT2O",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetT2O((csMatrix3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_This2Other__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csReversibleTransform_This2Other",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = ((csReversibleTransform const *)arg1)->This2Other((csVector3 const &)*arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_This2OtherRelative__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csReversibleTransform_This2OtherRelative",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = ((csReversibleTransform const *)arg1)->This2OtherRelative((csVector3 const &)*arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_This2Other__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csPlane3 *arg2 = 0 ;
    csPlane3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csReversibleTransform_This2Other",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = ((csReversibleTransform const *)arg1)->This2Other((csPlane3 const &)*arg2);
    
    {
        csPlane3 * resultptr;
        resultptr = new csPlane3((csPlane3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPlane3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_This2OtherRelative__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csPlane3 *arg2 = 0 ;
    csPlane3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csReversibleTransform_This2OtherRelative",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = ((csReversibleTransform const *)arg1)->This2OtherRelative((csPlane3 const &)*arg2);
    
    {
        csPlane3 * resultptr;
        resultptr = new csPlane3((csPlane3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPlane3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_This2OtherRelative(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csReversibleTransform_This2OtherRelative__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csReversibleTransform_This2OtherRelative__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csReversibleTransform_This2OtherRelative'");
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_This2Other__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csPlane3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csPlane3 *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:csReversibleTransform_This2Other",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((csReversibleTransform const *)arg1)->This2Other((csPlane3 const &)*arg2,(csVector3 const &)*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_This2Other__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csSphere *arg2 = 0 ;
    csSphere result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csReversibleTransform_This2Other",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csSphere,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = ((csReversibleTransform const *)arg1)->This2Other((csSphere const &)*arg2);
    
    {
        csSphere * resultptr;
        resultptr = new csSphere((csSphere &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csSphere, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_This2Other(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csReversibleTransform_This2Other__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csReversibleTransform_This2Other__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csSphere, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csReversibleTransform_This2Other__SWIG_3(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_csReversibleTransform_This2Other__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csReversibleTransform_This2Other'");
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_RotateOther__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csVector3 *arg2 = 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf:csReversibleTransform_RotateOther",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->RotateOther((csVector3 const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_RotateThis__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csVector3 *arg2 = 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf:csReversibleTransform_RotateThis",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->RotateThis((csVector3 const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_RotateOther__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csMatrix3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csReversibleTransform_RotateOther",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->RotateOther((csMatrix3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_RotateOther(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csReversibleTransform_RotateOther__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_csReversibleTransform_RotateOther__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csReversibleTransform_RotateOther'");
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_RotateThis__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csMatrix3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csReversibleTransform_RotateThis",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->RotateThis((csMatrix3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_RotateThis(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csReversibleTransform_RotateThis__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_csReversibleTransform_RotateThis__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csReversibleTransform_RotateThis'");
    return NULL;
}


static PyObject *_wrap_csReversibleTransform_LookAt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csReversibleTransform_LookAt",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->LookAt((csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReversibleTransform___imul__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csReversibleTransform *arg2 = 0 ;
    csReversibleTransform *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csReversibleTransform___imul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csReversibleTransform &_result_ref = csReversibleTransform_operator_me___(arg1,(csReversibleTransform const &)*arg2);
        result = (csReversibleTransform *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csReversibleTransform, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReversibleTransform___mul__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csReversibleTransform *arg2 = 0 ;
    csReversibleTransform result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csReversibleTransform___mul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csReversibleTransform_operator_m___(arg1,(csReversibleTransform const &)*arg2);
    
    {
        csReversibleTransform * resultptr;
        resultptr = new csReversibleTransform((csReversibleTransform &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csReversibleTransform, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReversibleTransform___idiv__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csReversibleTransform *arg2 = 0 ;
    csReversibleTransform *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csReversibleTransform___idiv__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csReversibleTransform &_result_ref = csReversibleTransform_operator_de___(arg1,(csReversibleTransform const &)*arg2);
        result = (csReversibleTransform *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csReversibleTransform, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReversibleTransform___div__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    csReversibleTransform *arg2 = 0 ;
    csReversibleTransform result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csReversibleTransform___div__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csReversibleTransform_operator_d___(arg1,(csReversibleTransform const &)*arg2);
    
    {
        csReversibleTransform * resultptr;
        resultptr = new csReversibleTransform((csReversibleTransform &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csReversibleTransform, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csReversibleTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReversibleTransform *arg1 = (csReversibleTransform *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csReversibleTransform",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csReversibleTransform_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csReversibleTransform, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csOrthoTransform__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csOrthoTransform *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csOrthoTransform")) goto fail;
    result = (csOrthoTransform *)new csOrthoTransform();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csOrthoTransform, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csOrthoTransform__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    csOrthoTransform *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_csOrthoTransform",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csOrthoTransform *)new csOrthoTransform((csMatrix3 const &)*arg1,(csVector3 const &)*arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csOrthoTransform, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csOrthoTransform__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTransform *arg1 = 0 ;
    csOrthoTransform *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csOrthoTransform",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csOrthoTransform *)new csOrthoTransform((csTransform const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csOrthoTransform, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csOrthoTransform(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_csOrthoTransform__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csTransform, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csOrthoTransform__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_csOrthoTransform__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csOrthoTransform'");
    return NULL;
}


static PyObject *_wrap_csOrthoTransform_SetO2T(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csOrthoTransform *arg1 = (csOrthoTransform *) 0 ;
    csMatrix3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csOrthoTransform_SetO2T",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csOrthoTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetO2T((csMatrix3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csOrthoTransform_SetT2O(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csOrthoTransform *arg1 = (csOrthoTransform *) 0 ;
    csMatrix3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csOrthoTransform_SetT2O",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csOrthoTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetT2O((csMatrix3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csOrthoTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csOrthoTransform *arg1 = (csOrthoTransform *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csOrthoTransform",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csOrthoTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csOrthoTransform_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csOrthoTransform, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csSphere__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSphere *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csSphere")) goto fail;
    result = (csSphere *)new csSphere();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csSphere, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csSphere__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    float arg2 ;
    csSphere *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:new_csSphere",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csSphere *)new csSphere((csVector3 const &)*arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csSphere, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csSphere__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSphere *arg1 = 0 ;
    csSphere *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csSphere",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSphere,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csSphere *)new csSphere((csSphere const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csSphere, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csSphere(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_csSphere__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csSphere, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csSphere__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_csSphere__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csSphere'");
    return NULL;
}


static PyObject *_wrap_csSphere_GetCenter__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSphere *arg1 = (csSphere *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csSphere_GetCenter",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSphere,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 &_result_ref = (arg1)->GetCenter();
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSphere_GetCenter__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSphere *arg1 = (csSphere *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csSphere_GetCenter",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSphere,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = ((csSphere const *)arg1)->GetCenter();
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSphere_GetCenter(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csSphere, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_csSphere_GetCenter__SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csSphere, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_csSphere_GetCenter__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csSphere_GetCenter'");
    return NULL;
}


static PyObject *_wrap_csSphere_SetCenter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSphere *arg1 = (csSphere *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csSphere_SetCenter",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSphere,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetCenter((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSphere_GetRadius(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSphere *arg1 = (csSphere *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csSphere_GetRadius",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSphere,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((csSphere const *)arg1)->GetRadius();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSphere_SetRadius(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSphere *arg1 = (csSphere *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csSphere_SetRadius",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSphere,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetRadius(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSphere_Union(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSphere *arg1 = (csSphere *) 0 ;
    csVector3 *arg2 = 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf:csSphere_Union",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSphere,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Union((csVector3 const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSphere___iadd__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSphere *arg1 = (csSphere *) 0 ;
    csSphere *arg2 = 0 ;
    csSphere *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csSphere___iadd__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSphere,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csSphere,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csSphere &_result_ref = (arg1)->operator +=((csSphere const &)*arg2);
        result = (csSphere *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csSphere, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSphere___imul__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSphere *arg1 = (csSphere *) 0 ;
    csTransform *arg2 = 0 ;
    csSphere *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csSphere___imul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSphere,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csSphere &_result_ref = csSphere_operator_me___(arg1,(csTransform const &)*arg2);
        result = (csSphere *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csSphere, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSphere___div__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSphere *arg1 = (csSphere *) 0 ;
    csReversibleTransform *arg2 = 0 ;
    csSphere result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csSphere___div__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSphere,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csSphere_operator_d___(arg1,(csReversibleTransform const &)*arg2);
    
    {
        csSphere * resultptr;
        resultptr = new csSphere((csSphere &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csSphere, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csSphere(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSphere *arg1 = (csSphere *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csSphere",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSphere,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csSphere_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csSphere, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csPlane2_norm_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = (csPlane2 *) 0 ;
    csVector2 *arg2 = (csVector2 *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPlane2_norm_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->norm = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane2_norm_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = (csPlane2 *) 0 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlane2_norm_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector2 *)& ((arg1)->norm);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane2_CC_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = (csPlane2 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csPlane2_CC_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->CC = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane2_CC_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = (csPlane2 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlane2_CC_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->CC);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPlane2__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csPlane2")) goto fail;
    result = (csPlane2 *)new csPlane2();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPlane2, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPlane2__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = 0 ;
    float arg2 = (float) 0 ;
    csPlane2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|f:new_csPlane2",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csPlane2 *)new csPlane2((csVector2 const &)*arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPlane2, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPlane2__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    float arg2 ;
    float arg3 = (float) 0 ;
    csPlane2 *result;
    
    if(!PyArg_ParseTuple(args,(char *)"ff|f:new_csPlane2",&arg1,&arg2,&arg3)) goto fail;
    result = (csPlane2 *)new csPlane2(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPlane2, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane2_Set__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = (csPlane2 *) 0 ;
    csVector2 *arg2 = 0 ;
    csVector2 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csPlane2_Set",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Set((csVector2 const &)*arg2,(csVector2 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane2_Set__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = (csPlane2 *) 0 ;
    csSegment2 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPlane2_Set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csSegment2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Set((csSegment2 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPlane2__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = 0 ;
    csVector2 *arg2 = 0 ;
    csPlane2 *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_csPlane2",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csPlane2 *)new csPlane2((csVector2 const &)*arg1,(csVector2 const &)*arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPlane2, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPlane2__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSegment2 *arg1 = 0 ;
    csPlane2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csPlane2",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSegment2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csPlane2 *)new csPlane2((csSegment2 const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPlane2, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPlane2(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_csPlane2__SWIG_0(self,args);
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_new_csPlane2__SWIG_1(self,args);
            }
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_csPlane2__SWIG_1(self,args);
            }
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csSegment2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csPlane2__SWIG_4(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_csPlane2__SWIG_3(self,args);
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_new_csPlane2__SWIG_2(self,args);
                }
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_new_csPlane2__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csPlane2'");
    return NULL;
}


static PyObject *_wrap_csPlane2_Normal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = (csPlane2 *) 0 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlane2_Normal",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector2 &_result_ref = (arg1)->Normal();
        result = (csVector2 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane2_GetNormal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = (csPlane2 *) 0 ;
    csVector2 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlane2_GetNormal",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csPlane2 const *)arg1)->GetNormal();
    
    {
        csVector2 * resultptr;
        resultptr = new csVector2((csVector2 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector2, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane2_A(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = (csPlane2 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlane2_A",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((csPlane2 const *)arg1)->A();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane2_B(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = (csPlane2 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlane2_B",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((csPlane2 const *)arg1)->B();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane2_C(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = (csPlane2 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlane2_C",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((csPlane2 const *)arg1)->C();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane2_Set__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = (csPlane2 *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offf:csPlane2_Set",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Set(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane2_Set(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPlane2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csSegment2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csPlane2_Set__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPlane2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_csPlane2_Set__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPlane2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyFloat_Check(argv[3]) || PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_csPlane2_Set__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csPlane2_Set'");
    return NULL;
}


static PyObject *_wrap_csPlane2_Classify__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = (csPlane2 *) 0 ;
    csVector2 *arg2 = 0 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPlane2_Classify",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)((csPlane2 const *)arg1)->Classify((csVector2 const &)*arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane2_Classify__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    float arg2 ;
    float arg3 ;
    csVector2 *arg4 = 0 ;
    float result;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"fffO:csPlane2_Classify",&arg1,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csPlane2::Classify(arg1,arg2,arg3,(csVector2 const &)*arg4);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane2_Classify(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPlane2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csPlane2_Classify__SWIG_0(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_csPlane2_Classify__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csPlane2_Classify'");
    return NULL;
}


static PyObject *_wrap_csPlane2_Distance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = (csPlane2 *) 0 ;
    csVector2 *arg2 = 0 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPlane2_Distance",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)((csPlane2 const *)arg1)->Distance((csVector2 const &)*arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane2_SquaredDistance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = (csPlane2 *) 0 ;
    csVector2 *arg2 = 0 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPlane2_SquaredDistance",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)((csPlane2 const *)arg1)->SquaredDistance((csVector2 const &)*arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane2_Invert(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = (csPlane2 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlane2_Invert",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Invert();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane2_Normalize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = (csPlane2 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlane2_Normalize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Normalize();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csPlane2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = (csPlane2 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csPlane2",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csPlane2_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csPlane2, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csPlane3_norm_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    csVector3 *arg2 = (csVector3 *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPlane3_norm_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->norm = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3_norm_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlane3_norm_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)& ((arg1)->norm);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3_DD_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csPlane3_DD_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->DD = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3_DD_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlane3_DD_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->DD);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPlane3__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csPlane3")) goto fail;
    result = (csPlane3 *)new csPlane3();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPlane3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPlane3__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    float arg2 = (float) 0 ;
    csPlane3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|f:new_csPlane3",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csPlane3 *)new csPlane3((csVector3 const &)*arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPlane3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPlane3__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    float arg2 ;
    float arg3 ;
    float arg4 = (float) 0 ;
    csPlane3 *result;
    
    if(!PyArg_ParseTuple(args,(char *)"fff|f:new_csPlane3",&arg1,&arg2,&arg3,&arg4)) goto fail;
    result = (csPlane3 *)new csPlane3(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPlane3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPlane3__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csPlane3 *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_csPlane3",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csPlane3 *)new csPlane3((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPlane3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPlane3__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    csPlane3 *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_csPlane3",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csPlane3 *)new csPlane3((csVector3 const &)*arg1,(csVector3 const &)*arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPlane3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPlane3(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_csPlane3__SWIG_0(self,args);
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_new_csPlane3__SWIG_1(self,args);
            }
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_csPlane3__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_csPlane3__SWIG_4(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_new_csPlane3__SWIG_3(self,args);
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_new_csPlane3__SWIG_2(self,args);
                    }
                    {
                        _v = (PyFloat_Check(argv[3]) || PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_new_csPlane3__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csPlane3'");
    return NULL;
}


static PyObject *_wrap_csPlane3_Normal__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlane3_Normal",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 &_result_ref = (arg1)->Normal();
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3_Normal__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlane3_Normal",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = ((csPlane3 const *)arg1)->Normal();
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3_Normal(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_csPlane3_Normal__SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_csPlane3_Normal__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csPlane3_Normal'");
    return NULL;
}


static PyObject *_wrap_csPlane3_A(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlane3_A",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((csPlane3 const *)arg1)->A();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3_B(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlane3_B",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((csPlane3 const *)arg1)->B();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3_C(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlane3_C",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((csPlane3 const *)arg1)->C();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3_D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlane3_D",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((csPlane3 const *)arg1)->D();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3_Set__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    float arg5 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offff:csPlane3_Set",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Set(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3_Set__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    csVector3 *arg2 = 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf:csPlane3_Set",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Set((csVector3 const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3_Set__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:csPlane3_Set",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Set((csVector3 const &)*arg2,(csVector3 const &)*arg3,(csVector3 const &)*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3_Set__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csPlane3_Set",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Set((csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3_Set(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_csPlane3_Set__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_csPlane3_Set__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_csPlane3_Set__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyFloat_Check(argv[3]) || PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyFloat_Check(argv[4]) || PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_csPlane3_Set__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csPlane3_Set'");
    return NULL;
}


static PyObject *_wrap_csPlane3_Classify__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    csVector3 *arg2 = 0 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPlane3_Classify",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)((csPlane3 const *)arg1)->Classify((csVector3 const &)*arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3_Classify__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    csVector3 *arg5 = 0 ;
    float result;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"ffffO:csPlane3_Classify",&arg1,&arg2,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csPlane3::Classify(arg1,arg2,arg3,arg4,(csVector3 const &)*arg5);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3_Classify(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csPlane3_Classify__SWIG_0(self,args);
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyFloat_Check(argv[3]) || PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_csPlane3_Classify__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csPlane3_Classify'");
    return NULL;
}


static PyObject *_wrap_csPlane3_Distance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    csVector3 *arg2 = 0 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPlane3_Distance",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)((csPlane3 const *)arg1)->Distance((csVector3 const &)*arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3_Invert(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlane3_Invert",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Invert();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3_Normalize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlane3_Normalize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Normalize();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3_ClipPolygon(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    csVector3 **arg2 = 0 ;
    int *arg3 = 0 ;
    bool arg4 = (bool) false ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|O:csPlane3_ClipPolygon",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj3) {
        arg4 = PyInt_AsLong(obj3) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->ClipPolygon(*arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3___imul__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    csTransform *arg2 = 0 ;
    csPlane3 *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPlane3___imul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csPlane3 &_result_ref = csPlane3_operator_me___(arg1,(csTransform const &)*arg2);
        result = (csPlane3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPlane3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3___idiv__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    csReversibleTransform *arg2 = 0 ;
    csPlane3 *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPlane3___idiv__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csPlane3 &_result_ref = csPlane3_operator_de___(arg1,(csReversibleTransform const &)*arg2);
        result = (csPlane3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPlane3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlane3___div__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    csReversibleTransform *arg2 = 0 ;
    csPlane3 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPlane3___div__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csPlane3_operator_d___(arg1,(csReversibleTransform const &)*arg2);
    
    {
        csPlane3 * resultptr;
        resultptr = new csPlane3((csPlane3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPlane3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csPlane3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csPlane3",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csPlane3_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csPlane3, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csMath2_WhichSide2D__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = 0 ;
    csVector2 *arg2 = 0 ;
    csVector2 *arg3 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csMath2_WhichSide2D",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)csMath2::WhichSide2D((csVector2 const &)*arg1,(csVector2 const &)*arg2,(csVector2 const &)*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath2_WhichSide2D__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = 0 ;
    csSegment2 *arg2 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMath2_WhichSide2D",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csSegment2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)csMath2::WhichSide2D((csVector2 const &)*arg1,(csSegment2 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath2_WhichSide2D(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csSegment2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csMath2_WhichSide2D__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_csMath2_WhichSide2D__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csMath2_WhichSide2D'");
    return NULL;
}


static PyObject *_wrap_csMath2_InPoly2D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = 0 ;
    csVector2 *arg2 = (csVector2 *) 0 ;
    int arg3 ;
    csBox2 *arg4 = (csBox2 *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiO:csMath2_InPoly2D",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csBox2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)csMath2::InPoly2D((csVector2 const &)*arg1,arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath2_Area2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = 0 ;
    csVector2 *arg2 = 0 ;
    csVector2 *arg3 = 0 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csMath2_Area2",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csMath2::Area2((csVector2 const &)*arg1,(csVector2 const &)*arg2,(csVector2 const &)*arg3);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath2_Right(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = 0 ;
    csVector2 *arg2 = 0 ;
    csVector2 *arg3 = 0 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csMath2_Right",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csMath2::Right((csVector2 const &)*arg1,(csVector2 const &)*arg2,(csVector2 const &)*arg3);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath2_Left(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = 0 ;
    csVector2 *arg2 = 0 ;
    csVector2 *arg3 = 0 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csMath2_Left",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csMath2::Left((csVector2 const &)*arg1,(csVector2 const &)*arg2,(csVector2 const &)*arg3);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath2_Visible(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = 0 ;
    csPlane2 *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMath2_Visible",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csMath2::Visible((csVector2 const &)*arg1,(csPlane2 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath2_PlanesEqual(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = 0 ;
    csPlane2 *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMath2_PlanesEqual",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csMath2::PlanesEqual((csPlane2 const &)*arg1,(csPlane2 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath2_PlanesClose(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = 0 ;
    csPlane2 *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMath2_PlanesClose",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csMath2::PlanesClose((csPlane2 const &)*arg1,(csPlane2 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csMath2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMath2 *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csMath2")) goto fail;
    result = (csMath2 *)new csMath2();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMath2, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csMath2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMath2 *arg1 = (csMath2 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csMath2",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMath2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csMath2_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csMath2, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csIntersect2_IntersectPolygon(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = 0 ;
    csPoly2D *arg2 = (csPoly2D *) 0 ;
    csSegment2 *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csIntersect2_IntersectPolygon",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csSegment2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csIntersect2::IntersectPolygon((csPlane2 const &)*arg1,arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect2_Segments(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSegment2 *arg1 = 0 ;
    csSegment2 *arg2 = 0 ;
    csVector2 *arg3 = 0 ;
    float *arg4 = 0 ;
    bool result;
    float temp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    arg4 = &temp4;
    if(!PyArg_ParseTuple(args,(char *)"OOO:csIntersect2_Segments",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSegment2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csSegment2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csIntersect2::Segments((csSegment2 const &)*arg1,(csSegment2 const &)*arg2,*arg3,*arg4);
    
    resultobj = PyInt_FromLong((long)result);
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect2_SegmentLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSegment2 *arg1 = 0 ;
    csSegment2 *arg2 = 0 ;
    csVector2 *arg3 = 0 ;
    float *arg4 = 0 ;
    bool result;
    float temp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    arg4 = &temp4;
    if(!PyArg_ParseTuple(args,(char *)"OOO:csIntersect2_SegmentLine",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSegment2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csSegment2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csIntersect2::SegmentLine((csSegment2 const &)*arg1,(csSegment2 const &)*arg2,*arg3,*arg4);
    
    resultobj = PyInt_FromLong((long)result);
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect2_Lines(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSegment2 *arg1 = 0 ;
    csSegment2 *arg2 = 0 ;
    csVector2 *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csIntersect2_Lines",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSegment2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csSegment2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csIntersect2::Lines((csSegment2 const &)*arg1,(csSegment2 const &)*arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect2_Plane__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = 0 ;
    csVector2 *arg2 = 0 ;
    csPlane2 *arg3 = 0 ;
    csVector2 *arg4 = 0 ;
    float *arg5 = 0 ;
    bool result;
    float temp5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    arg5 = &temp5;
    if(!PyArg_ParseTuple(args,(char *)"OOOO:csIntersect2_Plane",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csIntersect2::Plane((csVector2 const &)*arg1,(csVector2 const &)*arg2,(csPlane2 const &)*arg3,*arg4,*arg5);
    
    resultobj = PyInt_FromLong((long)result);
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg5));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect2_Plane__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSegment2 *arg1 = 0 ;
    csPlane2 *arg2 = 0 ;
    csVector2 *arg3 = 0 ;
    float *arg4 = 0 ;
    bool result;
    float temp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    arg4 = &temp4;
    if(!PyArg_ParseTuple(args,(char *)"OOO:csIntersect2_Plane",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSegment2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csIntersect2::Plane((csSegment2 const &)*arg1,(csPlane2 const &)*arg2,*arg3,*arg4);
    
    resultobj = PyInt_FromLong((long)result);
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect2_Plane(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csSegment2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csPlane2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_csIntersect2_Plane__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csPlane2, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_csIntersect2_Plane__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csIntersect2_Plane'");
    return NULL;
}


static PyObject *_wrap_csIntersect2_PlaneNoTest__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = 0 ;
    csVector2 *arg2 = 0 ;
    csPlane2 *arg3 = 0 ;
    csVector2 *arg4 = 0 ;
    float *arg5 = 0 ;
    float temp5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    arg5 = &temp5;
    if(!PyArg_ParseTuple(args,(char *)"OOOO:csIntersect2_PlaneNoTest",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    csIntersect2::PlaneNoTest((csVector2 const &)*arg1,(csVector2 const &)*arg2,(csPlane2 const &)*arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg5));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect2_PlaneNoTest__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSegment2 *arg1 = 0 ;
    csPlane2 *arg2 = 0 ;
    csVector2 *arg3 = 0 ;
    float *arg4 = 0 ;
    float temp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    arg4 = &temp4;
    if(!PyArg_ParseTuple(args,(char *)"OOO:csIntersect2_PlaneNoTest",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSegment2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    csIntersect2::PlaneNoTest((csSegment2 const &)*arg1,(csPlane2 const &)*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect2_PlaneNoTest(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csSegment2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csPlane2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_csIntersect2_PlaneNoTest__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csPlane2, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_csIntersect2_PlaneNoTest__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csIntersect2_PlaneNoTest'");
    return NULL;
}


static PyObject *_wrap_csIntersect2_Planes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane2 *arg1 = 0 ;
    csPlane2 *arg2 = 0 ;
    csVector2 *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csIntersect2_Planes",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csIntersect2::Planes((csPlane2 const &)*arg1,(csPlane2 const &)*arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csIntersect2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csIntersect2 *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csIntersect2")) goto fail;
    result = (csIntersect2 *)new csIntersect2();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csIntersect2, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csIntersect2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csIntersect2 *arg1 = (csIntersect2 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csIntersect2",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csIntersect2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csIntersect2_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csIntersect2, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csPoly2D__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) 10 ;
    csPoly2D *result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:new_csPoly2D",&arg1)) goto fail;
    result = (csPoly2D *)new csPoly2D(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPoly2D, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPoly2D__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = 0 ;
    csPoly2D *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csPoly2D",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csPoly2D *)new csPoly2D((csPoly2D const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPoly2D, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPoly2D(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 0) && (argc <= 1)) {
        int _v;
        if (argc <= 0) {
            return _wrap_new_csPoly2D__SWIG_0(self,args);
        }
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_csPoly2D__SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPoly2D, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csPoly2D__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csPoly2D'");
    return NULL;
}


static PyObject *_wrap_delete_csPoly2D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csPoly2D",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_assign(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    csPoly2D *arg2 = 0 ;
    csPoly2D *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPoly2D_assign",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csPoly2D &_result_ref = (arg1)->operator =((csPoly2D const &)*arg2);
        result = (csPoly2D *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPoly2D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_MakeEmpty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoly2D_MakeEmpty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeEmpty();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_GetVertexCount__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoly2D_GetVertexCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetVertexCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_GetVertexCount__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoly2D_GetVertexCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((csPoly2D const *)arg1)->GetVertexCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_GetVertexCount(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPoly2D, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_csPoly2D_GetVertexCount__SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPoly2D, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_csPoly2D_GetVertexCount__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csPoly2D_GetVertexCount'");
    return NULL;
}


static PyObject *_wrap_csPoly2D_GetVertices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoly2D_GetVertices",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector2 *)(arg1)->GetVertices();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_GetVertex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    int arg2 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPoly2D_GetVertex",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector2 *)(arg1)->GetVertex(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_GetFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoly2D_GetFirst",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector2 *)(arg1)->GetFirst();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_GetLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoly2D_GetLast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector2 *)(arg1)->GetLast();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_In__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    csVector2 *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPoly2D_In",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->In((csVector2 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_In__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector2 *arg1 = (csVector2 *) 0 ;
    int arg2 ;
    csVector2 *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:csPoly2D_In",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csPoly2D::In(arg1,arg2,(csVector2 const &)*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_In(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPoly2D, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csPoly2D_In__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_csPoly2D_In__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csPoly2D_In'");
    return NULL;
}


static PyObject *_wrap_csPoly2D_MakeRoom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPoly2D_MakeRoom",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeRoom(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_SetVertexCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPoly2D_SetVertexCount",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetVertexCount(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_AddVertex__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    csVector2 *arg2 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPoly2D_AddVertex",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->AddVertex((csVector2 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_AddVertex__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    float arg2 ;
    float arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Off:csPoly2D_AddVertex",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddVertex(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_AddVertex(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPoly2D, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csPoly2D_AddVertex__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPoly2D, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_csPoly2D_AddVertex__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csPoly2D_AddVertex'");
    return NULL;
}


static PyObject *_wrap_csPoly2D_SetVertices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    csVector2 *arg2 = (csVector2 *) 0 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:csPoly2D_SetVertices",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetVertices((csVector2 const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_UpdateBoundingBox(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoly2D_UpdateBoundingBox",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UpdateBoundingBox();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_GetBoundingBox(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    csBox2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoly2D_GetBoundingBox",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csBox2 &_result_ref = (arg1)->GetBoundingBox();
        result = (csBox2 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csBox2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_ClipAgainst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    iClipper2D *arg2 = (iClipper2D *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPoly2D_ClipAgainst",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iClipper2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->ClipAgainst(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_Intersect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    csPlane2 *arg2 = 0 ;
    csPoly2D *arg3 = 0 ;
    csPoly2D *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:csPoly2D_Intersect",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((csPoly2D const *)arg1)->Intersect((csPlane2 const &)*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_ClipPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    csPlane2 *arg2 = 0 ;
    csPoly2D *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csPoly2D_ClipPlane",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((csPoly2D const *)arg1)->ClipPlane((csPlane2 const &)*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_ExtendConvex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    csPoly2D *arg2 = 0 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:csPoly2D_ExtendConvex",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->ExtendConvex((csPoly2D const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_GetSignedArea(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoly2D_GetSignedArea",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetSignedArea();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D_Random(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    int arg2 ;
    csBox2 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:csPoly2D_Random",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csBox2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Random(arg2,(csBox2 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly2D___getitem__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2D *arg1 = (csPoly2D *) 0 ;
    int arg2 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPoly2D___getitem__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector2 &_result_ref = csPoly2D___getitem__(arg1,arg2);
        result = (csVector2 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csPoly2D_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csPoly2D, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csPoly2DFactory_Create(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2DFactory *arg1 = (csPoly2DFactory *) 0 ;
    csPoly2D *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoly2DFactory_Create",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2DFactory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csPoly2D *)(arg1)->Create();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPoly2D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPoly2DFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2DFactory *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csPoly2DFactory")) goto fail;
    result = (csPoly2DFactory *)new csPoly2DFactory();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPoly2DFactory, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csPoly2DFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly2DFactory *arg1 = (csPoly2DFactory *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csPoly2DFactory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly2DFactory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csPoly2DFactory_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csPoly2DFactory, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_fSqr(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    float result;
    
    if(!PyArg_ParseTuple(args,(char *)"f:fSqr",&arg1)) goto fail;
    result = (float)fSqr(arg1);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath3_WhichSide3D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csMath3_WhichSide3D",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)csMath3::WhichSide3D((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath3_Visible__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:csMath3_Visible",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csMath3::Visible((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3,(csVector3 const &)*arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath3_Visible__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csPlane3 *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMath3_Visible",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csMath3::Visible((csVector3 const &)*arg1,(csPlane3 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath3_Visible(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csMath3_Visible__SWIG_1(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_csMath3_Visible__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csMath3_Visible'");
    return NULL;
}


static PyObject *_wrap_csMath3_FindIntersection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 ;
    csVector3 *arg2 ;
    csVector3 *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csMath3_FindIntersection",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)csMath3::FindIntersection((csVector3 const (*))arg1,(csVector3 const (*))arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath3_Between(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    float arg4 ;
    float arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOff:csMath3_Between",&obj0,&obj1,&obj2,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    csMath3::Between((csVector3 const &)*arg1,(csVector3 const &)*arg2,*arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath3_SetMinMax(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csMath3_SetMinMax",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    csMath3::SetMinMax((csVector3 const &)*arg1,*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath3_Area3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csMath3_Area3",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csMath3::Area3((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath3_CalcNormal__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:csMath3_CalcNormal",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    csMath3::CalcNormal(*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3,(csVector3 const &)*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath3_CalcNormal__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csMath3_CalcNormal",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    csMath3::CalcNormal(*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath3_CalcNormal(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_csMath3_CalcNormal__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_csMath3_CalcNormal__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csMath3_CalcNormal'");
    return NULL;
}


static PyObject *_wrap_csMath3_CalcPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    float *arg5 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:csMath3_CalcPlane",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    csMath3::CalcPlane((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath3_PlanesEqual(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = 0 ;
    csPlane3 *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMath3_PlanesEqual",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csMath3::PlanesEqual((csPlane3 const &)*arg1,(csPlane3 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath3_PlanesClose(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = 0 ;
    csPlane3 *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMath3_PlanesClose",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csMath3::PlanesClose((csPlane3 const &)*arg1,(csPlane3 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath3_OuterPlanes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csBox3 *arg1 = 0 ;
    csBox3 *arg2 = 0 ;
    csPlane3 *arg3 = (csPlane3 *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csMath3_OuterPlanes",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csBox3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csBox3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)csMath3::OuterPlanes((csBox3 const &)*arg1,(csBox3 const &)*arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath3_FindObserverSides(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csBox3 *arg1 = 0 ;
    csBox3 *arg2 = 0 ;
    int *arg3 = (int *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csMath3_FindObserverSides",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csBox3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csBox3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)csMath3::FindObserverSides((csBox3 const &)*arg1,(csBox3 const &)*arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMath3_SpherePosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    float arg2 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"ffO:csMath3_SpherePosition",&arg1,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    csMath3::SpherePosition(arg1,arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csMath3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMath3 *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csMath3")) goto fail;
    result = (csMath3 *)new csMath3();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMath3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csMath3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMath3 *arg1 = (csMath3 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csMath3",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMath3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csMath3_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csMath3, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csSquaredDist_PointPoint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csSquaredDist_PointPoint",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csSquaredDist::PointPoint((csVector3 const &)*arg1,(csVector3 const &)*arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSquaredDist_PointLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csSquaredDist_PointLine",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csSquaredDist::PointLine((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSquaredDist_PointPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csPlane3 *arg2 = 0 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csSquaredDist_PointPlane",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csSquaredDist::PointPlane((csVector3 const &)*arg1,(csPlane3 const &)*arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSquaredDist_PointPoly(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csVector3 *arg2 = (csVector3 *) 0 ;
    int arg3 ;
    csPlane3 *arg4 = 0 ;
    float arg5 = (float) -1 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiO|f:csSquaredDist_PointPoly",&obj0,&obj1,&arg3,&obj3,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csSquaredDist::PointPoly((csVector3 const &)*arg1,arg2,arg3,(csPlane3 const &)*arg4,arg5);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csSquaredDist(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSquaredDist *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csSquaredDist")) goto fail;
    result = (csSquaredDist *)new csSquaredDist();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csSquaredDist, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csSquaredDist(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSquaredDist *arg1 = (csSquaredDist *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csSquaredDist",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSquaredDist,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csSquaredDist_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csSquaredDist, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csIntersect3_IntersectPolygon(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = 0 ;
    csPoly3D *arg2 = (csPoly3D *) 0 ;
    csSegment3 *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csIntersect3_IntersectPolygon",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csSegment3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csIntersect3::IntersectPolygon((csPlane3 const &)*arg1,arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_IntersectSegment(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = (csPlane3 *) 0 ;
    int arg2 ;
    csSegment3 *arg3 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:csIntersect3_IntersectSegment",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csSegment3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)csIntersect3::IntersectSegment(arg1,arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_IntersectTriangle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csSegment3 *arg4 = 0 ;
    csVector3 *arg5 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:csIntersect3_IntersectTriangle",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csSegment3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csIntersect3::IntersectTriangle((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3,(csSegment3 const &)*arg4,*arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_Plane__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    csVector3 *arg5 = 0 ;
    float *arg6 = 0 ;
    bool result;
    float temp6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    arg6 = &temp6;
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:csIntersect3_Plane",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csIntersect3::Plane((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3,(csVector3 const &)*arg4,*arg5,*arg6);
    
    resultobj = PyInt_FromLong((long)result);
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg6));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_Plane__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    csPlane3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    float *arg5 = 0 ;
    bool result;
    float temp5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    arg5 = &temp5;
    if(!PyArg_ParseTuple(args,(char *)"OOOO:csIntersect3_Plane",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csIntersect3::Plane((csVector3 const &)*arg1,(csVector3 const &)*arg2,(csPlane3 const &)*arg3,*arg4,*arg5);
    
    resultobj = PyInt_FromLong((long)result);
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg5));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_Plane(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_csIntersect3_Plane__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_csIntersect3_Plane__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csIntersect3_Plane'");
    return NULL;
}


static PyObject *_wrap_csIntersect3_Planes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = 0 ;
    csPlane3 *arg2 = 0 ;
    csPlane3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:csIntersect3_Planes",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csIntersect3::Planes((csPlane3 const &)*arg1,(csPlane3 const &)*arg2,(csPlane3 const &)*arg3,*arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_PlaneXPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = 0 ;
    float arg2 ;
    csPlane2 *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OfO:csIntersect3_PlaneXPlane",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csIntersect3::PlaneXPlane((csPlane3 const &)*arg1,arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_PlaneYPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = 0 ;
    float arg2 ;
    csPlane2 *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OfO:csIntersect3_PlaneYPlane",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csIntersect3::PlaneYPlane((csPlane3 const &)*arg1,arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_PlaneZPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = 0 ;
    float arg2 ;
    csPlane2 *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OfO:csIntersect3_PlaneZPlane",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csIntersect3::PlaneZPlane((csPlane3 const &)*arg1,arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_PlaneAxisPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = 0 ;
    int arg2 ;
    float arg3 ;
    csPlane2 *arg4 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OifO:csIntersect3_PlaneAxisPlane",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csPlane2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csIntersect3::PlaneAxisPlane((csPlane3 const &)*arg1,arg2,arg3,*arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_Z0Plane__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csIntersect3_Z0Plane",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csIntersect3::Z0Plane((csVector3 const &)*arg1,(csVector3 const &)*arg2,*arg3);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_Z0Plane__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSegment3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csIntersect3_Z0Plane",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSegment3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csIntersect3::Z0Plane((csSegment3 const &)*arg1,*arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_Z0Plane(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csSegment3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csIntersect3_Z0Plane__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_csIntersect3_Z0Plane__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csIntersect3_Z0Plane'");
    return NULL;
}


static PyObject *_wrap_csIntersect3_ZPlane__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    float result;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"fOOO:csIntersect3_ZPlane",&arg1,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csIntersect3::ZPlane(arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3,*arg4);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_ZPlane__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    csSegment3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    float result;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"fOO:csIntersect3_ZPlane",&arg1,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csSegment3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csIntersect3::ZPlane(arg1,(csSegment3 const &)*arg2,*arg3);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_ZPlane(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csSegment3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_csIntersect3_ZPlane__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_csIntersect3_ZPlane__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csIntersect3_ZPlane'");
    return NULL;
}


static PyObject *_wrap_csIntersect3_XFrustum__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    float result;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"fOOO:csIntersect3_XFrustum",&arg1,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csIntersect3::XFrustum(arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3,*arg4);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_XFrustum__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    csSegment3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    float result;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"fOO:csIntersect3_XFrustum",&arg1,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csSegment3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csIntersect3::XFrustum(arg1,(csSegment3 const &)*arg2,*arg3);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_XFrustum(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csSegment3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_csIntersect3_XFrustum__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_csIntersect3_XFrustum__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csIntersect3_XFrustum'");
    return NULL;
}


static PyObject *_wrap_csIntersect3_YFrustum__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    float result;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"fOOO:csIntersect3_YFrustum",&arg1,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csIntersect3::YFrustum(arg1,(csVector3 const &)*arg2,(csVector3 const &)*arg3,*arg4);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_YFrustum__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    csSegment3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    float result;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"fOO:csIntersect3_YFrustum",&arg1,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csSegment3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)csIntersect3::YFrustum(arg1,(csSegment3 const &)*arg2,*arg3);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_YFrustum(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csSegment3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_csIntersect3_YFrustum__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_csIntersect3_YFrustum__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csIntersect3_YFrustum'");
    return NULL;
}


static PyObject *_wrap_csIntersect3_BoxSegment(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csBox3 *arg1 = 0 ;
    csSegment3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    float *arg4 = (float *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|O:csIntersect3_BoxSegment",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csBox3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csSegment3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (int)csIntersect3::BoxSegment((csBox3 const &)*arg1,(csSegment3 const &)*arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_BoxFrustum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csBox3 *arg1 = 0 ;
    csPlane3 *arg2 = (csPlane3 *) 0 ;
    uint32 arg3 ;
    uint32 *arg4 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:csIntersect3_BoxFrustum",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csBox3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (uint32) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_uint32,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csIntersect3::BoxFrustum((csBox3 const &)*arg1,arg2,arg3,*arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csIntersect3_BoxSphere(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csBox3 *arg1 = 0 ;
    csVector3 *arg2 = 0 ;
    float arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf:csIntersect3_BoxSphere",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csBox3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csIntersect3::BoxSphere((csBox3 const &)*arg1,(csVector3 const &)*arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csIntersect3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csIntersect3 *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csIntersect3")) goto fail;
    result = (csIntersect3 *)new csIntersect3();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csIntersect3, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csIntersect3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csIntersect3 *arg1 = (csIntersect3 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csIntersect3",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csIntersect3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csIntersect3_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csIntersect3, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csGeomDebugHelper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGeomDebugHelper *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csGeomDebugHelper")) goto fail;
    result = (csGeomDebugHelper *)new csGeomDebugHelper();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csGeomDebugHelper, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csGeomDebugHelper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGeomDebugHelper *arg1 = (csGeomDebugHelper *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csGeomDebugHelper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGeomDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGeomDebugHelper_scfRefCount_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGeomDebugHelper *arg1 = (csGeomDebugHelper *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csGeomDebugHelper_scfRefCount_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGeomDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->scfRefCount = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGeomDebugHelper_scfRefCount_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGeomDebugHelper *arg1 = (csGeomDebugHelper *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGeomDebugHelper_scfRefCount_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGeomDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->scfRefCount);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGeomDebugHelper_scfParent_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGeomDebugHelper *arg1 = (csGeomDebugHelper *) 0 ;
    iBase *arg2 = (iBase *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csGeomDebugHelper_scfParent_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGeomDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->scfParent = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGeomDebugHelper_scfParent_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGeomDebugHelper *arg1 = (csGeomDebugHelper *) 0 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGeomDebugHelper_scfParent_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGeomDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBase *) ((arg1)->scfParent);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGeomDebugHelper_IncRef(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGeomDebugHelper *arg1 = (csGeomDebugHelper *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGeomDebugHelper_IncRef",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGeomDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->IncRef();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGeomDebugHelper_DecRef(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGeomDebugHelper *arg1 = (csGeomDebugHelper *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGeomDebugHelper_DecRef",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGeomDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DecRef();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGeomDebugHelper_GetRefCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGeomDebugHelper *arg1 = (csGeomDebugHelper *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGeomDebugHelper_GetRefCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGeomDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetRefCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGeomDebugHelper_QueryInterface(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGeomDebugHelper *arg1 = (csGeomDebugHelper *) 0 ;
    scfInterfaceID arg2 ;
    int arg3 ;
    void *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:csGeomDebugHelper_QueryInterface",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGeomDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (scfInterfaceID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (void *)(arg1)->QueryInterface(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGeomDebugHelper_GetSupportedTests(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGeomDebugHelper *arg1 = (csGeomDebugHelper *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGeomDebugHelper_GetSupportedTests",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGeomDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((csGeomDebugHelper const *)arg1)->GetSupportedTests();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGeomDebugHelper_UnitTest(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGeomDebugHelper *arg1 = (csGeomDebugHelper *) 0 ;
    SwigValueWrapper< csPtr<iString > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGeomDebugHelper_UnitTest",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGeomDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->UnitTest();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iString> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iString *)ref), (void *)(iString *)ref, "iString" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGeomDebugHelper_StateTest(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGeomDebugHelper *arg1 = (csGeomDebugHelper *) 0 ;
    SwigValueWrapper< csPtr<iString > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGeomDebugHelper_StateTest",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGeomDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->StateTest();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iString> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iString *)ref), (void *)(iString *)ref, "iString" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGeomDebugHelper_Benchmark(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGeomDebugHelper *arg1 = (csGeomDebugHelper *) 0 ;
    int arg2 ;
    csTicks result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csGeomDebugHelper_Benchmark",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGeomDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csTicks)(arg1)->Benchmark(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGeomDebugHelper_Dump__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGeomDebugHelper *arg1 = (csGeomDebugHelper *) 0 ;
    SwigValueWrapper< csPtr<iString > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGeomDebugHelper_Dump",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGeomDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Dump();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iString> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iString *)ref), (void *)(iString *)ref, "iString" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGeomDebugHelper_Dump__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGeomDebugHelper *arg1 = (csGeomDebugHelper *) 0 ;
    iGraphics3D *arg2 = (iGraphics3D *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csGeomDebugHelper_Dump",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGeomDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Dump(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGeomDebugHelper_Dump(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csGeomDebugHelper, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_csGeomDebugHelper_Dump__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csGeomDebugHelper, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iGraphics3D, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csGeomDebugHelper_Dump__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csGeomDebugHelper_Dump'");
    return NULL;
}


static PyObject *_wrap_csGeomDebugHelper_DebugCommand(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGeomDebugHelper *arg1 = (csGeomDebugHelper *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:csGeomDebugHelper_DebugCommand",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGeomDebugHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->DebugCommand((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csGeomDebugHelper_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csGeomDebugHelper, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csPoly3D__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) 10 ;
    csPoly3D *result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:new_csPoly3D",&arg1)) goto fail;
    result = (csPoly3D *)new csPoly3D(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPoly3D, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPoly3D__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = 0 ;
    csPoly3D *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csPoly3D",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csPoly3D *)new csPoly3D((csPoly3D const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPoly3D, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPoly3D(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 0) && (argc <= 1)) {
        int _v;
        if (argc <= 0) {
            return _wrap_new_csPoly3D__SWIG_0(self,args);
        }
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_csPoly3D__SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPoly3D, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csPoly3D__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csPoly3D'");
    return NULL;
}


static PyObject *_wrap_delete_csPoly3D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csPoly3D",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_MakeEmpty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoly3D_MakeEmpty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeEmpty();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_GetVertexCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoly3D_GetVertexCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((csPoly3D const *)arg1)->GetVertexCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_GetVertices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoly3D_GetVertices",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)((csPoly3D const *)arg1)->GetVertices();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_GetVertex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    int arg2 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPoly3D_GetVertex",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)((csPoly3D const *)arg1)->GetVertex(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_GetFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoly3D_GetFirst",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)((csPoly3D const *)arg1)->GetFirst();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_GetLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoly3D_GetLast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)((csPoly3D const *)arg1)->GetLast();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_In__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    csVector3 *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPoly3D_In",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((csPoly3D const *)arg1)->In((csVector3 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_In__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    int arg2 ;
    csVector3 *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:csPoly3D_In",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)csPoly3D::In(arg1,arg2,(csVector3 const &)*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_In(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPoly3D, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csPoly3D_In__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_csPoly3D_In__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csPoly3D_In'");
    return NULL;
}


static PyObject *_wrap_csPoly3D_MakeRoom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPoly3D_MakeRoom",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeRoom(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_SetVertexCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPoly3D_SetVertexCount",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetVertexCount(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_AddVertex__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    csVector3 *arg2 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPoly3D_AddVertex",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->AddVertex((csVector3 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_AddVertex__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offf:csPoly3D_AddVertex",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddVertex(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_AddVertex(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPoly3D, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csPoly3D_AddVertex__SWIG_0(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPoly3D, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyFloat_Check(argv[3]) || PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_csPoly3D_AddVertex__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csPoly3D_AddVertex'");
    return NULL;
}


static PyObject *_wrap_csPoly3D_SetVertices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    csVector3 *arg2 = (csVector3 *) 0 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:csPoly3D_SetVertices",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetVertices((csVector3 const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_ProjectXPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    csVector3 *arg2 = 0 ;
    float arg3 ;
    csPoly2D *arg4 = (csPoly2D *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOfO:csPoly3D_ProjectXPlane",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((csPoly3D const *)arg1)->ProjectXPlane((csVector3 const &)*arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_ProjectYPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    csVector3 *arg2 = 0 ;
    float arg3 ;
    csPoly2D *arg4 = (csPoly2D *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOfO:csPoly3D_ProjectYPlane",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((csPoly3D const *)arg1)->ProjectYPlane((csVector3 const &)*arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_ProjectZPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    csVector3 *arg2 = 0 ;
    float arg3 ;
    csPoly2D *arg4 = (csPoly2D *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOfO:csPoly3D_ProjectZPlane",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((csPoly3D const *)arg1)->ProjectZPlane((csVector3 const &)*arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_ProjectAxisPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    csVector3 *arg2 = 0 ;
    int arg3 ;
    float arg4 ;
    csPoly2D *arg5 = (csPoly2D *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOifO:csPoly3D_ProjectAxisPlane",&obj0,&obj1,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_csPoly2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((csPoly3D const *)arg1)->ProjectAxisPlane((csVector3 const &)*arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_Classify__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPlane3 *arg1 = 0 ;
    csVector3 *arg2 = (csVector3 *) 0 ;
    int arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:csPoly3D_Classify",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)csPoly3D::Classify((csPlane3 const &)*arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_Classify__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    csPlane3 *arg2 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPoly3D_Classify",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)((csPoly3D const *)arg1)->Classify((csPlane3 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_Classify(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPoly3D, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csPoly3D_Classify__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_csPoly3D_Classify__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csPoly3D_Classify'");
    return NULL;
}


static PyObject *_wrap_csPoly3D_ClassifyX(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    float arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csPoly3D_ClassifyX",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((csPoly3D const *)arg1)->ClassifyX(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_ClassifyY(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    float arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csPoly3D_ClassifyY",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((csPoly3D const *)arg1)->ClassifyY(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_ClassifyZ(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    float arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csPoly3D_ClassifyZ",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((csPoly3D const *)arg1)->ClassifyZ(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_CutToPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    csPlane3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPoly3D_CutToPlane",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->CutToPlane((csPlane3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_SplitWithPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    csPoly3D *arg2 = 0 ;
    csPoly3D *arg3 = 0 ;
    csPlane3 *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:csPoly3D_SplitWithPlane",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((csPoly3D const *)arg1)->SplitWithPlane(*arg2,*arg3,(csPlane3 const &)*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_SplitWithPlaneX(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    csPoly3D *arg2 = 0 ;
    csPoly3D *arg3 = 0 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOf:csPoly3D_SplitWithPlaneX",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((csPoly3D const *)arg1)->SplitWithPlaneX(*arg2,*arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_SplitWithPlaneY(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    csPoly3D *arg2 = 0 ;
    csPoly3D *arg3 = 0 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOf:csPoly3D_SplitWithPlaneY",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((csPoly3D const *)arg1)->SplitWithPlaneY(*arg2,*arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_SplitWithPlaneZ(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    csPoly3D *arg2 = 0 ;
    csPoly3D *arg3 = 0 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOf:csPoly3D_SplitWithPlaneZ",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((csPoly3D const *)arg1)->SplitWithPlaneZ(*arg2,*arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_ComputeNormal__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    int arg2 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPoly3D_ComputeNormal",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = csPoly3D::ComputeNormal(arg1,arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_ComputeNormal__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoly3D_ComputeNormal",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csPoly3D const *)arg1)->ComputeNormal();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_ComputeNormal(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPoly3D, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_csPoly3D_ComputeNormal__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csPoly3D_ComputeNormal__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csPoly3D_ComputeNormal'");
    return NULL;
}


static PyObject *_wrap_csPoly3D_ComputePlane__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = (csVector3 *) 0 ;
    int arg2 ;
    csPlane3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPoly3D_ComputePlane",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = csPoly3D::ComputePlane(arg1,arg2);
    
    {
        csPlane3 * resultptr;
        resultptr = new csPlane3((csPlane3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPlane3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_ComputePlane__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    csPlane3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoly3D_ComputePlane",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csPoly3D const *)arg1)->ComputePlane();
    
    {
        csPlane3 * resultptr;
        resultptr = new csPlane3((csPlane3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPlane3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_ComputePlane(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPoly3D, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_csPoly3D_ComputePlane__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csPoly3D_ComputePlane__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csPoly3D_ComputePlane'");
    return NULL;
}


static PyObject *_wrap_csPoly3D_GetSignedArea(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoly3D_GetSignedArea",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((csPoly3D const *)arg1)->GetSignedArea();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D_GetCenter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoly3D_GetCenter",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csPoly3D const *)arg1)->GetCenter();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoly3D___getitem__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoly3D *arg1 = (csPoly3D *) 0 ;
    int arg2 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPoly3D___getitem__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoly3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 &_result_ref = csPoly3D___getitem__(arg1,arg2);
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csPoly3D_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csPoly3D, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csVector3Array(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) 10 ;
    csVector3Array *result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:new_csVector3Array",&arg1)) goto fail;
    result = (csVector3Array *)new csVector3Array(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3Array, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3Array_AddVertexSmart__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3Array *arg1 = (csVector3Array *) 0 ;
    csVector3 *arg2 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVector3Array_AddVertexSmart",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3Array,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->AddVertexSmart((csVector3 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3Array_AddVertexSmart__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3Array *arg1 = (csVector3Array *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offf:csVector3Array_AddVertexSmart",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3Array,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddVertexSmart(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVector3Array_AddVertexSmart(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3Array, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csVector3Array_AddVertexSmart__SWIG_0(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3Array, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyFloat_Check(argv[3]) || PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_csVector3Array_AddVertexSmart__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csVector3Array_AddVertexSmart'");
    return NULL;
}


static PyObject *_wrap_delete_csVector3Array(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3Array *arg1 = (csVector3Array *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csVector3Array",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3Array,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csVector3Array_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csVector3Array, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csRect_xmin_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csRect_xmin_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->xmin = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_xmin_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRect_xmin_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->xmin);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_ymin_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csRect_ymin_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->ymin = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_ymin_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRect_ymin_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->ymin);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_xmax_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csRect_xmax_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->xmax = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_xmax_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRect_xmax_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->xmax);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_ymax_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csRect_ymax_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->ymax = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_ymax_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRect_ymax_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->ymax);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csRect__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csRect")) goto fail;
    result = (csRect *)new csRect();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csRect, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csRect__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    csRect *result;
    
    if(!PyArg_ParseTuple(args,(char *)"iiii:new_csRect",&arg1,&arg2,&arg3,&arg4)) goto fail;
    result = (csRect *)new csRect(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csRect, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csRect__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = 0 ;
    csRect *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csRect",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csRect *)new csRect((csRect const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csRect, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csRect(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_csRect__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csRect__SWIG_2(self,args);
        }
    }
    if (argc == 4) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_new_csRect__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csRect'");
    return NULL;
}


static PyObject *_wrap_delete_csRect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csRect",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Intersect__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:csRect_Intersect",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Intersect(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Intersect__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    csRect *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRect_Intersect",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Intersect((csRect const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Intersect(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csRect, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csRect_Intersect__SWIG_1(self,args);
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_csRect_Intersect__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csRect_Intersect'");
    return NULL;
}


static PyObject *_wrap_csRect_Intersects(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    csRect *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRect_Intersects",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((csRect const *)arg1)->Intersects((csRect const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Union__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:csRect_Union",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Union(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Union__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    csRect *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRect_Union",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Union((csRect const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Union(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csRect, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csRect_Union__SWIG_1(self,args);
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_csRect_Union__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csRect_Union'");
    return NULL;
}


static PyObject *_wrap_csRect_Exclude__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:csRect_Exclude",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Exclude(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Exclude__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    csRect *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRect_Exclude",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Exclude((csRect const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Exclude(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csRect, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csRect_Exclude__SWIG_1(self,args);
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_csRect_Exclude__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csRect_Exclude'");
    return NULL;
}


static PyObject *_wrap_csRect_Subtract(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    csRect *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRect_Subtract",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Subtract((csRect const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_IsEmpty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRect_IsEmpty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((csRect const *)arg1)->IsEmpty();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_MakeEmpty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRect_MakeEmpty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeEmpty();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Set__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:csRect_Set",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Set(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Set__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    csRect *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRect_Set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Set((csRect const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Set(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csRect, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csRect_Set__SWIG_1(self,args);
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_csRect_Set__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csRect_Set'");
    return NULL;
}


static PyObject *_wrap_csRect_SetPos(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:csRect_SetPos",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPos(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_SetSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:csRect_SetSize",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSize(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Move(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:csRect_Move",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Move(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Width(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRect_Width",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((csRect const *)arg1)->Width();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Height(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRect_Height",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((csRect const *)arg1)->Height();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Contains(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int arg2 ;
    int arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:csRect_Contains",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((csRect const *)arg1)->Contains(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_ContainsRel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int arg2 ;
    int arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:csRect_ContainsRel",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((csRect const *)arg1)->ContainsRel(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Equal__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:csRect_Equal",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((csRect const *)arg1)->Equal(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Equal__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    csRect *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRect_Equal",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((csRect const *)arg1)->Equal((csRect const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Equal(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csRect, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csRect_Equal__SWIG_1(self,args);
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_csRect_Equal__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csRect_Equal'");
    return NULL;
}


static PyObject *_wrap_csRect_Normalize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRect_Normalize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Normalize();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Area(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRect_Area",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((csRect const *)arg1)->Area();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_AddAdjanced(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    csRect *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRect_AddAdjanced",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddAdjanced((csRect const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect___eq__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    csRect *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRect___eq__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((csRect const *)arg1)->operator ==((csRect const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect___ne__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    csRect *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRect___ne__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((csRect const *)arg1)->operator !=((csRect const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Extend(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:csRect_Extend",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Extend(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Join(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    csRect *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRect_Join",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Join((csRect const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Outset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csRect_Outset",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Outset(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_Inset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csRect_Inset",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Inset(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_ClipLineGeneral(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    int *arg5 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:csRect_ClipLineGeneral",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->ClipLineGeneral(*arg2,*arg3,*arg4,*arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_ClipLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    int *arg5 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:csRect_ClipLine",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->ClipLine(*arg2,*arg3,*arg4,*arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRect_ClipLineSafe(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRect *arg1 = (csRect *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    int *arg5 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:csRect_ClipLineSafe",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->ClipLineSafe(*arg2,*arg3,*arg4,*arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csRect_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csRect, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_FRAGMENT_BUFFER_SIZE_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable FRAGMENT_BUFFER_SIZE is read-only.");
    return 1;
}


static PyObject *_wrap_FRAGMENT_BUFFER_SIZE_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)FRAGMENT_BUFFER_SIZE);
    return pyobj;
}


static PyObject *_wrap_new_csRectRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRectRegion *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csRectRegion")) goto fail;
    result = (csRectRegion *)new csRectRegion();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csRectRegion, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csRectRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRectRegion *arg1 = (csRectRegion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csRectRegion",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRectRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRectRegion_Include(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRectRegion *arg1 = (csRectRegion *) 0 ;
    csRect *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRectRegion_Include",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRectRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Include((csRect const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRectRegion_Exclude(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRectRegion *arg1 = (csRectRegion *) 0 ;
    csRect *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRectRegion_Exclude",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRectRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Exclude((csRect const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRectRegion_ClipTo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRectRegion *arg1 = (csRectRegion *) 0 ;
    csRect *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRectRegion_ClipTo",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRectRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->ClipTo(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRectRegion_Count(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRectRegion *arg1 = (csRectRegion *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRectRegion_Count",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRectRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((csRectRegion const *)arg1)->Count();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRectRegion_RectAt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRectRegion *arg1 = (csRectRegion *) 0 ;
    int arg2 ;
    csRect *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csRectRegion_RectAt",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRectRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csRect &_result_ref = ((csRectRegion const *)arg1)->RectAt(arg2);
        result = (csRect *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csRect, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRectRegion_makeEmpty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRectRegion *arg1 = (csRectRegion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRectRegion_makeEmpty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRectRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->makeEmpty();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csRectRegion_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csRectRegion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csQuaternion_Init(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    float arg5 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offff:csQuaternion_Init",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Init(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csQuaternion__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csQuaternion")) goto fail;
    result = (csQuaternion *)new csQuaternion();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csQuaternion, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csQuaternion__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    float arg2 = (float) 0.0 ;
    float arg3 = (float) 0.0 ;
    float arg4 = (float) 0.0 ;
    csQuaternion *result;
    
    if(!PyArg_ParseTuple(args,(char *)"f|fff:new_csQuaternion",&arg1,&arg2,&arg3,&arg4)) goto fail;
    result = (csQuaternion *)new csQuaternion(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csQuaternion, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csQuaternion__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = 0 ;
    csQuaternion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csQuaternion",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csQuaternion *)new csQuaternion((csQuaternion const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csQuaternion, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csQuaternion__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 = 0 ;
    csQuaternion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csQuaternion",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csQuaternion *)new csQuaternion((csVector3 const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csQuaternion, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csQuaternion__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMatrix3 *arg1 = 0 ;
    csQuaternion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csQuaternion",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csQuaternion *)new csQuaternion((csMatrix3 const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csQuaternion, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csQuaternion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_csQuaternion__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csQuaternion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csQuaternion__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csQuaternion__SWIG_3(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csQuaternion__SWIG_4(self,args);
        }
    }
    if ((argc >= 1) && (argc <= 4)) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_new_csQuaternion__SWIG_1(self,args);
            }
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_new_csQuaternion__SWIG_1(self,args);
                }
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_new_csQuaternion__SWIG_1(self,args);
                    }
                    {
                        _v = (PyFloat_Check(argv[3]) || PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_new_csQuaternion__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csQuaternion'");
    return NULL;
}


static PyObject *_wrap_csQuaternion___imul__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    csQuaternion *arg2 = 0 ;
    csQuaternion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csQuaternion___imul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csQuaternion &_result_ref = (arg1)->operator *=((csQuaternion const &)*arg2);
        result = (csQuaternion *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csQuaternion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_Conjugate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csQuaternion_Conjugate",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Conjugate();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_Negate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csQuaternion_Negate",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Negate();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_Invert(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csQuaternion_Invert",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Invert();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_GetAxisAngle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    csVector3 *arg2 = 0 ;
    float *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csQuaternion_GetAxisAngle",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((csQuaternion const *)arg1)->GetAxisAngle(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_SetWithAxisAngle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    csVector3 arg2 ;
    float arg3 ;
    csVector3 *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf:csQuaternion_SetWithAxisAngle",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->SetWithAxisAngle(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_PrepRotation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    float arg2 ;
    csVector3 arg3 ;
    csVector3 *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OfO:csQuaternion_PrepRotation",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    (arg1)->PrepRotation(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_Rotate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    csVector3 arg2 ;
    csVector3 result;
    csVector3 *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csQuaternion_Rotate",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (arg1)->Rotate(arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_Normalize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csQuaternion_Normalize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Normalize();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_SetWithEuler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csQuaternion_SetWithEuler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetWithEuler((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_GetEulerAngles(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csQuaternion_GetEulerAngles",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetEulerAngles(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_ToAxisAngle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    csQuaternion result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csQuaternion_ToAxisAngle",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csQuaternion const *)arg1)->ToAxisAngle();
    
    {
        csQuaternion * resultptr;
        resultptr = new csQuaternion((csQuaternion &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csQuaternion, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_Slerp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    csQuaternion *arg2 = 0 ;
    float arg3 ;
    csQuaternion result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf:csQuaternion_Slerp",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = ((csQuaternion const *)arg1)->Slerp((csQuaternion const &)*arg2,arg3);
    
    {
        csQuaternion * resultptr;
        resultptr = new csQuaternion((csQuaternion &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csQuaternion, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_r_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csQuaternion_r_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->r = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_r_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csQuaternion_r_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->r);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_x_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csQuaternion_x_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_x_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csQuaternion_x_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->x);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_y_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csQuaternion_y_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_y_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csQuaternion_y_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->y);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_z_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csQuaternion_z_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->z = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion_z_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csQuaternion_z_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->z);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion___add__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    csQuaternion *arg2 = 0 ;
    csQuaternion result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csQuaternion___add__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csQuaternion_operator_a___(arg1,(csQuaternion const &)*arg2);
    
    {
        csQuaternion * resultptr;
        resultptr = new csQuaternion((csQuaternion &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csQuaternion, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion___sub__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    csQuaternion *arg2 = 0 ;
    csQuaternion result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csQuaternion___sub__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csQuaternion_operator_s___(arg1,(csQuaternion const &)*arg2);
    
    {
        csQuaternion * resultptr;
        resultptr = new csQuaternion((csQuaternion &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csQuaternion, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csQuaternion___mul__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    csQuaternion *arg2 = 0 ;
    csQuaternion result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csQuaternion___mul__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = csQuaternion_operator_m___(arg1,(csQuaternion const &)*arg2);
    
    {
        csQuaternion * resultptr;
        resultptr = new csQuaternion((csQuaternion &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csQuaternion, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csQuaternion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csQuaternion *arg1 = (csQuaternion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csQuaternion",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csQuaternion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csQuaternion_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csQuaternion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_delete_csSpline(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSpline *arg1 = (csSpline *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csSpline",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSpline_GetDimensionCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSpline *arg1 = (csSpline *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csSpline_GetDimensionCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetDimensionCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSpline_GetPointCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSpline *arg1 = (csSpline *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csSpline_GetPointCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetPointCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSpline_InsertPoint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSpline *arg1 = (csSpline *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csSpline_InsertPoint",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->InsertPoint(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSpline_RemovePoint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSpline *arg1 = (csSpline *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csSpline_RemovePoint",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemovePoint(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSpline_SetTimeValues(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSpline *arg1 = (csSpline *) 0 ;
    float *arg2 = (float *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csSpline_SetTimeValues",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetTimeValues(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSpline_SetTimeValue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSpline *arg1 = (csSpline *) 0 ;
    int arg2 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oif:csSpline_SetTimeValue",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetTimeValue(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSpline_GetTimeValues(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSpline *arg1 = (csSpline *) 0 ;
    float *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csSpline_GetTimeValues",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float *)(arg1)->GetTimeValues();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_float, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSpline_GetTimeValue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSpline *arg1 = (csSpline *) 0 ;
    int arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csSpline_GetTimeValue",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetTimeValue(arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSpline_SetDimensionValues(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSpline *arg1 = (csSpline *) 0 ;
    int arg2 ;
    float *arg3 = (float *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:csSpline_SetDimensionValues",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDimensionValues(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSpline_SetDimensionValue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSpline *arg1 = (csSpline *) 0 ;
    int arg2 ;
    int arg3 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiif:csSpline_SetDimensionValue",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDimensionValue(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSpline_GetDimensionValues(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSpline *arg1 = (csSpline *) 0 ;
    int arg2 ;
    float *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csSpline_GetDimensionValues",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float *)(arg1)->GetDimensionValues(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_float, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSpline_GetDimensionValue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSpline *arg1 = (csSpline *) 0 ;
    int arg2 ;
    int arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:csSpline_GetDimensionValue",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetDimensionValue(arg2,arg3);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSpline_Calculate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSpline *arg1 = (csSpline *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csSpline_Calculate",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Calculate(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSpline_GetCurrentIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSpline *arg1 = (csSpline *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csSpline_GetCurrentIndex",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetCurrentIndex();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSpline_GetInterpolatedDimension(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSpline *arg1 = (csSpline *) 0 ;
    int arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csSpline_GetInterpolatedDimension",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetInterpolatedDimension(arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csSpline_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csSpline, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csCubicSpline(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    csCubicSpline *result;
    
    if(!PyArg_ParseTuple(args,(char *)"ii:new_csCubicSpline",&arg1,&arg2)) goto fail;
    result = (csCubicSpline *)new csCubicSpline(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csCubicSpline, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csCubicSpline(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCubicSpline *arg1 = (csCubicSpline *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csCubicSpline",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCubicSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCubicSpline_Calculate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCubicSpline *arg1 = (csCubicSpline *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csCubicSpline_Calculate",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCubicSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Calculate(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCubicSpline_GetInterpolatedDimension(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCubicSpline *arg1 = (csCubicSpline *) 0 ;
    int arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csCubicSpline_GetInterpolatedDimension",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCubicSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetInterpolatedDimension(arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csCubicSpline_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csCubicSpline, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csBSpline(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    csBSpline *result;
    
    if(!PyArg_ParseTuple(args,(char *)"ii:new_csBSpline",&arg1,&arg2)) goto fail;
    result = (csBSpline *)new csBSpline(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csBSpline, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csBSpline(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csBSpline *arg1 = (csBSpline *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csBSpline",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csBSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csBSpline_Calculate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csBSpline *arg1 = (csBSpline *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csBSpline_Calculate",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csBSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Calculate(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csBSpline_GetInterpolatedDimension(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csBSpline *arg1 = (csBSpline *) 0 ;
    int arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csBSpline_GetInterpolatedDimension",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csBSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetInterpolatedDimension(arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csBSpline_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csBSpline, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csCatmullRomSpline(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    csCatmullRomSpline *result;
    
    if(!PyArg_ParseTuple(args,(char *)"ii:new_csCatmullRomSpline",&arg1,&arg2)) goto fail;
    result = (csCatmullRomSpline *)new csCatmullRomSpline(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csCatmullRomSpline, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csCatmullRomSpline(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCatmullRomSpline *arg1 = (csCatmullRomSpline *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csCatmullRomSpline",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCatmullRomSpline,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csCatmullRomSpline_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csCatmullRomSpline, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csPoint_x_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoint *arg1 = (csPoint *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPoint_x_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoint_x_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoint *arg1 = (csPoint *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoint_x_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->x);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoint_y_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoint *arg1 = (csPoint *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPoint_y_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoint_y_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoint *arg1 = (csPoint *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPoint_y_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->y);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPoint__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoint *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csPoint")) goto fail;
    result = (csPoint *)new csPoint();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPoint, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPoint__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    csPoint *result;
    
    if(!PyArg_ParseTuple(args,(char *)"ii:new_csPoint",&arg1,&arg2)) goto fail;
    result = (csPoint *)new csPoint(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPoint, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPoint__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoint *arg1 = 0 ;
    csPoint *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csPoint",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csPoint *)new csPoint((csPoint const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPoint, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPoint(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_csPoint__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPoint, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csPoint__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_csPoint__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csPoint'");
    return NULL;
}


static PyObject *_wrap_csPoint_Set__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoint *arg1 = (csPoint *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:csPoint_Set",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Set(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoint_Set__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoint *arg1 = (csPoint *) 0 ;
    csPoint *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPoint_Set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Set(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPoint_Set(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPoint, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csPoint, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csPoint_Set__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csPoint, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_csPoint_Set__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csPoint_Set'");
    return NULL;
}


static PyObject *_wrap_delete_csPoint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPoint *arg1 = (csPoint *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csPoint",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csPoint_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csPoint, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csRGBcolor_red_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBcolor *arg1 = (csRGBcolor *) 0 ;
    unsigned char arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBcolor_red_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBcolor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->red = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBcolor_red_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBcolor *arg1 = (csRGBcolor *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRGBcolor_red_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBcolor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((arg1)->red);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBcolor_green_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBcolor *arg1 = (csRGBcolor *) 0 ;
    unsigned char arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBcolor_green_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBcolor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->green = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBcolor_green_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBcolor *arg1 = (csRGBcolor *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRGBcolor_green_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBcolor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((arg1)->green);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBcolor_blue_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBcolor *arg1 = (csRGBcolor *) 0 ;
    unsigned char arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBcolor_blue_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBcolor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->blue = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBcolor_blue_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBcolor *arg1 = (csRGBcolor *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRGBcolor_blue_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBcolor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((arg1)->blue);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csRGBcolor__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBcolor *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csRGBcolor")) goto fail;
    result = (csRGBcolor *)new csRGBcolor();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csRGBcolor, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csRGBcolor__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned char arg1 ;
    unsigned char arg2 ;
    unsigned char arg3 ;
    csRGBcolor *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_csRGBcolor",&obj0,&obj1,&obj2)) goto fail;
    arg1 = (unsigned char) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (unsigned char) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (csRGBcolor *)new csRGBcolor(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csRGBcolor, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csRGBcolor(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_csRGBcolor__SWIG_0(self,args);
    }
    if (argc == 3) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_new_csRGBcolor__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csRGBcolor'");
    return NULL;
}


static PyObject *_wrap_csRGBcolor_Set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBcolor *arg1 = (csRGBcolor *) 0 ;
    unsigned char arg2 ;
    unsigned char arg3 ;
    unsigned char arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:csRGBcolor_Set",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBcolor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (unsigned char) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    arg4 = (unsigned char) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->Set(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBcolor___eq__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBcolor *arg1 = (csRGBcolor *) 0 ;
    csRGBcolor *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBcolor___eq__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBcolor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRGBcolor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((csRGBcolor const *)arg1)->operator ==((csRGBcolor const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBcolor___ne__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBcolor *arg1 = (csRGBcolor *) 0 ;
    csRGBcolor *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBcolor___ne__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBcolor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRGBcolor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((csRGBcolor const *)arg1)->operator !=((csRGBcolor const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBcolor___add__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBcolor *arg1 = (csRGBcolor *) 0 ;
    csRGBcolor *arg2 = 0 ;
    csRGBcolor result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBcolor___add__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBcolor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRGBcolor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = ((csRGBcolor const *)arg1)->operator +((csRGBcolor const &)*arg2);
    
    {
        csRGBcolor * resultptr;
        resultptr = new csRGBcolor((csRGBcolor &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csRGBcolor, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csRGBcolor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBcolor *arg1 = (csRGBcolor *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csRGBcolor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBcolor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csRGBcolor_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csRGBcolor, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csRGBpixel_red_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    unsigned char arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBpixel_red_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->red = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel_red_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRGBpixel_red_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((arg1)->red);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel_green_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    unsigned char arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBpixel_green_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->green = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel_green_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRGBpixel_green_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((arg1)->green);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel_blue_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    unsigned char arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBpixel_blue_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->blue = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel_blue_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRGBpixel_blue_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((arg1)->blue);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel_alpha_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    unsigned char arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBpixel_alpha_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->alpha = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel_alpha_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRGBpixel_alpha_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((arg1)->alpha);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csRGBpixel__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csRGBpixel")) goto fail;
    result = (csRGBpixel *)new csRGBpixel();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csRGBpixel, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csRGBpixel__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = 0 ;
    csRGBpixel *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csRGBpixel",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csRGBpixel *)new csRGBpixel((csRGBpixel const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csRGBpixel, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csRGBpixel__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBcolor *arg1 = 0 ;
    csRGBpixel *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csRGBpixel",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBcolor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csRGBpixel *)new csRGBpixel((csRGBcolor const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csRGBpixel, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csRGBpixel__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    int arg3 ;
    csRGBpixel *result;
    
    if(!PyArg_ParseTuple(args,(char *)"iii:new_csRGBpixel",&arg1,&arg2,&arg3)) goto fail;
    result = (csRGBpixel *)new csRGBpixel(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csRGBpixel, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csRGBpixel(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_csRGBpixel__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRGBpixel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csRGBpixel__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRGBcolor, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csRGBpixel__SWIG_2(self,args);
        }
    }
    if (argc == 3) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_new_csRGBpixel__SWIG_3(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csRGBpixel'");
    return NULL;
}


static PyObject *_wrap_csRGBpixel___eq____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    csRGBcolor *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBpixel___eq__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRGBcolor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((csRGBpixel const *)arg1)->operator ==((csRGBcolor const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel___eq____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    csRGBpixel *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBpixel___eq__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((csRGBpixel const *)arg1)->operator ==((csRGBpixel const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel___eq__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRGBpixel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csRGBcolor, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csRGBpixel___eq____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRGBpixel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csRGBpixel, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csRGBpixel___eq____SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csRGBpixel___eq__'");
    return NULL;
}


static PyObject *_wrap_csRGBpixel___ne____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    csRGBcolor *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBpixel___ne__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRGBcolor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((csRGBpixel const *)arg1)->operator !=((csRGBcolor const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel___ne____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    csRGBpixel *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBpixel___ne__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((csRGBpixel const *)arg1)->operator !=((csRGBpixel const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel___ne__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRGBpixel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csRGBcolor, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csRGBpixel___ne____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRGBpixel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csRGBpixel, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csRGBpixel___ne____SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csRGBpixel___ne__'");
    return NULL;
}


static PyObject *_wrap_csRGBpixel_asRGBcolor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    csRGBcolor result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRGBpixel_asRGBcolor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((csRGBpixel const *)arg1)->operator csRGBcolor();
    
    {
        csRGBcolor * resultptr;
        resultptr = new csRGBcolor((csRGBcolor &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csRGBcolor, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel_eq(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    csRGBpixel *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBpixel_eq",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((csRGBpixel const *)arg1)->eq((csRGBpixel const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel_Intensity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRGBpixel_Intensity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Intensity();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel_Luminance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRGBpixel_Luminance",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char)(arg1)->Luminance();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel_Set__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:csRGBpixel_Set",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Set(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel_Set__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:csRGBpixel_Set",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Set(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel_Set__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    csRGBpixel *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBpixel_Set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Set((csRGBpixel const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel_Set(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRGBpixel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csRGBpixel, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_csRGBpixel_Set__SWIG_2(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRGBpixel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_csRGBpixel_Set__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csRGBpixel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_csRGBpixel_Set__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csRGBpixel_Set'");
    return NULL;
}


static PyObject *_wrap_csRGBpixel___iadd__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    csRGBcolor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBpixel___iadd__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRGBcolor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->operator +=((csRGBcolor const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel_UnsafeAdd(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    csRGBpixel *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBpixel_UnsafeAdd",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->UnsafeAdd((csRGBpixel const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csRGBpixel_SafeAdd(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    csRGBpixel *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBpixel_SafeAdd",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SafeAdd((csRGBpixel const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csRGBpixel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 = (csRGBpixel *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csRGBpixel",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csRGBpixel_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csRGBpixel, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csDefaultRunLoop(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csDefaultRunLoop",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)csDefaultRunLoop(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlatformStartup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlatformStartup",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)csPlatformStartup(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPlatformShutdown(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPlatformShutdown",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)csPlatformShutdown(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPrintf__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
    PyObject *resultobj;
    char *arg1 ;
    void *arg2 = 0 ;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:csPrintf",&arg1)) goto fail;
    result = (int)csPrintf((char const *)arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPrintf(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *varargs;
    PyObject *newargs;
    
    newargs = PyTuple_GetSlice(args,0,1);
    varargs = PyTuple_GetSlice(args,1,PyTuple_Size(args)+1);
    resultobj = _wrap_csPrintf__varargs__(self,newargs,varargs);
    Py_XDECREF(newargs);
    Py_XDECREF(varargs);
    return resultobj;
}


static PyObject *_wrap_csPrintfV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    va_list arg2 ;
    int result;
    va_list *argp2 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sO:csPrintfV",&arg1,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_va_list,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (int)csPrintfV((char const *)arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGetTicks(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTicks result;
    
    if(!PyArg_ParseTuple(args,(char *)":csGetTicks")) goto fail;
    result = (csTicks)csGetTicks();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSleep(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    
    if(!PyArg_ParseTuple(args,(char *)"i:csSleep",&arg1)) goto fail;
    csSleep(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGetUsername(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csString result;
    
    if(!PyArg_ParseTuple(args,(char *)":csGetUsername")) goto fail;
    result = csGetUsername();
    
    {
        csString * resultptr;
        resultptr = new csString((csString &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csString, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csInitializer_CreateEnvironment(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    char **arg2 ;
    iObjectRegistry *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csInitializer_CreateEnvironment",&obj0)) goto fail;
    {
        if (!PyList_Check(obj0))
        {
            PyErr_SetString(PyExc_TypeError, "not a list");
            return 0;
        }
        arg1 = PyList_Size(obj0);
        typedef char * Char_Ptr;
        arg2 = new Char_Ptr[arg1 + 1];
        for (int i = 0; i < arg1; ++i)
        {
            PyObject * o = PyList_GetItem(obj0, i);
            if (!PyString_Check(o))
            {
                PyErr_SetString(PyExc_TypeError, "list must contain strings");
                delete [] arg2;
                return 0;
            }
            arg2[i] = PyString_AsString(o);
        }
        arg2[arg1] = 0;
    }
    result = (iObjectRegistry *)csInitializer::CreateEnvironment(arg1,(char const *const (*))arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObjectRegistry, 0);
    {
        delete [] arg2;
    }
    return resultobj;
    fail:
    {
        delete [] arg2;
    }
    return NULL;
}


static PyObject *_wrap_csInitializer_InitializeSCF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    char **arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csInitializer_InitializeSCF",&obj0)) goto fail;
    {
        if (!PyList_Check(obj0))
        {
            PyErr_SetString(PyExc_TypeError, "not a list");
            return 0;
        }
        arg1 = PyList_Size(obj0);
        typedef char * Char_Ptr;
        arg2 = new Char_Ptr[arg1 + 1];
        for (int i = 0; i < arg1; ++i)
        {
            PyObject * o = PyList_GetItem(obj0, i);
            if (!PyString_Check(o))
            {
                PyErr_SetString(PyExc_TypeError, "list must contain strings");
                delete [] arg2;
                return 0;
            }
            arg2[i] = PyString_AsString(o);
        }
        arg2[arg1] = 0;
    }
    result = (bool)csInitializer::InitializeSCF(arg1,(char const *const (*))arg2);
    
    resultobj = PyInt_FromLong((long)result);
    {
        delete [] arg2;
    }
    return resultobj;
    fail:
    {
        delete [] arg2;
    }
    return NULL;
}


static PyObject *_wrap_csInitializer_CreateObjectRegistry(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *result;
    
    if(!PyArg_ParseTuple(args,(char *)":csInitializer_CreateObjectRegistry")) goto fail;
    result = (iObjectRegistry *)csInitializer::CreateObjectRegistry();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObjectRegistry, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csInitializer_CreatePluginManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    iPluginManager *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csInitializer_CreatePluginManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPluginManager *)csInitializer::CreatePluginManager(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPluginManager, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csInitializer_CreateEventQueue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    iEventQueue *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csInitializer_CreateEventQueue",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iEventQueue *)csInitializer::CreateEventQueue(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iEventQueue, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csInitializer_CreateVirtualClock(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    iVirtualClock *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csInitializer_CreateVirtualClock",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iVirtualClock *)csInitializer::CreateVirtualClock(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iVirtualClock, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csInitializer_CreateCommandLineParser(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    int arg2 ;
    char **arg3 ;
    iCommandLineParser *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csInitializer_CreateCommandLineParser",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyList_Check(obj1))
        {
            PyErr_SetString(PyExc_TypeError, "not a list");
            return 0;
        }
        arg2 = PyList_Size(obj1);
        typedef char * Char_Ptr;
        arg3 = new Char_Ptr[arg2 + 1];
        for (int i = 0; i < arg2; ++i)
        {
            PyObject * o = PyList_GetItem(obj1, i);
            if (!PyString_Check(o))
            {
                PyErr_SetString(PyExc_TypeError, "list must contain strings");
                delete [] arg3;
                return 0;
            }
            arg3[i] = PyString_AsString(o);
        }
        arg3[arg2] = 0;
    }
    result = (iCommandLineParser *)csInitializer::CreateCommandLineParser(arg1,arg2,(char const *const (*))arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCommandLineParser, 0);
    {
        delete [] arg3;
    }
    return resultobj;
    fail:
    {
        delete [] arg3;
    }
    return NULL;
}


static PyObject *_wrap_csInitializer_CreateConfigManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    iConfigManager *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csInitializer_CreateConfigManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iConfigManager *)csInitializer::CreateConfigManager(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iConfigManager, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csInitializer_CreateInputDrivers(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csInitializer_CreateInputDrivers",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)csInitializer::CreateInputDrivers(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csInitializer_SetupConfigManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    char *arg2 ;
    char *arg3 = (char *) "CrystalSpace.Noname" ;
    bool result;
    PyObject * obj0 = 0 ;
    
    {
        arg2 = 0; 
    }
    if(!PyArg_ParseTuple(args,(char *)"O|ss:csInitializer_SetupConfigManager",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)csInitializer::SetupConfigManager(arg1,(char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csInitializer_OpenApplication(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csInitializer_OpenApplication",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)csInitializer::OpenApplication(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csInitializer_CloseApplication(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csInitializer_CloseApplication",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    csInitializer::CloseApplication(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csInitializer__SetupEventHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    iEventHandler *arg2 = (iEventHandler *) 0 ;
    unsigned int arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:csInitializer__SetupEventHandler",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (unsigned int) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)csInitializer::SetupEventHandler(arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csInitializer_SetupEventHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    csEventHandlerFunc arg2 = (csEventHandlerFunc) 0 ;
    unsigned int arg3 = (unsigned int) CSMASK_Nothing|CSMASK_Broadcast|CSMASK_MouseUp|CSMASK_MouseDown|CSMASK_MouseMove|CSMASK_KeyDown|CSMASK_KeyUp|CSMASK_MouseClick|CSMASK_MouseDoubleClick|CSMASK_JoystickMove|CSMASK_JoystickDown|CSMASK_JoystickUp ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:csInitializer_SetupEventHandler",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_csEventHandlerFunc,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (unsigned int) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)csInitializer::SetupEventHandler(arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csInitializer_DestroyApplication(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csInitializer_DestroyApplication",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    csInitializer::DestroyApplication(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csInitializer__RequestPlugin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    char *arg2 ;
    char *arg3 ;
    int arg4 ;
    int arg5 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ossii:csInitializer__RequestPlugin",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)csInitializer__RequestPlugin(arg1,(char const *)arg2,(char const *)arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csInitializer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csInitializer *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csInitializer")) goto fail;
    result = (csInitializer *)new csInitializer();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csInitializer, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csInitializer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csInitializer *arg1 = (csInitializer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csInitializer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csInitializer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csInitializer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csInitializer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csMeshedPolygon_num_vertices_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMeshedPolygon *arg1 = (csMeshedPolygon *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csMeshedPolygon_num_vertices_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMeshedPolygon,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->num_vertices = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMeshedPolygon_num_vertices_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMeshedPolygon *arg1 = (csMeshedPolygon *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMeshedPolygon_num_vertices_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMeshedPolygon,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->num_vertices);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMeshedPolygon_vertices_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMeshedPolygon *arg1 = (csMeshedPolygon *) 0 ;
    int *arg2 = (int *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csMeshedPolygon_vertices_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMeshedPolygon,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->vertices = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csMeshedPolygon_vertices_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMeshedPolygon *arg1 = (csMeshedPolygon *) 0 ;
    int *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csMeshedPolygon_vertices_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMeshedPolygon,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int *) ((arg1)->vertices);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_int, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csMeshedPolygon(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMeshedPolygon *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csMeshedPolygon")) goto fail;
    result = (csMeshedPolygon *)new csMeshedPolygon();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMeshedPolygon, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csMeshedPolygon(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csMeshedPolygon *arg1 = (csMeshedPolygon *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csMeshedPolygon",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csMeshedPolygon,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csMeshedPolygon_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csMeshedPolygon, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iPolygonMesh_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iPolygonMesh_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iPolygonMesh_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iPolygonMesh_VERSION);
    return pyobj;
}


static PyObject *_wrap_iPolygonMesh_GetVertexCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonMesh *arg1 = (iPolygonMesh *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonMesh_GetVertexCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetVertexCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonMesh_GetVertices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonMesh *arg1 = (iPolygonMesh *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonMesh_GetVertices",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)(arg1)->GetVertices();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonMesh_GetPolygonCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonMesh *arg1 = (iPolygonMesh *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonMesh_GetPolygonCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetPolygonCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonMesh_GetPolygons(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonMesh *arg1 = (iPolygonMesh *) 0 ;
    csMeshedPolygon *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonMesh_GetPolygons",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csMeshedPolygon *)(arg1)->GetPolygons();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMeshedPolygon, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonMesh_Cleanup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonMesh *arg1 = (iPolygonMesh *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonMesh_Cleanup",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Cleanup();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonMesh_IsDeformable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonMesh *arg1 = (iPolygonMesh *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonMesh_IsDeformable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPolygonMesh const *)arg1)->IsDeformable();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonMesh_GetChangeNumber(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonMesh *arg1 = (iPolygonMesh *) 0 ;
    uint32 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonMesh_GetChangeNumber",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint32)((iPolygonMesh const *)arg1)->GetChangeNumber();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPolygonMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonMesh *arg1 = (iPolygonMesh *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPolygonMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iPolygonMesh(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPolygonMesh_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPolygonMesh, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csVertexStatus_Type_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVertexStatus *arg1 = (csVertexStatus *) 0 ;
    unsigned char arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVertexStatus_Type_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVertexStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Type = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVertexStatus_Type_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVertexStatus *arg1 = (csVertexStatus *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVertexStatus_Type_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVertexStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((arg1)->Type);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVertexStatus_Vertex_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVertexStatus *arg1 = (csVertexStatus *) 0 ;
    unsigned char arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csVertexStatus_Vertex_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVertexStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Vertex = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVertexStatus_Vertex_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVertexStatus *arg1 = (csVertexStatus *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVertexStatus_Vertex_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVertexStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((arg1)->Vertex);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVertexStatus_Pos_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVertexStatus *arg1 = (csVertexStatus *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVertexStatus_Pos_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVertexStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Pos = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVertexStatus_Pos_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVertexStatus *arg1 = (csVertexStatus *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVertexStatus_Pos_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVertexStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->Pos);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csVertexStatus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVertexStatus *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csVertexStatus")) goto fail;
    result = (csVertexStatus *)new csVertexStatus();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVertexStatus, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csVertexStatus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVertexStatus *arg1 = (csVertexStatus *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csVertexStatus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVertexStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csVertexStatus_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csVertexStatus, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iClipper2D_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iClipper2D_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iClipper2D_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iClipper2D_VERSION);
    return pyobj;
}


static PyObject *_wrap_iClipper2D_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iClipper2D_scfGetID")) goto fail;
    result = (scfInterfaceID)iClipper2D_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iClipper2D_Clip__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iClipper2D *arg1 = (iClipper2D *) 0 ;
    csVector2 *arg2 = (csVector2 *) 0 ;
    int arg3 ;
    csVector2 *arg4 = (csVector2 *) 0 ;
    int *arg5 = 0 ;
    uint8 result;
    csVector2 *ptr3 ;
    int cnt3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    {
        arg4 = (csVector2 *) new csVector2[MAX_OUTPUT_VERTICES];
        arg5 = &cnt3;
    }
    if(!PyArg_ParseTuple(args,(char *)"OO:iClipper2D_Clip",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iClipper2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,206,TYPEMAP_IN_ARRAY_BODY@*/
        if (PyList_Check(obj1))
        {
            PyErr_SetString(PyExc_TypeError, "not a list");
            return 0;
        }
        arg3 = PyList_Size(obj1);
        typedef csVector2 Array_Type;
        arg2 = new Array_Type[arg3];
        for (int i = 0; i < arg3; ++i)
        {
            csVector2 * p;
            PyObject * o = PyList_GetItem(obj1, i);
            if (SWIG_ConvertPtr(o, (void **) &p, SWIGTYPE_p__1_basetype,
            SWIG_POINTER_EXCEPTION))
            {
                PyErr_SetString(
                PyExc_TypeError, "list must contain ""csVector2" "'s"
                );
                delete [] arg2;
                return 0;
            }
            arg2[i] = * p;
        }
        /*@@*/
    }
    result = (uint8)(arg1)->Clip(arg2,arg3,arg4,*arg5);
    
    resultobj = PyInt_FromLong((long)result);
    {
        delete [] arg2;
    }
    {
        delete [] arg4;
    }
    return resultobj;
    fail:
    {
        delete [] arg2;
    }
    {
        delete [] arg4;
    }
    return NULL;
}


static PyObject *_wrap_iClipper2D_Clip__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iClipper2D *arg1 = (iClipper2D *) 0 ;
    csVector2 *arg2 = (csVector2 *) 0 ;
    int arg3 ;
    csVector2 *arg4 = (csVector2 *) 0 ;
    int *arg5 = 0 ;
    csBox2 *arg6 = 0 ;
    uint8 result;
    csVector2 *ptr3 ;
    int cnt3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    {
        arg4 = (csVector2 *) new csVector2[MAX_OUTPUT_VERTICES];
        arg5 = &cnt3;
    }
    if(!PyArg_ParseTuple(args,(char *)"OOO:iClipper2D_Clip",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iClipper2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,206,TYPEMAP_IN_ARRAY_BODY@*/
        if (PyList_Check(obj1))
        {
            PyErr_SetString(PyExc_TypeError, "not a list");
            return 0;
        }
        arg3 = PyList_Size(obj1);
        typedef csVector2 Array_Type;
        arg2 = new Array_Type[arg3];
        for (int i = 0; i < arg3; ++i)
        {
            csVector2 * p;
            PyObject * o = PyList_GetItem(obj1, i);
            if (SWIG_ConvertPtr(o, (void **) &p, SWIGTYPE_p__1_basetype,
            SWIG_POINTER_EXCEPTION))
            {
                PyErr_SetString(
                PyExc_TypeError, "list must contain ""csVector2" "'s"
                );
                delete [] arg2;
                return 0;
            }
            arg2[i] = * p;
        }
        /*@@*/
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg6, SWIGTYPE_p_csBox2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (uint8)(arg1)->Clip(arg2,arg3,arg4,*arg5,*arg6);
    
    resultobj = PyInt_FromLong((long)result);
    {
        delete [] arg2;
    }
    {
        delete [] arg4;
    }
    return resultobj;
    fail:
    {
        delete [] arg2;
    }
    {
        delete [] arg4;
    }
    return NULL;
}


static PyObject *_wrap_iClipper2D_Clip__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iClipper2D *arg1 = (iClipper2D *) 0 ;
    csVector2 *arg2 = (csVector2 *) 0 ;
    int arg3 ;
    csVector2 *arg4 = (csVector2 *) 0 ;
    int *arg5 = 0 ;
    csVertexStatus *arg6 = (csVertexStatus *) 0 ;
    uint8 result;
    csVector2 *ptr3 ;
    int cnt3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    {
        arg4 = (csVector2 *) new csVector2[MAX_OUTPUT_VERTICES];
        arg5 = &cnt3;
    }
    if(!PyArg_ParseTuple(args,(char *)"OOO:iClipper2D_Clip",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iClipper2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,206,TYPEMAP_IN_ARRAY_BODY@*/
        if (PyList_Check(obj1))
        {
            PyErr_SetString(PyExc_TypeError, "not a list");
            return 0;
        }
        arg3 = PyList_Size(obj1);
        typedef csVector2 Array_Type;
        arg2 = new Array_Type[arg3];
        for (int i = 0; i < arg3; ++i)
        {
            csVector2 * p;
            PyObject * o = PyList_GetItem(obj1, i);
            if (SWIG_ConvertPtr(o, (void **) &p, SWIGTYPE_p__1_basetype,
            SWIG_POINTER_EXCEPTION))
            {
                PyErr_SetString(
                PyExc_TypeError, "list must contain ""csVector2" "'s"
                );
                delete [] arg2;
                return 0;
            }
            arg2[i] = * p;
        }
        /*@@*/
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg6, SWIGTYPE_p_csVertexStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint8)(arg1)->Clip(arg2,arg3,arg4,*arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    {
        delete [] arg2;
    }
    {
        delete [] arg4;
    }
    return resultobj;
    fail:
    {
        delete [] arg2;
    }
    {
        delete [] arg4;
    }
    return NULL;
}


static PyObject *_wrap_iClipper2D_Clip(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iClipper2D, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iClipper2D_Clip__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iClipper2D, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csBox2, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iClipper2D_Clip__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iClipper2D, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVertexStatus, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iClipper2D_Clip__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iClipper2D_Clip'");
    return NULL;
}


static PyObject *_wrap_iClipper2D_ClipInPlace(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iClipper2D *arg1 = (iClipper2D *) 0 ;
    csVector2 *arg2 = (csVector2 *) 0 ;
    int *arg3 = 0 ;
    csBox2 *arg4 = 0 ;
    uint8 result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iClipper2D_ClipInPlace",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iClipper2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csBox2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (uint8)(arg1)->ClipInPlace(arg2,*arg3,*arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iClipper2D_ClassifyBox(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iClipper2D *arg1 = (iClipper2D *) 0 ;
    csBox2 *arg2 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iClipper2D_ClassifyBox",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iClipper2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csBox2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->ClassifyBox((csBox2 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iClipper2D_IsInside(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iClipper2D *arg1 = (iClipper2D *) 0 ;
    csVector2 *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iClipper2D_IsInside",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iClipper2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->IsInside((csVector2 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iClipper2D_GetVertexCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iClipper2D *arg1 = (iClipper2D *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iClipper2D_GetVertexCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iClipper2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetVertexCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iClipper2D_GetClipPoly(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iClipper2D *arg1 = (iClipper2D *) 0 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iClipper2D_GetClipPoly",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iClipper2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector2 *)(arg1)->GetClipPoly();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iClipper2D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iClipper2D *arg1 = (iClipper2D *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iClipper2D",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iClipper2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iClipper2D_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iClipper2D, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iObjectModelListener_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iObjectModelListener_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iObjectModelListener_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iObjectModelListener_VERSION);
    return pyobj;
}


static PyObject *_wrap_iObjectModelListener_ObjectModelChanged(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectModelListener *arg1 = (iObjectModelListener *) 0 ;
    iObjectModel *arg2 = (iObjectModel *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iObjectModelListener_ObjectModelChanged",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectModelListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObjectModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ObjectModelChanged(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iObjectModelListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectModelListener *arg1 = (iObjectModelListener *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iObjectModelListener",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectModelListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iObjectModelListener(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iObjectModelListener_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iObjectModelListener, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iObjectModel_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iObjectModel_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iObjectModel_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iObjectModel_VERSION);
    return pyobj;
}


static PyObject *_wrap_iObjectModel_GetShapeNumber(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectModel *arg1 = (iObjectModel *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObjectModel_GetShapeNumber",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (long)((iObjectModel const *)arg1)->GetShapeNumber();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectModel_GetPolygonMeshBase(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectModel *arg1 = (iObjectModel *) 0 ;
    iPolygonMesh *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObjectModel_GetPolygonMeshBase",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPolygonMesh *)(arg1)->GetPolygonMeshBase();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygonMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectModel_GetPolygonMeshColldet(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectModel *arg1 = (iObjectModel *) 0 ;
    iPolygonMesh *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObjectModel_GetPolygonMeshColldet",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPolygonMesh *)(arg1)->GetPolygonMeshColldet();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygonMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectModel_SetPolygonMeshColldet(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectModel *arg1 = (iObjectModel *) 0 ;
    iPolygonMesh *arg2 = (iPolygonMesh *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iObjectModel_SetPolygonMeshColldet",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPolygonMeshColldet(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectModel_GetPolygonMeshViscull(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectModel *arg1 = (iObjectModel *) 0 ;
    iPolygonMesh *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObjectModel_GetPolygonMeshViscull",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPolygonMesh *)(arg1)->GetPolygonMeshViscull();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygonMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectModel_SetPolygonMeshViscull(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectModel *arg1 = (iObjectModel *) 0 ;
    iPolygonMesh *arg2 = (iPolygonMesh *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iObjectModel_SetPolygonMeshViscull",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPolygonMeshViscull(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectModel_GetPolygonMeshShadows(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectModel *arg1 = (iObjectModel *) 0 ;
    iPolygonMesh *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObjectModel_GetPolygonMeshShadows",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPolygonMesh *)(arg1)->GetPolygonMeshShadows();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygonMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectModel_SetPolygonMeshShadows(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectModel *arg1 = (iObjectModel *) 0 ;
    iPolygonMesh *arg2 = (iPolygonMesh *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iObjectModel_SetPolygonMeshShadows",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPolygonMeshShadows(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectModel_CreateLowerDetailPolygonMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectModel *arg1 = (iObjectModel *) 0 ;
    float arg2 ;
    SwigValueWrapper< csPtr<iPolygonMesh > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iObjectModel_CreateLowerDetailPolygonMesh",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateLowerDetailPolygonMesh(arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iPolygonMesh> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iPolygonMesh *)ref), (void *)(iPolygonMesh *)ref, "iPolygonMesh" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectModel_GetObjectBoundingBox(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectModel *arg1 = (iObjectModel *) 0 ;
    csBox3 *arg2 = 0 ;
    int arg3 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|i:iObjectModel_GetObjectBoundingBox",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csBox3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetObjectBoundingBox(*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectModel_GetRadius(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectModel *arg1 = (iObjectModel *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iObjectModel_GetRadius",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetRadius(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectModel_AddListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectModel *arg1 = (iObjectModel *) 0 ;
    iObjectModelListener *arg2 = (iObjectModelListener *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iObjectModel_AddListener",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObjectModelListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddListener(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectModel_RemoveListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectModel *arg1 = (iObjectModel *) 0 ;
    iObjectModelListener *arg2 = (iObjectModelListener *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iObjectModel_RemoveListener",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObjectModelListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveListener(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iObjectModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectModel *arg1 = (iObjectModel *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iObjectModel",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iObjectModel(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iObjectModel_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iObjectModel, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iFrustumViewUserdata_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iFrustumViewUserdata_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iFrustumViewUserdata_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iFrustumViewUserdata_VERSION);
    return pyobj;
}


static PyObject *_wrap_delete_iFrustumViewUserdata(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFrustumViewUserdata *arg1 = (iFrustumViewUserdata *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iFrustumViewUserdata",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFrustumViewUserdata,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iFrustumViewUserdata(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iFrustumViewUserdata_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iFrustumViewUserdata, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csFrustumContext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFrustumContext *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csFrustumContext")) goto fail;
    result = (csFrustumContext *)new csFrustumContext();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csFrustumContext, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFrustumContext_assign(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFrustumContext *arg1 = (csFrustumContext *) 0 ;
    csFrustumContext *arg2 = 0 ;
    csFrustumContext *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csFrustumContext_assign",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFrustumContext,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csFrustumContext,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        csFrustumContext &_result_ref = (arg1)->operator =((csFrustumContext const &)*arg2);
        result = (csFrustumContext *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csFrustumContext, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFrustumContext_GetShadows(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFrustumContext *arg1 = (csFrustumContext *) 0 ;
    iShadowBlockList *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csFrustumContext_GetShadows",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFrustumContext,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iShadowBlockList *)(arg1)->GetShadows();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iShadowBlockList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFrustumContext_SetShadows(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFrustumContext *arg1 = (csFrustumContext *) 0 ;
    iShadowBlockList *arg2 = (iShadowBlockList *) 0 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:csFrustumContext_SetShadows",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFrustumContext,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iShadowBlockList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->SetShadows(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFrustumContext_SetNewShadows(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFrustumContext *arg1 = (csFrustumContext *) 0 ;
    SwigValueWrapper< csPtr<iShadowBlockList > > arg2 ;
    bool arg3 = (bool) false ;
    csPtr<iShadowBlockList > *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:csFrustumContext_SetNewShadows",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFrustumContext,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csPtrTiShadowBlockList_t,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->SetNewShadows(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFrustumContext_IsShared(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFrustumContext *arg1 = (csFrustumContext *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csFrustumContext_IsShared",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFrustumContext,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsShared();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFrustumContext_SetLightFrustum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFrustumContext *arg1 = (csFrustumContext *) 0 ;
    csFrustum *arg2 = (csFrustum *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csFrustumContext_SetLightFrustum",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFrustumContext,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csFrustum,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetLightFrustum(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFrustumContext_SetNewLightFrustum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFrustumContext *arg1 = (csFrustumContext *) 0 ;
    SwigValueWrapper< csPtr<csFrustum > > arg2 ;
    csPtr<csFrustum > *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csFrustumContext_SetNewLightFrustum",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFrustumContext,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csPtrTcsFrustum_t,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->SetNewLightFrustum(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFrustumContext_GetLightFrustum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFrustumContext *arg1 = (csFrustumContext *) 0 ;
    csFrustum *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csFrustumContext_GetLightFrustum",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFrustumContext,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csFrustum *)(arg1)->GetLightFrustum();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csFrustum, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFrustumContext_SetMirrored(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFrustumContext *arg1 = (csFrustumContext *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csFrustumContext_SetMirrored",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFrustumContext,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetMirrored(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFrustumContext_IsMirrored(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFrustumContext *arg1 = (csFrustumContext *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csFrustumContext_IsMirrored",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFrustumContext,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsMirrored();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csFrustumContext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFrustumContext *arg1 = (csFrustumContext *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csFrustumContext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFrustumContext,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csFrustumContext_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csFrustumContext, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iFrustumView_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iFrustumView_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iFrustumView_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iFrustumView_VERSION);
    return pyobj;
}


static PyObject *_wrap_iFrustumView_GetFrustumContext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFrustumView *arg1 = (iFrustumView *) 0 ;
    csFrustumContext *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFrustumView_GetFrustumContext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFrustumView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csFrustumContext *)((iFrustumView const *)arg1)->GetFrustumContext();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csFrustumContext, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFrustumView_CreateFrustumContext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFrustumView *arg1 = (iFrustumView *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFrustumView_CreateFrustumContext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFrustumView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CreateFrustumContext();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFrustumView_CopyFrustumContext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFrustumView *arg1 = (iFrustumView *) 0 ;
    csFrustumContext *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFrustumView_CopyFrustumContext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFrustumView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csFrustumContext *)(arg1)->CopyFrustumContext();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csFrustumContext, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFrustumView_SetFrustumContext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFrustumView *arg1 = (iFrustumView *) 0 ;
    csFrustumContext *arg2 = (csFrustumContext *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iFrustumView_SetFrustumContext",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFrustumView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csFrustumContext,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFrustumContext(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFrustumView_RestoreFrustumContext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFrustumView *arg1 = (iFrustumView *) 0 ;
    csFrustumContext *arg2 = (csFrustumContext *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iFrustumView_RestoreFrustumContext",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFrustumView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csFrustumContext,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RestoreFrustumContext(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFrustumView_SetObjectFunction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFrustumView *arg1 = (iFrustumView *) 0 ;
    csFrustumViewObjectFunc *arg2 = (csFrustumViewObjectFunc *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iFrustumView_SetObjectFunction",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFrustumView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csFrustumViewObjectFunc,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetObjectFunction(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFrustumView_CallObjectFunction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFrustumView *arg1 = (iFrustumView *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iFrustumView_CallObjectFunction",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFrustumView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->CallObjectFunction(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFrustumView_GetRadius(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFrustumView *arg1 = (iFrustumView *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFrustumView_GetRadius",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFrustumView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iFrustumView const *)arg1)->GetRadius();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFrustumView_GetSquaredRadius(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFrustumView *arg1 = (iFrustumView *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFrustumView_GetSquaredRadius",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFrustumView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iFrustumView const *)arg1)->GetSquaredRadius();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFrustumView_ThingShadowsEnabled(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFrustumView *arg1 = (iFrustumView *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFrustumView_ThingShadowsEnabled",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFrustumView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->ThingShadowsEnabled();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFrustumView_CheckShadowMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFrustumView *arg1 = (iFrustumView *) 0 ;
    unsigned int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iFrustumView_CheckShadowMask",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFrustumView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->CheckShadowMask(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFrustumView_CheckProcessMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFrustumView *arg1 = (iFrustumView *) 0 ;
    unsigned int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iFrustumView_CheckProcessMask",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFrustumView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->CheckProcessMask(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFrustumView_StartNewShadowBlock(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFrustumView *arg1 = (iFrustumView *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFrustumView_StartNewShadowBlock",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFrustumView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StartNewShadowBlock();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFrustumView_SetUserdata(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFrustumView *arg1 = (iFrustumView *) 0 ;
    iFrustumViewUserdata *arg2 = (iFrustumViewUserdata *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iFrustumView_SetUserdata",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFrustumView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iFrustumViewUserdata,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetUserdata(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFrustumView_GetUserdata(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFrustumView *arg1 = (iFrustumView *) 0 ;
    iFrustumViewUserdata *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFrustumView_GetUserdata",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFrustumView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iFrustumViewUserdata *)(arg1)->GetUserdata();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iFrustumViewUserdata, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFrustumView_CreateShadowBlock(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFrustumView *arg1 = (iFrustumView *) 0 ;
    SwigValueWrapper< csPtr<iShadowBlock > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFrustumView_CreateShadowBlock",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFrustumView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateShadowBlock();
    
    {
        csPtr<iShadowBlock > * resultptr;
        resultptr = new csPtr<iShadowBlock >((csPtr<iShadowBlock > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiShadowBlock_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iFrustumView(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFrustumView *arg1 = (iFrustumView *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iFrustumView",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFrustumView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iFrustumView(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iFrustumView_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iFrustumView, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iLightCallback_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iLightCallback_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iLightCallback_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iLightCallback_VERSION);
    return pyobj;
}


static PyObject *_wrap_iLightCallback_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iLightCallback_scfGetID")) goto fail;
    result = (scfInterfaceID)iLightCallback_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightCallback_OnColorChange(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightCallback *arg1 = (iLightCallback *) 0 ;
    iLight *arg2 = (iLight *) 0 ;
    csColor *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iLightCallback_OnColorChange",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->OnColorChange(arg2,(csColor const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightCallback_OnPositionChange(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightCallback *arg1 = (iLightCallback *) 0 ;
    iLight *arg2 = (iLight *) 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iLightCallback_OnPositionChange",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->OnPositionChange(arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightCallback_OnSectorChange(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightCallback *arg1 = (iLightCallback *) 0 ;
    iLight *arg2 = (iLight *) 0 ;
    iSector *arg3 = (iSector *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iLightCallback_OnSectorChange",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->OnSectorChange(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightCallback_OnRadiusChange(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightCallback *arg1 = (iLightCallback *) 0 ;
    iLight *arg2 = (iLight *) 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf:iLightCallback_OnRadiusChange",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->OnRadiusChange(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightCallback_OnDestroy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightCallback *arg1 = (iLightCallback *) 0 ;
    iLight *arg2 = (iLight *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iLightCallback_OnDestroy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->OnDestroy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iLightCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightCallback *arg1 = (iLightCallback *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iLightCallback",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iLightCallback_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iLightCallback, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iLight_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iLight_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iLight_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iLight_VERSION);
    return pyobj;
}


static PyObject *_wrap_iLight_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iLight_scfGetID")) goto fail;
    result = (scfInterfaceID)iLight_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_GetPrivateObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    csLight *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLight_GetPrivateObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csLight *)(arg1)->GetPrivateObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csLight, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_GetLightID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLight_GetLightID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetLightID();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_QueryObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLight_QueryObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)(arg1)->QueryObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_GetCenter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLight_GetCenter",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = (arg1)->GetCenter();
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_SetCenter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iLight_SetCenter",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetCenter((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_GetSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    iSector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLight_GetSector",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSector *)(arg1)->GetSector();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_SetSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iLight_SetSector",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSector(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_GetRadius(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLight_GetRadius",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetRadius();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_GetSquaredRadius(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLight_GetSquaredRadius",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetSquaredRadius();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_GetInverseRadius(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLight_GetInverseRadius",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetInverseRadius();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_SetRadius(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iLight_SetRadius",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetRadius(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_GetColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    csColor *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLight_GetColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csColor const &_result_ref = (arg1)->GetColor();
        result = (csColor *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_SetColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    csColor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iLight_SetColor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetColor((csColor const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_IsDynamic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLight_IsDynamic",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iLight const *)arg1)->IsDynamic();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_GetAttenuation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLight_GetAttenuation",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetAttenuation();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_SetAttenuation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iLight_SetAttenuation",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetAttenuation(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_CreateCrossHalo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    float arg2 ;
    float arg3 ;
    iCrossHalo *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Off:iLight_CreateCrossHalo",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCrossHalo *)(arg1)->CreateCrossHalo(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCrossHalo, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_CreateNovaHalo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    int arg2 ;
    int arg3 ;
    float arg4 ;
    iNovaHalo *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiif:iLight_CreateNovaHalo",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iNovaHalo *)(arg1)->CreateNovaHalo(arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iNovaHalo, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_CreateFlareHalo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    iFlareHalo *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLight_CreateFlareHalo",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iFlareHalo *)(arg1)->CreateFlareHalo();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iFlareHalo, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_GetBrightnessAtDistance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    float arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iLight_GetBrightnessAtDistance",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetBrightnessAtDistance(arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_GetFlags(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    csFlags *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLight_GetFlags",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csFlags &_result_ref = (arg1)->GetFlags();
        result = (csFlags *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csFlags, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_SetLightCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    iLightCallback *arg2 = (iLightCallback *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iLight_SetLightCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iLightCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetLightCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_RemoveLightCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    iLightCallback *arg2 = (iLightCallback *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iLight_RemoveLightCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iLightCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveLightCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_GetLightCallbackCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLight_GetLightCallbackCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iLight const *)arg1)->GetLightCallbackCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_GetLightCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    int arg2 ;
    iLightCallback *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iLight_GetLightCallback",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iLightCallback *)((iLight const *)arg1)->GetLightCallback(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iLightCallback, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLight_GetLightNumber(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    uint32 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLight_GetLightNumber",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint32)((iLight const *)arg1)->GetLightNumber();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iLight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLight *arg1 = (iLight *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iLight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iLight_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iLight, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iLightList_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iLightList_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iLightList_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iLightList_VERSION);
    return pyobj;
}


static PyObject *_wrap_iLightList_GetCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightList *arg1 = (iLightList *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightList_GetCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iLightList const *)arg1)->GetCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightList_Get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightList *arg1 = (iLightList *) 0 ;
    int arg2 ;
    iLight *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iLightList_Get",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iLight *)((iLightList const *)arg1)->Get(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iLight, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightList_Add(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightList *arg1 = (iLightList *) 0 ;
    iLight *arg2 = (iLight *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iLightList_Add",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Add(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightList_Remove__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightList *arg1 = (iLightList *) 0 ;
    iLight *arg2 = (iLight *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iLightList_Remove",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightList_Remove__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightList *arg1 = (iLightList *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iLightList_Remove",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightList_Remove(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iLightList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iLight, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iLightList_Remove__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iLightList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iLightList_Remove__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iLightList_Remove'");
    return NULL;
}


static PyObject *_wrap_iLightList_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightList *arg1 = (iLightList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightList_RemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightList_Find(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightList *arg1 = (iLightList *) 0 ;
    iLight *arg2 = (iLight *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iLightList_Find",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iLightList const *)arg1)->Find(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightList_FindByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightList *arg1 = (iLightList *) 0 ;
    char *arg2 ;
    iLight *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iLightList_FindByName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iLight *)((iLightList const *)arg1)->FindByName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iLight, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightList_FindByID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightList *arg1 = (iLightList *) 0 ;
    char *arg2 ;
    iLight *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iLightList_FindByID",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iLight *)((iLightList const *)arg1)->FindByID((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iLight, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iLightList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightList *arg1 = (iLightList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iLightList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iLightList(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iLightList_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iLightList, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iLightingProcessData_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iLightingProcessData_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iLightingProcessData_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iLightingProcessData_VERSION);
    return pyobj;
}


static PyObject *_wrap_iLightingProcessData_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iLightingProcessData_scfGetID")) goto fail;
    result = (scfInterfaceID)iLightingProcessData_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightingProcessData_FinalizeLighting(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightingProcessData *arg1 = (iLightingProcessData *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightingProcessData_FinalizeLighting",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightingProcessData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FinalizeLighting();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iLightingProcessData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightingProcessData *arg1 = (iLightingProcessData *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iLightingProcessData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightingProcessData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iLightingProcessData_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iLightingProcessData, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iLightingProcessInfo_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iLightingProcessInfo_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iLightingProcessInfo_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iLightingProcessInfo_VERSION);
    return pyobj;
}


static PyObject *_wrap_iLightingProcessInfo_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iLightingProcessInfo_scfGetID")) goto fail;
    result = (scfInterfaceID)iLightingProcessInfo_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightingProcessInfo_GetLight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightingProcessInfo *arg1 = (iLightingProcessInfo *) 0 ;
    iLight *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightingProcessInfo_GetLight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightingProcessInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iLight *)((iLightingProcessInfo const *)arg1)->GetLight();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iLight, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightingProcessInfo_IsDynamic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightingProcessInfo *arg1 = (iLightingProcessInfo *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightingProcessInfo_IsDynamic",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightingProcessInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iLightingProcessInfo const *)arg1)->IsDynamic();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightingProcessInfo_SetColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightingProcessInfo *arg1 = (iLightingProcessInfo *) 0 ;
    csColor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iLightingProcessInfo_SetColor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightingProcessInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetColor((csColor const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightingProcessInfo_GetColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightingProcessInfo *arg1 = (iLightingProcessInfo *) 0 ;
    csColor *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightingProcessInfo_GetColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightingProcessInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csColor const &_result_ref = ((iLightingProcessInfo const *)arg1)->GetColor();
        result = (csColor *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightingProcessInfo_AttachUserdata(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightingProcessInfo *arg1 = (iLightingProcessInfo *) 0 ;
    iLightingProcessData *arg2 = (iLightingProcessData *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iLightingProcessInfo_AttachUserdata",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightingProcessInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iLightingProcessData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AttachUserdata(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightingProcessInfo_QueryUserdata(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightingProcessInfo *arg1 = (iLightingProcessInfo *) 0 ;
    scfInterfaceID arg2 ;
    int arg3 ;
    SwigValueWrapper< csPtr<iLightingProcessData > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iLightingProcessInfo_QueryUserdata",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightingProcessInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (scfInterfaceID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (arg1)->QueryUserdata(arg2,arg3);
    
    {
        csPtr<iLightingProcessData > * resultptr;
        resultptr = new csPtr<iLightingProcessData >((csPtr<iLightingProcessData > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiLightingProcessData_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightingProcessInfo_FinalizeLighting(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightingProcessInfo *arg1 = (iLightingProcessInfo *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightingProcessInfo_FinalizeLighting",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightingProcessInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FinalizeLighting();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iLightingProcessInfo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightingProcessInfo *arg1 = (iLightingProcessInfo *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iLightingProcessInfo",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightingProcessInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iLightingProcessInfo_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iLightingProcessInfo, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iLightIterator_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iLightIterator_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iLightIterator_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iLightIterator_VERSION);
    return pyobj;
}


static PyObject *_wrap_iLightIterator_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iLightIterator_scfGetID")) goto fail;
    result = (scfInterfaceID)iLightIterator_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightIterator_HasNext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightIterator *arg1 = (iLightIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightIterator_HasNext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->HasNext();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightIterator_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightIterator *arg1 = (iLightIterator *) 0 ;
    iLight *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightIterator_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iLight *)(arg1)->Next();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iLight, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightIterator_GetLastSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightIterator *arg1 = (iLightIterator *) 0 ;
    iSector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightIterator_GetLastSector",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSector *)(arg1)->GetLastSector();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightIterator_Reset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightIterator *arg1 = (iLightIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightIterator_Reset",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Reset();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iLightIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightIterator *arg1 = (iLightIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iLightIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iLightIterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iLightIterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iStatLight_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iStatLight_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iStatLight_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iStatLight_VERSION);
    return pyobj;
}


static PyObject *_wrap_iStatLight_GetPrivateObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStatLight *arg1 = (iStatLight *) 0 ;
    csStatLight *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iStatLight_GetPrivateObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStatLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csStatLight *)(arg1)->GetPrivateObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csStatLight, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStatLight_QueryObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStatLight *arg1 = (iStatLight *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iStatLight_QueryObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStatLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)(arg1)->QueryObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStatLight_QueryLight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStatLight *arg1 = (iStatLight *) 0 ;
    iLight *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iStatLight_QueryLight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStatLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iLight *)(arg1)->QueryLight();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iLight, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStatLight_AddAffectedLightingInfo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStatLight *arg1 = (iStatLight *) 0 ;
    iLightingInfo *arg2 = (iLightingInfo *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iStatLight_AddAffectedLightingInfo",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStatLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iLightingInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddAffectedLightingInfo(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iStatLight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStatLight *arg1 = (iStatLight *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iStatLight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStatLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iStatLight(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iStatLight_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iStatLight, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSectorCallback_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSectorCallback_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSectorCallback_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSectorCallback_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSectorCallback_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iSectorCallback_scfGetID")) goto fail;
    result = (scfInterfaceID)iSectorCallback_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSectorCallback_Traverse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorCallback *arg1 = (iSectorCallback *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    iBase *arg3 = (iBase *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iSectorCallback_Traverse",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Traverse(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSectorCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorCallback *arg1 = (iSectorCallback *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSectorCallback",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSectorCallback_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSectorCallback, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSector_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSector_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSector_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSector_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSector_GetPrivateObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    csSector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSector_GetPrivateObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csSector *)(arg1)->GetPrivateObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_QueryObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSector_QueryObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)(arg1)->QueryObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_HasFog(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSector_HasFog",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iSector const *)arg1)->HasFog();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_GetFog(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    csFog *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSector_GetFog",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csFog *)((iSector const *)arg1)->GetFog();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csFog, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_SetFog(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    float arg2 ;
    csColor *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OfO:iSector_SetFog",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetFog(arg2,(csColor const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_DisableFog(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSector_DisableFog",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DisableFog();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_GetMeshes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    iMeshList *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSector_GetMeshes",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshList *)(arg1)->GetMeshes();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_GetLights(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    iLightList *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSector_GetLights",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iLightList *)(arg1)->GetLights();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iLightList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_ShineLights__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSector_ShineLights",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ShineLights();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_ShineLights__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSector_ShineLights",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ShineLights(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_ShineLights(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_iSector_ShineLights__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iMeshWrapper, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iSector_ShineLights__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iSector_ShineLights'");
    return NULL;
}


static PyObject *_wrap_iSector_SetDynamicAmbientLight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    csColor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSector_SetDynamicAmbientLight",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetDynamicAmbientLight((csColor const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_GetDynamicAmbientLight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    csColor result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSector_GetDynamicAmbientLight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iSector const *)arg1)->GetDynamicAmbientLight();
    
    {
        csColor * resultptr;
        resultptr = new csColor((csColor &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csColor, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_CalculateSectorBBox(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    csBox3 *arg2 = 0 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iSector_CalculateSectorBBox",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csBox3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    ((iSector const *)arg1)->CalculateSectorBBox(*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_SetVisibilityCullerPlugin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSector_SetVisibilityCullerPlugin",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetVisibilityCullerPlugin((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_GetVisibilityCuller(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    iVisibilityCuller *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSector_GetVisibilityCuller",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iVisibilityCuller *)(arg1)->GetVisibilityCuller();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iVisibilityCuller, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_GetRecLevel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSector_GetRecLevel",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSector const *)arg1)->GetRecLevel();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_HitBeam__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    iPolygon3D *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iSector_HitBeam",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (iPolygon3D *)(arg1)->HitBeam((csVector3 const &)*arg2,(csVector3 const &)*arg3,*arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygon3D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_HitBeam__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    iPolygon3D **arg5 = (iPolygon3D **) 0 ;
    bool arg6 = (bool) false ;
    iMeshWrapper *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO|O:iSector_HitBeam",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_p_iPolygon3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj5) {
        arg6 = PyInt_AsLong(obj5) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (iMeshWrapper *)(arg1)->HitBeam((csVector3 const &)*arg2,(csVector3 const &)*arg3,*arg4,arg5,arg6);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_HitBeam(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[7];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 6); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_iSector_HitBeam__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 5) && (argc <= 6)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_p_iPolygon3D, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_iSector_HitBeam__SWIG_1(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_iSector_HitBeam__SWIG_1(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iSector_HitBeam'");
    return NULL;
}


static PyObject *_wrap_iSector_FollowSegment(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    csReversibleTransform *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    bool *arg4 = 0 ;
    bool arg5 = (bool) false ;
    iSector *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO|O:iSector_FollowSegment",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_bool,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj4) {
        arg5 = PyInt_AsLong(obj4) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (iSector *)(arg1)->FollowSegment(*arg2,*arg3,*arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_Draw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    iRenderView *arg2 = (iRenderView *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSector_Draw",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRenderView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Draw(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_SetSectorCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    iSectorCallback *arg2 = (iSectorCallback *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSector_SetSectorCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSectorCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSectorCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_RemoveSectorCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    iSectorCallback *arg2 = (iSectorCallback *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSector_RemoveSectorCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSectorCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveSectorCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_GetSectorCallbackCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSector_GetSectorCallbackCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSector const *)arg1)->GetSectorCallbackCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_GetSectorCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    int arg2 ;
    iSectorCallback *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSector_GetSectorCallback",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSectorCallback *)((iSector const *)arg1)->GetSectorCallback(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSectorCallback, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSector_CheckFrustum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    iFrustumView *arg2 = (iFrustumView *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSector_CheckFrustum",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iFrustumView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CheckFrustum(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 = (iSector *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSector",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iSector(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSector_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSector, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSectorList_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSectorList_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSectorList_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSectorList_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSectorList_GetCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorList *arg1 = (iSectorList *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSectorList_GetCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSectorList const *)arg1)->GetCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSectorList_Get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorList *arg1 = (iSectorList *) 0 ;
    int arg2 ;
    iSector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSectorList_Get",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSector *)((iSectorList const *)arg1)->Get(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSectorList_Add(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorList *arg1 = (iSectorList *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSectorList_Add",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Add(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSectorList_Remove__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorList *arg1 = (iSectorList *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSectorList_Remove",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSectorList_Remove__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorList *arg1 = (iSectorList *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSectorList_Remove",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSectorList_Remove(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSectorList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iSectorList_Remove__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSectorList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iSectorList_Remove__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iSectorList_Remove'");
    return NULL;
}


static PyObject *_wrap_iSectorList_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorList *arg1 = (iSectorList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSectorList_RemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSectorList_Find(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorList *arg1 = (iSectorList *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSectorList_Find",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSectorList const *)arg1)->Find(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSectorList_FindByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorList *arg1 = (iSectorList *) 0 ;
    char *arg2 ;
    iSector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSectorList_FindByName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSector *)((iSectorList const *)arg1)->FindByName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSectorList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorList *arg1 = (iSectorList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSectorList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iSectorList(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSectorList_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSectorList, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSectorIterator_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSectorIterator_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSectorIterator_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSectorIterator_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSectorIterator_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iSectorIterator_scfGetID")) goto fail;
    result = (scfInterfaceID)iSectorIterator_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSectorIterator_HasNext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorIterator *arg1 = (iSectorIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSectorIterator_HasNext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->HasNext();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSectorIterator_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorIterator *arg1 = (iSectorIterator *) 0 ;
    iSector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSectorIterator_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSector *)(arg1)->Next();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSectorIterator_GetLastPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorIterator *arg1 = (iSectorIterator *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSectorIterator_GetLastPosition",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = (arg1)->GetLastPosition();
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSectorIterator_Reset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorIterator *arg1 = (iSectorIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSectorIterator_Reset",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Reset();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSectorIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorIterator *arg1 = (iSectorIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSectorIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSectorIterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSectorIterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iEngine_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iEngine_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iEngine_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iEngine_VERSION);
    return pyobj;
}


static PyObject *_wrap_iEngine_QueryObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_QueryObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)(arg1)->QueryObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_Prepare(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iProgressMeter *arg2 = (iProgressMeter *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:iEngine_Prepare",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iProgressMeter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (bool)(arg1)->Prepare(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_ForceRelight__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iRegion *arg2 = (iRegion *) 0 ;
    iProgressMeter *arg3 = (iProgressMeter *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|OO:iEngine_ForceRelight",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iProgressMeter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    (arg1)->ForceRelight(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_ForceRelight__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iStatLight *arg2 = (iStatLight *) 0 ;
    iRegion *arg3 = (iRegion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:iEngine_ForceRelight",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iStatLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    (arg1)->ForceRelight(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_ForceRelight(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 1) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_iEngine_ForceRelight__SWIG_0(self,args);
            }
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iRegion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_iEngine_ForceRelight__SWIG_0(self,args);
                }
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iProgressMeter, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iEngine_ForceRelight__SWIG_0(self,args);
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iStatLight, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_iEngine_ForceRelight__SWIG_1(self,args);
                }
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iRegion, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iEngine_ForceRelight__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iEngine_ForceRelight'");
    return NULL;
}


static PyObject *_wrap_iEngine_RemoveLight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iStatLight *arg2 = (iStatLight *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEngine_RemoveLight",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iStatLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveLight(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_PrepareTextures(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_PrepareTextures",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PrepareTextures();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_PrepareMeshes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_PrepareMeshes",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PrepareMeshes();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_ShineLights(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iRegion *arg2 = (iRegion *) 0 ;
    iProgressMeter *arg3 = (iProgressMeter *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|OO:iEngine_ShineLights",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iProgressMeter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    (arg1)->ShineLights(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetTextureFormat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetTextureFormat",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iEngine const *)arg1)->GetTextureFormat();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_DeleteAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_DeleteAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DeleteAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_RegisterRenderPriority(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    long arg3 ;
    int arg4 = (int) 0 ;
    bool arg5 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osl|iO:iEngine_RegisterRenderPriority",&obj0,&arg2,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj4) {
        arg5 = PyInt_AsLong(obj4) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->RegisterRenderPriority((char const *)arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetRenderPriority(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iEngine_GetRenderPriority",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (long)((iEngine const *)arg1)->GetRenderPriority((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_SetRenderPriorityCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    long arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OlO:iEngine_SetRenderPriorityCamera",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetRenderPriorityCamera(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetRenderPriorityCamera__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iEngine_GetRenderPriorityCamera",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iEngine const *)arg1)->GetRenderPriorityCamera((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetRenderPriorityCamera__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    long arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ol:iEngine_GetRenderPriorityCamera",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iEngine const *)arg1)->GetRenderPriorityCamera(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetRenderPriorityCamera(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iEngine_GetRenderPriorityCamera__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iEngine_GetRenderPriorityCamera__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iEngine_GetRenderPriorityCamera'");
    return NULL;
}


static PyObject *_wrap_iEngine_GetRenderPrioritySorting__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iEngine_GetRenderPrioritySorting",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iEngine const *)arg1)->GetRenderPrioritySorting((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetRenderPrioritySorting__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    long arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ol:iEngine_GetRenderPrioritySorting",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iEngine const *)arg1)->GetRenderPrioritySorting(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetRenderPrioritySorting(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iEngine_GetRenderPrioritySorting__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iEngine_GetRenderPrioritySorting__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iEngine_GetRenderPrioritySorting'");
    return NULL;
}


static PyObject *_wrap_iEngine_GetSkyRenderPriority(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetSkyRenderPriority",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (long)((iEngine const *)arg1)->GetSkyRenderPriority();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetWallRenderPriority(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetWallRenderPriority",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (long)((iEngine const *)arg1)->GetWallRenderPriority();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetObjectRenderPriority(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetObjectRenderPriority",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (long)((iEngine const *)arg1)->GetObjectRenderPriority();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetAlphaRenderPriority(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetAlphaRenderPriority",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (long)((iEngine const *)arg1)->GetAlphaRenderPriority();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_ClearRenderPriorities(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_ClearRenderPriorities",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearRenderPriorities();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetRenderPriorityCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetRenderPriorityCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iEngine const *)arg1)->GetRenderPriorityCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetRenderPriorityName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    long arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ol:iEngine_GetRenderPriorityName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iEngine const *)arg1)->GetRenderPriorityName(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateBaseMaterial__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iTextureWrapper *arg2 = (iTextureWrapper *) 0 ;
    SwigValueWrapper< csPtr<iMaterial > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEngine_CreateBaseMaterial",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateBaseMaterial(arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iMaterial> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iMaterial *)ref), (void *)(iMaterial *)ref, "iMaterial" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateBaseMaterial__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iTextureWrapper *arg2 = (iTextureWrapper *) 0 ;
    int arg3 ;
    iTextureWrapper **arg4 = (iTextureWrapper **) 0 ;
    csTextureLayer *arg5 = (csTextureLayer *) 0 ;
    SwigValueWrapper< csPtr<iMaterial > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iEngine_CreateBaseMaterial",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,206,TYPEMAP_IN_ARRAY_BODY@*/
        if (PyList_Check(obj2))
        {
            PyErr_SetString(PyExc_TypeError, "not a list");
            return 0;
        }
        arg3 = PyList_Size(obj2);
        typedef iTextureWrapper * Array_Type;
        arg4 = new Array_Type[arg3];
        for (int i = 0; i < arg3; ++i)
        {
            iTextureWrapper * p;
            PyObject * o = PyList_GetItem(obj2, i);
            if (SWIG_ConvertPtr(o, (void **) &p, SWIGTYPE_p__2_basetype,
            SWIG_POINTER_EXCEPTION))
            {
                PyErr_SetString(
                PyExc_TypeError, "list must contain ""iTextureWrapper" "'s"
                );
                delete [] arg4;
                return 0;
            }
            arg4[i] = /**/ p;
        }
        /*@@*/
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg5, SWIGTYPE_p_csTextureLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateBaseMaterial(arg2,arg3,arg4,arg5);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iMaterial> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iMaterial *)ref), (void *)(iMaterial *)ref, "iMaterial" " *");
        /*@@*/
    }
    {
        delete [] arg4;
    }
    return resultobj;
    fail:
    {
        delete [] arg4;
    }
    return NULL;
}


static PyObject *_wrap_iEngine_CreateBaseMaterial(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iTextureWrapper, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iEngine_CreateBaseMaterial__SWIG_0(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iTextureWrapper, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csTextureLayer, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_iEngine_CreateBaseMaterial__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iEngine_CreateBaseMaterial'");
    return NULL;
}


static PyObject *_wrap_iEngine_CreateTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    char *arg3 ;
    csColor *arg4 = (csColor *) 0 ;
    int arg5 ;
    iTextureWrapper *result;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OssOi:iEngine_CreateTexture",&obj0,&arg2,&arg3,&obj3,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iTextureWrapper *)(arg1)->CreateTexture((char const *)arg2,(char const *)arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateBlackTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    int arg3 ;
    int arg4 ;
    csColor *arg5 = (csColor *) 0 ;
    int arg6 ;
    iTextureWrapper *result;
    PyObject * obj0 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsiiOi:iEngine_CreateBlackTexture",&obj0,&arg2,&arg3,&arg4,&obj4,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iTextureWrapper *)(arg1)->CreateBlackTexture((char const *)arg2,arg3,arg4,arg5,arg6);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateMaterial(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    iTextureWrapper *arg3 = (iTextureWrapper *) 0 ;
    iMaterialWrapper *result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iEngine_CreateMaterial",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialWrapper *)(arg1)->CreateMaterial((char const *)arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    iSector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iEngine_CreateSector",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSector *)(arg1)->CreateSector((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateSectorWallsMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    char *arg3 ;
    SwigValueWrapper< csPtr<iMeshWrapper > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iEngine_CreateSectorWallsMesh",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateSectorWallsMesh(arg2,(char const *)arg3);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iMeshWrapper> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iMeshWrapper *)ref), (void *)(iMeshWrapper *)ref, "iMeshWrapper" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateThingMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    char *arg3 ;
    SwigValueWrapper< csPtr<iMeshWrapper > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iEngine_CreateThingMesh",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateThingMesh(arg2,(char const *)arg3);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iMeshWrapper> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iMeshWrapper *)ref), (void *)(iMeshWrapper *)ref, "iMeshWrapper" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetSectors(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iSectorList *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetSectors",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSectorList *)(arg1)->GetSectors();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSectorList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetMeshFactories(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iMeshFactoryList *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetMeshFactories",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshFactoryList *)(arg1)->GetMeshFactories();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshFactoryList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetMeshes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iMeshList *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetMeshes",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshList *)(arg1)->GetMeshes();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetCollections(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iCollectionList *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetCollections",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCollectionList *)(arg1)->GetCollections();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCollectionList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetCameraPositions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iCameraPositionList *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetCameraPositions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCameraPositionList *)(arg1)->GetCameraPositions();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCameraPositionList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetTextureList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iTextureList *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetTextureList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iTextureList *)((iEngine const *)arg1)->GetTextureList();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetMaterialList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iMaterialList *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetMaterialList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialList *)((iEngine const *)arg1)->GetMaterialList();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetVariableList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iSharedVariableList *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetVariableList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSharedVariableList *)((iEngine const *)arg1)->GetVariableList();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSharedVariableList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    iRegion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iEngine_CreateRegion",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iRegion *)(arg1)->CreateRegion((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iRegion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetRegions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iRegionList *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetRegions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iRegionList *)(arg1)->GetRegions();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iRegionList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_FindMaterial(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    iRegion *arg3 = (iRegion *) 0 ;
    iMaterialWrapper *result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iEngine_FindMaterial",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (iMaterialWrapper *)(arg1)->FindMaterial((char const *)arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_FindTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    iRegion *arg3 = (iRegion *) 0 ;
    iTextureWrapper *result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iEngine_FindTexture",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (iTextureWrapper *)(arg1)->FindTexture((char const *)arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_FindSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    iRegion *arg3 = (iRegion *) 0 ;
    iSector *result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iEngine_FindSector",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (iSector *)(arg1)->FindSector((char const *)arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_FindMeshObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    iRegion *arg3 = (iRegion *) 0 ;
    iMeshWrapper *result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iEngine_FindMeshObject",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (iMeshWrapper *)(arg1)->FindMeshObject((char const *)arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_FindMeshFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    iRegion *arg3 = (iRegion *) 0 ;
    iMeshFactoryWrapper *result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iEngine_FindMeshFactory",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (iMeshFactoryWrapper *)(arg1)->FindMeshFactory((char const *)arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshFactoryWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_FindCameraPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    iRegion *arg3 = (iRegion *) 0 ;
    iCameraPosition *result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iEngine_FindCameraPosition",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (iCameraPosition *)(arg1)->FindCameraPosition((char const *)arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCameraPosition, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_FindCollection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    iRegion *arg3 = (iRegion *) 0 ;
    iCollection *result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iEngine_FindCollection",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (iCollection *)(arg1)->FindCollection((char const *)arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCollection, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_SetLightingCacheMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iEngine_SetLightingCacheMode",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetLightingCacheMode(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetLightingCacheMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetLightingCacheMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetLightingCacheMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_SetFastMeshThresshold(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iEngine_SetFastMeshThresshold",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFastMeshThresshold(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetFastMeshThresshold(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetFastMeshThresshold",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iEngine const *)arg1)->GetFastMeshThresshold();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_SetClearZBuf(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEngine_SetClearZBuf",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetClearZBuf(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetClearZBuf(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetClearZBuf",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iEngine const *)arg1)->GetClearZBuf();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetDefaultClearZBuf(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetDefaultClearZBuf",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iEngine const *)arg1)->GetDefaultClearZBuf();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_SetClearScreen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEngine_SetClearScreen",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetClearScreen(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetClearScreen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetClearScreen",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iEngine const *)arg1)->GetClearScreen();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetDefaultClearScreen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetDefaultClearScreen",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iEngine const *)arg1)->GetDefaultClearScreen();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_SetMaxLightmapSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iEngine_SetMaxLightmapSize",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMaxLightmapSize(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetMaxLightmapSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetMaxLightmapSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetMaxLightmapSize(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetDefaultMaxLightmapSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetDefaultMaxLightmapSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetDefaultMaxLightmapSize(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetLightmapsRequirePO2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetLightmapsRequirePO2",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iEngine const *)arg1)->GetLightmapsRequirePO2();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetMaxLightmapAspectRatio(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetMaxLightmapAspectRatio",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iEngine const *)arg1)->GetMaxLightmapAspectRatio();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_ResetWorldSpecificSettings(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_ResetWorldSpecificSettings",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ResetWorldSpecificSettings();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    SwigValueWrapper< csPtr<iCamera > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_CreateCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateCamera();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iCamera> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iCamera *)ref), (void *)(iCamera *)ref, "iCamera" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateLight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    csVector3 *arg3 = 0 ;
    float arg4 ;
    csColor *arg5 = 0 ;
    bool arg6 ;
    SwigValueWrapper< csPtr<iStatLight > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOfOO:iEngine_CreateLight",&obj0,&arg2,&obj2,&arg4,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg6 = PyInt_AsLong(obj5) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    result = (arg1)->CreateLight((char const *)arg2,(csVector3 const &)*arg3,arg4,(csColor const &)*arg5,arg6);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iStatLight> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iStatLight *)ref), (void *)(iStatLight *)ref, "iStatLight" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_FindLight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    bool arg3 = (bool) false ;
    iStatLight *result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iEngine_FindLight",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (iStatLight *)((iEngine const *)arg1)->FindLight((char const *)arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iStatLight, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_FindLightID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    iStatLight *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iEngine_FindLightID",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iStatLight *)((iEngine const *)arg1)->FindLightID((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iStatLight, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetLightIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iRegion *arg2 = (iRegion *) 0 ;
    SwigValueWrapper< csPtr<iLightIterator > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:iEngine_GetLightIterator",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (arg1)->GetLightIterator(arg2);
    
    {
        csPtr<iLightIterator > * resultptr;
        resultptr = new csPtr<iLightIterator >((csPtr<iLightIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiLightIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateDynLight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    csVector3 *arg2 = 0 ;
    float arg3 ;
    csColor *arg4 = 0 ;
    SwigValueWrapper< csPtr<iDynLight > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOfO:iEngine_CreateDynLight",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (arg1)->CreateDynLight((csVector3 const &)*arg2,arg3,(csColor const &)*arg4);
    
    {
        csPtr<iDynLight > * resultptr;
        resultptr = new csPtr<iDynLight >((csPtr<iDynLight > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiDynLight_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_RemoveDynLight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iDynLight *arg2 = (iDynLight *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEngine_RemoveDynLight",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iDynLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveDynLight(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetFirstDynLight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iDynLight *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetFirstDynLight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iDynLight *)((iEngine const *)arg1)->GetFirstDynLight();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iDynLight, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetBeginDrawFlags(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetBeginDrawFlags",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iEngine const *)arg1)->GetBeginDrawFlags();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetTopLevelClipper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iClipper2D *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetTopLevelClipper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iClipper2D *)((iEngine const *)arg1)->GetTopLevelClipper();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iClipper2D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateMeshFactory__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    char *arg3 ;
    SwigValueWrapper< csPtr<iMeshFactoryWrapper > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iEngine_CreateMeshFactory",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateMeshFactory((char const *)arg2,(char const *)arg3);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iMeshFactoryWrapper> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iMeshFactoryWrapper *)ref), (void *)(iMeshFactoryWrapper *)ref, "iMeshFactoryWrapper" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateMeshFactory__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iMeshObjectFactory *arg2 = (iMeshObjectFactory *) 0 ;
    char *arg3 ;
    SwigValueWrapper< csPtr<iMeshFactoryWrapper > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iEngine_CreateMeshFactory",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshObjectFactory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateMeshFactory(arg2,(char const *)arg3);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iMeshFactoryWrapper> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iMeshFactoryWrapper *)ref), (void *)(iMeshFactoryWrapper *)ref, "iMeshFactoryWrapper" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateMeshFactory__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    SwigValueWrapper< csPtr<iMeshFactoryWrapper > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iEngine_CreateMeshFactory",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateMeshFactory((char const *)arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iMeshFactoryWrapper> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iMeshFactoryWrapper *)ref), (void *)(iMeshFactoryWrapper *)ref, "iMeshFactoryWrapper" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateMeshFactory(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iEngine_CreateMeshFactory__SWIG_2(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iMeshObjectFactory, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iEngine_CreateMeshFactory__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iEngine_CreateMeshFactory__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iEngine_CreateMeshFactory'");
    return NULL;
}


static PyObject *_wrap_iEngine_CreateLoaderContext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iRegion *arg2 = (iRegion *) 0 ;
    bool arg3 = (bool) true ;
    SwigValueWrapper< csPtr<iLoaderContext > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|OO:iEngine_CreateLoaderContext",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (arg1)->CreateLoaderContext(arg2,arg3);
    
    {
        csPtr<iLoaderContext > * resultptr;
        resultptr = new csPtr<iLoaderContext >((csPtr<iLoaderContext > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiLoaderContext_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_LoadMeshFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    char *arg3 ;
    iDataBuffer *arg4 = (iDataBuffer *) 0 ;
    SwigValueWrapper< csPtr<iMeshFactoryWrapper > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OssO:iEngine_LoadMeshFactory",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iDataBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->LoadMeshFactory((char const *)arg2,(char const *)arg3,arg4);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iMeshFactoryWrapper> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iMeshFactoryWrapper *)ref), (void *)(iMeshFactoryWrapper *)ref, "iMeshFactoryWrapper" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateMeshWrapper__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iMeshFactoryWrapper *arg2 = (iMeshFactoryWrapper *) 0 ;
    char *arg3 ;
    iSector *arg4 = (iSector *) 0 ;
    csVector3 const &arg5_defvalue = csVector3(0, 0, 0) ;
    csVector3 *arg5 = (csVector3 *) &arg5_defvalue ;
    SwigValueWrapper< csPtr<iMeshWrapper > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs|OO:iEngine_CreateMeshWrapper",&obj0,&obj1,&arg3,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshFactoryWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj4) {
        if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
        if (arg5 == NULL) {
            PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
        }
    }
    result = (arg1)->CreateMeshWrapper(arg2,(char const *)arg3,arg4,(csVector3 const &)*arg5);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iMeshWrapper> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iMeshWrapper *)ref), (void *)(iMeshWrapper *)ref, "iMeshWrapper" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateMeshWrapper__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iMeshObject *arg2 = (iMeshObject *) 0 ;
    char *arg3 ;
    iSector *arg4 = (iSector *) 0 ;
    csVector3 const &arg5_defvalue = csVector3(0, 0, 0) ;
    csVector3 *arg5 = (csVector3 *) &arg5_defvalue ;
    SwigValueWrapper< csPtr<iMeshWrapper > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs|OO:iEngine_CreateMeshWrapper",&obj0,&obj1,&arg3,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj4) {
        if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
        if (arg5 == NULL) {
            PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
        }
    }
    result = (arg1)->CreateMeshWrapper(arg2,(char const *)arg3,arg4,(csVector3 const &)*arg5);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iMeshWrapper> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iMeshWrapper *)ref), (void *)(iMeshWrapper *)ref, "iMeshWrapper" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateMeshWrapper__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    char *arg3 ;
    iSector *arg4 = (iSector *) 0 ;
    csVector3 const &arg5_defvalue = csVector3(0, 0, 0) ;
    csVector3 *arg5 = (csVector3 *) &arg5_defvalue ;
    SwigValueWrapper< csPtr<iMeshWrapper > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss|OO:iEngine_CreateMeshWrapper",&obj0,&arg2,&arg3,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj4) {
        if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
        if (arg5 == NULL) {
            PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
        }
    }
    result = (arg1)->CreateMeshWrapper((char const *)arg2,(char const *)arg3,arg4,(csVector3 const &)*arg5);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iMeshWrapper> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iMeshWrapper *)ref), (void *)(iMeshWrapper *)ref, "iMeshWrapper" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateMeshWrapper__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    SwigValueWrapper< csPtr<iMeshWrapper > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iEngine_CreateMeshWrapper",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateMeshWrapper((char const *)arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iMeshWrapper> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iMeshWrapper *)ref), (void *)(iMeshWrapper *)ref, "iMeshWrapper" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateMeshWrapper(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iEngine_CreateMeshWrapper__SWIG_3(self,args);
            }
        }
    }
    if ((argc >= 3) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iMeshObject, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_iEngine_CreateMeshWrapper__SWIG_1(self,args);
                    }
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_iEngine_CreateMeshWrapper__SWIG_1(self,args);
                        }
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_iEngine_CreateMeshWrapper__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iMeshFactoryWrapper, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_iEngine_CreateMeshWrapper__SWIG_0(self,args);
                    }
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_iEngine_CreateMeshWrapper__SWIG_0(self,args);
                        }
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_iEngine_CreateMeshWrapper__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_iEngine_CreateMeshWrapper__SWIG_2(self,args);
                    }
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_iEngine_CreateMeshWrapper__SWIG_2(self,args);
                        }
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_iEngine_CreateMeshWrapper__SWIG_2(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iEngine_CreateMeshWrapper'");
    return NULL;
}


static PyObject *_wrap_iEngine_LoadMeshWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    char *arg2 ;
    char *arg3 ;
    iDataBuffer *arg4 = (iDataBuffer *) 0 ;
    iSector *arg5 = (iSector *) 0 ;
    csVector3 *arg6 = 0 ;
    SwigValueWrapper< csPtr<iMeshWrapper > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OssOOO:iEngine_LoadMeshWrapper",&obj0,&arg2,&arg3,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iDataBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (arg1)->LoadMeshWrapper((char const *)arg2,(char const *)arg3,arg4,arg5,(csVector3 const &)*arg6);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iMeshWrapper> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iMeshWrapper *)ref), (void *)(iMeshWrapper *)ref, "iMeshWrapper" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_Draw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iCamera *arg2 = (iCamera *) 0 ;
    iClipper2D *arg3 = (iClipper2D *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iEngine_Draw",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iClipper2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Draw(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_SetContext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iTextureHandle *arg2 = (iTextureHandle *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEngine_SetContext",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetContext(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetContext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iTextureHandle *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetContext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iTextureHandle *)((iEngine const *)arg1)->GetContext();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureHandle, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_SetAmbientLight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    csColor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEngine_SetAmbientLight",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetAmbientLight((csColor const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetAmbientLight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    csColor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEngine_GetAmbientLight",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((iEngine const *)arg1)->GetAmbientLight(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetNearbyLights__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 *arg3 = 0 ;
    uint32 arg4 ;
    iLight **arg5 = (iLight **) 0 ;
    int arg6 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOi:iEngine_GetNearbyLights",&obj0,&obj1,&obj2,&obj3,&obj4,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg4 = (uint32) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNearbyLights(arg2,(csVector3 const &)*arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetNearbyLights__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csBox3 *arg3 = 0 ;
    uint32 arg4 ;
    iLight **arg5 = (iLight **) 0 ;
    int arg6 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOi:iEngine_GetNearbyLights",&obj0,&obj1,&obj2,&obj3,&obj4,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csBox3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg4 = (uint32) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNearbyLights(arg2,(csBox3 const &)*arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetNearbyLights(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[7];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 6); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_p_iLight, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_iEngine_GetNearbyLights__SWIG_0(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csBox3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_p_iLight, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_iEngine_GetNearbyLights__SWIG_1(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iEngine_GetNearbyLights'");
    return NULL;
}


static PyObject *_wrap_iEngine_GetNearbySectors(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 *arg3 = 0 ;
    float arg4 ;
    SwigValueWrapper< csPtr<iSectorIterator > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOf:iEngine_GetNearbySectors",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (arg1)->GetNearbySectors(arg2,(csVector3 const &)*arg3,arg4);
    
    {
        csPtr<iSectorIterator > * resultptr;
        resultptr = new csPtr<iSectorIterator >((csPtr<iSectorIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiSectorIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetNearbyObjects(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 *arg3 = 0 ;
    float arg4 ;
    bool arg5 = (bool) true ;
    SwigValueWrapper< csPtr<iObjectIterator > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOf|O:iEngine_GetNearbyObjects",&obj0,&obj1,&obj2,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj4) {
        arg5 = PyInt_AsLong(obj4) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (arg1)->GetNearbyObjects(arg2,(csVector3 const &)*arg3,arg4,arg5);
    
    {
        csPtr<iObjectIterator > * resultptr;
        resultptr = new csPtr<iObjectIterator >((csPtr<iObjectIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiObjectIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetNearbyMeshes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 *arg3 = 0 ;
    float arg4 ;
    bool arg5 = (bool) true ;
    SwigValueWrapper< csPtr<iMeshWrapperIterator > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOf|O:iEngine_GetNearbyMeshes",&obj0,&obj1,&obj2,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj4) {
        arg5 = PyInt_AsLong(obj4) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (arg1)->GetNearbyMeshes(arg2,(csVector3 const &)*arg3,arg4,arg5);
    
    {
        csPtr<iMeshWrapperIterator > * resultptr;
        resultptr = new csPtr<iMeshWrapperIterator >((csPtr<iMeshWrapperIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiMeshWrapperIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetVisibleObjects__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 *arg3 = 0 ;
    SwigValueWrapper< csPtr<iObjectIterator > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iEngine_GetVisibleObjects",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (arg1)->GetVisibleObjects(arg2,(csVector3 const &)*arg3);
    
    {
        csPtr<iObjectIterator > * resultptr;
        resultptr = new csPtr<iObjectIterator >((csPtr<iObjectIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiObjectIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetVisibleMeshes__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 *arg3 = 0 ;
    SwigValueWrapper< csPtr<iMeshWrapperIterator > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iEngine_GetVisibleMeshes",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (arg1)->GetVisibleMeshes(arg2,(csVector3 const &)*arg3);
    
    {
        csPtr<iMeshWrapperIterator > * resultptr;
        resultptr = new csPtr<iMeshWrapperIterator >((csPtr<iMeshWrapperIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiMeshWrapperIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetVisibleObjects__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csFrustum *arg3 = 0 ;
    SwigValueWrapper< csPtr<iObjectIterator > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iEngine_GetVisibleObjects",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csFrustum,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (arg1)->GetVisibleObjects(arg2,(csFrustum const &)*arg3);
    
    {
        csPtr<iObjectIterator > * resultptr;
        resultptr = new csPtr<iObjectIterator >((csPtr<iObjectIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiObjectIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetVisibleObjects(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iEngine_GetVisibleObjects__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csFrustum, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iEngine_GetVisibleObjects__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iEngine_GetVisibleObjects'");
    return NULL;
}


static PyObject *_wrap_iEngine_GetVisibleMeshes__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csFrustum *arg3 = 0 ;
    SwigValueWrapper< csPtr<iMeshWrapperIterator > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iEngine_GetVisibleMeshes",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csFrustum,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (arg1)->GetVisibleMeshes(arg2,(csFrustum const &)*arg3);
    
    {
        csPtr<iMeshWrapperIterator > * resultptr;
        resultptr = new csPtr<iMeshWrapperIterator >((csPtr<iMeshWrapperIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiMeshWrapperIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetVisibleMeshes(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iEngine_GetVisibleMeshes__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csFrustum, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iEngine_GetVisibleMeshes__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iEngine_GetVisibleMeshes'");
    return NULL;
}


static PyObject *_wrap_iEngine_RemoveObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iBase *arg2 = (iBase *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEngine_RemoveObject",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveObject(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_SetCacheManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iCacheManager *arg2 = (iCacheManager *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEngine_SetCacheManager",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCacheManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCacheManager(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetCacheManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iCacheManager *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetCacheManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCacheManager *)(arg1)->GetCacheManager();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCacheManager, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_GetDefaultAmbientLight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    csColor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEngine_GetDefaultAmbientLight",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((iEngine const *)arg1)->GetDefaultAmbientLight(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateFrustumView(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    SwigValueWrapper< csPtr<iFrustumView > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_CreateFrustumView",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateFrustumView();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iFrustumView> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iFrustumView *)ref), (void *)(iFrustumView *)ref, "iFrustumView" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_CreateObjectWatcher(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    SwigValueWrapper< csPtr<iObjectWatcher > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_CreateObjectWatcher",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateObjectWatcher();
    
    {
        csPtr<iObjectWatcher > * resultptr;
        resultptr = new csPtr<iObjectWatcher >((csPtr<iObjectWatcher > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiObjectWatcher_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngine_WantToDie(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEngine_WantToDie",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->WantToDie(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iEngine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iEngine",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iEngine(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iEngine_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iEngine, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iCamera_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iCamera_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iCamera_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iCamera_VERSION);
    return pyobj;
}


static PyObject *_wrap_iCamera_Clone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    iCamera *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCamera_Clone",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCamera *)((iCamera const *)arg1)->Clone();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_GetFOV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCamera_GetFOV",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iCamera const *)arg1)->GetFOV();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_GetInvFOV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCamera_GetInvFOV",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iCamera const *)arg1)->GetInvFOV();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_GetFOVAngle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCamera_GetFOVAngle",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iCamera const *)arg1)->GetFOVAngle();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_SetFOV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iCamera_SetFOV",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFOV(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_SetFOVAngle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    float arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ofi:iCamera_SetFOVAngle",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFOVAngle(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_GetShiftX(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCamera_GetShiftX",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iCamera const *)arg1)->GetShiftX();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_GetShiftY(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCamera_GetShiftY",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iCamera const *)arg1)->GetShiftY();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_SetPerspectiveCenter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    float arg2 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Off:iCamera_SetPerspectiveCenter",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPerspectiveCenter(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_GetTransform__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    csOrthoTransform *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCamera_GetTransform",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csOrthoTransform &_result_ref = (arg1)->GetTransform();
        result = (csOrthoTransform *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csOrthoTransform, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_GetTransform__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    csOrthoTransform *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCamera_GetTransform",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csOrthoTransform const &_result_ref = ((iCamera const *)arg1)->GetTransform();
        result = (csOrthoTransform *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csOrthoTransform, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_GetTransform(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCamera, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_iCamera_GetTransform__SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCamera, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_iCamera_GetTransform__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iCamera_GetTransform'");
    return NULL;
}


static PyObject *_wrap_iCamera_SetTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    csOrthoTransform *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCamera_SetTransform",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csOrthoTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetTransform((csOrthoTransform const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_MoveWorld(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    csVector3 *arg2 = 0 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:iCamera_MoveWorld",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->MoveWorld((csVector3 const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_Move(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    csVector3 *arg2 = 0 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:iCamera_Move",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->Move((csVector3 const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_MoveWorldUnrestricted(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCamera_MoveWorldUnrestricted",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveWorldUnrestricted((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_MoveUnrestricted(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCamera_MoveUnrestricted",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveUnrestricted((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_GetSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    iSector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCamera_GetSector",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSector *)((iCamera const *)arg1)->GetSector();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_SetSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCamera_SetSector",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSector(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_Correct(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iCamera_Correct",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Correct(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_IsMirrored(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCamera_IsMirrored",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iCamera const *)arg1)->IsMirrored();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_SetMirrored(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCamera_SetMirrored",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetMirrored(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_GetHit(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    csVector3 *arg2 = 0 ;
    iPolygon3D *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCamera_GetHit",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (iPolygon3D *)(arg1)->GetHit(*arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygon3D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_GetFarPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    csPlane3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCamera_GetFarPlane",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csPlane3 *)((iCamera const *)arg1)->GetFarPlane();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPlane3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_SetFarPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    csPlane3 *arg2 = (csPlane3 *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCamera_SetFarPlane",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFarPlane(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_GetCameraNumber(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCamera_GetCameraNumber",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (long)((iCamera const *)arg1)->GetCameraNumber();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_Perspective(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector2 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCamera_Perspective",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((iCamera const *)arg1)->Perspective((csVector3 const &)*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_InvPerspective(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    csVector2 *arg2 = 0 ;
    float arg3 ;
    csVector3 *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOfO:iCamera_InvPerspective",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((iCamera const *)arg1)->InvPerspective((csVector2 const &)*arg2,arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_OnlyPortals(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCamera_OnlyPortals",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->OnlyPortals(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCamera_GetOnlyPortals(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCamera_GetOnlyPortals",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->GetOnlyPortals();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 = (iCamera *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iCamera(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCamera_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCamera, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iCameraPosition_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iCameraPosition_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iCameraPosition_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iCameraPosition_VERSION);
    return pyobj;
}


static PyObject *_wrap_iCameraPosition_QueryObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPosition *arg1 = (iCameraPosition *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCameraPosition_QueryObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)(arg1)->QueryObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPosition_Clone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPosition *arg1 = (iCameraPosition *) 0 ;
    iCameraPosition *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCameraPosition_Clone",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCameraPosition *)((iCameraPosition const *)arg1)->Clone();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCameraPosition, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPosition_GetSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPosition *arg1 = (iCameraPosition *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCameraPosition_GetSector",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetSector();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPosition_SetSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPosition *arg1 = (iCameraPosition *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCameraPosition_SetSector",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSector((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPosition_GetPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPosition *arg1 = (iCameraPosition *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCameraPosition_GetPosition",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = (arg1)->GetPosition();
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPosition_SetPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPosition *arg1 = (iCameraPosition *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCameraPosition_SetPosition",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetPosition((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPosition_GetUpwardVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPosition *arg1 = (iCameraPosition *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCameraPosition_GetUpwardVector",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = (arg1)->GetUpwardVector();
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPosition_SetUpwardVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPosition *arg1 = (iCameraPosition *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCameraPosition_SetUpwardVector",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetUpwardVector((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPosition_GetForwardVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPosition *arg1 = (iCameraPosition *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCameraPosition_GetForwardVector",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = (arg1)->GetForwardVector();
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPosition_SetForwardVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPosition *arg1 = (iCameraPosition *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCameraPosition_SetForwardVector",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetForwardVector((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPosition_Set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPosition *arg1 = (iCameraPosition *) 0 ;
    char *arg2 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    csVector3 *arg5 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOOO:iCameraPosition_Set",&obj0,&arg2,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Set((char const *)arg2,(csVector3 const &)*arg3,(csVector3 const &)*arg4,(csVector3 const &)*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPosition_Load(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPosition *arg1 = (iCameraPosition *) 0 ;
    iCamera *arg2 = (iCamera *) 0 ;
    iEngine *arg3 = (iEngine *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCameraPosition_Load",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Load(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPosition_SetFarPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPosition *arg1 = (iCameraPosition *) 0 ;
    csPlane3 *arg2 = (csPlane3 *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCameraPosition_SetFarPlane",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFarPlane(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPosition_ClearFarPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPosition *arg1 = (iCameraPosition *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCameraPosition_ClearFarPlane",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearFarPlane();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPosition_GetFarPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPosition *arg1 = (iCameraPosition *) 0 ;
    csPlane3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCameraPosition_GetFarPlane",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csPlane3 *)((iCameraPosition const *)arg1)->GetFarPlane();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPlane3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCameraPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPosition *arg1 = (iCameraPosition *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCameraPosition",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iCameraPosition(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCameraPosition_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCameraPosition, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iCameraPositionList_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iCameraPositionList_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iCameraPositionList_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iCameraPositionList_VERSION);
    return pyobj;
}


static PyObject *_wrap_iCameraPositionList_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iCameraPositionList_scfGetID")) goto fail;
    result = (scfInterfaceID)iCameraPositionList_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPositionList_NewCameraPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPositionList *arg1 = (iCameraPositionList *) 0 ;
    char *arg2 ;
    iCameraPosition *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCameraPositionList_NewCameraPosition",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPositionList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCameraPosition *)(arg1)->NewCameraPosition((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCameraPosition, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPositionList_GetCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPositionList *arg1 = (iCameraPositionList *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCameraPositionList_GetCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPositionList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iCameraPositionList const *)arg1)->GetCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPositionList_Get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPositionList *arg1 = (iCameraPositionList *) 0 ;
    int arg2 ;
    iCameraPosition *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iCameraPositionList_Get",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPositionList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCameraPosition *)((iCameraPositionList const *)arg1)->Get(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCameraPosition, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPositionList_Add(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPositionList *arg1 = (iCameraPositionList *) 0 ;
    iCameraPosition *arg2 = (iCameraPosition *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCameraPositionList_Add",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPositionList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCameraPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Add(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPositionList_Remove__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPositionList *arg1 = (iCameraPositionList *) 0 ;
    iCameraPosition *arg2 = (iCameraPosition *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCameraPositionList_Remove",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPositionList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCameraPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPositionList_Remove__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPositionList *arg1 = (iCameraPositionList *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iCameraPositionList_Remove",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPositionList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPositionList_Remove(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCameraPositionList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iCameraPosition, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iCameraPositionList_Remove__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCameraPositionList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iCameraPositionList_Remove__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iCameraPositionList_Remove'");
    return NULL;
}


static PyObject *_wrap_iCameraPositionList_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPositionList *arg1 = (iCameraPositionList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCameraPositionList_RemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPositionList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPositionList_Find(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPositionList *arg1 = (iCameraPositionList *) 0 ;
    iCameraPosition *arg2 = (iCameraPosition *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCameraPositionList_Find",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPositionList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCameraPosition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iCameraPositionList const *)arg1)->Find(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCameraPositionList_FindByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPositionList *arg1 = (iCameraPositionList *) 0 ;
    char *arg2 ;
    iCameraPosition *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCameraPositionList_FindByName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPositionList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCameraPosition *)((iCameraPositionList const *)arg1)->FindByName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCameraPosition, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCameraPositionList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPositionList *arg1 = (iCameraPositionList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCameraPositionList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPositionList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCameraPositionList_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCameraPositionList, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iTextureCallback_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iTextureCallback_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iTextureCallback_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iTextureCallback_VERSION);
    return pyobj;
}


static PyObject *_wrap_iTextureCallback_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iTextureCallback_scfGetID")) goto fail;
    result = (scfInterfaceID)iTextureCallback_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureCallback_UseTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureCallback *arg1 = (iTextureCallback *) 0 ;
    iTextureWrapper *arg2 = (iTextureWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iTextureCallback_UseTexture",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UseTexture(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iTextureCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureCallback *arg1 = (iTextureCallback *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iTextureCallback",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iTextureCallback_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iTextureCallback, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iTextureWrapper_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iTextureWrapper_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iTextureWrapper_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iTextureWrapper_VERSION);
    return pyobj;
}


static PyObject *_wrap_iTextureWrapper_QueryObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureWrapper *arg1 = (iTextureWrapper *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureWrapper_QueryObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)(arg1)->QueryObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureWrapper_Clone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureWrapper *arg1 = (iTextureWrapper *) 0 ;
    iTextureWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureWrapper_Clone",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iTextureWrapper *)((iTextureWrapper const *)arg1)->Clone();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureWrapper_SetImageFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureWrapper *arg1 = (iTextureWrapper *) 0 ;
    iImage *arg2 = (iImage *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iTextureWrapper_SetImageFile",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetImageFile(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureWrapper_GetImageFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureWrapper *arg1 = (iTextureWrapper *) 0 ;
    iImage *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureWrapper_GetImageFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iImage *)(arg1)->GetImageFile();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iImage, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureWrapper_SetTextureHandle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureWrapper *arg1 = (iTextureWrapper *) 0 ;
    iTextureHandle *arg2 = (iTextureHandle *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iTextureWrapper_SetTextureHandle",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetTextureHandle(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureWrapper_GetTextureHandle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureWrapper *arg1 = (iTextureWrapper *) 0 ;
    iTextureHandle *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureWrapper_GetTextureHandle",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iTextureHandle *)(arg1)->GetTextureHandle();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureHandle, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureWrapper_SetKeyColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureWrapper *arg1 = (iTextureWrapper *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:iTextureWrapper_SetKeyColor",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetKeyColor(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureWrapper_GetKeyColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureWrapper *arg1 = (iTextureWrapper *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    int temp2 ;
    int temp3 ;
    int temp4 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    arg4 = &temp4;
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureWrapper_GetKeyColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetKeyColor(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureWrapper_SetFlags(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureWrapper *arg1 = (iTextureWrapper *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iTextureWrapper_SetFlags",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFlags(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureWrapper_GetFlags(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureWrapper *arg1 = (iTextureWrapper *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureWrapper_GetFlags",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetFlags();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureWrapper_Register(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureWrapper *arg1 = (iTextureWrapper *) 0 ;
    iTextureManager *arg2 = (iTextureManager *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iTextureWrapper_Register",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iTextureManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Register(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureWrapper_SetUseCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureWrapper *arg1 = (iTextureWrapper *) 0 ;
    iTextureCallback *arg2 = (iTextureCallback *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iTextureWrapper_SetUseCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iTextureCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetUseCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureWrapper_GetUseCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureWrapper *arg1 = (iTextureWrapper *) 0 ;
    iTextureCallback *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureWrapper_GetUseCallback",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iTextureCallback *)(arg1)->GetUseCallback();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureCallback, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureWrapper_Visit(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureWrapper *arg1 = (iTextureWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureWrapper_Visit",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Visit();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureWrapper_SetKeepImage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureWrapper *arg1 = (iTextureWrapper *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iTextureWrapper_SetKeepImage",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetKeepImage(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureWrapper_KeepImage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureWrapper *arg1 = (iTextureWrapper *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureWrapper_KeepImage",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iTextureWrapper const *)arg1)->KeepImage();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iTextureWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureWrapper *arg1 = (iTextureWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iTextureWrapper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iTextureWrapper(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iTextureWrapper_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iTextureWrapper, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iTextureList_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iTextureList_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iTextureList_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iTextureList_VERSION);
    return pyobj;
}


static PyObject *_wrap_iTextureList_NewTexture__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureList *arg1 = (iTextureList *) 0 ;
    iImage *arg2 = (iImage *) 0 ;
    iTextureWrapper *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iTextureList_NewTexture",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iTextureWrapper *)(arg1)->NewTexture(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureList_NewTexture__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureList *arg1 = (iTextureList *) 0 ;
    iTextureHandle *arg2 = (iTextureHandle *) 0 ;
    iTextureWrapper *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iTextureList_NewTexture",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iTextureWrapper *)(arg1)->NewTexture(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureList_NewTexture(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iTextureList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iImage, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iTextureList_NewTexture__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iTextureList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iTextureHandle, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iTextureList_NewTexture__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iTextureList_NewTexture'");
    return NULL;
}


static PyObject *_wrap_iTextureList_GetCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureList *arg1 = (iTextureList *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureList_GetCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iTextureList const *)arg1)->GetCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureList_Get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureList *arg1 = (iTextureList *) 0 ;
    int arg2 ;
    iTextureWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iTextureList_Get",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iTextureWrapper *)((iTextureList const *)arg1)->Get(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureList_Add(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureList *arg1 = (iTextureList *) 0 ;
    iTextureWrapper *arg2 = (iTextureWrapper *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iTextureList_Add",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Add(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureList_Remove__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureList *arg1 = (iTextureList *) 0 ;
    iTextureWrapper *arg2 = (iTextureWrapper *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iTextureList_Remove",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureList_Remove__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureList *arg1 = (iTextureList *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iTextureList_Remove",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureList_Remove(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iTextureList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iTextureWrapper, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iTextureList_Remove__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iTextureList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iTextureList_Remove__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iTextureList_Remove'");
    return NULL;
}


static PyObject *_wrap_iTextureList_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureList *arg1 = (iTextureList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureList_RemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureList_Find(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureList *arg1 = (iTextureList *) 0 ;
    iTextureWrapper *arg2 = (iTextureWrapper *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iTextureList_Find",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iTextureWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iTextureList const *)arg1)->Find(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureList_FindByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureList *arg1 = (iTextureList *) 0 ;
    char *arg2 ;
    iTextureWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iTextureList_FindByName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iTextureWrapper *)((iTextureList const *)arg1)->FindByName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iTextureList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureList *arg1 = (iTextureList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iTextureList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iTextureList(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iTextureList_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iTextureList, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iMaterialWrapper_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iMaterialWrapper_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iMaterialWrapper_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iMaterialWrapper_VERSION);
    return pyobj;
}


static PyObject *_wrap_iMaterialWrapper_QueryObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialWrapper *arg1 = (iMaterialWrapper *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMaterialWrapper_QueryObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)(arg1)->QueryObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialWrapper_Clone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialWrapper *arg1 = (iMaterialWrapper *) 0 ;
    iMaterialWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMaterialWrapper_Clone",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialWrapper *)((iMaterialWrapper const *)arg1)->Clone();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialWrapper_SetMaterialHandle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialWrapper *arg1 = (iMaterialWrapper *) 0 ;
    iMaterialHandle *arg2 = (iMaterialHandle *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMaterialWrapper_SetMaterialHandle",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterialHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMaterialHandle(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialWrapper_GetMaterialHandle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialWrapper *arg1 = (iMaterialWrapper *) 0 ;
    iMaterialHandle *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMaterialWrapper_GetMaterialHandle",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialHandle *)(arg1)->GetMaterialHandle();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialHandle, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialWrapper_SetMaterial(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialWrapper *arg1 = (iMaterialWrapper *) 0 ;
    iMaterial *arg2 = (iMaterial *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMaterialWrapper_SetMaterial",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterial,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMaterial(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialWrapper_GetMaterial(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialWrapper *arg1 = (iMaterialWrapper *) 0 ;
    iMaterial *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMaterialWrapper_GetMaterial",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterial *)(arg1)->GetMaterial();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterial, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialWrapper_Register(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialWrapper *arg1 = (iMaterialWrapper *) 0 ;
    iTextureManager *arg2 = (iTextureManager *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMaterialWrapper_Register",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iTextureManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Register(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialWrapper_Visit(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialWrapper *arg1 = (iMaterialWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMaterialWrapper_Visit",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Visit();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iMaterialWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialWrapper *arg1 = (iMaterialWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMaterialWrapper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iMaterialWrapper(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iMaterialWrapper_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMaterialWrapper, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iMaterialEngine_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iMaterialEngine_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iMaterialEngine_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iMaterialEngine_VERSION);
    return pyobj;
}


static PyObject *_wrap_iMaterialEngine_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iMaterialEngine_scfGetID")) goto fail;
    result = (scfInterfaceID)iMaterialEngine_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialEngine_GetTextureWrapper__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialEngine *arg1 = (iMaterialEngine *) 0 ;
    iTextureWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMaterialEngine_GetTextureWrapper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iTextureWrapper *)(arg1)->GetTextureWrapper();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialEngine_GetTextureWrapper__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialEngine *arg1 = (iMaterialEngine *) 0 ;
    int arg2 ;
    iTextureWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iMaterialEngine_GetTextureWrapper",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iTextureWrapper *)(arg1)->GetTextureWrapper(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialEngine_GetTextureWrapper(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iMaterialEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_iMaterialEngine_GetTextureWrapper__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iMaterialEngine, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iMaterialEngine_GetTextureWrapper__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iMaterialEngine_GetTextureWrapper'");
    return NULL;
}


static PyObject *_wrap_delete_iMaterialEngine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialEngine *arg1 = (iMaterialEngine *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMaterialEngine",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iMaterialEngine_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMaterialEngine, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iMaterialList_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iMaterialList_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iMaterialList_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iMaterialList_VERSION);
    return pyobj;
}


static PyObject *_wrap_iMaterialList_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iMaterialList_scfGetID")) goto fail;
    result = (scfInterfaceID)iMaterialList_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialList_NewMaterial__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialList *arg1 = (iMaterialList *) 0 ;
    iMaterial *arg2 = (iMaterial *) 0 ;
    iMaterialWrapper *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMaterialList_NewMaterial",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterial,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialWrapper *)(arg1)->NewMaterial(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialList_NewMaterial__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialList *arg1 = (iMaterialList *) 0 ;
    iMaterialHandle *arg2 = (iMaterialHandle *) 0 ;
    iMaterialWrapper *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMaterialList_NewMaterial",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterialHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialWrapper *)(arg1)->NewMaterial(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialList_NewMaterial(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iMaterialList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iMaterial, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iMaterialList_NewMaterial__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iMaterialList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iMaterialHandle, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iMaterialList_NewMaterial__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iMaterialList_NewMaterial'");
    return NULL;
}


static PyObject *_wrap_iMaterialList_GetCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialList *arg1 = (iMaterialList *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMaterialList_GetCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iMaterialList const *)arg1)->GetCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialList_Get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialList *arg1 = (iMaterialList *) 0 ;
    int arg2 ;
    iMaterialWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iMaterialList_Get",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialWrapper *)((iMaterialList const *)arg1)->Get(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialList_Add(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialList *arg1 = (iMaterialList *) 0 ;
    iMaterialWrapper *arg2 = (iMaterialWrapper *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMaterialList_Add",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Add(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialList_Remove__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialList *arg1 = (iMaterialList *) 0 ;
    iMaterialWrapper *arg2 = (iMaterialWrapper *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMaterialList_Remove",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialList_Remove__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialList *arg1 = (iMaterialList *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iMaterialList_Remove",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialList_Remove(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iMaterialList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iMaterialWrapper, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iMaterialList_Remove__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iMaterialList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iMaterialList_Remove__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iMaterialList_Remove'");
    return NULL;
}


static PyObject *_wrap_iMaterialList_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialList *arg1 = (iMaterialList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMaterialList_RemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialList_Find(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialList *arg1 = (iMaterialList *) 0 ;
    iMaterialWrapper *arg2 = (iMaterialWrapper *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMaterialList_Find",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iMaterialList const *)arg1)->Find(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialList_FindByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialList *arg1 = (iMaterialList *) 0 ;
    char *arg2 ;
    iMaterialWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iMaterialList_FindByName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialWrapper *)((iMaterialList const *)arg1)->FindByName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iMaterialList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialList *arg1 = (iMaterialList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMaterialList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iMaterialList_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMaterialList, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iMeshDrawCallback_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iMeshDrawCallback_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iMeshDrawCallback_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iMeshDrawCallback_VERSION);
    return pyobj;
}


static PyObject *_wrap_iMeshDrawCallback_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iMeshDrawCallback_scfGetID")) goto fail;
    result = (scfInterfaceID)iMeshDrawCallback_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshDrawCallback_BeforeDrawing(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshDrawCallback *arg1 = (iMeshDrawCallback *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    iRenderView *arg3 = (iRenderView *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iMeshDrawCallback_BeforeDrawing",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshDrawCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iRenderView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->BeforeDrawing(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iMeshDrawCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshDrawCallback *arg1 = (iMeshDrawCallback *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMeshDrawCallback",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshDrawCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iMeshDrawCallback_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMeshDrawCallback, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iMeshWrapper_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iMeshWrapper_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iMeshWrapper_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iMeshWrapper_VERSION);
    return pyobj;
}


static PyObject *_wrap_iMeshWrapper_QueryObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshWrapper_QueryObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)(arg1)->QueryObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_GetMeshObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    iMeshObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshWrapper_GetMeshObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshObject *)((iMeshWrapper const *)arg1)->GetMeshObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_SetMeshObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    iMeshObject *arg2 = (iMeshObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshWrapper_SetMeshObject",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMeshObject(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_GetLightingInfo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    iLightingInfo *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshWrapper_GetLightingInfo",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iLightingInfo *)((iMeshWrapper const *)arg1)->GetLightingInfo();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iLightingInfo, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_GetShadowReceiver(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    iShadowReceiver *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshWrapper_GetShadowReceiver",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iShadowReceiver *)((iMeshWrapper const *)arg1)->GetShadowReceiver();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iShadowReceiver, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_GetVisibilityNumber(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    uint result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshWrapper_GetVisibilityNumber",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint)((iMeshWrapper const *)arg1)->GetVisibilityNumber();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_GetFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    iMeshFactoryWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshWrapper_GetFactory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshFactoryWrapper *)((iMeshWrapper const *)arg1)->GetFactory();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshFactoryWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_SetFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    iMeshFactoryWrapper *arg2 = (iMeshFactoryWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshWrapper_SetFactory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshFactoryWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFactory(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_DeferUpdateLighting(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iMeshWrapper_DeferUpdateLighting",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DeferUpdateLighting(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_UpdateLighting(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    iLight **arg2 = (iLight **) 0 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iMeshWrapper_UpdateLighting",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UpdateLighting(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_GetMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    iMovable *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshWrapper_GetMovable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMovable *)((iMeshWrapper const *)arg1)->GetMovable();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMovable, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_PlaceMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshWrapper_PlaceMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PlaceMesh();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_HitBeamBBox(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    float *arg5 = (float *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:iMeshWrapper_HitBeamBBox",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->HitBeamBBox((csVector3 const &)*arg2,(csVector3 const &)*arg3,*arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_HitBeamOutline(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    float *arg5 = (float *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:iMeshWrapper_HitBeamOutline",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->HitBeamOutline((csVector3 const &)*arg2,(csVector3 const &)*arg3,*arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_HitBeamObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    float *arg5 = (float *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:iMeshWrapper_HitBeamObject",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->HitBeamObject((csVector3 const &)*arg2,(csVector3 const &)*arg3,*arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_HitBeam(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    float *arg5 = (float *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:iMeshWrapper_HitBeam",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->HitBeam((csVector3 const &)*arg2,(csVector3 const &)*arg3,*arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_SetDrawCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    iMeshDrawCallback *arg2 = (iMeshDrawCallback *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshWrapper_SetDrawCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshDrawCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDrawCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_RemoveDrawCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    iMeshDrawCallback *arg2 = (iMeshDrawCallback *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshWrapper_RemoveDrawCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshDrawCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveDrawCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_GetDrawCallbackCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshWrapper_GetDrawCallbackCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iMeshWrapper const *)arg1)->GetDrawCallbackCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_GetDrawCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    int arg2 ;
    iMeshDrawCallback *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iMeshWrapper_GetDrawCallback",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshDrawCallback *)((iMeshWrapper const *)arg1)->GetDrawCallback(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshDrawCallback, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_SetRenderPriority(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    long arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ol:iMeshWrapper_SetRenderPriority",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetRenderPriority(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_GetRenderPriority(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshWrapper_GetRenderPriority",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (long)((iMeshWrapper const *)arg1)->GetRenderPriority();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_GetFlags(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    csFlags *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshWrapper_GetFlags",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csFlags &_result_ref = (arg1)->GetFlags();
        result = (csFlags *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csFlags, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_SetZBufMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iMeshWrapper_SetZBufMode",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetZBufMode((csZBufMode )arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_GetZBufMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshWrapper_GetZBufMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iMeshWrapper const *)arg1)->GetZBufMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_HardTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    csReversibleTransform *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshWrapper_HardTransform",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->HardTransform((csReversibleTransform const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_GetWorldBoundingBox(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    csBox3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshWrapper_GetWorldBoundingBox",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csBox3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetWorldBoundingBox(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_GetTransformedBoundingBox(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    csReversibleTransform *arg2 = 0 ;
    csBox3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iMeshWrapper_GetTransformedBoundingBox",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csBox3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetTransformedBoundingBox((csReversibleTransform const &)*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_GetScreenBoundingBox(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    iCamera *arg2 = (iCamera *) 0 ;
    csBox2 *arg3 = 0 ;
    csBox3 *arg4 = 0 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iMeshWrapper_GetScreenBoundingBox",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csBox2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csBox3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (float)(arg1)->GetScreenBoundingBox(arg2,*arg3,*arg4);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_GetChildren(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    iMeshList *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshWrapper_GetChildren",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshList *)(arg1)->GetChildren();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_GetParentContainer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    iMeshWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshWrapper_GetParentContainer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshWrapper *)(arg1)->GetParentContainer();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_SetParentContainer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshWrapper_SetParentContainer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetParentContainer(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_GetRadius(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iMeshWrapper_GetRadius",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((iMeshWrapper const *)arg1)->GetRadius(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapper_Draw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    iRenderView *arg2 = (iRenderView *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshWrapper_Draw",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRenderView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Draw(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iMeshWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 = (iMeshWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMeshWrapper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iMeshWrapper(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iMeshWrapper_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMeshWrapper, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iMeshFactoryWrapper_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iMeshFactoryWrapper_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iMeshFactoryWrapper_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iMeshFactoryWrapper_VERSION);
    return pyobj;
}


static PyObject *_wrap_iMeshFactoryWrapper_QueryObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryWrapper *arg1 = (iMeshFactoryWrapper *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshFactoryWrapper_QueryObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)(arg1)->QueryObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshFactoryWrapper_GetMeshObjectFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryWrapper *arg1 = (iMeshFactoryWrapper *) 0 ;
    iMeshObjectFactory *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshFactoryWrapper_GetMeshObjectFactory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshObjectFactory *)((iMeshFactoryWrapper const *)arg1)->GetMeshObjectFactory();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshObjectFactory, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshFactoryWrapper_SetMeshObjectFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryWrapper *arg1 = (iMeshFactoryWrapper *) 0 ;
    iMeshObjectFactory *arg2 = (iMeshObjectFactory *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshFactoryWrapper_SetMeshObjectFactory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshObjectFactory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMeshObjectFactory(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshFactoryWrapper_HardTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryWrapper *arg1 = (iMeshFactoryWrapper *) 0 ;
    csReversibleTransform *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshFactoryWrapper_HardTransform",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->HardTransform((csReversibleTransform const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshFactoryWrapper_CreateMeshWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryWrapper *arg1 = (iMeshFactoryWrapper *) 0 ;
    iMeshWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshFactoryWrapper_CreateMeshWrapper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshWrapper *)(arg1)->CreateMeshWrapper();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshFactoryWrapper_GetParentContainer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryWrapper *arg1 = (iMeshFactoryWrapper *) 0 ;
    iMeshFactoryWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshFactoryWrapper_GetParentContainer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshFactoryWrapper *)((iMeshFactoryWrapper const *)arg1)->GetParentContainer();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshFactoryWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshFactoryWrapper_SetParentContainer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryWrapper *arg1 = (iMeshFactoryWrapper *) 0 ;
    iMeshFactoryWrapper *arg2 = (iMeshFactoryWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshFactoryWrapper_SetParentContainer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshFactoryWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetParentContainer(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshFactoryWrapper_GetChildren(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryWrapper *arg1 = (iMeshFactoryWrapper *) 0 ;
    iMeshFactoryList *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshFactoryWrapper_GetChildren",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshFactoryList *)(arg1)->GetChildren();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshFactoryList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshFactoryWrapper_GetTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryWrapper *arg1 = (iMeshFactoryWrapper *) 0 ;
    csReversibleTransform *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshFactoryWrapper_GetTransform",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csReversibleTransform &_result_ref = (arg1)->GetTransform();
        result = (csReversibleTransform *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csReversibleTransform, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshFactoryWrapper_SetTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryWrapper *arg1 = (iMeshFactoryWrapper *) 0 ;
    csReversibleTransform *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshFactoryWrapper_SetTransform",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetTransform((csReversibleTransform const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iMeshFactoryWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryWrapper *arg1 = (iMeshFactoryWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMeshFactoryWrapper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iMeshFactoryWrapper(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iMeshFactoryWrapper_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMeshFactoryWrapper, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iMeshList_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iMeshList_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iMeshList_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iMeshList_VERSION);
    return pyobj;
}


static PyObject *_wrap_iMeshList_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iMeshList_scfGetID")) goto fail;
    result = (scfInterfaceID)iMeshList_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshList_GetCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshList *arg1 = (iMeshList *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshList_GetCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iMeshList const *)arg1)->GetCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshList_Get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshList *arg1 = (iMeshList *) 0 ;
    int arg2 ;
    iMeshWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iMeshList_Get",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshWrapper *)((iMeshList const *)arg1)->Get(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshList_Add(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshList *arg1 = (iMeshList *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshList_Add",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Add(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshList_Remove__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshList *arg1 = (iMeshList *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshList_Remove",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshList_Remove__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshList *arg1 = (iMeshList *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iMeshList_Remove",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshList_Remove(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iMeshList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iMeshWrapper, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iMeshList_Remove__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iMeshList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iMeshList_Remove__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iMeshList_Remove'");
    return NULL;
}


static PyObject *_wrap_iMeshList_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshList *arg1 = (iMeshList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshList_RemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshList_Find(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshList *arg1 = (iMeshList *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshList_Find",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iMeshList const *)arg1)->Find(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshList_FindByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshList *arg1 = (iMeshList *) 0 ;
    char *arg2 ;
    iMeshWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iMeshList_FindByName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshWrapper *)((iMeshList const *)arg1)->FindByName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iMeshList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshList *arg1 = (iMeshList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMeshList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iMeshList_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMeshList, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iMeshFactoryList_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iMeshFactoryList_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iMeshFactoryList_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iMeshFactoryList_VERSION);
    return pyobj;
}


static PyObject *_wrap_iMeshFactoryList_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iMeshFactoryList_scfGetID")) goto fail;
    result = (scfInterfaceID)iMeshFactoryList_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshFactoryList_GetCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryList *arg1 = (iMeshFactoryList *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshFactoryList_GetCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iMeshFactoryList const *)arg1)->GetCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshFactoryList_Get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryList *arg1 = (iMeshFactoryList *) 0 ;
    int arg2 ;
    iMeshFactoryWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iMeshFactoryList_Get",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshFactoryWrapper *)((iMeshFactoryList const *)arg1)->Get(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshFactoryWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshFactoryList_Add(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryList *arg1 = (iMeshFactoryList *) 0 ;
    iMeshFactoryWrapper *arg2 = (iMeshFactoryWrapper *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshFactoryList_Add",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshFactoryWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Add(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshFactoryList_Remove__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryList *arg1 = (iMeshFactoryList *) 0 ;
    iMeshFactoryWrapper *arg2 = (iMeshFactoryWrapper *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshFactoryList_Remove",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshFactoryWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshFactoryList_Remove__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryList *arg1 = (iMeshFactoryList *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iMeshFactoryList_Remove",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshFactoryList_Remove(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iMeshFactoryList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iMeshFactoryWrapper, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iMeshFactoryList_Remove__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iMeshFactoryList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iMeshFactoryList_Remove__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iMeshFactoryList_Remove'");
    return NULL;
}


static PyObject *_wrap_iMeshFactoryList_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryList *arg1 = (iMeshFactoryList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshFactoryList_RemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshFactoryList_Find(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryList *arg1 = (iMeshFactoryList *) 0 ;
    iMeshFactoryWrapper *arg2 = (iMeshFactoryWrapper *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshFactoryList_Find",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshFactoryWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iMeshFactoryList const *)arg1)->Find(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshFactoryList_FindByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryList *arg1 = (iMeshFactoryList *) 0 ;
    char *arg2 ;
    iMeshFactoryWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iMeshFactoryList_FindByName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshFactoryWrapper *)((iMeshFactoryList const *)arg1)->FindByName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshFactoryWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iMeshFactoryList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshFactoryList *arg1 = (iMeshFactoryList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMeshFactoryList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshFactoryList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iMeshFactoryList_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMeshFactoryList, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iMeshWrapperIterator_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iMeshWrapperIterator_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iMeshWrapperIterator_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iMeshWrapperIterator_VERSION);
    return pyobj;
}


static PyObject *_wrap_iMeshWrapperIterator_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iMeshWrapperIterator_scfGetID")) goto fail;
    result = (scfInterfaceID)iMeshWrapperIterator_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapperIterator_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapperIterator *arg1 = (iMeshWrapperIterator *) 0 ;
    iMeshWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshWrapperIterator_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapperIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshWrapper *)(arg1)->Next();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapperIterator_Reset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapperIterator *arg1 = (iMeshWrapperIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshWrapperIterator_Reset",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapperIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Reset();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshWrapperIterator_HasNext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapperIterator *arg1 = (iMeshWrapperIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshWrapperIterator_HasNext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapperIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iMeshWrapperIterator const *)arg1)->HasNext();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iMeshWrapperIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapperIterator *arg1 = (iMeshWrapperIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMeshWrapperIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapperIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iMeshWrapperIterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMeshWrapperIterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iMovableListener_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iMovableListener_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iMovableListener_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iMovableListener_VERSION);
    return pyobj;
}


static PyObject *_wrap_iMovableListener_MovableChanged(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovableListener *arg1 = (iMovableListener *) 0 ;
    iMovable *arg2 = (iMovable *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMovableListener_MovableChanged",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovableListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MovableChanged(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovableListener_MovableDestroyed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovableListener *arg1 = (iMovableListener *) 0 ;
    iMovable *arg2 = (iMovable *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMovableListener_MovableDestroyed",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovableListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MovableDestroyed(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iMovableListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovableListener *arg1 = (iMovableListener *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMovableListener",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovableListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iMovableListener(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iMovableListener_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMovableListener, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iMovable_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iMovable_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iMovable_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iMovable_VERSION);
    return pyobj;
}


static PyObject *_wrap_iMovable_GetParent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    iMovable *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMovable_GetParent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMovable *)((iMovable const *)arg1)->GetParent();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMovable, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_SetParent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    iMovable *arg2 = (iMovable *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMovable_SetParent",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetParent(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_SetSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMovable_SetSector",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSector(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_ClearSectors(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMovable_ClearSectors",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearSectors();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_GetSectors(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    iSectorList *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMovable_GetSectors",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSectorList *)(arg1)->GetSectors();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSectorList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_InSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMovable_InSector",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iMovable const *)arg1)->InSector();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_SetPosition__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iMovable_SetPosition",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetPosition(arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_SetPosition__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMovable_SetPosition",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetPosition((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_SetPosition(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iMovable, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iMovable_SetPosition__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iMovable, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iMovable_SetPosition__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iMovable_SetPosition'");
    return NULL;
}


static PyObject *_wrap_iMovable_GetPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMovable_GetPosition",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = ((iMovable const *)arg1)->GetPosition();
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_GetFullPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMovable_GetFullPosition",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iMovable const *)arg1)->GetFullPosition();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_SetTransform__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    csMatrix3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMovable_SetTransform",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetTransform((csMatrix3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_SetTransform__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    csReversibleTransform *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMovable_SetTransform",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetTransform((csReversibleTransform const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_SetTransform(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iMovable, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iMovable_SetTransform__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iMovable, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iMovable_SetTransform__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iMovable_SetTransform'");
    return NULL;
}


static PyObject *_wrap_iMovable_GetTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    csReversibleTransform *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMovable_GetTransform",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csReversibleTransform &_result_ref = (arg1)->GetTransform();
        result = (csReversibleTransform *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csReversibleTransform, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_GetFullTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    csReversibleTransform result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMovable_GetFullTransform",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iMovable const *)arg1)->GetFullTransform();
    
    {
        csReversibleTransform * resultptr;
        resultptr = new csReversibleTransform((csReversibleTransform &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csReversibleTransform, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_MovePosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMovable_MovePosition",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MovePosition((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_Transform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    csMatrix3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMovable_Transform",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Transform((csMatrix3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_AddListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    iMovableListener *arg2 = (iMovableListener *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMovable_AddListener",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMovableListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddListener(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_RemoveListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    iMovableListener *arg2 = (iMovableListener *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMovable_RemoveListener",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMovableListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveListener(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_UpdateMove(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMovable_UpdateMove",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UpdateMove();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_GetUpdateNumber(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMovable_GetUpdateNumber",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (long)((iMovable const *)arg1)->GetUpdateNumber();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_IsTransformIdentity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMovable_IsTransformIdentity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iMovable const *)arg1)->IsTransformIdentity();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_IsFullTransformIdentity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMovable_IsFullTransformIdentity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iMovable const *)arg1)->IsFullTransformIdentity();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMovable_TransformIdentity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMovable_TransformIdentity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->TransformIdentity();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMovable *arg1 = (iMovable *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMovable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iMovable(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iMovable_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMovable, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iVisibilityObjectIterator_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iVisibilityObjectIterator_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iVisibilityObjectIterator_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iVisibilityObjectIterator_VERSION);
    return pyobj;
}


static PyObject *_wrap_iVisibilityObjectIterator_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iVisibilityObjectIterator_scfGetID")) goto fail;
    result = (scfInterfaceID)iVisibilityObjectIterator_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVisibilityObjectIterator_HasNext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityObjectIterator *arg1 = (iVisibilityObjectIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVisibilityObjectIterator_HasNext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityObjectIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iVisibilityObjectIterator const *)arg1)->HasNext();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVisibilityObjectIterator_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityObjectIterator *arg1 = (iVisibilityObjectIterator *) 0 ;
    iVisibilityObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVisibilityObjectIterator_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityObjectIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iVisibilityObject *)(arg1)->Next();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iVisibilityObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVisibilityObjectIterator_Reset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityObjectIterator *arg1 = (iVisibilityObjectIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVisibilityObjectIterator_Reset",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityObjectIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Reset();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iVisibilityObjectIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityObjectIterator *arg1 = (iVisibilityObjectIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iVisibilityObjectIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityObjectIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iVisibilityObjectIterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iVisibilityObjectIterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iVisibilityCuller_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iVisibilityCuller_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iVisibilityCuller_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iVisibilityCuller_VERSION);
    return pyobj;
}


static PyObject *_wrap_iVisibilityCuller_Setup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityCuller *arg1 = (iVisibilityCuller *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iVisibilityCuller_Setup",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityCuller,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Setup((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVisibilityCuller_RegisterVisObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityCuller *arg1 = (iVisibilityCuller *) 0 ;
    iVisibilityObject *arg2 = (iVisibilityObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iVisibilityCuller_RegisterVisObject",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityCuller,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iVisibilityObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RegisterVisObject(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVisibilityCuller_UnregisterVisObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityCuller *arg1 = (iVisibilityCuller *) 0 ;
    iVisibilityObject *arg2 = (iVisibilityObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iVisibilityCuller_UnregisterVisObject",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityCuller,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iVisibilityObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UnregisterVisObject(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVisibilityCuller_VisTest__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityCuller *arg1 = (iVisibilityCuller *) 0 ;
    iRenderView *arg2 = (iRenderView *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iVisibilityCuller_VisTest",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityCuller,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRenderView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->VisTest(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVisibilityCuller_VisTest__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityCuller *arg1 = (iVisibilityCuller *) 0 ;
    csBox3 *arg2 = 0 ;
    SwigValueWrapper< csPtr<iVisibilityObjectIterator > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iVisibilityCuller_VisTest",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityCuller,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csBox3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (arg1)->VisTest((csBox3 const &)*arg2);
    
    {
        csPtr<iVisibilityObjectIterator > * resultptr;
        resultptr = new csPtr<iVisibilityObjectIterator >((csPtr<iVisibilityObjectIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiVisibilityObjectIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVisibilityCuller_VisTest__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityCuller *arg1 = (iVisibilityCuller *) 0 ;
    csSphere *arg2 = 0 ;
    SwigValueWrapper< csPtr<iVisibilityObjectIterator > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iVisibilityCuller_VisTest",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityCuller,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csSphere,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (arg1)->VisTest((csSphere const &)*arg2);
    
    {
        csPtr<iVisibilityObjectIterator > * resultptr;
        resultptr = new csPtr<iVisibilityObjectIterator >((csPtr<iVisibilityObjectIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiVisibilityObjectIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVisibilityCuller_VisTest__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityCuller *arg1 = (iVisibilityCuller *) 0 ;
    csPlane3 *arg2 = (csPlane3 *) 0 ;
    int arg3 ;
    SwigValueWrapper< csPtr<iVisibilityObjectIterator > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iVisibilityCuller_VisTest",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityCuller,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->VisTest(arg2,arg3);
    
    {
        csPtr<iVisibilityObjectIterator > * resultptr;
        resultptr = new csPtr<iVisibilityObjectIterator >((csPtr<iVisibilityObjectIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiVisibilityObjectIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVisibilityCuller_VisTest(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iVisibilityCuller, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iRenderView, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iVisibilityCuller_VisTest__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iVisibilityCuller, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csBox3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iVisibilityCuller_VisTest__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iVisibilityCuller, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csSphere, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iVisibilityCuller_VisTest__SWIG_2(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iVisibilityCuller, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csPlane3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iVisibilityCuller_VisTest__SWIG_3(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iVisibilityCuller_VisTest'");
    return NULL;
}


static PyObject *_wrap_iVisibilityCuller_IntersectSegment__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityCuller *arg1 = (iVisibilityCuller *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    bool arg4 = (bool) false ;
    SwigValueWrapper< csPtr<iVisibilityObjectIterator > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|O:iVisibilityCuller_IntersectSegment",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityCuller,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj3) {
        arg4 = PyInt_AsLong(obj3) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (arg1)->IntersectSegment((csVector3 const &)*arg2,(csVector3 const &)*arg3,arg4);
    
    {
        csPtr<iVisibilityObjectIterator > * resultptr;
        resultptr = new csPtr<iVisibilityObjectIterator >((csPtr<iVisibilityObjectIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiVisibilityObjectIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVisibilityCuller_IntersectSegment__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityCuller *arg1 = (iVisibilityCuller *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    float *arg5 = (float *) 0 ;
    iMeshWrapper **arg6 = (iMeshWrapper **) 0 ;
    iPolygon3D **arg7 = (iPolygon3D **) 0 ;
    bool arg8 = (bool) false ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    PyObject * obj7 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO|OOOO:iVisibilityCuller_IntersectSegment",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityCuller,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj4) {
        if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj5) {
        if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj6) {
        if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_p_iPolygon3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj7) {
        arg8 = PyInt_AsLong(obj7) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->IntersectSegment((csVector3 const &)*arg2,(csVector3 const &)*arg3,*arg4,arg5,arg6,arg7,arg8);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVisibilityCuller_IntersectSegment(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[9];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 8); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iVisibilityCuller, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_iVisibilityCuller_IntersectSegment__SWIG_0(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_iVisibilityCuller_IntersectSegment__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 4) && (argc <= 8)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iVisibilityCuller, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_iVisibilityCuller_IntersectSegment__SWIG_1(self,args);
                        }
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_float, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_iVisibilityCuller_IntersectSegment__SWIG_1(self,args);
                            }
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_p_iMeshWrapper, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                if (argc <= 6) {
                                    return _wrap_iVisibilityCuller_IntersectSegment__SWIG_1(self,args);
                                }
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_p_iPolygon3D, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    if (argc <= 7) {
                                        return _wrap_iVisibilityCuller_IntersectSegment__SWIG_1(self,args);
                                    }
                                    {
                                        _v = (PyInt_Check(argv[7]) || PyLong_Check(argv[7])) ? 1 : 0;
                                    }
                                    if (_v) {
                                        return _wrap_iVisibilityCuller_IntersectSegment__SWIG_1(self,args);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iVisibilityCuller_IntersectSegment'");
    return NULL;
}


static PyObject *_wrap_iVisibilityCuller_CastShadows(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityCuller *arg1 = (iVisibilityCuller *) 0 ;
    iFrustumView *arg2 = (iFrustumView *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iVisibilityCuller_CastShadows",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityCuller,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iFrustumView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CastShadows(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVisibilityCuller_GetCurrentVisibilityNumber(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityCuller *arg1 = (iVisibilityCuller *) 0 ;
    uint32 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVisibilityCuller_GetCurrentVisibilityNumber",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityCuller,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint32)((iVisibilityCuller const *)arg1)->GetCurrentVisibilityNumber();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iVisibilityCuller(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityCuller *arg1 = (iVisibilityCuller *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iVisibilityCuller",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityCuller,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iVisibilityCuller(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iVisibilityCuller_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iVisibilityCuller, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iVisibilityObject_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iVisibilityObject_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iVisibilityObject_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iVisibilityObject_VERSION);
    return pyobj;
}


static PyObject *_wrap_iVisibilityObject_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iVisibilityObject_scfGetID")) goto fail;
    result = (scfInterfaceID)iVisibilityObject_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVisibilityObject_GetMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityObject *arg1 = (iVisibilityObject *) 0 ;
    iMovable *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVisibilityObject_GetMovable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMovable *)((iVisibilityObject const *)arg1)->GetMovable();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMovable, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVisibilityObject_GetMeshWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityObject *arg1 = (iVisibilityObject *) 0 ;
    iMeshWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVisibilityObject_GetMeshWrapper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshWrapper *)((iVisibilityObject const *)arg1)->GetMeshWrapper();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVisibilityObject_SetVisibilityNumber(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityObject *arg1 = (iVisibilityObject *) 0 ;
    uint32 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iVisibilityObject_SetVisibilityNumber",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint32) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetVisibilityNumber(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVisibilityObject_GetVisibilityNumber(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityObject *arg1 = (iVisibilityObject *) 0 ;
    uint32 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVisibilityObject_GetVisibilityNumber",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint32)((iVisibilityObject const *)arg1)->GetVisibilityNumber();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVisibilityObject_GetObjectModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityObject *arg1 = (iVisibilityObject *) 0 ;
    iObjectModel *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVisibilityObject_GetObjectModel",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObjectModel *)(arg1)->GetObjectModel();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObjectModel, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVisibilityObject_GetCullerFlags(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityObject *arg1 = (iVisibilityObject *) 0 ;
    csFlags *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVisibilityObject_GetCullerFlags",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csFlags &_result_ref = (arg1)->GetCullerFlags();
        result = (csFlags *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csFlags, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iVisibilityObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVisibilityObject *arg1 = (iVisibilityObject *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iVisibilityObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVisibilityObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iVisibilityObject_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iVisibilityObject, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csModelConverterFormat_Name_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csModelConverterFormat *arg1 = (csModelConverterFormat *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:csModelConverterFormat_Name_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csModelConverterFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg1->Name) delete [] arg1->Name;
        if (arg2) {
            arg1->Name = (char *) (new char[strlen(arg2)+1]);
            strcpy((char *) arg1->Name,arg2);
        }else {
            arg1->Name = 0;
        }
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csModelConverterFormat_Name_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csModelConverterFormat *arg1 = (csModelConverterFormat *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csModelConverterFormat_Name_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csModelConverterFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->Name);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csModelConverterFormat_CanLoad_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csModelConverterFormat *arg1 = (csModelConverterFormat *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csModelConverterFormat_CanLoad_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csModelConverterFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->CanLoad = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csModelConverterFormat_CanLoad_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csModelConverterFormat *arg1 = (csModelConverterFormat *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csModelConverterFormat_CanLoad_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csModelConverterFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->CanLoad);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csModelConverterFormat_CanSave_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csModelConverterFormat *arg1 = (csModelConverterFormat *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csModelConverterFormat_CanSave_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csModelConverterFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->CanSave = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csModelConverterFormat_CanSave_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csModelConverterFormat *arg1 = (csModelConverterFormat *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csModelConverterFormat_CanSave_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csModelConverterFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->CanSave);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csModelConverterFormat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csModelConverterFormat *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csModelConverterFormat")) goto fail;
    result = (csModelConverterFormat *)new csModelConverterFormat();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csModelConverterFormat, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csModelConverterFormat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csModelConverterFormat *arg1 = (csModelConverterFormat *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csModelConverterFormat",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csModelConverterFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csModelConverterFormat_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csModelConverterFormat, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iModelConverter_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iModelConverter_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iModelConverter_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iModelConverter_VERSION);
    return pyobj;
}


static PyObject *_wrap_iModelConverter_GetFormatCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iModelConverter *arg1 = (iModelConverter *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iModelConverter_GetFormatCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iModelConverter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetFormatCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iModelConverter_GetFormat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iModelConverter *arg1 = (iModelConverter *) 0 ;
    int arg2 ;
    csModelConverterFormat *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iModelConverter_GetFormat",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iModelConverter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csModelConverterFormat *)(arg1)->GetFormat(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csModelConverterFormat, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iModelConverter_Load(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iModelConverter *arg1 = (iModelConverter *) 0 ;
    uint8 *arg2 = (uint8 *) 0 ;
    uint32 arg3 ;
    SwigValueWrapper< csPtr<iModelData > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iModelConverter_Load",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iModelConverter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_uint8,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (uint32) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (arg1)->Load(arg2,arg3);
    
    {
        csPtr<iModelData > * resultptr;
        resultptr = new csPtr<iModelData >((csPtr<iModelData > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiModelData_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iModelConverter_Save(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iModelConverter *arg1 = (iModelConverter *) 0 ;
    iModelData *arg2 = (iModelData *) 0 ;
    char *arg3 ;
    SwigValueWrapper< csPtr<iDataBuffer > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iModelConverter_Save",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iModelConverter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iModelData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Save(arg2,(char const *)arg3);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iDataBuffer> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iDataBuffer *)ref), (void *)(iDataBuffer *)ref, "iDataBuffer" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iModelConverter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iModelConverter *arg1 = (iModelConverter *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iModelConverter",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iModelConverter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iModelConverter(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iModelConverter_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iModelConverter, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iMeshObjectDrawCallback_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iMeshObjectDrawCallback_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iMeshObjectDrawCallback_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iMeshObjectDrawCallback_VERSION);
    return pyobj;
}


static PyObject *_wrap_iMeshObjectDrawCallback_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iMeshObjectDrawCallback_scfGetID")) goto fail;
    result = (scfInterfaceID)iMeshObjectDrawCallback_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObjectDrawCallback_BeforeDrawing(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObjectDrawCallback *arg1 = (iMeshObjectDrawCallback *) 0 ;
    iMeshObject *arg2 = (iMeshObject *) 0 ;
    iRenderView *arg3 = (iRenderView *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iMeshObjectDrawCallback_BeforeDrawing",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObjectDrawCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iRenderView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->BeforeDrawing(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iMeshObjectDrawCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObjectDrawCallback *arg1 = (iMeshObjectDrawCallback *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMeshObjectDrawCallback",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObjectDrawCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iMeshObjectDrawCallback_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMeshObjectDrawCallback, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iMeshObject_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iMeshObject_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iMeshObject_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iMeshObject_VERSION);
    return pyobj;
}


static PyObject *_wrap_iMeshObject_GetFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    iMeshObjectFactory *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshObject_GetFactory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshObjectFactory *)((iMeshObject const *)arg1)->GetFactory();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshObjectFactory, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObject_DrawTest(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    iRenderView *arg2 = (iRenderView *) 0 ;
    iMovable *arg3 = (iMovable *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iMeshObject_DrawTest",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRenderView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->DrawTest(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObject_UpdateLighting(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    iLight **arg2 = (iLight **) 0 ;
    int arg3 ;
    iMovable *arg4 = (iMovable *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiO:iMeshObject_UpdateLighting",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UpdateLighting(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObject_Draw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    iRenderView *arg2 = (iRenderView *) 0 ;
    iMovable *arg3 = (iMovable *) 0 ;
    int arg4 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOi:iMeshObject_Draw",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRenderView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Draw(arg2,arg3,(csZBufMode )arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObject_SetVisibleCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    iMeshObjectDrawCallback *arg2 = (iMeshObjectDrawCallback *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshObject_SetVisibleCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshObjectDrawCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetVisibleCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObject_GetVisibleCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    iMeshObjectDrawCallback *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshObject_GetVisibleCallback",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshObjectDrawCallback *)((iMeshObject const *)arg1)->GetVisibleCallback();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshObjectDrawCallback, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObject_NextFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    csTicks arg2 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iMeshObject_NextFrame",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->NextFrame(arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObject_HardTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    csReversibleTransform *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshObject_HardTransform",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->HardTransform((csReversibleTransform const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObject_SupportsHardTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshObject_SupportsHardTransform",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iMeshObject const *)arg1)->SupportsHardTransform();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObject_HitBeamOutline(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    float *arg5 = (float *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:iMeshObject_HitBeamOutline",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->HitBeamOutline((csVector3 const &)*arg2,(csVector3 const &)*arg3,*arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObject_HitBeamObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    float *arg5 = (float *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:iMeshObject_HitBeamObject",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->HitBeamObject((csVector3 const &)*arg2,(csVector3 const &)*arg3,*arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObject_SetLogicalParent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    iBase *arg2 = (iBase *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshObject_SetLogicalParent",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetLogicalParent(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObject_GetLogicalParent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshObject_GetLogicalParent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBase *)((iMeshObject const *)arg1)->GetLogicalParent();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObject_GetObjectModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    iObjectModel *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshObject_GetObjectModel",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObjectModel *)(arg1)->GetObjectModel();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObjectModel, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObject_SetColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    csColor *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshObject_SetColor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->SetColor((csColor const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObject_GetColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    csColor *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshObject_GetColor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((iMeshObject const *)arg1)->GetColor(*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObject_SetMaterialWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    iMaterialWrapper *arg2 = (iMaterialWrapper *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshObject_SetMaterialWrapper",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetMaterialWrapper(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObject_GetMaterialWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    iMaterialWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshObject_GetMaterialWrapper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialWrapper *)((iMeshObject const *)arg1)->GetMaterialWrapper();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObject_GetPortalCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshObject_GetPortalCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iMeshObject const *)arg1)->GetPortalCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObject_GetPortal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    int arg2 ;
    iPortal *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iMeshObject_GetPortal",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPortal *)((iMeshObject const *)arg1)->GetPortal(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPortal, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iMeshObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 = (iMeshObject *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMeshObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iMeshObject(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iMeshObject_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMeshObject, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iMeshObjectFactory_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iMeshObjectFactory_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iMeshObjectFactory_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iMeshObjectFactory_VERSION);
    return pyobj;
}


static PyObject *_wrap_iMeshObjectFactory_NewInstance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObjectFactory *arg1 = (iMeshObjectFactory *) 0 ;
    SwigValueWrapper< csPtr<iMeshObject > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshObjectFactory_NewInstance",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObjectFactory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->NewInstance();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iMeshObject> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iMeshObject *)ref), (void *)(iMeshObject *)ref, "iMeshObject" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObjectFactory_HardTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObjectFactory *arg1 = (iMeshObjectFactory *) 0 ;
    csReversibleTransform *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshObjectFactory_HardTransform",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObjectFactory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->HardTransform((csReversibleTransform const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObjectFactory_SupportsHardTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObjectFactory *arg1 = (iMeshObjectFactory *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshObjectFactory_SupportsHardTransform",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObjectFactory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iMeshObjectFactory const *)arg1)->SupportsHardTransform();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObjectFactory_SetLogicalParent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObjectFactory *arg1 = (iMeshObjectFactory *) 0 ;
    iBase *arg2 = (iBase *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMeshObjectFactory_SetLogicalParent",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObjectFactory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetLogicalParent(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObjectFactory_GetLogicalParent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObjectFactory *arg1 = (iMeshObjectFactory *) 0 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshObjectFactory_GetLogicalParent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObjectFactory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBase *)((iMeshObjectFactory const *)arg1)->GetLogicalParent();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMeshObjectFactory_GetObjectModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObjectFactory *arg1 = (iMeshObjectFactory *) 0 ;
    iObjectModel *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshObjectFactory_GetObjectModel",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObjectFactory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObjectModel *)(arg1)->GetObjectModel();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObjectModel, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iMeshObjectFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObjectFactory *arg1 = (iMeshObjectFactory *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMeshObjectFactory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObjectFactory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iMeshObjectFactory(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iMeshObjectFactory_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMeshObjectFactory, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iMeshObjectType_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iMeshObjectType_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iMeshObjectType_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iMeshObjectType_VERSION);
    return pyobj;
}


static PyObject *_wrap_iMeshObjectType_NewFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObjectType *arg1 = (iMeshObjectType *) 0 ;
    SwigValueWrapper< csPtr<iMeshObjectFactory > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshObjectType_NewFactory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObjectType,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->NewFactory();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iMeshObjectFactory> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iMeshObjectFactory *)ref), (void *)(iMeshObjectFactory *)ref, "iMeshObjectFactory" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iMeshObjectType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObjectType *arg1 = (iMeshObjectType *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMeshObjectType",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObjectType,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iMeshObjectType(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iMeshObjectType_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMeshObjectType, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csSprite2DVertex_pos_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSprite2DVertex *arg1 = (csSprite2DVertex *) 0 ;
    csVector2 *arg2 = (csVector2 *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csSprite2DVertex_pos_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSprite2DVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->pos = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSprite2DVertex_pos_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSprite2DVertex *arg1 = (csSprite2DVertex *) 0 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csSprite2DVertex_pos_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSprite2DVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector2 *)& ((arg1)->pos);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSprite2DVertex_color_init_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSprite2DVertex *arg1 = (csSprite2DVertex *) 0 ;
    csColor *arg2 = (csColor *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csSprite2DVertex_color_init_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSprite2DVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->color_init = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSprite2DVertex_color_init_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSprite2DVertex *arg1 = (csSprite2DVertex *) 0 ;
    csColor *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csSprite2DVertex_color_init_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSprite2DVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csColor *)& ((arg1)->color_init);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSprite2DVertex_color_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSprite2DVertex *arg1 = (csSprite2DVertex *) 0 ;
    csColor *arg2 = (csColor *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csSprite2DVertex_color_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSprite2DVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->color = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSprite2DVertex_color_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSprite2DVertex *arg1 = (csSprite2DVertex *) 0 ;
    csColor *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csSprite2DVertex_color_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSprite2DVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csColor *)& ((arg1)->color);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSprite2DVertex_u_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSprite2DVertex *arg1 = (csSprite2DVertex *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csSprite2DVertex_u_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSprite2DVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSprite2DVertex_u_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSprite2DVertex *arg1 = (csSprite2DVertex *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csSprite2DVertex_u_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSprite2DVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->u);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSprite2DVertex_v_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSprite2DVertex *arg1 = (csSprite2DVertex *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csSprite2DVertex_v_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSprite2DVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->v = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csSprite2DVertex_v_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSprite2DVertex *arg1 = (csSprite2DVertex *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csSprite2DVertex_v_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSprite2DVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->v);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csSprite2DVertex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSprite2DVertex *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csSprite2DVertex")) goto fail;
    result = (csSprite2DVertex *)new csSprite2DVertex();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csSprite2DVertex, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csSprite2DVertex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csSprite2DVertex *arg1 = (csSprite2DVertex *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csSprite2DVertex",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csSprite2DVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csSprite2DVertex_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csSprite2DVertex, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSprite2DUVAnimationFrame_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSprite2DUVAnimationFrame_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSprite2DUVAnimationFrame_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSprite2DUVAnimationFrame_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSprite2DUVAnimationFrame_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iSprite2DUVAnimationFrame_scfGetID")) goto fail;
    result = (scfInterfaceID)iSprite2DUVAnimationFrame_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimationFrame_SetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimationFrame *arg1 = (iSprite2DUVAnimationFrame *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSprite2DUVAnimationFrame_SetName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimationFrame,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimationFrame_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimationFrame *arg1 = (iSprite2DUVAnimationFrame *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite2DUVAnimationFrame_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimationFrame,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimationFrame_GetUVCoo__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimationFrame *arg1 = (iSprite2DUVAnimationFrame *) 0 ;
    int arg2 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite2DUVAnimationFrame_GetUVCoo",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimationFrame,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector2 &_result_ref = (arg1)->GetUVCoo(arg2);
        result = (csVector2 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimationFrame_GetUVCoo__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimationFrame *arg1 = (iSprite2DUVAnimationFrame *) 0 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite2DUVAnimationFrame_GetUVCoo",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimationFrame,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector2 *)(arg1)->GetUVCoo();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimationFrame_GetUVCoo(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSprite2DUVAnimationFrame, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_iSprite2DUVAnimationFrame_GetUVCoo__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSprite2DUVAnimationFrame, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iSprite2DUVAnimationFrame_GetUVCoo__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iSprite2DUVAnimationFrame_GetUVCoo'");
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimationFrame_GetUVCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimationFrame *arg1 = (iSprite2DUVAnimationFrame *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite2DUVAnimationFrame_GetUVCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimationFrame,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetUVCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimationFrame_SetUV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimationFrame *arg1 = (iSprite2DUVAnimationFrame *) 0 ;
    int arg2 ;
    float arg3 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiff:iSprite2DUVAnimationFrame_SetUV",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimationFrame,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetUV(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimationFrame_SetFrameData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimationFrame *arg1 = (iSprite2DUVAnimationFrame *) 0 ;
    char *arg2 ;
    int arg3 ;
    int arg4 ;
    float *arg5 = (float *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsiiO:iSprite2DUVAnimationFrame_SetFrameData",&obj0,&arg2,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimationFrame,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFrameData((char const *)arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimationFrame_RemoveUV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimationFrame *arg1 = (iSprite2DUVAnimationFrame *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite2DUVAnimationFrame_RemoveUV",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimationFrame,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveUV(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimationFrame_GetDuration(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimationFrame *arg1 = (iSprite2DUVAnimationFrame *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite2DUVAnimationFrame_GetDuration",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimationFrame,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetDuration();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimationFrame_SetDuration(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimationFrame *arg1 = (iSprite2DUVAnimationFrame *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite2DUVAnimationFrame_SetDuration",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimationFrame,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDuration(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSprite2DUVAnimationFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimationFrame *arg1 = (iSprite2DUVAnimationFrame *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSprite2DUVAnimationFrame",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimationFrame,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSprite2DUVAnimationFrame_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSprite2DUVAnimationFrame, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSprite2DUVAnimation_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSprite2DUVAnimation_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSprite2DUVAnimation_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSprite2DUVAnimation_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSprite2DUVAnimation_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iSprite2DUVAnimation_scfGetID")) goto fail;
    result = (scfInterfaceID)iSprite2DUVAnimation_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimation_SetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimation *arg1 = (iSprite2DUVAnimation *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSprite2DUVAnimation_SetName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimation,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimation_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimation *arg1 = (iSprite2DUVAnimation *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite2DUVAnimation_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimation,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimation_GetFrameCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimation *arg1 = (iSprite2DUVAnimation *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite2DUVAnimation_GetFrameCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimation,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetFrameCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimation_GetFrame__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimation *arg1 = (iSprite2DUVAnimation *) 0 ;
    int arg2 ;
    iSprite2DUVAnimationFrame *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite2DUVAnimation_GetFrame",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimation,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSprite2DUVAnimationFrame *)(arg1)->GetFrame(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSprite2DUVAnimationFrame, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimation_GetFrame__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimation *arg1 = (iSprite2DUVAnimation *) 0 ;
    char *arg2 ;
    iSprite2DUVAnimationFrame *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSprite2DUVAnimation_GetFrame",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimation,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSprite2DUVAnimationFrame *)(arg1)->GetFrame((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSprite2DUVAnimationFrame, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimation_GetFrame(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSprite2DUVAnimation, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iSprite2DUVAnimation_GetFrame__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSprite2DUVAnimation, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iSprite2DUVAnimation_GetFrame__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iSprite2DUVAnimation_GetFrame'");
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimation_CreateFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimation *arg1 = (iSprite2DUVAnimation *) 0 ;
    int arg2 ;
    iSprite2DUVAnimationFrame *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite2DUVAnimation_CreateFrame",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimation,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSprite2DUVAnimationFrame *)(arg1)->CreateFrame(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSprite2DUVAnimationFrame, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimation_MoveFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimation *arg1 = (iSprite2DUVAnimation *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iSprite2DUVAnimation_MoveFrame",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimation,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MoveFrame(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DUVAnimation_RemoveFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimation *arg1 = (iSprite2DUVAnimation *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite2DUVAnimation_RemoveFrame",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimation,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveFrame(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSprite2DUVAnimation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DUVAnimation *arg1 = (iSprite2DUVAnimation *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSprite2DUVAnimation",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DUVAnimation,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSprite2DUVAnimation_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSprite2DUVAnimation, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSprite2DFactoryState_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSprite2DFactoryState_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSprite2DFactoryState_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSprite2DFactoryState_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSprite2DFactoryState_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iSprite2DFactoryState_scfGetID")) goto fail;
    result = (scfInterfaceID)iSprite2DFactoryState_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DFactoryState_SetMaterialWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DFactoryState *arg1 = (iSprite2DFactoryState *) 0 ;
    iMaterialWrapper *arg2 = (iMaterialWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSprite2DFactoryState_SetMaterialWrapper",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMaterialWrapper(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DFactoryState_GetMaterialWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DFactoryState *arg1 = (iSprite2DFactoryState *) 0 ;
    iMaterialWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite2DFactoryState_GetMaterialWrapper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialWrapper *)((iSprite2DFactoryState const *)arg1)->GetMaterialWrapper();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DFactoryState_SetMixMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DFactoryState *arg1 = (iSprite2DFactoryState *) 0 ;
    uint arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSprite2DFactoryState_SetMixMode",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetMixMode(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DFactoryState_GetMixMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DFactoryState *arg1 = (iSprite2DFactoryState *) 0 ;
    uint result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite2DFactoryState_GetMixMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint)((iSprite2DFactoryState const *)arg1)->GetMixMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DFactoryState_SetLighting(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DFactoryState *arg1 = (iSprite2DFactoryState *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSprite2DFactoryState_SetLighting",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetLighting(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DFactoryState_HasLighting(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DFactoryState *arg1 = (iSprite2DFactoryState *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite2DFactoryState_HasLighting",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iSprite2DFactoryState const *)arg1)->HasLighting();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DFactoryState_GetUVAnimationCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DFactoryState *arg1 = (iSprite2DFactoryState *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite2DFactoryState_GetUVAnimationCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSprite2DFactoryState const *)arg1)->GetUVAnimationCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DFactoryState_CreateUVAnimation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DFactoryState *arg1 = (iSprite2DFactoryState *) 0 ;
    iSprite2DUVAnimation *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite2DFactoryState_CreateUVAnimation",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSprite2DUVAnimation *)(arg1)->CreateUVAnimation();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSprite2DUVAnimation, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DFactoryState_RemoveUVAnimation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DFactoryState *arg1 = (iSprite2DFactoryState *) 0 ;
    iSprite2DUVAnimation *arg2 = (iSprite2DUVAnimation *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSprite2DFactoryState_RemoveUVAnimation",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSprite2DUVAnimation,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveUVAnimation(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DFactoryState_GetUVAnimation__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DFactoryState *arg1 = (iSprite2DFactoryState *) 0 ;
    char *arg2 ;
    iSprite2DUVAnimation *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSprite2DFactoryState_GetUVAnimation",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSprite2DUVAnimation *)(arg1)->GetUVAnimation((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSprite2DUVAnimation, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DFactoryState_GetUVAnimation__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DFactoryState *arg1 = (iSprite2DFactoryState *) 0 ;
    int arg2 ;
    iSprite2DUVAnimation *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite2DFactoryState_GetUVAnimation",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSprite2DUVAnimation *)(arg1)->GetUVAnimation(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSprite2DUVAnimation, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DFactoryState_GetUVAnimation(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSprite2DFactoryState, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iSprite2DFactoryState_GetUVAnimation__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSprite2DFactoryState, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iSprite2DFactoryState_GetUVAnimation__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iSprite2DFactoryState_GetUVAnimation'");
    return NULL;
}


static PyObject *_wrap_delete_iSprite2DFactoryState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DFactoryState *arg1 = (iSprite2DFactoryState *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSprite2DFactoryState",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSprite2DFactoryState_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSprite2DFactoryState, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSprite2DState_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSprite2DState_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSprite2DState_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSprite2DState_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSprite2DState_GetVertices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DState *arg1 = (iSprite2DState *) 0 ;
    csColoredVertices *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite2DState_GetVertices",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csColoredVertices &_result_ref = (arg1)->GetVertices();
        result = (csColoredVertices *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColoredVertices, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DState_CreateRegularVertices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DState *arg1 = (iSprite2DState *) 0 ;
    int arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:iSprite2DState_CreateRegularVertices",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->CreateRegularVertices(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DState_SetUVAnimation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DState *arg1 = (iSprite2DState *) 0 ;
    char *arg2 ;
    int arg3 ;
    bool arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsiO:iSprite2DState_SetUVAnimation",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg4 = PyInt_AsLong(obj3) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetUVAnimation((char const *)arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DState_StopUVAnimation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DState *arg1 = (iSprite2DState *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite2DState_StopUVAnimation",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StopUVAnimation(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DState_PlayUVAnimation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DState *arg1 = (iSprite2DState *) 0 ;
    int arg2 ;
    int arg3 ;
    bool arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiO:iSprite2DState_PlayUVAnimation",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg4 = PyInt_AsLong(obj3) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->PlayUVAnimation(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite2DState_GetVertexByIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DState *arg1 = (iSprite2DState *) 0 ;
    int arg2 ;
    csSprite2DVertex *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite2DState_GetVertexByIndex",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csSprite2DVertex *)iSprite2DState_GetVertexByIndex(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csSprite2DVertex, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSprite2DState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite2DState *arg1 = (iSprite2DState *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSprite2DState",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite2DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iSprite2DState(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSprite2DState_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSprite2DState, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSpriteFrame_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSpriteFrame_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSpriteFrame_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSpriteFrame_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSpriteFrame_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iSpriteFrame_scfGetID")) goto fail;
    result = (scfInterfaceID)iSpriteFrame_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSpriteFrame_SetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteFrame *arg1 = (iSpriteFrame *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSpriteFrame_SetName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteFrame,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSpriteFrame_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteFrame *arg1 = (iSpriteFrame *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSpriteFrame_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteFrame,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iSpriteFrame const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSpriteFrame_GetAnmIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteFrame *arg1 = (iSpriteFrame *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSpriteFrame_GetAnmIndex",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteFrame,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSpriteFrame const *)arg1)->GetAnmIndex();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSpriteFrame_GetTexIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteFrame *arg1 = (iSpriteFrame *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSpriteFrame_GetTexIndex",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteFrame,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSpriteFrame const *)arg1)->GetTexIndex();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSpriteFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteFrame *arg1 = (iSpriteFrame *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSpriteFrame",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteFrame,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSpriteFrame_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSpriteFrame, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSpriteAction_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSpriteAction_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSpriteAction_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSpriteAction_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSpriteAction_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iSpriteAction_scfGetID")) goto fail;
    result = (scfInterfaceID)iSpriteAction_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSpriteAction_SetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteAction *arg1 = (iSpriteAction *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSpriteAction_SetName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteAction,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSpriteAction_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteAction *arg1 = (iSpriteAction *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSpriteAction_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteAction,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iSpriteAction const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSpriteAction_GetFrameCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteAction *arg1 = (iSpriteAction *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSpriteAction_GetFrameCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteAction,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetFrameCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSpriteAction_GetFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteAction *arg1 = (iSpriteAction *) 0 ;
    int arg2 ;
    iSpriteFrame *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSpriteAction_GetFrame",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteAction,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSpriteFrame *)(arg1)->GetFrame(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSpriteFrame, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSpriteAction_GetNextFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteAction *arg1 = (iSpriteAction *) 0 ;
    int arg2 ;
    iSpriteFrame *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSpriteAction_GetNextFrame",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteAction,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSpriteFrame *)(arg1)->GetNextFrame(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSpriteFrame, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSpriteAction_GetFrameDelay(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteAction *arg1 = (iSpriteAction *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSpriteAction_GetFrameDelay",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteAction,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetFrameDelay(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSpriteAction_GetFrameDisplacement(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteAction *arg1 = (iSpriteAction *) 0 ;
    int arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSpriteAction_GetFrameDisplacement",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteAction,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetFrameDisplacement(arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSpriteAction_AddFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteAction *arg1 = (iSpriteAction *) 0 ;
    iSpriteFrame *arg2 = (iSpriteFrame *) 0 ;
    int arg3 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOif:iSpriteAction_AddFrame",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteAction,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSpriteFrame,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddFrame(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSpriteAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteAction *arg1 = (iSpriteAction *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSpriteAction",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteAction,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSpriteAction_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSpriteAction, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSpriteSocket_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSpriteSocket_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSpriteSocket_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSpriteSocket_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSpriteSocket_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iSpriteSocket_scfGetID")) goto fail;
    result = (scfInterfaceID)iSpriteSocket_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSpriteSocket_SetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteSocket *arg1 = (iSpriteSocket *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSpriteSocket_SetName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteSocket,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSpriteSocket_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteSocket *arg1 = (iSpriteSocket *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSpriteSocket_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteSocket,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iSpriteSocket const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSpriteSocket_SetMeshWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteSocket *arg1 = (iSpriteSocket *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSpriteSocket_SetMeshWrapper",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteSocket,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMeshWrapper(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSpriteSocket_GetMeshWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteSocket *arg1 = (iSpriteSocket *) 0 ;
    iMeshWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSpriteSocket_GetMeshWrapper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteSocket,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshWrapper *)((iSpriteSocket const *)arg1)->GetMeshWrapper();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSpriteSocket_SetTriangleIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteSocket *arg1 = (iSpriteSocket *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSpriteSocket_SetTriangleIndex",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteSocket,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetTriangleIndex(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSpriteSocket_GetTriangleIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteSocket *arg1 = (iSpriteSocket *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSpriteSocket_GetTriangleIndex",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteSocket,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSpriteSocket const *)arg1)->GetTriangleIndex();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSpriteSocket(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSpriteSocket *arg1 = (iSpriteSocket *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSpriteSocket",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSpriteSocket,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSpriteSocket_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSpriteSocket, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSprite3DFactoryState_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSprite3DFactoryState_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSprite3DFactoryState_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSprite3DFactoryState_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSprite3DFactoryState_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iSprite3DFactoryState_scfGetID")) goto fail;
    result = (scfInterfaceID)iSprite3DFactoryState_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_SetMaterialWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    iMaterialWrapper *arg2 = (iMaterialWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSprite3DFactoryState_SetMaterialWrapper",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMaterialWrapper(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetMaterialWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    iMaterialWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DFactoryState_GetMaterialWrapper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialWrapper *)((iSprite3DFactoryState const *)arg1)->GetMaterialWrapper();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_AddVertices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite3DFactoryState_AddVertices",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddVertices(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetVertexCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DFactoryState_GetVertexCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSprite3DFactoryState const *)arg1)->GetVertexCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetVertex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    int arg3 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iSprite3DFactoryState_GetVertex",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = ((iSprite3DFactoryState const *)arg1)->GetVertex(arg2,arg3);
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_SetVertex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    int arg3 ;
    csVector3 *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiO:iSprite3DFactoryState_SetVertex",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetVertex(arg2,arg3,(csVector3 const &)*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetVertices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite3DFactoryState_GetVertices",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)((iSprite3DFactoryState const *)arg1)->GetVertices(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_SetVertices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    csVector3 *arg2 = (csVector3 *) 0 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iSprite3DFactoryState_SetVertices",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetVertices((csVector3 const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetTexel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    int arg3 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iSprite3DFactoryState_GetTexel",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector2 const &_result_ref = ((iSprite3DFactoryState const *)arg1)->GetTexel(arg2,arg3);
        result = (csVector2 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_SetTexel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    int arg3 ;
    csVector2 *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiO:iSprite3DFactoryState_SetTexel",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetTexel(arg2,arg3,(csVector2 const &)*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetTexels(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite3DFactoryState_GetTexels",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector2 *)((iSprite3DFactoryState const *)arg1)->GetTexels(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_SetTexels(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    csVector2 *arg2 = (csVector2 *) 0 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iSprite3DFactoryState_SetTexels",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetTexels((csVector2 const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetNormal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    int arg3 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iSprite3DFactoryState_GetNormal",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = ((iSprite3DFactoryState const *)arg1)->GetNormal(arg2,arg3);
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_SetNormal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    int arg3 ;
    csVector3 *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiO:iSprite3DFactoryState_SetNormal",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetNormal(arg2,arg3,(csVector3 const &)*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetNormals(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite3DFactoryState_GetNormals",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)((iSprite3DFactoryState const *)arg1)->GetNormals(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_SetNormals(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    csVector3 *arg2 = (csVector3 *) 0 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iSprite3DFactoryState_SetNormals",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetNormals((csVector3 const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_AddTriangle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:iSprite3DFactoryState_AddTriangle",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddTriangle(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetTriangle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    csTriangle result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite3DFactoryState_GetTriangle",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iSprite3DFactoryState const *)arg1)->GetTriangle(arg2);
    
    {
        csTriangle * resultptr;
        resultptr = new csTriangle((csTriangle &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csTriangle, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetTriangles(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    csTriangle *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DFactoryState_GetTriangles",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csTriangle *)((iSprite3DFactoryState const *)arg1)->GetTriangles();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csTriangle, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetTriangleCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DFactoryState_GetTriangleCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSprite3DFactoryState const *)arg1)->GetTriangleCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_SetTriangleCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite3DFactoryState_SetTriangleCount",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetTriangleCount(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_SetTriangles(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    csTriangle *arg2 = (csTriangle *) 0 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iSprite3DFactoryState_SetTriangles",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csTriangle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetTriangles((csTriangle const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_AddFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    iSpriteFrame *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DFactoryState_AddFrame",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSpriteFrame *)(arg1)->AddFrame();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSpriteFrame, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_FindFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    char *arg2 ;
    iSpriteFrame *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSprite3DFactoryState_FindFrame",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSpriteFrame *)((iSprite3DFactoryState const *)arg1)->FindFrame((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSpriteFrame, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetFrameCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DFactoryState_GetFrameCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSprite3DFactoryState const *)arg1)->GetFrameCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    iSpriteFrame *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite3DFactoryState_GetFrame",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSpriteFrame *)((iSprite3DFactoryState const *)arg1)->GetFrame(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSpriteFrame, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_AddAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    iSpriteAction *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DFactoryState_AddAction",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSpriteAction *)(arg1)->AddAction();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSpriteAction, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_FindAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    char *arg2 ;
    iSpriteAction *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSprite3DFactoryState_FindAction",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSpriteAction *)((iSprite3DFactoryState const *)arg1)->FindAction((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSpriteAction, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetFirstAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    iSpriteAction *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DFactoryState_GetFirstAction",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSpriteAction *)((iSprite3DFactoryState const *)arg1)->GetFirstAction();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSpriteAction, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetActionCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DFactoryState_GetActionCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSprite3DFactoryState const *)arg1)->GetActionCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    iSpriteAction *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite3DFactoryState_GetAction",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSpriteAction *)((iSprite3DFactoryState const *)arg1)->GetAction(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSpriteAction, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_AddSocket(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    iSpriteSocket *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DFactoryState_AddSocket",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSpriteSocket *)(arg1)->AddSocket();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSpriteSocket, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_FindSocket__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    char *arg2 ;
    iSpriteSocket *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSprite3DFactoryState_FindSocket",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSpriteSocket *)((iSprite3DFactoryState const *)arg1)->FindSocket((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSpriteSocket, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_FindSocket__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    iSpriteSocket *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSprite3DFactoryState_FindSocket",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSpriteSocket *)((iSprite3DFactoryState const *)arg1)->FindSocket(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSpriteSocket, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_FindSocket(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSprite3DFactoryState, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iMeshWrapper, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iSprite3DFactoryState_FindSocket__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSprite3DFactoryState, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iSprite3DFactoryState_FindSocket__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iSprite3DFactoryState_FindSocket'");
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetSocketCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DFactoryState_GetSocketCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSprite3DFactoryState const *)arg1)->GetSocketCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetSocket(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    iSpriteSocket *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite3DFactoryState_GetSocket",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSpriteSocket *)((iSprite3DFactoryState const *)arg1)->GetSocket(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSpriteSocket, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_EnableSkeletalAnimation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DFactoryState_EnableSkeletalAnimation",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->EnableSkeletalAnimation();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetSkeleton(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    iSkeleton *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DFactoryState_GetSkeleton",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSkeleton *)((iSprite3DFactoryState const *)arg1)->GetSkeleton();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSkeleton, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_EnableTweening(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSprite3DFactoryState_EnableTweening",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->EnableTweening(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_IsTweeningEnabled(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DFactoryState_IsTweeningEnabled",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iSprite3DFactoryState const *)arg1)->IsTweeningEnabled();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_SetLightingQuality(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite3DFactoryState_SetLightingQuality",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetLightingQuality(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetLightingQuality(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DFactoryState_GetLightingQuality",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSprite3DFactoryState const *)arg1)->GetLightingQuality();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_SetLightingQualityConfig(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite3DFactoryState_SetLightingQualityConfig",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetLightingQualityConfig(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetLightingQualityConfig(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DFactoryState_GetLightingQualityConfig",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSprite3DFactoryState const *)arg1)->GetLightingQualityConfig();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_SetLodLevelConfig(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite3DFactoryState_SetLodLevelConfig",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetLodLevelConfig(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetLodLevelConfig(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DFactoryState_GetLodLevelConfig",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSprite3DFactoryState const *)arg1)->GetLodLevelConfig();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_MergeNormals__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iSprite3DFactoryState_MergeNormals",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MergeNormals(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_MergeNormals__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite3DFactoryState_MergeNormals",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MergeNormals(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_MergeNormals__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DFactoryState_MergeNormals",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MergeNormals();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_MergeNormals(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSprite3DFactoryState, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_iSprite3DFactoryState_MergeNormals__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSprite3DFactoryState, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iSprite3DFactoryState_MergeNormals__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSprite3DFactoryState, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iSprite3DFactoryState_MergeNormals__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iSprite3DFactoryState_MergeNormals'");
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_SetMixMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    uint arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSprite3DFactoryState_SetMixMode",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetMixMode(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DFactoryState_GetMixMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    uint result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DFactoryState_GetMixMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint)((iSprite3DFactoryState const *)arg1)->GetMixMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSprite3DFactoryState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DFactoryState *arg1 = (iSprite3DFactoryState *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSprite3DFactoryState",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSprite3DFactoryState_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSprite3DFactoryState, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSprite3DState_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSprite3DState_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSprite3DState_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSprite3DState_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSprite3DState_SetMaterialWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    iMaterialWrapper *arg2 = (iMaterialWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSprite3DState_SetMaterialWrapper",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMaterialWrapper(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_GetMaterialWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    iMaterialWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DState_GetMaterialWrapper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialWrapper *)((iSprite3DState const *)arg1)->GetMaterialWrapper();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_SetMixMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    uint arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSprite3DState_SetMixMode",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetMixMode(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_GetMixMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    uint result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DState_GetMixMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint)((iSprite3DState const *)arg1)->GetMixMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_SetLighting(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSprite3DState_SetLighting",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetLighting(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_IsLighting(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DState_IsLighting",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iSprite3DState const *)arg1)->IsLighting();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_GetSkeletonState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    iSkeletonState *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DState_GetSkeletonState",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSkeletonState *)((iSprite3DState const *)arg1)->GetSkeletonState();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSkeletonState, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_SetFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite3DState_SetFrame",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFrame(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_GetCurFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DState_GetCurFrame",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSprite3DState const *)arg1)->GetCurFrame();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_GetFrameCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DState_GetFrameCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSprite3DState const *)arg1)->GetFrameCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_SetAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    char *arg2 ;
    bool arg3 = (bool) true ;
    float arg4 = (float) 1 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|Of:iSprite3DState_SetAction",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->SetAction((char const *)arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_SetReverseAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSprite3DState_SetReverseAction",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetReverseAction(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_SetSingleStepAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSprite3DState_SetSingleStepAction",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetSingleStepAction(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_SetOverrideAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    char *arg2 ;
    float arg3 = (float) 1 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|f:iSprite3DState_SetOverrideAction",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetOverrideAction((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_PropagateAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSprite3DState_PropagateAction",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->PropagateAction((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_GetCurAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    iSpriteAction *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DState_GetCurAction",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSpriteAction *)((iSprite3DState const *)arg1)->GetCurAction();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSpriteAction, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_GetReverseAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DState_GetReverseAction",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iSprite3DState const *)arg1)->GetReverseAction();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_EnableTweening(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSprite3DState_EnableTweening",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->EnableTweening(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_IsTweeningEnabled(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DState_IsTweeningEnabled",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iSprite3DState const *)arg1)->IsTweeningEnabled();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_UnsetTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DState_UnsetTexture",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UnsetTexture();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_GetLightingQuality(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DState_GetLightingQuality",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetLightingQuality();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_SetLocalLightingQuality(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite3DState_SetLocalLightingQuality",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetLocalLightingQuality(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_SetLightingQualityConfig(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite3DState_SetLightingQualityConfig",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetLightingQualityConfig(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_GetLightingQualityConfig(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DState_GetLightingQualityConfig",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSprite3DState const *)arg1)->GetLightingQualityConfig();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_SetLodLevelConfig(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSprite3DState_SetLodLevelConfig",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetLodLevelConfig(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_GetLodLevelConfig(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DState_GetLodLevelConfig",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iSprite3DState const *)arg1)->GetLodLevelConfig();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_IsLodEnabled(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSprite3DState_IsLodEnabled",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iSprite3DState const *)arg1)->IsLodEnabled();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_SetBaseColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    csColor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSprite3DState_SetBaseColor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetBaseColor((csColor const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_GetBaseColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    csColor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSprite3DState_GetBaseColor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((iSprite3DState const *)arg1)->GetBaseColor(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_FindSocket__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    iSpriteSocket *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSprite3DState_FindSocket",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSpriteSocket *)((iSprite3DState const *)arg1)->FindSocket(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSpriteSocket, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_FindSocket__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    char *arg2 ;
    iSpriteSocket *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSprite3DState_FindSocket",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSpriteSocket *)((iSprite3DState const *)arg1)->FindSocket((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSpriteSocket, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSprite3DState_FindSocket(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSprite3DState, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iMeshWrapper, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iSprite3DState_FindSocket__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSprite3DState, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iSprite3DState_FindSocket__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iSprite3DState_FindSocket'");
    return NULL;
}


static PyObject *_wrap_delete_iSprite3DState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSprite3DState *arg1 = (iSprite3DState *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSprite3DState",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSprite3DState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iSprite3DState(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSprite3DState_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSprite3DState, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iThingFactoryState_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iThingFactoryState_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iThingFactoryState_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iThingFactoryState_VERSION);
    return pyobj;
}


static PyObject *_wrap_iThingFactoryState_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iThingFactoryState_scfGetID")) goto fail;
    result = (scfInterfaceID)iThingFactoryState_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_GetPrivateObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    void *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingFactoryState_GetPrivateObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *)(arg1)->GetPrivateObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_CompressVertices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingFactoryState_CompressVertices",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CompressVertices();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_GetPolygonCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingFactoryState_GetPolygonCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetPolygonCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_GetPolygon__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    int arg2 ;
    iPolygon3DStatic *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iThingFactoryState_GetPolygon",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPolygon3DStatic *)(arg1)->GetPolygon(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygon3DStatic, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_GetPolygon__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    char *arg2 ;
    iPolygon3DStatic *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iThingFactoryState_GetPolygon",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPolygon3DStatic *)(arg1)->GetPolygon((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygon3DStatic, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_GetPolygon(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iThingFactoryState, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iThingFactoryState_GetPolygon__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iThingFactoryState, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iThingFactoryState_GetPolygon__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iThingFactoryState_GetPolygon'");
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_CreatePolygon(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    char *arg2 = (char *) 0 ;
    iPolygon3DStatic *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|s:iThingFactoryState_CreatePolygon",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPolygon3DStatic *)(arg1)->CreatePolygon((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygon3DStatic, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_FindPolygonIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    iPolygon3DStatic *arg2 = (iPolygon3DStatic *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iThingFactoryState_FindPolygonIndex",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iThingFactoryState const *)arg1)->FindPolygonIndex(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_RemovePolygon(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iThingFactoryState_RemovePolygon",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemovePolygon(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_RemovePolygons(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingFactoryState_RemovePolygons",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemovePolygons();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_GetPortalCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingFactoryState_GetPortalCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iThingFactoryState const *)arg1)->GetPortalCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_GetPortal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    int arg2 ;
    iPortal *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iThingFactoryState_GetPortal",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPortal *)((iThingFactoryState const *)arg1)->GetPortal(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPortal, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_GetPortalPolygon(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    int arg2 ;
    iPolygon3DStatic *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iThingFactoryState_GetPortalPolygon",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPolygon3DStatic *)((iThingFactoryState const *)arg1)->GetPortalPolygon(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygon3DStatic, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_GetVertexCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingFactoryState_GetVertexCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iThingFactoryState const *)arg1)->GetVertexCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_GetVertex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    int arg2 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iThingFactoryState_GetVertex",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = ((iThingFactoryState const *)arg1)->GetVertex(arg2);
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_GetVertices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingFactoryState_GetVertices",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)((iThingFactoryState const *)arg1)->GetVertices();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_CreateVertex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    csVector3 *arg2 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iThingFactoryState_CreateVertex",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->CreateVertex((csVector3 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_SetVertex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    int arg2 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:iThingFactoryState_SetVertex",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetVertex(arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_DeleteVertex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iThingFactoryState_DeleteVertex",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DeleteVertex(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_DeleteVertices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iThingFactoryState_DeleteVertices",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DeleteVertices(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_GetFlags(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    csFlags *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingFactoryState_GetFlags",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csFlags &_result_ref = (arg1)->GetFlags();
        result = (csFlags *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csFlags, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_IntersectSegment(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    float *arg5 = (float *) 0 ;
    bool arg6 = (bool) false ;
    iPolygon3DStatic *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO|OO:iThingFactoryState_IntersectSegment",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj4) {
        if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj5) {
        arg6 = PyInt_AsLong(obj5) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (iPolygon3DStatic *)(arg1)->IntersectSegment((csVector3 const &)*arg2,(csVector3 const &)*arg3,*arg4,arg5,arg6);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygon3DStatic, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_SetSmoothingFlag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iThingFactoryState_SetSmoothingFlag",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetSmoothingFlag(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_GetSmoothingFlag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingFactoryState_GetSmoothingFlag",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->GetSmoothingFlag();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_GetNormals(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingFactoryState_GetNormals",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)(arg1)->GetNormals();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_GetCosinusFactor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingFactoryState_GetCosinusFactor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iThingFactoryState const *)arg1)->GetCosinusFactor();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingFactoryState_SetCosinusFactor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iThingFactoryState_SetCosinusFactor",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCosinusFactor(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iThingFactoryState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingFactoryState *arg1 = (iThingFactoryState *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iThingFactoryState",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingFactoryState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iThingFactoryState_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iThingFactoryState, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iThingState_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iThingState_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iThingState_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iThingState_VERSION);
    return pyobj;
}


static PyObject *_wrap_iThingState_GetPrivateObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 = (iThingState *) 0 ;
    void *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingState_GetPrivateObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *)(arg1)->GetPrivateObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingState_GetFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 = (iThingState *) 0 ;
    iThingFactoryState *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingState_GetFactory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iThingFactoryState *)(arg1)->GetFactory();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iThingFactoryState, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingState_GetPolygon__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 = (iThingState *) 0 ;
    int arg2 ;
    iPolygon3D *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iThingState_GetPolygon",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPolygon3D *)(arg1)->GetPolygon(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygon3D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingState_GetPolygon__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 = (iThingState *) 0 ;
    char *arg2 ;
    iPolygon3D *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iThingState_GetPolygon",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPolygon3D *)(arg1)->GetPolygon((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygon3D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingState_GetPolygon(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iThingState, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iThingState_GetPolygon__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iThingState, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iThingState_GetPolygon__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iThingState_GetPolygon'");
    return NULL;
}


static PyObject *_wrap_iThingState_FindPolygonIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 = (iThingState *) 0 ;
    iPolygon3D *arg2 = (iPolygon3D *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iThingState_FindPolygonIndex",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPolygon3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iThingState const *)arg1)->FindPolygonIndex(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingState_GetPortalPolygon(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 = (iThingState *) 0 ;
    int arg2 ;
    iPolygon3D *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iThingState_GetPortalPolygon",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPolygon3D *)((iThingState const *)arg1)->GetPortalPolygon(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygon3D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingState_GetVertexW(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 = (iThingState *) 0 ;
    int arg2 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iThingState_GetVertexW",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = ((iThingState const *)arg1)->GetVertexW(arg2);
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingState_GetVerticesW(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 = (iThingState *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingState_GetVerticesW",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)((iThingState const *)arg1)->GetVerticesW();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingState_GetVertexC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 = (iThingState *) 0 ;
    int arg2 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iThingState_GetVertexC",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = ((iThingState const *)arg1)->GetVertexC(arg2);
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingState_GetVerticesC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 = (iThingState *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingState_GetVerticesC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)((iThingState const *)arg1)->GetVerticesC();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingState_GetMovingOption(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 = (iThingState *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingState_GetMovingOption",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iThingState const *)arg1)->GetMovingOption();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingState_SetMovingOption(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 = (iThingState *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iThingState_SetMovingOption",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMovingOption(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingState_IntersectSegment(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 = (iThingState *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    float *arg5 = (float *) 0 ;
    bool arg6 = (bool) false ;
    iPolygon3D *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO|OO:iThingState_IntersectSegment",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj4) {
        if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj5) {
        arg6 = PyInt_AsLong(obj5) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (iPolygon3D *)(arg1)->IntersectSegment((csVector3 const &)*arg2,(csVector3 const &)*arg3,*arg4,arg5,arg6);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygon3D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingState_Prepare(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 = (iThingState *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingState_Prepare",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Prepare();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingState_Unprepare(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 = (iThingState *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingState_Unprepare",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Unprepare();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingState_ReplaceMaterial(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 = (iThingState *) 0 ;
    iMaterialWrapper *arg2 = (iMaterialWrapper *) 0 ;
    iMaterialWrapper *arg3 = (iMaterialWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iThingState_ReplaceMaterial",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ReplaceMaterial(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingState_ClearReplacedMaterials(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 = (iThingState *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingState_ClearReplacedMaterials",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearReplacedMaterials();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iThingState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 = (iThingState *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iThingState",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iThingState(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iThingState_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iThingState, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iThingEnvironment_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iThingEnvironment_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iThingEnvironment_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iThingEnvironment_VERSION);
    return pyobj;
}


static PyObject *_wrap_iThingEnvironment_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iThingEnvironment_scfGetID")) goto fail;
    result = (scfInterfaceID)iThingEnvironment_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingEnvironment_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingEnvironment *arg1 = (iThingEnvironment *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingEnvironment_Clear",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingEnvironment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Clear();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingEnvironment_GetLightmapCellSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingEnvironment *arg1 = (iThingEnvironment *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingEnvironment_GetLightmapCellSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingEnvironment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iThingEnvironment const *)arg1)->GetLightmapCellSize();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingEnvironment_SetLightmapCellSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingEnvironment *arg1 = (iThingEnvironment *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iThingEnvironment_SetLightmapCellSize",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingEnvironment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetLightmapCellSize(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iThingEnvironment_GetDefaultLightmapCellSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingEnvironment *arg1 = (iThingEnvironment *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iThingEnvironment_GetDefaultLightmapCellSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingEnvironment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iThingEnvironment const *)arg1)->GetDefaultLightmapCellSize();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iThingEnvironment(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingEnvironment *arg1 = (iThingEnvironment *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iThingEnvironment",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingEnvironment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iThingEnvironment_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iThingEnvironment, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iLightMap_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iLightMap_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iLightMap_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iLightMap_VERSION);
    return pyobj;
}


static PyObject *_wrap_iLightMap_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iLightMap_scfGetID")) goto fail;
    result = (scfInterfaceID)iLightMap_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightMap_GetMapData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 = (iLightMap *) 0 ;
    csRGBpixel *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightMap_GetMapData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csRGBpixel *)(arg1)->GetMapData();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csRGBpixel, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightMap_GetWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 = (iLightMap *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightMap_GetWidth",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightMap_GetHeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 = (iLightMap *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightMap_GetHeight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetHeight();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightMap_GetRealWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 = (iLightMap *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightMap_GetRealWidth",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetRealWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightMap_GetRealHeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 = (iLightMap *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightMap_GetRealHeight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetRealHeight();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightMap_GetCacheData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 = (iLightMap *) 0 ;
    void *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightMap_GetCacheData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *)(arg1)->GetCacheData();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightMap_SetCacheData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 = (iLightMap *) 0 ;
    void *arg2 = (void *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iLightMap_SetCacheData",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCacheData(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightMap_GetMeanLighting(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 = (iLightMap *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    int temp2 ;
    int temp3 ;
    int temp4 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    arg4 = &temp4;
    if(!PyArg_ParseTuple(args,(char *)"O:iLightMap_GetMeanLighting",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetMeanLighting(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLightMap_GetSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 = (iLightMap *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightMap_GetSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (long)(arg1)->GetSize();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iLightMap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 = (iLightMap *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iLightMap",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iLightMap_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iLightMap, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iPolygon3DStatic_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iPolygon3DStatic_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iPolygon3DStatic_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iPolygon3DStatic_VERSION);
    return pyobj;
}


static PyObject *_wrap_iPolygon3DStatic_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iPolygon3DStatic_scfGetID")) goto fail;
    result = (scfInterfaceID)iPolygon3DStatic_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_GetPrivateObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    csPolygon3DStatic *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3DStatic_GetPrivateObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csPolygon3DStatic *)(arg1)->GetPrivateObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPolygon3DStatic, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3DStatic_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iPolygon3DStatic const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_SetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPolygon3DStatic_SetName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_GetParent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    iThingFactoryState *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3DStatic_GetParent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iThingFactoryState *)(arg1)->GetParent();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iThingFactoryState, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_GetMaterialHandle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    iMaterialHandle *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3DStatic_GetMaterialHandle",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialHandle *)(arg1)->GetMaterialHandle();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialHandle, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_SetMaterial(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    iMaterialWrapper *arg2 = (iMaterialWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPolygon3DStatic_SetMaterial",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMaterial(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_GetMaterial(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    iMaterialWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3DStatic_GetMaterial",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialWrapper *)(arg1)->GetMaterial();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_GetVertexCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3DStatic_GetVertexCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetVertexCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_GetVertexIndices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    int *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3DStatic_GetVertexIndices",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int *)(arg1)->GetVertexIndices();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_int, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_GetVertex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    int arg2 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPolygon3DStatic_GetVertex",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = ((iPolygon3DStatic const *)arg1)->GetVertex(arg2);
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_CreateVertex__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPolygon3DStatic_CreateVertex",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->CreateVertex(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_CreateVertex__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    csVector3 *arg2 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPolygon3DStatic_CreateVertex",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->CreateVertex((csVector3 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_CreateVertex(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPolygon3DStatic, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iPolygon3DStatic_CreateVertex__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPolygon3DStatic, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iPolygon3DStatic_CreateVertex__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPolygon3DStatic_CreateVertex'");
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_GetAlpha(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3DStatic_GetAlpha",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetAlpha();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_SetAlpha(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPolygon3DStatic_SetAlpha",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetAlpha(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_CreatePlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    csVector3 *arg2 = 0 ;
    csMatrix3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPolygon3DStatic_CreatePlane",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->CreatePlane((csVector3 const &)*arg2,(csMatrix3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_GetFlags(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    csFlags *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3DStatic_GetFlags",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csFlags &_result_ref = (arg1)->GetFlags();
        result = (csFlags *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csFlags, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_CreateNullPortal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    iPortal *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3DStatic_CreateNullPortal",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPortal *)(arg1)->CreateNullPortal();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPortal, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_CreatePortal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    iPortal *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPolygon3DStatic_CreatePortal",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPortal *)(arg1)->CreatePortal(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPortal, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_GetPortal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    iPortal *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3DStatic_GetPortal",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPortal *)(arg1)->GetPortal();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPortal, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_SetTextureSpace__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector2 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    csVector2 *arg5 = 0 ;
    csVector3 *arg6 = 0 ;
    csVector2 *arg7 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOOO:iPolygon3DStatic_SetTextureSpace",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetTextureSpace((csVector3 const &)*arg2,(csVector2 const &)*arg3,(csVector3 const &)*arg4,(csVector2 const &)*arg5,(csVector3 const &)*arg6,(csVector2 const &)*arg7);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_SetTextureSpace__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOf:iPolygon3DStatic_SetTextureSpace",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetTextureSpace((csVector3 const &)*arg2,(csVector3 const &)*arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_SetTextureSpace__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    float arg4 ;
    csVector3 *arg5 = 0 ;
    float arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOfOf:iPolygon3DStatic_SetTextureSpace",&obj0,&obj1,&obj2,&arg4,&obj4,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetTextureSpace((csVector3 const &)*arg2,(csVector3 const &)*arg3,arg4,(csVector3 const &)*arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_SetTextureSpace__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    csMatrix3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPolygon3DStatic_SetTextureSpace",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetTextureSpace((csMatrix3 const &)*arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_SetTextureSpace(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[8];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 7); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPolygon3DStatic, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csMatrix3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iPolygon3DStatic_SetTextureSpace__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPolygon3DStatic, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyFloat_Check(argv[3]) || PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_iPolygon3DStatic_SetTextureSpace__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPolygon3DStatic, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyFloat_Check(argv[3]) || PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                _v = (PyFloat_Check(argv[5]) || PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_iPolygon3DStatic_SetTextureSpace__SWIG_2(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPolygon3DStatic, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_csVector2, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    return _wrap_iPolygon3DStatic_SetTextureSpace__SWIG_0(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPolygon3DStatic_SetTextureSpace'");
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_GetTextureSpace(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    csMatrix3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPolygon3DStatic_GetTextureSpace",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetTextureSpace(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_EnableTextureMapping(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPolygon3DStatic_EnableTextureMapping",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->EnableTextureMapping(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_IsTextureMappingEnabled(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3DStatic_IsTextureMappingEnabled",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPolygon3DStatic const *)arg1)->IsTextureMappingEnabled();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_CopyTextureType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    iPolygon3DStatic *arg2 = (iPolygon3DStatic *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPolygon3DStatic_CopyTextureType",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CopyTextureType(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_GetObjectPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    csPlane3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3DStatic_GetObjectPlane",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csPlane3 const &_result_ref = (arg1)->GetObjectPlane();
        result = (csPlane3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPlane3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_IsTransparent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3DStatic_IsTransparent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsTransparent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_SetMixMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    uint arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPolygon3DStatic_SetMixMode",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetMixMode(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_GetMixMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    uint result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3DStatic_GetMixMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint)(arg1)->GetMixMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_IntersectSegment(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    float *arg5 = (float *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO|O:iPolygon3DStatic_IntersectSegment",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj4) {
        if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (bool)(arg1)->IntersectSegment((csVector3 const &)*arg2,(csVector3 const &)*arg3,*arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_IntersectRay(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPolygon3DStatic_IntersectRay",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->IntersectRay((csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_IntersectRayNoBackFace(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPolygon3DStatic_IntersectRayNoBackFace",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->IntersectRayNoBackFace((csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_IntersectRayPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iPolygon3DStatic_IntersectRayPlane",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->IntersectRayPlane((csVector3 const &)*arg2,(csVector3 const &)*arg3,*arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3DStatic_PointOnPolygon(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    csVector3 *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPolygon3DStatic_PointOnPolygon",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->PointOnPolygon((csVector3 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPolygon3DStatic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3DStatic *arg1 = (iPolygon3DStatic *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPolygon3DStatic",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3DStatic,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPolygon3DStatic_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPolygon3DStatic, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iPolygon3D_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iPolygon3D_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iPolygon3D_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iPolygon3D_VERSION);
    return pyobj;
}


static PyObject *_wrap_iPolygon3D_GetPrivateObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 = (iPolygon3D *) 0 ;
    csPolygon3D *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3D_GetPrivateObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csPolygon3D *)(arg1)->GetPrivateObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPolygon3D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3D_GetParent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 = (iPolygon3D *) 0 ;
    iThingState *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3D_GetParent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iThingState *)(arg1)->GetParent();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iThingState, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3D_GetLightMap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 = (iPolygon3D *) 0 ;
    iLightMap *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3D_GetLightMap",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iLightMap *)(arg1)->GetLightMap();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iLightMap, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3D_GetTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 = (iPolygon3D *) 0 ;
    iPolygonTexture *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3D_GetTexture",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPolygonTexture *)(arg1)->GetTexture();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygonTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3D_GetStaticData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 = (iPolygon3D *) 0 ;
    iPolygon3DStatic *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3D_GetStaticData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPolygon3DStatic *)((iPolygon3D const *)arg1)->GetStaticData();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygon3DStatic, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3D_GetVertexW(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 = (iPolygon3D *) 0 ;
    int arg2 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPolygon3D_GetVertexW",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = ((iPolygon3D const *)arg1)->GetVertexW(arg2);
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3D_GetVertexC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 = (iPolygon3D *) 0 ;
    int arg2 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPolygon3D_GetVertexC",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector3 const &_result_ref = ((iPolygon3D const *)arg1)->GetVertexC(arg2);
        result = (csVector3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3D_GetWorldPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 = (iPolygon3D *) 0 ;
    csPlane3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3D_GetWorldPlane",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csPlane3 const &_result_ref = (arg1)->GetWorldPlane();
        result = (csPlane3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPlane3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3D_ComputeCameraPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 = (iPolygon3D *) 0 ;
    csReversibleTransform *arg2 = 0 ;
    csPlane3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPolygon3D_ComputeCameraPlane",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->ComputeCameraPlane((csReversibleTransform const &)*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3D_SetMaterial(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 = (iPolygon3D *) 0 ;
    iMaterialWrapper *arg2 = (iMaterialWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPolygon3D_SetMaterial",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterialWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMaterial(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygon3D_GetMaterial(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 = (iPolygon3D *) 0 ;
    iMaterialWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3D_GetMaterial",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialWrapper *)(arg1)->GetMaterial();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPolygon3D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 = (iPolygon3D *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPolygon3D",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iPolygon3D(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPolygon3D_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPolygon3D, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csLightMapMapping_m_obj2tex_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    csMatrix3 *arg2 = (csMatrix3 *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csLightMapMapping_m_obj2tex_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->m_obj2tex = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_m_obj2tex_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    csMatrix3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_m_obj2tex_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csMatrix3 *)& ((arg1)->m_obj2tex);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_v_obj2tex_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    csVector3 *arg2 = (csVector3 *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csLightMapMapping_v_obj2tex_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->v_obj2tex = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_v_obj2tex_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_v_obj2tex_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)& ((arg1)->v_obj2tex);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_fdu_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csLightMapMapping_fdu_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->fdu = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_fdu_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_fdu_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->fdu);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_fdv_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csLightMapMapping_fdv_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->fdv = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_fdv_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_fdv_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->fdv);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_Imin_u_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csLightMapMapping_Imin_u_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Imin_u = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_Imin_u_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_Imin_u_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->Imin_u);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_Imin_v_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csLightMapMapping_Imin_v_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Imin_v = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_Imin_v_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_Imin_v_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->Imin_v);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_Fmin_u_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csLightMapMapping_Fmin_u_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Fmin_u = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_Fmin_u_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_Fmin_u_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->Fmin_u);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_Fmin_v_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csLightMapMapping_Fmin_v_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Fmin_v = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_Fmin_v_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_Fmin_v_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->Fmin_v);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_Fmax_u_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csLightMapMapping_Fmax_u_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Fmax_u = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_Fmax_u_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_Fmax_u_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->Fmax_u);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_Fmax_v_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csLightMapMapping_Fmax_v_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Fmax_v = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_Fmax_v_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_Fmax_v_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->Fmax_v);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_shf_u_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    uint16 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csLightMapMapping_shf_u_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint16) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->shf_u = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_shf_u_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    uint16 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_shf_u_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint16) ((arg1)->shf_u);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_w_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csLightMapMapping_w_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->w = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_w_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_w_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->w);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_h_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csLightMapMapping_h_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->h = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_h_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_h_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->h);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_w_orig_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csLightMapMapping_w_orig_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->w_orig = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_w_orig_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_w_orig_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->w_orig);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_GetFDU(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_GetFDU",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((csLightMapMapping const *)arg1)->GetFDU();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_GetFDV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_GetFDV",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((csLightMapMapping const *)arg1)->GetFDV();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_GetWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_GetWidth",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((csLightMapMapping const *)arg1)->GetWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_GetHeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_GetHeight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((csLightMapMapping const *)arg1)->GetHeight();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_GetShiftU(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_GetShiftU",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((csLightMapMapping const *)arg1)->GetShiftU();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_GetIMinU(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_GetIMinU",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((csLightMapMapping const *)arg1)->GetIMinU();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_GetIMinV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_GetIMinV",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((csLightMapMapping const *)arg1)->GetIMinV();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_GetTextureBox(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    float *arg2 = 0 ;
    float *arg3 = 0 ;
    float *arg4 = 0 ;
    float *arg5 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:csLightMapMapping_GetTextureBox",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((csLightMapMapping const *)arg1)->GetTextureBox(*arg2,*arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csLightMapMapping_GetOriginalWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csLightMapMapping_GetOriginalWidth",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((csLightMapMapping const *)arg1)->GetOriginalWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csLightMapMapping(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csLightMapMapping")) goto fail;
    result = (csLightMapMapping *)new csLightMapMapping();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csLightMapMapping, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csLightMapMapping(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csLightMapMapping *arg1 = (csLightMapMapping *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csLightMapMapping",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csLightMapMapping,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csLightMapMapping_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csLightMapMapping, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iPolygonTexture_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iPolygonTexture_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iPolygonTexture_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iPolygonTexture_VERSION);
    return pyobj;
}


static PyObject *_wrap_iPolygonTexture_GetMaterialHandle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 = (iPolygonTexture *) 0 ;
    iMaterialHandle *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_GetMaterialHandle",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialHandle *)(arg1)->GetMaterialHandle();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialHandle, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonTexture_GetMapping(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 = (iPolygonTexture *) 0 ;
    csLightMapMapping *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_GetMapping",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csLightMapMapping const &_result_ref = ((iPolygonTexture const *)arg1)->GetMapping();
        result = (csLightMapMapping *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csLightMapMapping, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonTexture_DynamicLightsDirty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 = (iPolygonTexture *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_DynamicLightsDirty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->DynamicLightsDirty();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonTexture_RecalculateDynamicLights(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 = (iPolygonTexture *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_RecalculateDynamicLights",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RecalculateDynamicLights();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonTexture_GetLightMap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 = (iPolygonTexture *) 0 ;
    iLightMap *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_GetLightMap",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iLightMap *)(arg1)->GetLightMap();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iLightMap, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonTexture_GetLightCellSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 = (iPolygonTexture *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_GetLightCellSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetLightCellSize();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonTexture_GetLightCellShift(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 = (iPolygonTexture *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_GetLightCellShift",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetLightCellShift();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonTexture_GetCacheData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 = (iPolygonTexture *) 0 ;
    int arg2 ;
    void *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPolygonTexture_GetCacheData",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *)(arg1)->GetCacheData(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonTexture_SetCacheData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 = (iPolygonTexture *) 0 ;
    int arg2 ;
    void *arg3 = (void *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:iPolygonTexture_SetCacheData",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCacheData(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPolygonTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 = (iPolygonTexture *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPolygonTexture",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iPolygonTexture(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPolygonTexture_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPolygonTexture, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iLoaderStatus_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iLoaderStatus_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iLoaderStatus_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iLoaderStatus_VERSION);
    return pyobj;
}


static PyObject *_wrap_iLoaderStatus_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iLoaderStatus_scfGetID")) goto fail;
    result = (scfInterfaceID)iLoaderStatus_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLoaderStatus_IsReady(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLoaderStatus *arg1 = (iLoaderStatus *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLoaderStatus_IsReady",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLoaderStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsReady();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLoaderStatus_IsError(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLoaderStatus *arg1 = (iLoaderStatus *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLoaderStatus_IsError",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLoaderStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsError();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iLoaderStatus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLoaderStatus *arg1 = (iLoaderStatus *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iLoaderStatus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLoaderStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iLoaderStatus_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iLoaderStatus, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iLoader_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iLoader_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iLoader_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iLoader_VERSION);
    return pyobj;
}


static PyObject *_wrap_iLoader_LoadImage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLoader *arg1 = (iLoader *) 0 ;
    char *arg2 ;
    int arg3 = (int) CS_IMGFMT_INVALID ;
    SwigValueWrapper< csPtr<iImage > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|i:iLoader_LoadImage",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLoader,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->LoadImage((char const *)arg2,arg3);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iImage> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iImage *)ref), (void *)(iImage *)ref, "iImage" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLoader_LoadTexture__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLoader *arg1 = (iLoader *) 0 ;
    char *arg2 ;
    int arg3 = (int) CS_TEXTURE_3D ;
    iTextureManager *arg4 = (iTextureManager *) 0 ;
    iImage **arg5 = (iImage **) 0 ;
    SwigValueWrapper< csPtr<iTextureHandle > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|iOO:iLoader_LoadTexture",&obj0,&arg2,&arg3,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLoader,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iTextureManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj4) {
        if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (arg1)->LoadTexture((char const *)arg2,arg3,arg4,arg5);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iTextureHandle> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iTextureHandle *)ref), (void *)(iTextureHandle *)ref, "iTextureHandle" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLoader_LoadTexture__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLoader *arg1 = (iLoader *) 0 ;
    char *arg2 ;
    char *arg3 ;
    int arg4 = (int) CS_TEXTURE_3D ;
    iTextureManager *arg5 = (iTextureManager *) 0 ;
    bool arg6 = (bool) false ;
    bool arg7 = (bool) true ;
    iTextureWrapper *result;
    PyObject * obj0 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss|iOOO:iLoader_LoadTexture",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLoader,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj4) {
        if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_iTextureManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj5) {
        arg6 = PyInt_AsLong(obj5) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj6) {
        arg7 = PyInt_AsLong(obj6) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (iTextureWrapper *)(arg1)->LoadTexture((char const *)arg2,(char const *)arg3,arg4,arg5,arg6,arg7);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLoader_LoadTexture(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[8];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 7); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iLoader, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_iLoader_LoadTexture__SWIG_0(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_iLoader_LoadTexture__SWIG_0(self,args);
                    }
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_iTextureManager, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_iLoader_LoadTexture__SWIG_0(self,args);
                        }
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_p_iImage, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_iLoader_LoadTexture__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 7)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iLoader, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_iLoader_LoadTexture__SWIG_1(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_iLoader_LoadTexture__SWIG_1(self,args);
                        }
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_iTextureManager, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_iLoader_LoadTexture__SWIG_1(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                if (argc <= 6) {
                                    return _wrap_iLoader_LoadTexture__SWIG_1(self,args);
                                }
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    return _wrap_iLoader_LoadTexture__SWIG_1(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iLoader_LoadTexture'");
    return NULL;
}


static PyObject *_wrap_iLoader_LoadSoundData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLoader *arg1 = (iLoader *) 0 ;
    char *arg2 ;
    SwigValueWrapper< csPtr<iSoundData > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iLoader_LoadSoundData",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLoader,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->LoadSoundData((char const *)arg2);
    
    {
        csPtr<iSoundData > * resultptr;
        resultptr = new csPtr<iSoundData >((csPtr<iSoundData > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiSoundData_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLoader_LoadSound__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLoader *arg1 = (iLoader *) 0 ;
    char *arg2 ;
    SwigValueWrapper< csPtr<iSoundHandle > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iLoader_LoadSound",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLoader,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->LoadSound((char const *)arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iSoundHandle> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iSoundHandle *)ref), (void *)(iSoundHandle *)ref, "iSoundHandle" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLoader_LoadSound__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLoader *arg1 = (iLoader *) 0 ;
    char *arg2 ;
    char *arg3 ;
    SwigValueWrapper< csPtr<iSoundWrapper > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iLoader_LoadSound",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLoader,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->LoadSound((char const *)arg2,(char const *)arg3);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iSoundWrapper> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iSoundWrapper *)ref), (void *)(iSoundWrapper *)ref, "iSoundWrapper" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLoader_LoadSound(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iLoader, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iLoader_LoadSound__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iLoader, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iLoader_LoadSound__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iLoader_LoadSound'");
    return NULL;
}


static PyObject *_wrap_iLoader_ThreadedLoadMapFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLoader *arg1 = (iLoader *) 0 ;
    char *arg2 ;
    iRegion *arg3 = (iRegion *) 0 ;
    bool arg4 = (bool) true ;
    bool arg5 = (bool) false ;
    SwigValueWrapper< csPtr<iLoaderStatus > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|OOO:iLoader_ThreadedLoadMapFile",&obj0,&arg2,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLoader,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj3) {
        arg4 = PyInt_AsLong(obj3) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        arg5 = PyInt_AsLong(obj4) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (arg1)->ThreadedLoadMapFile((char const *)arg2,arg3,arg4,arg5);
    
    {
        csPtr<iLoaderStatus > * resultptr;
        resultptr = new csPtr<iLoaderStatus >((csPtr<iLoaderStatus > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiLoaderStatus_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLoader_LoadMapFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLoader *arg1 = (iLoader *) 0 ;
    char *arg2 ;
    bool arg3 = (bool) true ;
    iRegion *arg4 = (iRegion *) 0 ;
    bool arg5 = (bool) true ;
    bool arg6 = (bool) false ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|OOOO:iLoader_LoadMapFile",&obj0,&arg2,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLoader,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj4) {
        arg5 = PyInt_AsLong(obj4) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj5) {
        arg6 = PyInt_AsLong(obj5) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->LoadMapFile((char const *)arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLoader_LoadLibraryFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLoader *arg1 = (iLoader *) 0 ;
    char *arg2 ;
    iRegion *arg3 = (iRegion *) 0 ;
    bool arg4 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|OO:iLoader_LoadLibraryFile",&obj0,&arg2,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLoader,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj3) {
        arg4 = PyInt_AsLong(obj3) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->LoadLibraryFile((char const *)arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLoader_LoadMeshObjectFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLoader *arg1 = (iLoader *) 0 ;
    char *arg2 ;
    SwigValueWrapper< csPtr<iMeshFactoryWrapper > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iLoader_LoadMeshObjectFactory",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLoader,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->LoadMeshObjectFactory((char const *)arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iMeshFactoryWrapper> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iMeshFactoryWrapper *)ref), (void *)(iMeshFactoryWrapper *)ref, "iMeshFactoryWrapper" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLoader_LoadMeshObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLoader *arg1 = (iLoader *) 0 ;
    char *arg2 ;
    SwigValueWrapper< csPtr<iMeshWrapper > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iLoader_LoadMeshObject",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLoader,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->LoadMeshObject((char const *)arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iMeshWrapper> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iMeshWrapper *)ref), (void *)(iMeshWrapper *)ref, "iMeshWrapper" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iLoader_LoadEffectFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLoader *arg1 = (iLoader *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iLoader_LoadEffectFile",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLoader,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->LoadEffectFile((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iLoader(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLoader *arg1 = (iLoader *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iLoader",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLoader,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iLoader(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iLoader_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iLoader, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iLoaderPlugin_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iLoaderPlugin_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iLoaderPlugin_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iLoaderPlugin_VERSION);
    return pyobj;
}


static PyObject *_wrap_iLoaderPlugin_Parse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLoaderPlugin *arg1 = (iLoaderPlugin *) 0 ;
    iDocumentNode *arg2 = (iDocumentNode *) 0 ;
    iLoaderContext *arg3 = (iLoaderContext *) 0 ;
    iBase *arg4 = (iBase *) 0 ;
    SwigValueWrapper< csPtr<iBase > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iLoaderPlugin_Parse",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLoaderPlugin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iLoaderContext,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Parse(arg2,arg3,arg4);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iBase> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iBase *)ref), (void *)(iBase *)ref, "iBase" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iLoaderPlugin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLoaderPlugin *arg1 = (iLoaderPlugin *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iLoaderPlugin",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLoaderPlugin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iLoaderPlugin(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iLoaderPlugin_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iLoaderPlugin, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iBinaryLoaderPlugin_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iBinaryLoaderPlugin_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iBinaryLoaderPlugin_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iBinaryLoaderPlugin_VERSION);
    return pyobj;
}


static PyObject *_wrap_iBinaryLoaderPlugin_Parse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBinaryLoaderPlugin *arg1 = (iBinaryLoaderPlugin *) 0 ;
    void *arg2 = (void *) 0 ;
    iLoaderContext *arg3 = (iLoaderContext *) 0 ;
    iBase *arg4 = (iBase *) 0 ;
    SwigValueWrapper< csPtr<iBase > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iBinaryLoaderPlugin_Parse",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBinaryLoaderPlugin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iLoaderContext,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Parse(arg2,arg3,arg4);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iBase> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iBase *)ref), (void *)(iBase *)ref, "iBase" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iBinaryLoaderPlugin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBinaryLoaderPlugin *arg1 = (iBinaryLoaderPlugin *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iBinaryLoaderPlugin",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBinaryLoaderPlugin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iBinaryLoaderPlugin(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iBinaryLoaderPlugin_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iBinaryLoaderPlugin, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSaver_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSaver_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSaver_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSaver_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSaver_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iSaver_scfGetID")) goto fail;
    result = (scfInterfaceID)iSaver_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSaver_SaveMapFile__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSaver *arg1 = (iSaver *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSaver_SaveMapFile",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSaver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SaveMapFile((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSaver_SaveMapFile__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSaver *arg1 = (iSaver *) 0 ;
    iString *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSaver_SaveMapFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSaver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iString *)(arg1)->SaveMapFile();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSaver_SaveMapFile(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSaver, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_iSaver_SaveMapFile__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSaver, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iSaver_SaveMapFile__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iSaver_SaveMapFile'");
    return NULL;
}


static PyObject *_wrap_delete_iSaver(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSaver *arg1 = (iSaver *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSaver",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSaver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSaver_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSaver, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSoundHandle_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSoundHandle_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSoundHandle_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSoundHandle_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSoundHandle_IsStatic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundHandle *arg1 = (iSoundHandle *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundHandle_IsStatic",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsStatic();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundHandle_Play(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundHandle *arg1 = (iSoundHandle *) 0 ;
    bool arg2 = (bool) false ;
    SwigValueWrapper< csPtr<iSoundSource > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:iSoundHandle_Play",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (arg1)->Play(arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iSoundSource> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iSoundSource *)ref), (void *)(iSoundSource *)ref, "iSoundSource" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundHandle_CreateSource(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundHandle *arg1 = (iSoundHandle *) 0 ;
    int arg2 ;
    SwigValueWrapper< csPtr<iSoundSource > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSoundHandle_CreateSource",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateSource(arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iSoundSource> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iSoundSource *)ref), (void *)(iSoundSource *)ref, "iSoundSource" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundHandle_StartStream(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundHandle *arg1 = (iSoundHandle *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSoundHandle_StartStream",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->StartStream(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundHandle_StopStream(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundHandle *arg1 = (iSoundHandle *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundHandle_StopStream",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->StopStream();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundHandle_ResetStream(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundHandle *arg1 = (iSoundHandle *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundHandle_ResetStream",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ResetStream();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSoundHandle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundHandle *arg1 = (iSoundHandle *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSoundHandle",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iSoundHandle(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSoundHandle_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSoundHandle, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSoundLoader_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSoundLoader_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSoundLoader_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSoundLoader_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSoundLoader_LoadSound(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundLoader *arg1 = (iSoundLoader *) 0 ;
    void *arg2 = (void *) 0 ;
    uint32 arg3 ;
    SwigValueWrapper< csPtr<iSoundData > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iSoundLoader_LoadSound",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundLoader,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (uint32) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (arg1)->LoadSound(arg2,arg3);
    
    {
        csPtr<iSoundData > * resultptr;
        resultptr = new csPtr<iSoundData >((csPtr<iSoundData > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiSoundData_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSoundLoader(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundLoader *arg1 = (iSoundLoader *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSoundLoader",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundLoader,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iSoundLoader(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSoundLoader_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSoundLoader, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSoundRender_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSoundRender_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSoundRender_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSoundRender_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSoundRender_SetVolume(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundRender *arg1 = (iSoundRender *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iSoundRender_SetVolume",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundRender,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetVolume(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundRender_GetVolume(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundRender *arg1 = (iSoundRender *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundRender_GetVolume",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundRender,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetVolume();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundRender_RegisterSound(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundRender *arg1 = (iSoundRender *) 0 ;
    iSoundData *arg2 = (iSoundData *) 0 ;
    SwigValueWrapper< csPtr<iSoundHandle > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSoundRender_RegisterSound",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundRender,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSoundData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->RegisterSound(arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iSoundHandle> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iSoundHandle *)ref), (void *)(iSoundHandle *)ref, "iSoundHandle" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundRender_UnregisterSound(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundRender *arg1 = (iSoundRender *) 0 ;
    iSoundHandle *arg2 = (iSoundHandle *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSoundRender_UnregisterSound",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundRender,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSoundHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UnregisterSound(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundRender_GetListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundRender *arg1 = (iSoundRender *) 0 ;
    iSoundListener *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundRender_GetListener",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundRender,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSoundListener *)(arg1)->GetListener();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSoundListener, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundRender_MixingFunction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundRender *arg1 = (iSoundRender *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundRender_MixingFunction",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundRender,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MixingFunction();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSoundRender(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundRender *arg1 = (iSoundRender *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSoundRender",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundRender,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iSoundRender(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSoundRender_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSoundRender, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSoundWrapper_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSoundWrapper_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSoundWrapper_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSoundWrapper_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSoundWrapper_GetSound(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundWrapper *arg1 = (iSoundWrapper *) 0 ;
    iSoundHandle *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundWrapper_GetSound",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSoundHandle *)(arg1)->GetSound();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSoundHandle, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundWrapper_QueryObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundWrapper *arg1 = (iSoundWrapper *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundWrapper_QueryObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)(arg1)->QueryObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSoundWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundWrapper *arg1 = (iSoundWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSoundWrapper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iSoundWrapper(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSoundWrapper_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSoundWrapper, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSoundDriver_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSoundDriver_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSoundDriver_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSoundDriver_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSoundDriver_Open(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundDriver *arg1 = (iSoundDriver *) 0 ;
    iSoundRender *arg2 = (iSoundRender *) 0 ;
    int arg3 ;
    bool arg4 ;
    bool arg5 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiOO:iSoundDriver_Open",&obj0,&obj1,&arg3,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSoundRender,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg4 = PyInt_AsLong(obj3) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    arg5 = PyInt_AsLong(obj4) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->Open(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundDriver_Close(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundDriver *arg1 = (iSoundDriver *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundDriver_Close",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Close();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundDriver_LockMemory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundDriver *arg1 = (iSoundDriver *) 0 ;
    void **arg2 = (void **) 0 ;
    int *arg3 = (int *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iSoundDriver_LockMemory",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_p_void,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->LockMemory(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundDriver_UnlockMemory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundDriver *arg1 = (iSoundDriver *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundDriver_UnlockMemory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UnlockMemory();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundDriver_IsBackground(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundDriver *arg1 = (iSoundDriver *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundDriver_IsBackground",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsBackground();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundDriver_Is16Bits(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundDriver *arg1 = (iSoundDriver *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundDriver_Is16Bits",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Is16Bits();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundDriver_IsStereo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundDriver *arg1 = (iSoundDriver *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundDriver_IsStereo",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsStereo();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundDriver_GetFrequency(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundDriver *arg1 = (iSoundDriver *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundDriver_GetFrequency",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetFrequency();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundDriver_IsHandleVoidSound(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundDriver *arg1 = (iSoundDriver *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundDriver_IsHandleVoidSound",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsHandleVoidSound();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundDriver_ThreadAware(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundDriver *arg1 = (iSoundDriver *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundDriver_ThreadAware",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->ThreadAware();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSoundDriver(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundDriver *arg1 = (iSoundDriver *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSoundDriver",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iSoundDriver(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSoundDriver_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSoundDriver, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSoundSource_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSoundSource_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSoundSource_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSoundSource_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSoundSource_Play(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundSource *arg1 = (iSoundSource *) 0 ;
    unsigned long arg2 = (unsigned long) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:iSoundSource_Play",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundSource,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = (unsigned long) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->Play(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundSource_Stop(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundSource *arg1 = (iSoundSource *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundSource_Stop",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundSource,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Stop();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundSource_SetVolume(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundSource *arg1 = (iSoundSource *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iSoundSource_SetVolume",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundSource,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetVolume(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundSource_GetVolume(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundSource *arg1 = (iSoundSource *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundSource_GetVolume",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundSource,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetVolume();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundSource_SetFrequencyFactor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundSource *arg1 = (iSoundSource *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iSoundSource_SetFrequencyFactor",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundSource,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFrequencyFactor(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundSource_GetFrequencyFactor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundSource *arg1 = (iSoundSource *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundSource_GetFrequencyFactor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundSource,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetFrequencyFactor();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundSource_GetMode3D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundSource *arg1 = (iSoundSource *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundSource_GetMode3D",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundSource,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetMode3D();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundSource_SetMode3D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundSource *arg1 = (iSoundSource *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSoundSource_SetMode3D",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundSource,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMode3D(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundSource_SetPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundSource *arg1 = (iSoundSource *) 0 ;
    csVector3 arg2 ;
    csVector3 *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSoundSource_SetPosition",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundSource,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->SetPosition(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundSource_GetPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundSource *arg1 = (iSoundSource *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundSource_GetPosition",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundSource,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetPosition();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundSource_SetVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundSource *arg1 = (iSoundSource *) 0 ;
    csVector3 arg2 ;
    csVector3 *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSoundSource_SetVelocity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundSource,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->SetVelocity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSoundSource_GetVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundSource *arg1 = (iSoundSource *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSoundSource_GetVelocity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundSource,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetVelocity();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSoundSource(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSoundSource *arg1 = (iSoundSource *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSoundSource",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSoundSource,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iSoundSource(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSoundSource_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSoundSource, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iComponent_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iComponent_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iComponent_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iComponent_VERSION);
    return pyobj;
}


static PyObject *_wrap_iComponent_Initialize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iComponent *arg1 = (iComponent *) 0 ;
    iObjectRegistry *arg2 = (iObjectRegistry *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iComponent_Initialize",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iComponent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Initialize(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iComponent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iComponent *arg1 = (iComponent *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iComponent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iComponent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iComponent(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iComponent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iComponent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iCacheManager_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iCacheManager_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iCacheManager_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iCacheManager_VERSION);
    return pyobj;
}


static PyObject *_wrap_iCacheManager_SetCurrentType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCacheManager *arg1 = (iCacheManager *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCacheManager_SetCurrentType",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCacheManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCurrentType((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCacheManager_GetCurrentType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCacheManager *arg1 = (iCacheManager *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCacheManager_GetCurrentType",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCacheManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCacheManager const *)arg1)->GetCurrentType();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCacheManager_SetCurrentScope(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCacheManager *arg1 = (iCacheManager *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCacheManager_SetCurrentScope",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCacheManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCurrentScope((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCacheManager_GetCurrentScope(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCacheManager *arg1 = (iCacheManager *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCacheManager_GetCurrentScope",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCacheManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCacheManager const *)arg1)->GetCurrentScope();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCacheManager_CacheData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCacheManager *arg1 = (iCacheManager *) 0 ;
    void *arg2 = (void *) 0 ;
    uint32 arg3 ;
    char *arg4 ;
    char *arg5 ;
    uint32 arg6 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOssO:iCacheManager_CacheData",&obj0,&obj1,&obj2,&arg4,&arg5,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCacheManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (uint32) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    arg6 = (uint32) PyInt_AsLong(obj5);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->CacheData(arg2,arg3,(char const *)arg4,(char const *)arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCacheManager_ReadCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCacheManager *arg1 = (iCacheManager *) 0 ;
    char *arg2 ;
    char *arg3 ;
    uint32 arg4 ;
    SwigValueWrapper< csPtr<iDataBuffer > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OssO:iCacheManager_ReadCache",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCacheManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg4 = (uint32) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    result = (arg1)->ReadCache((char const *)arg2,(char const *)arg3,arg4);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iDataBuffer> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iDataBuffer *)ref), (void *)(iDataBuffer *)ref, "iDataBuffer" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCacheManager_ClearCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCacheManager *arg1 = (iCacheManager *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    uint32 *arg4 = (uint32 *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|ssO:iCacheManager_ClearCache",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCacheManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_uint32,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (bool)(arg1)->ClearCache((char const *)arg2,(char const *)arg3,(uint32 const *)arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCacheManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCacheManager *arg1 = (iCacheManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCacheManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCacheManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iCacheManager(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCacheManager_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCacheManager, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csFileTime_sec_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFileTime *arg1 = (csFileTime *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csFileTime_sec_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFileTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->sec = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFileTime_sec_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFileTime *arg1 = (csFileTime *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csFileTime_sec_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFileTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->sec);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFileTime_min_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFileTime *arg1 = (csFileTime *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csFileTime_min_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFileTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->min = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFileTime_min_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFileTime *arg1 = (csFileTime *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csFileTime_min_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFileTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->min);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFileTime_hour_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFileTime *arg1 = (csFileTime *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csFileTime_hour_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFileTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->hour = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFileTime_hour_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFileTime *arg1 = (csFileTime *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csFileTime_hour_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFileTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->hour);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFileTime_day_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFileTime *arg1 = (csFileTime *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csFileTime_day_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFileTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->day = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFileTime_day_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFileTime *arg1 = (csFileTime *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csFileTime_day_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFileTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->day);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFileTime_mon_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFileTime *arg1 = (csFileTime *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csFileTime_mon_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFileTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->mon = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFileTime_mon_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFileTime *arg1 = (csFileTime *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csFileTime_mon_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFileTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->mon);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFileTime_year_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFileTime *arg1 = (csFileTime *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csFileTime_year_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFileTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->year = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFileTime_year_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFileTime *arg1 = (csFileTime *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csFileTime_year_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFileTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->year);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csFileTime(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFileTime *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csFileTime")) goto fail;
    result = (csFileTime *)new csFileTime();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csFileTime, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csFileTime(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFileTime *arg1 = (csFileTime *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csFileTime",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFileTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csFileTime_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csFileTime, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iFile_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iFile_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iFile_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iFile_VERSION);
    return pyobj;
}


static PyObject *_wrap_iFile_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFile *arg1 = (iFile *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFile_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFile_GetSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFile *arg1 = (iFile *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFile_GetSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetSize();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFile_GetStatus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFile *arg1 = (iFile *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFile_GetStatus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetStatus();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFile_Read(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFile *arg1 = (iFile *) 0 ;
    char *arg2 ;
    size_t arg3 ;
    size_t result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iFile_Read",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (size_t) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (arg1)->Read(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFile_Write(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFile *arg1 = (iFile *) 0 ;
    char *arg2 ;
    size_t arg3 ;
    size_t result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iFile_Write",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (size_t) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (arg1)->Write((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFile_Flush(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFile *arg1 = (iFile *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFile_Flush",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Flush();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFile_AtEOF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFile *arg1 = (iFile *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFile_AtEOF",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->AtEOF();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFile_GetPos(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFile *arg1 = (iFile *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFile_GetPos",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetPos();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFile_GetAllData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFile *arg1 = (iFile *) 0 ;
    bool arg2 = (bool) false ;
    SwigValueWrapper< csPtr<iDataBuffer > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:iFile_GetAllData",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (arg1)->GetAllData(arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iDataBuffer> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iDataBuffer *)ref), (void *)(iDataBuffer *)ref, "iDataBuffer" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFile_SetPos(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFile *arg1 = (iFile *) 0 ;
    size_t arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iFile_SetPos",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (size_t) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->SetPos(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFile *arg1 = (iFile *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iFile(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iFile_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iFile, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iVFS_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iVFS_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iVFS_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iVFS_VERSION);
    return pyobj;
}


static PyObject *_wrap_iVFS_ChDir(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iVFS_ChDir",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->ChDir((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVFS_GetCwd(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVFS_GetCwd",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iVFS const *)arg1)->GetCwd();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVFS_PushDir(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVFS_PushDir",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PushDir();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVFS_PopDir(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVFS_PopDir",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->PopDir();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVFS_ExpandPath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    char *arg2 ;
    bool arg3 = (bool) false ;
    SwigValueWrapper< csPtr<iDataBuffer > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iVFS_ExpandPath",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = ((iVFS const *)arg1)->ExpandPath((char const *)arg2,arg3);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iDataBuffer> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iDataBuffer *)ref), (void *)(iDataBuffer *)ref, "iDataBuffer" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVFS_Exists(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iVFS_Exists",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iVFS const *)arg1)->Exists((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVFS_FindFiles(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    char *arg2 ;
    SwigValueWrapper< csPtr<iStrVector > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iVFS_FindFiles",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iVFS const *)arg1)->FindFiles((char const *)arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iStrVector> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iStrVector *)ref), (void *)(iStrVector *)ref, "iStrVector" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVFS_Open(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    char *arg2 ;
    int arg3 ;
    SwigValueWrapper< csPtr<iFile > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:iVFS_Open",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Open((char const *)arg2,arg3);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iFile> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iFile *)ref), (void *)(iFile *)ref, "iFile" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVFS_ReadFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    char *arg2 ;
    bool arg3 = (bool) true ;
    SwigValueWrapper< csPtr<iDataBuffer > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iVFS_ReadFile",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (arg1)->ReadFile((char const *)arg2,arg3);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iDataBuffer> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iDataBuffer *)ref), (void *)(iDataBuffer *)ref, "iDataBuffer" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVFS_WriteFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    char *arg2 ;
    char *arg3 ;
    size_t arg4 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OssO:iVFS_WriteFile",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg4 = (size_t) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->WriteFile((char const *)arg2,(char const *)arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVFS_DeleteFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iVFS_DeleteFile",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->DeleteFile((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVFS_Sync(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVFS_Sync",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Sync();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVFS_Mount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    char *arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iVFS_Mount",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Mount((char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVFS_Unmount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    char *arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iVFS_Unmount",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Unmount((char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVFS_MountRoot(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    char *arg2 ;
    SwigValueWrapper< csRef<iStrVector > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iVFS_MountRoot",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->MountRoot((char const *)arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iStrVector> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iStrVector *)ref), (void *)(iStrVector *)ref, "iStrVector" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVFS_SaveMounts(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iVFS_SaveMounts",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SaveMounts((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVFS_GetFileTime(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    char *arg2 ;
    csFileTime *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iVFS_GetFileTime",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csFileTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((iVFS const *)arg1)->GetFileTime((char const *)arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVFS_SetFileTime(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    char *arg2 ;
    csFileTime *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iVFS_SetFileTime",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csFileTime,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->SetFileTime((char const *)arg2,(csFileTime const &)*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVFS_GetFileSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    char *arg2 ;
    size_t *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iVFS_GetFileSize",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_size_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->GetFileSize((char const *)arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVFS_GetRealPath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    char *arg2 ;
    SwigValueWrapper< csPtr<iDataBuffer > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iVFS_GetRealPath",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetRealPath((char const *)arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iDataBuffer> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iDataBuffer *)ref), (void *)(iDataBuffer *)ref, "iDataBuffer" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iVFS(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVFS *arg1 = (iVFS *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iVFS",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iVFS(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iVFS_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iVFS, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iObject_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iObject_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iObject_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iObject_VERSION);
    return pyobj;
}


static PyObject *_wrap_iObject_SetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iObject_SetName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObject_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObject_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iObject const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObject_GetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    CS_ID result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObject_GetID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CS_ID)((iObject const *)arg1)->GetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObject_SetObjectParent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    iObject *arg2 = (iObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iObject_SetObjectParent",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetObjectParent(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObject_GetObjectParent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObject_GetObjectParent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)((iObject const *)arg1)->GetObjectParent();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObject_ObjAdd(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    iObject *arg2 = (iObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iObject_ObjAdd",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ObjAdd(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObject_ObjRemove(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    iObject *arg2 = (iObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iObject_ObjRemove",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ObjRemove(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObject_ObjRemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObject_ObjRemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ObjRemoveAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObject_ObjAddChildren(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    iObject *arg2 = (iObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iObject_ObjAddChildren",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ObjAddChildren(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObject_GetChild__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    int arg2 ;
    int arg3 ;
    char *arg4 = (char *) 0 ;
    bool arg5 = (bool) false ;
    void *result;
    PyObject * obj0 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii|sO:iObject_GetChild",&obj0,&arg2,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj4) {
        arg5 = PyInt_AsLong(obj4) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (void *)((iObject const *)arg1)->GetChild(arg2,arg3,(char const *)arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObject_GetChild__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    char *arg2 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iObject_GetChild",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)((iObject const *)arg1)->GetChild((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObject_GetChild(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iObject, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iObject_GetChild__SWIG_1(self,args);
            }
        }
    }
    if ((argc >= 3) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iObject, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_iObject_GetChild__SWIG_0(self,args);
                    }
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_iObject_GetChild__SWIG_0(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_iObject_GetChild__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iObject_GetChild'");
    return NULL;
}


static PyObject *_wrap_iObject_GetIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    SwigValueWrapper< csPtr<iObjectIterator > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObject_GetIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetIterator();
    
    {
        csPtr<iObjectIterator > * resultptr;
        resultptr = new csPtr<iObjectIterator >((csPtr<iObjectIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiObjectIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObject_ObjReleaseOld(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    iObject *arg2 = (iObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iObject_ObjReleaseOld",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ObjReleaseOld(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iObject(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iObject_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iObject, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iObjectIterator_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iObjectIterator_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iObjectIterator_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iObjectIterator_VERSION);
    return pyobj;
}


static PyObject *_wrap_iObjectIterator_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iObjectIterator_scfGetID")) goto fail;
    result = (scfInterfaceID)iObjectIterator_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectIterator_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectIterator *arg1 = (iObjectIterator *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObjectIterator_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)(arg1)->Next();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectIterator_Reset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectIterator *arg1 = (iObjectIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObjectIterator_Reset",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Reset();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectIterator_GetParentObj(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectIterator *arg1 = (iObjectIterator *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObjectIterator_GetParentObj",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)((iObjectIterator const *)arg1)->GetParentObj();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectIterator_HasNext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectIterator *arg1 = (iObjectIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObjectIterator_HasNext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iObjectIterator const *)arg1)->HasNext();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectIterator_FindName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectIterator *arg1 = (iObjectIterator *) 0 ;
    char *arg2 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iObjectIterator_FindName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)(arg1)->FindName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iObjectIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectIterator *arg1 = (iObjectIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iObjectIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iObjectIterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iObjectIterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iDataObject_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iDataObject_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iDataObject_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iDataObject_VERSION);
    return pyobj;
}


static PyObject *_wrap_iDataObject_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iDataObject_scfGetID")) goto fail;
    result = (scfInterfaceID)iDataObject_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDataObject_QueryObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDataObject *arg1 = (iDataObject *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDataObject_QueryObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDataObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)(arg1)->QueryObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDataObject_GetData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDataObject *arg1 = (iDataObject *) 0 ;
    void *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDataObject_GetData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDataObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *)(arg1)->GetData();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iDataObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDataObject *arg1 = (iDataObject *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iDataObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDataObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iDataObject_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iDataObject, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iObjectRegistry_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iObjectRegistry_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iObjectRegistry_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iObjectRegistry_VERSION);
    return pyobj;
}


static PyObject *_wrap_iObjectRegistry_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObjectRegistry_Clear",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Clear();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectRegistry_Register(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    iBase *arg2 = (iBase *) 0 ;
    char *arg3 = (char *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|s:iObjectRegistry_Register",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Register(arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectRegistry_Unregister(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    iBase *arg2 = (iBase *) 0 ;
    char *arg3 = (char *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|s:iObjectRegistry_Unregister",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Unregister(arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectRegistry_Get__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    char *arg2 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iObjectRegistry_Get",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBase *)(arg1)->Get((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectRegistry_Get__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    char *arg2 ;
    scfInterfaceID arg3 ;
    int arg4 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOi:iObjectRegistry_Get",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (scfInterfaceID) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iBase *)(arg1)->Get((char const *)arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectRegistry_Get__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    scfInterfaceID arg2 ;
    int arg3 ;
    SwigValueWrapper< csPtr<iObjectRegistryIterator > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iObjectRegistry_Get",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (scfInterfaceID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (arg1)->Get(arg2,arg3);
    
    {
        csPtr<iObjectRegistryIterator > * resultptr;
        resultptr = new csPtr<iObjectRegistryIterator >((csPtr<iObjectRegistryIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiObjectRegistryIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectRegistry_Get__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    SwigValueWrapper< csPtr<iObjectRegistryIterator > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObjectRegistry_Get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Get();
    
    {
        csPtr<iObjectRegistryIterator > * resultptr;
        resultptr = new csPtr<iObjectRegistryIterator >((csPtr<iObjectRegistryIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiObjectRegistryIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectRegistry_Get(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iObjectRegistry, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_iObjectRegistry_Get__SWIG_3(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iObjectRegistry, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iObjectRegistry_Get__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iObjectRegistry, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iObjectRegistry_Get__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iObjectRegistry, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_iObjectRegistry_Get__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iObjectRegistry_Get'");
    return NULL;
}


static PyObject *_wrap_delete_iObjectRegistry(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iObjectRegistry",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iObjectRegistry(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iObjectRegistry_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iObjectRegistry, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iObjectRegistryIterator_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iObjectRegistryIterator_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iObjectRegistryIterator_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iObjectRegistryIterator_VERSION);
    return pyobj;
}


static PyObject *_wrap_iObjectRegistryIterator_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iObjectRegistryIterator_scfGetID")) goto fail;
    result = (scfInterfaceID)iObjectRegistryIterator_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectRegistryIterator_Reset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistryIterator *arg1 = (iObjectRegistryIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObjectRegistryIterator_Reset",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistryIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Reset();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectRegistryIterator_GetCurrentTag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistryIterator *arg1 = (iObjectRegistryIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObjectRegistryIterator_GetCurrentTag",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistryIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetCurrentTag();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectRegistryIterator_HasNext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistryIterator *arg1 = (iObjectRegistryIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObjectRegistryIterator_HasNext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistryIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->HasNext();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iObjectRegistryIterator_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistryIterator *arg1 = (iObjectRegistryIterator *) 0 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObjectRegistryIterator_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistryIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBase *)(arg1)->Next();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iObjectRegistryIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistryIterator *arg1 = (iObjectRegistryIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iObjectRegistryIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistryIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iObjectRegistryIterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iObjectRegistryIterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iVirtualClock_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iVirtualClock_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iVirtualClock_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iVirtualClock_VERSION);
    return pyobj;
}


static PyObject *_wrap_iVirtualClock_Advance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVirtualClock *arg1 = (iVirtualClock *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVirtualClock_Advance",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVirtualClock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Advance();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVirtualClock_Suspend(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVirtualClock *arg1 = (iVirtualClock *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVirtualClock_Suspend",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVirtualClock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Suspend();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVirtualClock_Resume(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVirtualClock *arg1 = (iVirtualClock *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVirtualClock_Resume",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVirtualClock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Resume();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVirtualClock_GetElapsedTicks(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVirtualClock *arg1 = (iVirtualClock *) 0 ;
    csTicks result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVirtualClock_GetElapsedTicks",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVirtualClock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csTicks)((iVirtualClock const *)arg1)->GetElapsedTicks();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVirtualClock_GetCurrentTicks(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVirtualClock *arg1 = (iVirtualClock *) 0 ;
    csTicks result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVirtualClock_GetCurrentTicks",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVirtualClock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csTicks)((iVirtualClock const *)arg1)->GetCurrentTicks();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iVirtualClock(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVirtualClock *arg1 = (iVirtualClock *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iVirtualClock",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVirtualClock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iVirtualClock(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iVirtualClock_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iVirtualClock, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iEvent_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iEvent_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iEvent_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iEvent_VERSION);
    return pyobj;
}


static PyObject *_wrap_csEventKeyData_Code_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventKeyData *arg1 = (csEventKeyData *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csEventKeyData_Code_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventKeyData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Code = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventKeyData_Code_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventKeyData *arg1 = (csEventKeyData *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csEventKeyData_Code_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventKeyData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->Code);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventKeyData_Char_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventKeyData *arg1 = (csEventKeyData *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csEventKeyData_Char_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventKeyData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Char = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventKeyData_Char_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventKeyData *arg1 = (csEventKeyData *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csEventKeyData_Char_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventKeyData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->Char);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventKeyData_Modifiers_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventKeyData *arg1 = (csEventKeyData *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csEventKeyData_Modifiers_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventKeyData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Modifiers = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventKeyData_Modifiers_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventKeyData *arg1 = (csEventKeyData *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csEventKeyData_Modifiers_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventKeyData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->Modifiers);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csEventKeyData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventKeyData *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csEventKeyData")) goto fail;
    result = (csEventKeyData *)new csEventKeyData();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csEventKeyData, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csEventKeyData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventKeyData *arg1 = (csEventKeyData *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csEventKeyData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventKeyData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csEventKeyData_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csEventKeyData, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csEventMouseData_x_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventMouseData *arg1 = (csEventMouseData *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csEventMouseData_x_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventMouseData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventMouseData_x_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventMouseData *arg1 = (csEventMouseData *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csEventMouseData_x_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventMouseData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->x);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventMouseData_y_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventMouseData *arg1 = (csEventMouseData *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csEventMouseData_y_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventMouseData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventMouseData_y_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventMouseData *arg1 = (csEventMouseData *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csEventMouseData_y_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventMouseData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->y);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventMouseData_Button_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventMouseData *arg1 = (csEventMouseData *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csEventMouseData_Button_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventMouseData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Button = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventMouseData_Button_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventMouseData *arg1 = (csEventMouseData *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csEventMouseData_Button_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventMouseData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->Button);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventMouseData_Modifiers_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventMouseData *arg1 = (csEventMouseData *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csEventMouseData_Modifiers_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventMouseData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Modifiers = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventMouseData_Modifiers_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventMouseData *arg1 = (csEventMouseData *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csEventMouseData_Modifiers_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventMouseData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->Modifiers);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csEventMouseData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventMouseData *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csEventMouseData")) goto fail;
    result = (csEventMouseData *)new csEventMouseData();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csEventMouseData, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csEventMouseData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventMouseData *arg1 = (csEventMouseData *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csEventMouseData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventMouseData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csEventMouseData_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csEventMouseData, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csEventJoystickData_number_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventJoystickData *arg1 = (csEventJoystickData *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csEventJoystickData_number_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventJoystickData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->number = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventJoystickData_number_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventJoystickData *arg1 = (csEventJoystickData *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csEventJoystickData_number_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventJoystickData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->number);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventJoystickData_x_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventJoystickData *arg1 = (csEventJoystickData *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csEventJoystickData_x_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventJoystickData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventJoystickData_x_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventJoystickData *arg1 = (csEventJoystickData *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csEventJoystickData_x_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventJoystickData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->x);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventJoystickData_y_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventJoystickData *arg1 = (csEventJoystickData *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csEventJoystickData_y_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventJoystickData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventJoystickData_y_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventJoystickData *arg1 = (csEventJoystickData *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csEventJoystickData_y_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventJoystickData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->y);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventJoystickData_Button_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventJoystickData *arg1 = (csEventJoystickData *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csEventJoystickData_Button_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventJoystickData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Button = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventJoystickData_Button_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventJoystickData *arg1 = (csEventJoystickData *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csEventJoystickData_Button_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventJoystickData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->Button);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventJoystickData_Modifiers_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventJoystickData *arg1 = (csEventJoystickData *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csEventJoystickData_Modifiers_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventJoystickData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Modifiers = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventJoystickData_Modifiers_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventJoystickData *arg1 = (csEventJoystickData *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csEventJoystickData_Modifiers_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventJoystickData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->Modifiers);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csEventJoystickData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventJoystickData *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csEventJoystickData")) goto fail;
    result = (csEventJoystickData *)new csEventJoystickData();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csEventJoystickData, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csEventJoystickData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventJoystickData *arg1 = (csEventJoystickData *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csEventJoystickData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventJoystickData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csEventJoystickData_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csEventJoystickData, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csEventCommandData_Code_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventCommandData *arg1 = (csEventCommandData *) 0 ;
    uint arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csEventCommandData_Code_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventCommandData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Code = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventCommandData_Code_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventCommandData *arg1 = (csEventCommandData *) 0 ;
    uint result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csEventCommandData_Code_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventCommandData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint) ((arg1)->Code);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventCommandData_Info_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventCommandData *arg1 = (csEventCommandData *) 0 ;
    void *arg2 = (void *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csEventCommandData_Info_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventCommandData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->Info = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csEventCommandData_Info_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventCommandData *arg1 = (csEventCommandData *) 0 ;
    void *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csEventCommandData_Info_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventCommandData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *) ((arg1)->Info);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csEventCommandData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventCommandData *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csEventCommandData")) goto fail;
    result = (csEventCommandData *)new csEventCommandData();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csEventCommandData, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csEventCommandData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventCommandData *arg1 = (csEventCommandData *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csEventCommandData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventCommandData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csEventCommandData_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csEventCommandData, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csEventNetworkData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventNetworkData *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csEventNetworkData")) goto fail;
    result = (csEventNetworkData *)new csEventNetworkData();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csEventNetworkData, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csEventNetworkData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csEventNetworkData *arg1 = (csEventNetworkData *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csEventNetworkData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csEventNetworkData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csEventNetworkData_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csEventNetworkData, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iEvent_Type_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    uint8 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEvent_Type_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint8) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Type = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Type_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    uint8 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEvent_Type_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint8) ((arg1)->Type);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Category_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    uint8 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEvent_Category_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint8) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Category = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Category_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    uint8 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEvent_Category_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint8) ((arg1)->Category);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_SubCategory_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    uint8 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEvent_SubCategory_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint8) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->SubCategory = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_SubCategory_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    uint8 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEvent_SubCategory_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint8) ((arg1)->SubCategory);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Flags_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    uint8 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEvent_Flags_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint8) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Flags = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Flags_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    uint8 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEvent_Flags_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint8) ((arg1)->Flags);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Time_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    csTicks arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEvent_Time_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Time = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Time_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    csTicks result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEvent_Time_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csTicks) ((arg1)->Time);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_AddInt8(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    int8 arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osc:iEvent_AddInt8",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Add((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_AddUInt8(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    uint8 arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iEvent_AddUInt8",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (uint8) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->Add((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_AddInt16(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    int16 arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osh:iEvent_AddInt16",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Add((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_AddUInt16(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    uint16 arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iEvent_AddUInt16",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (uint16) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->Add((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_AddInt32(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    int32 arg3 ;
    bool arg4 = (bool) false ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi|O:iEvent_AddInt32",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj3) {
        arg4 = PyInt_AsLong(obj3) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->Add((char const *)arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_AddUInt32(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    uint32 arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iEvent_AddUInt32",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (uint32) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->Add((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Add__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    int64 arg3 ;
    bool result;
    int64 *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iEvent_Add",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_int64,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    result = (bool)(arg1)->Add((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Add__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    uint64 arg3 ;
    bool result;
    uint64 *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iEvent_Add",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_uint64,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    result = (bool)(arg1)->Add((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_AddFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    float arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osf:iEvent_AddFloat",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Add((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_AddDouble(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    double arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osd:iEvent_AddDouble",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Add((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_AddString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iEvent_AddString",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Add((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_AddVoidPtr(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    void *arg3 = (void *) 0 ;
    uint32 arg4 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOO:iEvent_AddVoidPtr",&obj0,&arg2,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg4 = (uint32) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->Add((char const *)arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_AddBool(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    bool arg3 ;
    bool arg4 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|O:iEvent_AddBool",&obj0,&arg2,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (obj3) {
        arg4 = PyInt_AsLong(obj3) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->Add((char const *)arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Add__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    iEvent *arg3 = (iEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iEvent_Add",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Add((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Add(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEvent, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int64, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iEvent_Add__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEvent, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_uint64, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iEvent_Add__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEvent, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iEvent, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iEvent_Add__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iEvent_Add'");
    return NULL;
}


static PyObject *_wrap_iEvent_FindInt8(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    int8 *arg3 = 0 ;
    int arg4 = (int) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|i:iEvent_FindInt8",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int8,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->Find((char const *)arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_FindUInt8(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    uint8 *arg3 = 0 ;
    int arg4 = (int) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|i:iEvent_FindUInt8",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_uint8,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->Find((char const *)arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_FindInt16(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    int16 *arg3 = 0 ;
    int arg4 = (int) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|i:iEvent_FindInt16",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int16,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->Find((char const *)arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_FindUInt16(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    uint16 *arg3 = 0 ;
    int arg4 = (int) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|i:iEvent_FindUInt16",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_uint16,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->Find((char const *)arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Find__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    int32 *arg3 = 0 ;
    int arg4 = (int) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|i:iEvent_Find",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int32,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->Find((char const *)arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_FindUInt32(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    uint32 *arg3 = 0 ;
    int arg4 = (int) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|i:iEvent_FindUInt32",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_uint32,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->Find((char const *)arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Find__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    int64 *arg3 = 0 ;
    int arg4 = (int) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|i:iEvent_Find",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int64,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->Find((char const *)arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Find__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    uint64 *arg3 = 0 ;
    int arg4 = (int) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|i:iEvent_Find",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_uint64,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->Find((char const *)arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_FindFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    float *arg3 = 0 ;
    int arg4 = (int) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|i:iEvent_FindFloat",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->Find((char const *)arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_FindDouble(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    double *arg3 = 0 ;
    int arg4 = (int) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|i:iEvent_FindDouble",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_double,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->Find((char const *)arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_FindString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    char **arg3 = (char **) 0 ;
    int arg4 = (int) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|i:iEvent_FindString",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_p_char,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Find((char const *)arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_FindVoidPtr(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    void **arg3 = (void **) 0 ;
    uint32 *arg4 = 0 ;
    int arg5 = (int) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOO|i:iEvent_FindVoidPtr",&obj0,&arg2,&obj2,&obj3,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_p_void,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_uint32,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->Find((char const *)arg2,arg3,*arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_FindBool(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    bool *arg3 = 0 ;
    int arg4 = (int) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|i:iEvent_FindBool",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_bool,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->Find((char const *)arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Find__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    iEvent **arg3 = (iEvent **) 0 ;
    int arg4 = (int) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|i:iEvent_Find",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Find((char const *)arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Find(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEvent, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int32, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_iEvent_Find__SWIG_0(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_iEvent_Find__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEvent, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int64, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_iEvent_Find__SWIG_1(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_iEvent_Find__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEvent, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_uint64, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_iEvent_Find__SWIG_2(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_iEvent_Find__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEvent, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_p_iEvent, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_iEvent_Find__SWIG_3(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_iEvent_Find__SWIG_3(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iEvent_Find'");
    return NULL;
}


static PyObject *_wrap_iEvent_Remove(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    int arg3 = (int) -1 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|i:iEvent_Remove",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEvent_RemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveAll();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Print(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    int arg2 = (int) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|i:iEvent_Print",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Print(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_FlattenSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    int arg2 = (int) CS_CRYSTAL_PROTOCOL ;
    uint32 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|i:iEvent_FlattenSize",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint32)(arg1)->FlattenSize(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Flatten(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    int arg3 = (int) CS_CRYSTAL_PROTOCOL ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|i:iEvent_Flatten",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Flatten(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Unflatten(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    char *arg2 ;
    uint32 arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iEvent_Unflatten",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (uint32) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->Unflatten((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_IncRefIfPooled(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEvent_IncRefIfPooled",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->IncRefIfPooled();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_DecRefUnlessPooled(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEvent_DecRefUnlessPooled",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DecRefUnlessPooled();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iEvent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iEvent(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Key_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    csEventKeyData *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEvent_Key_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csEventKeyData *)iEvent_Key_get(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csEventKeyData, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Mouse_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    csEventMouseData *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEvent_Mouse_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csEventMouseData *)iEvent_Mouse_get(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csEventMouseData, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Joystick_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    csEventJoystickData *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEvent_Joystick_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csEventJoystickData *)iEvent_Joystick_get(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csEventJoystickData, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Command_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    csEventCommandData *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEvent_Command_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csEventCommandData *)iEvent_Command_get(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csEventCommandData, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEvent_Network_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = (iEvent *) 0 ;
    csEventNetworkData *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEvent_Network_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csEventNetworkData *)iEvent_Network_get(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csEventNetworkData, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iEvent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iEvent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iEventPlug_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iEventPlug_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iEventPlug_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iEventPlug_VERSION);
    return pyobj;
}


static PyObject *_wrap_iEventPlug_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iEventPlug_scfGetID")) goto fail;
    result = (scfInterfaceID)iEventPlug_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventPlug_GetPotentiallyConflictingEvents(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventPlug *arg1 = (iEventPlug *) 0 ;
    unsigned int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEventPlug_GetPotentiallyConflictingEvents",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventPlug,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int)(arg1)->GetPotentiallyConflictingEvents();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventPlug_QueryEventPriority(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventPlug *arg1 = (iEventPlug *) 0 ;
    unsigned int arg2 ;
    unsigned int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEventPlug_QueryEventPriority",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventPlug,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (unsigned int)(arg1)->QueryEventPriority(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventPlug_EnableEvents(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventPlug *arg1 = (iEventPlug *) 0 ;
    unsigned int arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iEventPlug_EnableEvents",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventPlug,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->EnableEvents(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iEventPlug(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventPlug *arg1 = (iEventPlug *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iEventPlug",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventPlug,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iEventPlug_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iEventPlug, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iEventOutlet_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iEventOutlet_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iEventOutlet_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iEventOutlet_VERSION);
    return pyobj;
}


static PyObject *_wrap_iEventOutlet_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iEventOutlet_scfGetID")) goto fail;
    result = (scfInterfaceID)iEventOutlet_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventOutlet_CreateEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventOutlet *arg1 = (iEventOutlet *) 0 ;
    SwigValueWrapper< csPtr<iEvent > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEventOutlet_CreateEvent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventOutlet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateEvent();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iEvent> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iEvent *)ref), (void *)(iEvent *)ref, "iEvent" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventOutlet_Post(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventOutlet *arg1 = (iEventOutlet *) 0 ;
    iEvent *arg2 = (iEvent *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEventOutlet_Post",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventOutlet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Post(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventOutlet_Key(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventOutlet *arg1 = (iEventOutlet *) 0 ;
    int arg2 ;
    int arg3 ;
    bool arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiO:iEventOutlet_Key",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventOutlet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg4 = PyInt_AsLong(obj3) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->Key(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventOutlet_Mouse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventOutlet *arg1 = (iEventOutlet *) 0 ;
    int arg2 ;
    bool arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOii:iEventOutlet_Mouse",&obj0,&arg2,&obj2,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventOutlet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->Mouse(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventOutlet_Joystick(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventOutlet *arg1 = (iEventOutlet *) 0 ;
    int arg2 ;
    int arg3 ;
    bool arg4 ;
    int arg5 ;
    int arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiOii:iEventOutlet_Joystick",&obj0,&arg2,&arg3,&obj3,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventOutlet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg4 = PyInt_AsLong(obj3) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->Joystick(arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventOutlet_Broadcast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventOutlet *arg1 = (iEventOutlet *) 0 ;
    int arg2 ;
    void *arg3 = (void *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi|O:iEventOutlet_Broadcast",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventOutlet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    (arg1)->Broadcast(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventOutlet_ImmediateBroadcast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventOutlet *arg1 = (iEventOutlet *) 0 ;
    int arg2 ;
    void *arg3 = (void *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:iEventOutlet_ImmediateBroadcast",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventOutlet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ImmediateBroadcast(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iEventOutlet(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventOutlet *arg1 = (iEventOutlet *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iEventOutlet",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventOutlet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iEventOutlet_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iEventOutlet, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iEventCord_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iEventCord_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iEventCord_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iEventCord_VERSION);
    return pyobj;
}


static PyObject *_wrap_iEventCord_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iEventCord_scfGetID")) goto fail;
    result = (scfInterfaceID)iEventCord_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventCord_Insert(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventCord *arg1 = (iEventCord *) 0 ;
    iEventHandler *arg2 = (iEventHandler *) 0 ;
    int arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iEventCord_Insert",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventCord,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Insert(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventCord_Remove(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventCord *arg1 = (iEventCord *) 0 ;
    iEventHandler *arg2 = (iEventHandler *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEventCord_Remove",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventCord,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Remove(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventCord_GetPass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventCord *arg1 = (iEventCord *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEventCord_GetPass",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventCord,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iEventCord const *)arg1)->GetPass();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventCord_SetPass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventCord *arg1 = (iEventCord *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEventCord_SetPass",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventCord,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetPass(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventCord_GetCategory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventCord *arg1 = (iEventCord *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEventCord_GetCategory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventCord,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iEventCord const *)arg1)->GetCategory();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventCord_GetSubcategory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventCord *arg1 = (iEventCord *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEventCord_GetSubcategory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventCord,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iEventCord const *)arg1)->GetSubcategory();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iEventCord(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventCord *arg1 = (iEventCord *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iEventCord",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventCord,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iEventCord_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iEventCord, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iEventQueue_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iEventQueue_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iEventQueue_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iEventQueue_VERSION);
    return pyobj;
}


static PyObject *_wrap_iEventQueue_Process(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventQueue *arg1 = (iEventQueue *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEventQueue_Process",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventQueue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Process();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventQueue_Dispatch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventQueue *arg1 = (iEventQueue *) 0 ;
    iEvent *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEventQueue_Dispatch",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventQueue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Dispatch(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventQueue_RegisterListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventQueue *arg1 = (iEventQueue *) 0 ;
    iEventHandler *arg2 = (iEventHandler *) 0 ;
    unsigned int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iEventQueue_RegisterListener",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventQueue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (unsigned int) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->RegisterListener(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventQueue_RemoveListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventQueue *arg1 = (iEventQueue *) 0 ;
    iEventHandler *arg2 = (iEventHandler *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEventQueue_RemoveListener",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventQueue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveListener(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventQueue_ChangeListenerTrigger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventQueue *arg1 = (iEventQueue *) 0 ;
    iEventHandler *arg2 = (iEventHandler *) 0 ;
    unsigned int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iEventQueue_ChangeListenerTrigger",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventQueue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (unsigned int) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->ChangeListenerTrigger(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventQueue_CreateEventOutlet(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventQueue *arg1 = (iEventQueue *) 0 ;
    iEventPlug *arg2 = (iEventPlug *) 0 ;
    SwigValueWrapper< csPtr<iEventOutlet > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEventQueue_CreateEventOutlet",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventQueue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iEventPlug,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateEventOutlet(arg2);
    
    {
        csPtr<iEventOutlet > * resultptr;
        resultptr = new csPtr<iEventOutlet >((csPtr<iEventOutlet > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiEventOutlet_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventQueue_GetEventOutlet(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventQueue *arg1 = (iEventQueue *) 0 ;
    iEventOutlet *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEventQueue_GetEventOutlet",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventQueue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iEventOutlet *)(arg1)->GetEventOutlet();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iEventOutlet, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventQueue_GetEventCord(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventQueue *arg1 = (iEventQueue *) 0 ;
    int arg2 ;
    int arg3 ;
    iEventCord *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iEventQueue_GetEventCord",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventQueue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iEventCord *)(arg1)->GetEventCord(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iEventCord, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventQueue_CreateEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventQueue *arg1 = (iEventQueue *) 0 ;
    uint8 arg2 ;
    SwigValueWrapper< csPtr<iEvent > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEventQueue_CreateEvent",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventQueue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint8) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (arg1)->CreateEvent(arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iEvent> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iEvent *)ref), (void *)(iEvent *)ref, "iEvent" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventQueue_Post(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventQueue *arg1 = (iEventQueue *) 0 ;
    iEvent *arg2 = (iEvent *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEventQueue_Post",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventQueue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Post(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventQueue_Get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventQueue *arg1 = (iEventQueue *) 0 ;
    SwigValueWrapper< csPtr<iEvent > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEventQueue_Get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventQueue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Get();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iEvent> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iEvent *)ref), (void *)(iEvent *)ref, "iEvent" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventQueue_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventQueue *arg1 = (iEventQueue *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEventQueue_Clear",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventQueue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Clear();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventQueue_IsEmpty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventQueue *arg1 = (iEventQueue *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEventQueue_IsEmpty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventQueue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsEmpty();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEventQueue_RemoveAllListeners(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventQueue *arg1 = (iEventQueue *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEventQueue_RemoveAllListeners",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventQueue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAllListeners();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iEventQueue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventQueue *arg1 = (iEventQueue *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iEventQueue",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventQueue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iEventQueue(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iEventQueue_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iEventQueue, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iEventHandler_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iEventHandler_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iEventHandler_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iEventHandler_VERSION);
    return pyobj;
}


static PyObject *_wrap_iEventHandler_HandleEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventHandler *arg1 = (iEventHandler *) 0 ;
    iEvent *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEventHandler_HandleEvent",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->HandleEvent(*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iEventHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventHandler *arg1 = (iEventHandler *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iEventHandler",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iEventHandler(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iEventHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iEventHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iPluginIterator_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iPluginIterator_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iPluginIterator_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iPluginIterator_VERSION);
    return pyobj;
}


static PyObject *_wrap_iPluginIterator_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iPluginIterator_scfGetID")) goto fail;
    result = (scfInterfaceID)iPluginIterator_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPluginIterator_HasNext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPluginIterator *arg1 = (iPluginIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPluginIterator_HasNext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPluginIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->HasNext();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPluginIterator_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPluginIterator *arg1 = (iPluginIterator *) 0 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPluginIterator_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPluginIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBase *)(arg1)->Next();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPluginIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPluginIterator *arg1 = (iPluginIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPluginIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPluginIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPluginIterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPluginIterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iPluginManager_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iPluginManager_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iPluginManager_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iPluginManager_VERSION);
    return pyobj;
}


static PyObject *_wrap_iPluginManager_LoadPlugin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPluginManager *arg1 = (iPluginManager *) 0 ;
    char *arg2 ;
    char *arg3 = (char *) 0 ;
    int arg4 = (int) 0 ;
    bool arg5 = (bool) true ;
    iBase *result;
    PyObject * obj0 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|siO:iPluginManager_LoadPlugin",&obj0,&arg2,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPluginManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj4) {
        arg5 = PyInt_AsLong(obj4) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (iBase *)(arg1)->LoadPlugin((char const *)arg2,(char const *)arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPluginManager_QueryPlugin__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPluginManager *arg1 = (iPluginManager *) 0 ;
    char *arg2 ;
    int arg3 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:iPluginManager_QueryPlugin",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPluginManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBase *)(arg1)->QueryPlugin((char const *)arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPluginManager_QueryPlugin__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPluginManager *arg1 = (iPluginManager *) 0 ;
    char *arg2 ;
    char *arg3 ;
    int arg4 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ossi:iPluginManager_QueryPlugin",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPluginManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBase *)(arg1)->QueryPlugin((char const *)arg2,(char const *)arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPluginManager_QueryPlugin(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPluginManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iPluginManager_QueryPlugin__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPluginManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_iPluginManager_QueryPlugin__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPluginManager_QueryPlugin'");
    return NULL;
}


static PyObject *_wrap_iPluginManager_UnloadPlugin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPluginManager *arg1 = (iPluginManager *) 0 ;
    iComponent *arg2 = (iComponent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPluginManager_UnloadPlugin",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPluginManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iComponent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->UnloadPlugin(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPluginManager_RegisterPlugin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPluginManager *arg1 = (iPluginManager *) 0 ;
    char *arg2 ;
    iComponent *arg3 = (iComponent *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iPluginManager_RegisterPlugin",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPluginManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iComponent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RegisterPlugin((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPluginManager_GetPlugins(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPluginManager *arg1 = (iPluginManager *) 0 ;
    SwigValueWrapper< csPtr<iPluginIterator > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPluginManager_GetPlugins",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPluginManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetPlugins();
    
    {
        csPtr<iPluginIterator > * resultptr;
        resultptr = new csPtr<iPluginIterator >((csPtr<iPluginIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiPluginIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPluginManager_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPluginManager *arg1 = (iPluginManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPluginManager_Clear",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPluginManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Clear();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPluginManager_QueryOptions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPluginManager *arg1 = (iPluginManager *) 0 ;
    iComponent *arg2 = (iComponent *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPluginManager_QueryOptions",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPluginManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iComponent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->QueryOptions(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPluginManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPluginManager *arg1 = (iPluginManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPluginManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPluginManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iPluginManager(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPluginManager_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPluginManager, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iKeyboardDriver_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iKeyboardDriver_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iKeyboardDriver_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iKeyboardDriver_VERSION);
    return pyobj;
}


static PyObject *_wrap_iKeyboardDriver_Reset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iKeyboardDriver *arg1 = (iKeyboardDriver *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iKeyboardDriver_Reset",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iKeyboardDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Reset();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iKeyboardDriver_DoKey(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iKeyboardDriver *arg1 = (iKeyboardDriver *) 0 ;
    int arg2 ;
    int arg3 ;
    bool arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiO:iKeyboardDriver_DoKey",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iKeyboardDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg4 = PyInt_AsLong(obj3) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->DoKey(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iKeyboardDriver_GetKeyState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iKeyboardDriver *arg1 = (iKeyboardDriver *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iKeyboardDriver_GetKeyState",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iKeyboardDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->GetKeyState(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iKeyboardDriver(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iKeyboardDriver *arg1 = (iKeyboardDriver *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iKeyboardDriver",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iKeyboardDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iKeyboardDriver(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iKeyboardDriver_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iKeyboardDriver, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iMouseDriver_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iMouseDriver_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iMouseDriver_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iMouseDriver_VERSION);
    return pyobj;
}


static PyObject *_wrap_iMouseDriver_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iMouseDriver_scfGetID")) goto fail;
    result = (scfInterfaceID)iMouseDriver_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMouseDriver_SetDoubleClickTime(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMouseDriver *arg1 = (iMouseDriver *) 0 ;
    int arg2 ;
    size_t arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:iMouseDriver_SetDoubleClickTime",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMouseDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (size_t) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetDoubleClickTime(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMouseDriver_Reset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMouseDriver *arg1 = (iMouseDriver *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMouseDriver_Reset",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMouseDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Reset();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMouseDriver_GetLastX(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMouseDriver *arg1 = (iMouseDriver *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMouseDriver_GetLastX",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMouseDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetLastX();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMouseDriver_GetLastY(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMouseDriver *arg1 = (iMouseDriver *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMouseDriver_GetLastY",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMouseDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetLastY();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMouseDriver_GetLastButton(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMouseDriver *arg1 = (iMouseDriver *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iMouseDriver_GetLastButton",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMouseDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->GetLastButton(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMouseDriver_DoButton(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMouseDriver *arg1 = (iMouseDriver *) 0 ;
    int arg2 ;
    bool arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOii:iMouseDriver_DoButton",&obj0,&arg2,&obj2,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMouseDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->DoButton(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMouseDriver_DoMotion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMouseDriver *arg1 = (iMouseDriver *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iMouseDriver_DoMotion",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMouseDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DoMotion(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iMouseDriver(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMouseDriver *arg1 = (iMouseDriver *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMouseDriver",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMouseDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iMouseDriver_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMouseDriver, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iJoystickDriver_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iJoystickDriver_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iJoystickDriver_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iJoystickDriver_VERSION);
    return pyobj;
}


static PyObject *_wrap_iJoystickDriver_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iJoystickDriver_scfGetID")) goto fail;
    result = (scfInterfaceID)iJoystickDriver_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoystickDriver_Reset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoystickDriver *arg1 = (iJoystickDriver *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iJoystickDriver_Reset",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoystickDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Reset();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoystickDriver_GetLastX(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoystickDriver *arg1 = (iJoystickDriver *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iJoystickDriver_GetLastX",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoystickDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetLastX(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoystickDriver_GetLastY(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoystickDriver *arg1 = (iJoystickDriver *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iJoystickDriver_GetLastY",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoystickDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetLastY(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoystickDriver_GetLastButton(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoystickDriver *arg1 = (iJoystickDriver *) 0 ;
    int arg2 ;
    int arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iJoystickDriver_GetLastButton",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoystickDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->GetLastButton(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoystickDriver_DoButton(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoystickDriver *arg1 = (iJoystickDriver *) 0 ;
    int arg2 ;
    int arg3 ;
    bool arg4 ;
    int arg5 ;
    int arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiOii:iJoystickDriver_DoButton",&obj0,&arg2,&arg3,&obj3,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoystickDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg4 = PyInt_AsLong(obj3) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->DoButton(arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoystickDriver_DoMotion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoystickDriver *arg1 = (iJoystickDriver *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:iJoystickDriver_DoMotion",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoystickDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DoMotion(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iJoystickDriver(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoystickDriver *arg1 = (iJoystickDriver *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iJoystickDriver",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoystickDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iJoystickDriver_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iJoystickDriver, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iConfigFile_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iConfigFile_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iConfigFile_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iConfigFile_VERSION);
    return pyobj;
}


static PyObject *_wrap_iConfigFile_GetFileName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConfigFile_GetFileName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iConfigFile const *)arg1)->GetFileName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_GetVFS(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    iVFS *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConfigFile_GetVFS",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iVFS *)((iConfigFile const *)arg1)->GetVFS();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iVFS, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_SetFileName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *arg2 ;
    iVFS *arg3 = (iVFS *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iConfigFile_SetFileName",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFileName((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_Load(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *arg2 ;
    iVFS *arg3 = (iVFS *) 0 ;
    bool arg4 = (bool) false ;
    bool arg5 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|OOO:iConfigFile_Load",&obj0,&arg2,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj3) {
        arg4 = PyInt_AsLong(obj3) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        arg5 = PyInt_AsLong(obj4) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->Load((char const *)arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_Save__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConfigFile_Save",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Save();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_Save__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *arg2 ;
    iVFS *arg3 = (iVFS *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iConfigFile_Save",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (bool)(arg1)->Save((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_Save(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iConfigFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_iConfigFile_Save__SWIG_0(self,args);
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iConfigFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_iConfigFile_Save__SWIG_1(self,args);
                }
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iVFS, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iConfigFile_Save__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iConfigFile_Save'");
    return NULL;
}


static PyObject *_wrap_iConfigFile_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConfigFile_Clear",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Clear();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_Enumerate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *arg2 = (char *) 0 ;
    SwigValueWrapper< csPtr<iConfigIterator > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|s:iConfigFile_Enumerate",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Enumerate((char const *)arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iConfigIterator> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iConfigIterator *)ref), (void *)(iConfigIterator *)ref, "iConfigIterator" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_KeyExists(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iConfigFile_KeyExists",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iConfigFile const *)arg1)->KeyExists((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_SubsectionExists(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iConfigFile_SubsectionExists",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iConfigFile const *)arg1)->SubsectionExists((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_GetInt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *arg2 ;
    int arg3 = (int) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|i:iConfigFile_GetInt",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iConfigFile const *)arg1)->GetInt((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_GetFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *arg2 ;
    float arg3 = (float) 0.0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|f:iConfigFile_GetFloat",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iConfigFile const *)arg1)->GetFloat((char const *)arg2,arg3);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_GetStr(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *arg2 ;
    char *arg3 = (char *) "" ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|s:iConfigFile_GetStr",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iConfigFile const *)arg1)->GetStr((char const *)arg2,(char const *)arg3);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_GetBool(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *arg2 ;
    bool arg3 = (bool) false ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iConfigFile_GetBool",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)((iConfigFile const *)arg1)->GetBool((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_GetComment(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iConfigFile_GetComment",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iConfigFile const *)arg1)->GetComment((char const *)arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_SetStr(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *arg2 ;
    char *arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iConfigFile_SetStr",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetStr((char const *)arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_SetInt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:iConfigFile_SetInt",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetInt((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_SetFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *arg2 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osf:iConfigFile_SetFloat",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFloat((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_SetBool(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iConfigFile_SetBool",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetBool((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_SetComment(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iConfigFile_SetComment",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetComment((char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_DeleteKey(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iConfigFile_DeleteKey",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DeleteKey((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_GetEOFComment(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConfigFile_GetEOFComment",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iConfigFile const *)arg1)->GetEOFComment();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigFile_SetEOFComment(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iConfigFile_SetEOFComment",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetEOFComment((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iConfigFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigFile *arg1 = (iConfigFile *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iConfigFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iConfigFile(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iConfigFile_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iConfigFile, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iConfigIterator_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iConfigIterator_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iConfigIterator_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iConfigIterator_VERSION);
    return pyobj;
}


static PyObject *_wrap_iConfigIterator_GetConfigFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigIterator *arg1 = (iConfigIterator *) 0 ;
    iConfigFile *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConfigIterator_GetConfigFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iConfigFile *)((iConfigIterator const *)arg1)->GetConfigFile();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iConfigFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigIterator_GetSubsection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigIterator *arg1 = (iConfigIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConfigIterator_GetSubsection",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iConfigIterator const *)arg1)->GetSubsection();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigIterator_Rewind(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigIterator *arg1 = (iConfigIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConfigIterator_Rewind",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Rewind();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigIterator_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigIterator *arg1 = (iConfigIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConfigIterator_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Next();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigIterator_GetKey(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigIterator *arg1 = (iConfigIterator *) 0 ;
    bool arg2 = (bool) false ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:iConfigIterator_GetKey",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (char *)((iConfigIterator const *)arg1)->GetKey(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigIterator_GetInt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigIterator *arg1 = (iConfigIterator *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConfigIterator_GetInt",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iConfigIterator const *)arg1)->GetInt();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigIterator_GetFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigIterator *arg1 = (iConfigIterator *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConfigIterator_GetFloat",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iConfigIterator const *)arg1)->GetFloat();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigIterator_GetStr(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigIterator *arg1 = (iConfigIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConfigIterator_GetStr",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iConfigIterator const *)arg1)->GetStr();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigIterator_GetBool(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigIterator *arg1 = (iConfigIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConfigIterator_GetBool",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iConfigIterator const *)arg1)->GetBool();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigIterator_GetComment(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigIterator *arg1 = (iConfigIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConfigIterator_GetComment",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iConfigIterator const *)arg1)->GetComment();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iConfigIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigIterator *arg1 = (iConfigIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iConfigIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iConfigIterator(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iConfigIterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iConfigIterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iConfigManager_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iConfigManager_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iConfigManager_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iConfigManager_VERSION);
    return pyobj;
}


static PyObject *_wrap_iConfigManager_AddDomain__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigManager *arg1 = (iConfigManager *) 0 ;
    iConfigFile *arg2 = (iConfigFile *) 0 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iConfigManager_AddDomain",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddDomain(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigManager_AddDomain__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigManager *arg1 = (iConfigManager *) 0 ;
    char *arg2 ;
    iVFS *arg3 = (iVFS *) 0 ;
    int arg4 ;
    iConfigFile *result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOi:iConfigManager_AddDomain",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iConfigFile *)(arg1)->AddDomain((char const *)arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iConfigFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigManager_AddDomain(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iConfigManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iConfigFile, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iConfigManager_AddDomain__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iConfigManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iVFS, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_iConfigManager_AddDomain__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iConfigManager_AddDomain'");
    return NULL;
}


static PyObject *_wrap_iConfigManager_RemoveDomain__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigManager *arg1 = (iConfigManager *) 0 ;
    iConfigFile *arg2 = (iConfigFile *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iConfigManager_RemoveDomain",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveDomain(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigManager_RemoveDomain__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigManager *arg1 = (iConfigManager *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iConfigManager_RemoveDomain",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveDomain((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigManager_RemoveDomain(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iConfigManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iConfigFile, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iConfigManager_RemoveDomain__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iConfigManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iConfigManager_RemoveDomain__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iConfigManager_RemoveDomain'");
    return NULL;
}


static PyObject *_wrap_iConfigManager_LookupDomain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigManager *arg1 = (iConfigManager *) 0 ;
    char *arg2 ;
    iConfigFile *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iConfigManager_LookupDomain",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iConfigFile *)((iConfigManager const *)arg1)->LookupDomain((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iConfigFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigManager_SetDomainPriority__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigManager *arg1 = (iConfigManager *) 0 ;
    char *arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:iConfigManager_SetDomainPriority",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDomainPriority((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigManager_SetDomainPriority__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigManager *arg1 = (iConfigManager *) 0 ;
    iConfigFile *arg2 = (iConfigFile *) 0 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iConfigManager_SetDomainPriority",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDomainPriority(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigManager_SetDomainPriority(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iConfigManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iConfigFile, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iConfigManager_SetDomainPriority__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iConfigManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iConfigManager_SetDomainPriority__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iConfigManager_SetDomainPriority'");
    return NULL;
}


static PyObject *_wrap_iConfigManager_GetDomainPriority__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigManager *arg1 = (iConfigManager *) 0 ;
    char *arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iConfigManager_GetDomainPriority",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iConfigManager const *)arg1)->GetDomainPriority((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigManager_GetDomainPriority__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigManager *arg1 = (iConfigManager *) 0 ;
    iConfigFile *arg2 = (iConfigFile *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iConfigManager_GetDomainPriority",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iConfigManager const *)arg1)->GetDomainPriority(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigManager_GetDomainPriority(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iConfigManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iConfigFile, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iConfigManager_GetDomainPriority__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iConfigManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iConfigManager_GetDomainPriority__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iConfigManager_GetDomainPriority'");
    return NULL;
}


static PyObject *_wrap_iConfigManager_SetDynamicDomain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigManager *arg1 = (iConfigManager *) 0 ;
    iConfigFile *arg2 = (iConfigFile *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iConfigManager_SetDynamicDomain",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iConfigFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetDynamicDomain(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigManager_GetDynamicDomain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigManager *arg1 = (iConfigManager *) 0 ;
    iConfigFile *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConfigManager_GetDynamicDomain",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iConfigFile *)((iConfigManager const *)arg1)->GetDynamicDomain();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iConfigFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigManager_SetDynamicDomainPriority(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigManager *arg1 = (iConfigManager *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iConfigManager_SetDynamicDomainPriority",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDynamicDomainPriority(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigManager_GetDynamicDomainPriority(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigManager *arg1 = (iConfigManager *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConfigManager_GetDynamicDomainPriority",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iConfigManager const *)arg1)->GetDynamicDomainPriority();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConfigManager_FlushRemoved(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigManager *arg1 = (iConfigManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConfigManager_FlushRemoved",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FlushRemoved();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iConfigManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConfigManager *arg1 = (iConfigManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iConfigManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConfigManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iConfigManager(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iConfigManager_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iConfigManager, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iStrVector_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iStrVector_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iStrVector_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iStrVector_VERSION);
    return pyobj;
}


static PyObject *_wrap_iStrVector_Length(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStrVector *arg1 = (iStrVector *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iStrVector_Length",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStrVector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iStrVector const *)arg1)->Length();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStrVector_Push(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStrVector *arg1 = (iStrVector *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iStrVector_Push",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStrVector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Push(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStrVector_Pop(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStrVector *arg1 = (iStrVector *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iStrVector_Pop",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStrVector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->Pop();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStrVector_Get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStrVector *arg1 = (iStrVector *) 0 ;
    int arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iStrVector_Get",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStrVector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iStrVector const *)arg1)->Get(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStrVector_Find(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStrVector *arg1 = (iStrVector *) 0 ;
    char *arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iStrVector_Find",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStrVector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iStrVector const *)arg1)->Find((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStrVector_FindSorted(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStrVector *arg1 = (iStrVector *) 0 ;
    char *arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iStrVector_FindSorted",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStrVector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iStrVector const *)arg1)->FindSorted((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStrVector_QuickSort(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStrVector *arg1 = (iStrVector *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iStrVector_QuickSort",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStrVector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->QuickSort();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStrVector_Delete(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStrVector *arg1 = (iStrVector *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iStrVector_Delete",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStrVector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Delete(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStrVector_Insert(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStrVector *arg1 = (iStrVector *) 0 ;
    int arg2 ;
    char *arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:iStrVector_Insert",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStrVector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Insert(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStrVector_DeleteAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStrVector *arg1 = (iStrVector *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iStrVector_DeleteAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStrVector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DeleteAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iStrVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStrVector *arg1 = (iStrVector *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iStrVector",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStrVector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iStrVector(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iStrVector_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iStrVector, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iDocumentAttributeIterator_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iDocumentAttributeIterator_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iDocumentAttributeIterator_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iDocumentAttributeIterator_VERSION);
    return pyobj;
}


static PyObject *_wrap_iDocumentAttributeIterator_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iDocumentAttributeIterator_scfGetID")) goto fail;
    result = (scfInterfaceID)iDocumentAttributeIterator_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentAttributeIterator_HasNext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentAttributeIterator *arg1 = (iDocumentAttributeIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocumentAttributeIterator_HasNext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentAttributeIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->HasNext();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentAttributeIterator_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentAttributeIterator *arg1 = (iDocumentAttributeIterator *) 0 ;
    SwigValueWrapper< csRef<iDocumentAttribute > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocumentAttributeIterator_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentAttributeIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Next();
    
    {
        csRef<iDocumentAttribute > * resultptr;
        resultptr = new csRef<iDocumentAttribute >((csRef<iDocumentAttribute > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csRefTiDocumentAttribute_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iDocumentAttributeIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentAttributeIterator *arg1 = (iDocumentAttributeIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iDocumentAttributeIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentAttributeIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iDocumentAttributeIterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iDocumentAttributeIterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iDocumentAttribute_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iDocumentAttribute_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iDocumentAttribute_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iDocumentAttribute_VERSION);
    return pyobj;
}


static PyObject *_wrap_iDocumentAttribute_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iDocumentAttribute_scfGetID")) goto fail;
    result = (scfInterfaceID)iDocumentAttribute_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentAttribute_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentAttribute *arg1 = (iDocumentAttribute *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocumentAttribute_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentAttribute,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentAttribute_GetValue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentAttribute *arg1 = (iDocumentAttribute *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocumentAttribute_GetValue",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentAttribute,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetValue();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentAttribute_GetValueAsInt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentAttribute *arg1 = (iDocumentAttribute *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocumentAttribute_GetValueAsInt",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentAttribute,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetValueAsInt();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentAttribute_GetValueAsFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentAttribute *arg1 = (iDocumentAttribute *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocumentAttribute_GetValueAsFloat",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentAttribute,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetValueAsFloat();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentAttribute_SetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentAttribute *arg1 = (iDocumentAttribute *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iDocumentAttribute_SetName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentAttribute,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentAttribute_SetValue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentAttribute *arg1 = (iDocumentAttribute *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iDocumentAttribute_SetValue",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentAttribute,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetValue((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentAttribute_SetValueAsInt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentAttribute *arg1 = (iDocumentAttribute *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iDocumentAttribute_SetValueAsInt",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentAttribute,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetValueAsInt(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentAttribute_SetValueAsFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentAttribute *arg1 = (iDocumentAttribute *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iDocumentAttribute_SetValueAsFloat",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentAttribute,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetValueAsFloat(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iDocumentAttribute(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentAttribute *arg1 = (iDocumentAttribute *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iDocumentAttribute",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentAttribute,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iDocumentAttribute_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iDocumentAttribute, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iDocumentNodeIterator_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iDocumentNodeIterator_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iDocumentNodeIterator_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iDocumentNodeIterator_VERSION);
    return pyobj;
}


static PyObject *_wrap_iDocumentNodeIterator_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iDocumentNodeIterator_scfGetID")) goto fail;
    result = (scfInterfaceID)iDocumentNodeIterator_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNodeIterator_HasNext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNodeIterator *arg1 = (iDocumentNodeIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocumentNodeIterator_HasNext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNodeIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->HasNext();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNodeIterator_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNodeIterator *arg1 = (iDocumentNodeIterator *) 0 ;
    SwigValueWrapper< csRef<iDocumentNode > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocumentNodeIterator_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNodeIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Next();
    
    {
        csRef<iDocumentNode > * resultptr;
        resultptr = new csRef<iDocumentNode >((csRef<iDocumentNode > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csRefTiDocumentNode_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iDocumentNodeIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNodeIterator *arg1 = (iDocumentNodeIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iDocumentNodeIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNodeIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iDocumentNodeIterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iDocumentNodeIterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iDocumentNode_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iDocumentNode_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iDocumentNode_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iDocumentNode_VERSION);
    return pyobj;
}


static PyObject *_wrap_iDocumentNode_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iDocumentNode_scfGetID")) goto fail;
    result = (scfInterfaceID)iDocumentNode_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_GetType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocumentNode_GetType",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetType();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_Equals(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    iDocumentNode *arg2 = (iDocumentNode *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iDocumentNode_Equals",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Equals(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_GetValue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocumentNode_GetValue",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetValue();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_SetValue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iDocumentNode_SetValue",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetValue((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_SetValueAsInt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iDocumentNode_SetValueAsInt",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetValueAsInt(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_SetValueAsFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iDocumentNode_SetValueAsFloat",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetValueAsFloat(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_GetParent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    SwigValueWrapper< csRef<iDocumentNode > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocumentNode_GetParent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetParent();
    
    {
        csRef<iDocumentNode > * resultptr;
        resultptr = new csRef<iDocumentNode >((csRef<iDocumentNode > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csRefTiDocumentNode_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_GetNodes__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    SwigValueWrapper< csRef<iDocumentNodeIterator > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocumentNode_GetNodes",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetNodes();
    
    {
        csRef<iDocumentNodeIterator > * resultptr;
        resultptr = new csRef<iDocumentNodeIterator >((csRef<iDocumentNodeIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csRefTiDocumentNodeIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_GetNodes__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    char *arg2 ;
    SwigValueWrapper< csRef<iDocumentNodeIterator > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iDocumentNode_GetNodes",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetNodes((char const *)arg2);
    
    {
        csRef<iDocumentNodeIterator > * resultptr;
        resultptr = new csRef<iDocumentNodeIterator >((csRef<iDocumentNodeIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csRefTiDocumentNodeIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_GetNodes(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iDocumentNode, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_iDocumentNode_GetNodes__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iDocumentNode, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iDocumentNode_GetNodes__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iDocumentNode_GetNodes'");
    return NULL;
}


static PyObject *_wrap_iDocumentNode_GetNode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    char *arg2 ;
    SwigValueWrapper< csRef<iDocumentNode > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iDocumentNode_GetNode",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetNode((char const *)arg2);
    
    {
        csRef<iDocumentNode > * resultptr;
        resultptr = new csRef<iDocumentNode >((csRef<iDocumentNode > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csRefTiDocumentNode_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_RemoveNode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    csRef<iDocumentNode > *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iDocumentNode_RemoveNode",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRefTiDocumentNode_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->RemoveNode((csRef<iDocumentNode > const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_RemoveNodes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocumentNode_RemoveNodes",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveNodes();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_CreateNodeBefore(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    int arg2 ;
    iDocumentNode *arg3 = (iDocumentNode *) 0 ;
    SwigValueWrapper< csRef<iDocumentNode > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi|O:iDocumentNode_CreateNodeBefore",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (arg1)->CreateNodeBefore((csDocumentNodeType )arg2,arg3);
    
    {
        csRef<iDocumentNode > * resultptr;
        resultptr = new csRef<iDocumentNode >((csRef<iDocumentNode > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csRefTiDocumentNode_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_GetContentsValue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocumentNode_GetContentsValue",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetContentsValue();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_GetContentsValueAsInt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocumentNode_GetContentsValueAsInt",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetContentsValueAsInt();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_GetContentsValueAsFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocumentNode_GetContentsValueAsFloat",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetContentsValueAsFloat();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_GetAttributes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    SwigValueWrapper< csRef<iDocumentAttributeIterator > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocumentNode_GetAttributes",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetAttributes();
    
    {
        csRef<iDocumentAttributeIterator > * resultptr;
        resultptr = new csRef<iDocumentAttributeIterator >((csRef<iDocumentAttributeIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csRefTiDocumentAttributeIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_GetAttribute(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    char *arg2 ;
    SwigValueWrapper< csRef<iDocumentAttribute > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iDocumentNode_GetAttribute",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetAttribute((char const *)arg2);
    
    {
        csRef<iDocumentAttribute > * resultptr;
        resultptr = new csRef<iDocumentAttribute >((csRef<iDocumentAttribute > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csRefTiDocumentAttribute_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_GetAttributeValue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    char *arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iDocumentNode_GetAttributeValue",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetAttributeValue((char const *)arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_GetAttributeValueAsInt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    char *arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iDocumentNode_GetAttributeValueAsInt",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetAttributeValueAsInt((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_GetAttributeValueAsFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    char *arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iDocumentNode_GetAttributeValueAsFloat",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetAttributeValueAsFloat((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_RemoveAttribute(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    csRef<iDocumentAttribute > *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iDocumentNode_RemoveAttribute",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRefTiDocumentAttribute_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->RemoveAttribute((csRef<iDocumentAttribute > const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_RemoveAttributes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocumentNode_RemoveAttributes",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAttributes();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_SetAttribute(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    char *arg2 ;
    char *arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iDocumentNode_SetAttribute",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetAttribute((char const *)arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_SetAttributeAsInt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    char *arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:iDocumentNode_SetAttributeAsInt",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetAttributeAsInt((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocumentNode_SetAttributeAsFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    char *arg2 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osf:iDocumentNode_SetAttributeAsFloat",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetAttributeAsFloat((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iDocumentNode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentNode *arg1 = (iDocumentNode *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iDocumentNode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentNode,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iDocumentNode_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iDocumentNode, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iDocument_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iDocument_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iDocument_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iDocument_VERSION);
    return pyobj;
}


static PyObject *_wrap_iDocument_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocument *arg1 = (iDocument *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocument_Clear",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocument,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Clear();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocument_CreateRoot(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocument *arg1 = (iDocument *) 0 ;
    SwigValueWrapper< csRef<iDocumentNode > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocument_CreateRoot",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocument,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateRoot();
    
    {
        csRef<iDocumentNode > * resultptr;
        resultptr = new csRef<iDocumentNode >((csRef<iDocumentNode > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csRefTiDocumentNode_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocument_GetRoot(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocument *arg1 = (iDocument *) 0 ;
    SwigValueWrapper< csRef<iDocumentNode > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocument_GetRoot",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocument,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetRoot();
    
    {
        csRef<iDocumentNode > * resultptr;
        resultptr = new csRef<iDocumentNode >((csRef<iDocumentNode > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csRefTiDocumentNode_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocument_Parse__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocument *arg1 = (iDocument *) 0 ;
    iFile *arg2 = (iFile *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iDocument_Parse",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocument,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->Parse(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocument_Parse__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocument *arg1 = (iDocument *) 0 ;
    iDataBuffer *arg2 = (iDataBuffer *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iDocument_Parse",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocument,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iDataBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->Parse(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocument_Parse__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocument *arg1 = (iDocument *) 0 ;
    iString *arg2 = (iString *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iDocument_Parse",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocument,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->Parse(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocument_Parse__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocument *arg1 = (iDocument *) 0 ;
    char *arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iDocument_Parse",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocument,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->Parse((char const *)arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocument_Parse(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iDocument, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iFile, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iDocument_Parse__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iDocument, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iDataBuffer, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iDocument_Parse__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iDocument, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iString, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iDocument_Parse__SWIG_2(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iDocument, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iDocument_Parse__SWIG_3(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iDocument_Parse'");
    return NULL;
}


static PyObject *_wrap_iDocument_Write__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocument *arg1 = (iDocument *) 0 ;
    iFile *arg2 = (iFile *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iDocument_Write",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocument,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->Write(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocument_Write__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocument *arg1 = (iDocument *) 0 ;
    iString *arg2 = (iString *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iDocument_Write",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocument,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->Write(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocument_Write__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocument *arg1 = (iDocument *) 0 ;
    iVFS *arg2 = (iVFS *) 0 ;
    char *arg3 ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iDocument_Write",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocument,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iVFS,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->Write(arg2,(char const *)arg3);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDocument_Write(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iDocument, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iFile, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iDocument_Write__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iDocument, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iString, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iDocument_Write__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iDocument, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iVFS, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_iDocument_Write__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iDocument_Write'");
    return NULL;
}


static PyObject *_wrap_iDocument_Changeable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocument *arg1 = (iDocument *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocument_Changeable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocument,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Changeable();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iDocument(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocument *arg1 = (iDocument *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iDocument",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocument,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iDocument(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iDocument_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iDocument, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iDocumentSystem_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iDocumentSystem_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iDocumentSystem_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iDocumentSystem_VERSION);
    return pyobj;
}


static PyObject *_wrap_iDocumentSystem_CreateDocument(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentSystem *arg1 = (iDocumentSystem *) 0 ;
    SwigValueWrapper< csRef<iDocument > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDocumentSystem_CreateDocument",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateDocument();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iDocument> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iDocument *)ref), (void *)(iDocument *)ref, "iDocument" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iDocumentSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDocumentSystem *arg1 = (iDocumentSystem *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iDocumentSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDocumentSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iDocumentSystem(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iDocumentSystem_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iDocumentSystem, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csTinyDocumentSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTinyDocumentSystem *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csTinyDocumentSystem")) goto fail;
    result = (csTinyDocumentSystem *)new csTinyDocumentSystem();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csTinyDocumentSystem, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csTinyDocumentSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTinyDocumentSystem *arg1 = (csTinyDocumentSystem *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csTinyDocumentSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTinyDocumentSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTinyDocumentSystem_scfRefCount_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTinyDocumentSystem *arg1 = (csTinyDocumentSystem *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csTinyDocumentSystem_scfRefCount_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTinyDocumentSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->scfRefCount = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTinyDocumentSystem_scfRefCount_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTinyDocumentSystem *arg1 = (csTinyDocumentSystem *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csTinyDocumentSystem_scfRefCount_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTinyDocumentSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->scfRefCount);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTinyDocumentSystem_scfParent_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTinyDocumentSystem *arg1 = (csTinyDocumentSystem *) 0 ;
    iBase *arg2 = (iBase *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTinyDocumentSystem_scfParent_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTinyDocumentSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->scfParent = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTinyDocumentSystem_scfParent_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTinyDocumentSystem *arg1 = (csTinyDocumentSystem *) 0 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csTinyDocumentSystem_scfParent_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTinyDocumentSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBase *) ((arg1)->scfParent);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTinyDocumentSystem_IncRef(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTinyDocumentSystem *arg1 = (csTinyDocumentSystem *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csTinyDocumentSystem_IncRef",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTinyDocumentSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->IncRef();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTinyDocumentSystem_DecRef(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTinyDocumentSystem *arg1 = (csTinyDocumentSystem *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csTinyDocumentSystem_DecRef",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTinyDocumentSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DecRef();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTinyDocumentSystem_GetRefCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTinyDocumentSystem *arg1 = (csTinyDocumentSystem *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csTinyDocumentSystem_GetRefCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTinyDocumentSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetRefCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTinyDocumentSystem_QueryInterface(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTinyDocumentSystem *arg1 = (csTinyDocumentSystem *) 0 ;
    scfInterfaceID arg2 ;
    int arg3 ;
    void *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:csTinyDocumentSystem_QueryInterface",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTinyDocumentSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (scfInterfaceID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (void *)(arg1)->QueryInterface(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTinyDocumentSystem_CreateDocument(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTinyDocumentSystem *arg1 = (csTinyDocumentSystem *) 0 ;
    SwigValueWrapper< csRef<iDocument > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csTinyDocumentSystem_CreateDocument",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTinyDocumentSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateDocument();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iDocument> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iDocument *)ref), (void *)(iDocument *)ref, "iDocument" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csTinyDocumentSystem_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csTinyDocumentSystem, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iDataBuffer_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iDataBuffer_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iDataBuffer_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iDataBuffer_VERSION);
    return pyobj;
}


static PyObject *_wrap_iDataBuffer_GetSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDataBuffer *arg1 = (iDataBuffer *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDataBuffer_GetSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDataBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iDataBuffer const *)arg1)->GetSize();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDataBuffer_GetData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDataBuffer *arg1 = (iDataBuffer *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDataBuffer_GetData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDataBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iDataBuffer const *)arg1)->GetData();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDataBuffer_asString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDataBuffer *arg1 = (iDataBuffer *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDataBuffer_asString",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDataBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iDataBuffer const *)arg1)->operator *();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDataBuffer_GetUint8(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDataBuffer *arg1 = (iDataBuffer *) 0 ;
    uint8 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDataBuffer_GetUint8",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDataBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint8 *)(arg1)->GetUint8();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_uint8, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iDataBuffer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDataBuffer *arg1 = (iDataBuffer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iDataBuffer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDataBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iDataBuffer(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iDataBuffer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iDataBuffer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_G3DFogInfo_r_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DFogInfo *arg1 = (G3DFogInfo *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:G3DFogInfo_r_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DFogInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->r = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DFogInfo_r_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DFogInfo *arg1 = (G3DFogInfo *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DFogInfo_r_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DFogInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->r);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DFogInfo_g_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DFogInfo *arg1 = (G3DFogInfo *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:G3DFogInfo_g_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DFogInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->g = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DFogInfo_g_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DFogInfo *arg1 = (G3DFogInfo *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DFogInfo_g_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DFogInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->g);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DFogInfo_b_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DFogInfo *arg1 = (G3DFogInfo *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:G3DFogInfo_b_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DFogInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->b = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DFogInfo_b_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DFogInfo *arg1 = (G3DFogInfo *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DFogInfo_b_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DFogInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->b);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DFogInfo_intensity_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DFogInfo *arg1 = (G3DFogInfo *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:G3DFogInfo_intensity_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DFogInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->intensity = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DFogInfo_intensity_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DFogInfo *arg1 = (G3DFogInfo *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DFogInfo_intensity_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DFogInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->intensity);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DFogInfo_intensity2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DFogInfo *arg1 = (G3DFogInfo *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:G3DFogInfo_intensity2_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DFogInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->intensity2 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DFogInfo_intensity2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DFogInfo *arg1 = (G3DFogInfo *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DFogInfo_intensity2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DFogInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->intensity2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_G3DFogInfo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DFogInfo *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_G3DFogInfo")) goto fail;
    result = (G3DFogInfo *)new G3DFogInfo();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_G3DFogInfo, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_G3DFogInfo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DFogInfo *arg1 = (G3DFogInfo *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_G3DFogInfo",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DFogInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * G3DFogInfo_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_G3DFogInfo, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_G3DTexturePlane_m_cam2tex_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTexturePlane *arg1 = (G3DTexturePlane *) 0 ;
    csMatrix3 *arg2 = (csMatrix3 *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DTexturePlane_m_cam2tex_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTexturePlane,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->m_cam2tex = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTexturePlane_m_cam2tex_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTexturePlane *arg1 = (G3DTexturePlane *) 0 ;
    csMatrix3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DTexturePlane_m_cam2tex_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTexturePlane,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csMatrix3 *) ((arg1)->m_cam2tex);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csMatrix3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTexturePlane_v_cam2tex_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTexturePlane *arg1 = (G3DTexturePlane *) 0 ;
    csVector3 *arg2 = (csVector3 *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DTexturePlane_v_cam2tex_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTexturePlane,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->v_cam2tex = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTexturePlane_v_cam2tex_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTexturePlane *arg1 = (G3DTexturePlane *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DTexturePlane_v_cam2tex_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTexturePlane,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *) ((arg1)->v_cam2tex);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_G3DTexturePlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTexturePlane *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_G3DTexturePlane")) goto fail;
    result = (G3DTexturePlane *)new G3DTexturePlane();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_G3DTexturePlane, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_G3DTexturePlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTexturePlane *arg1 = (G3DTexturePlane *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_G3DTexturePlane",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTexturePlane,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * G3DTexturePlane_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_G3DTexturePlane, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_G3DPolygonDPFX_num_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:G3DPolygonDPFX_num_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->num = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_num_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDPFX_num_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->num);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_vertices_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    csVector2 *arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDPFX_vertices_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        int ii;
        csVector2 *b = (csVector2 *) arg1->vertices;
        for (ii = 0; ii < 100; ii++) b[ii] = *((csVector2 *) arg2 + ii);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_vertices_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDPFX_vertices_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector2 *)(csVector2 *) ((arg1)->vertices);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_z_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    float *arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDPFX_z_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        int ii;
        float *b = (float *) arg1->z;
        for (ii = 0; ii < 100; ii++) b[ii] = *((float *) arg2 + ii);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_z_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    float *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDPFX_z_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float *)(float *) ((arg1)->z);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_float, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_texels_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    csVector2 *arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDPFX_texels_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        int ii;
        csVector2 *b = (csVector2 *) arg1->texels;
        for (ii = 0; ii < 100; ii++) b[ii] = *((csVector2 *) arg2 + ii);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_texels_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDPFX_texels_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector2 *)(csVector2 *) ((arg1)->texels);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_colors_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    csColor *arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDPFX_colors_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        int ii;
        csColor *b = (csColor *) arg1->colors;
        for (ii = 0; ii < 100; ii++) b[ii] = *((csColor *) arg2 + ii);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_colors_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    csColor *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDPFX_colors_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csColor *)(csColor *) ((arg1)->colors);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_fog_info_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    G3DFogInfo *arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDPFX_fog_info_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_G3DFogInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        int ii;
        G3DFogInfo *b = (G3DFogInfo *) arg1->fog_info;
        for (ii = 0; ii < 100; ii++) b[ii] = *((G3DFogInfo *) arg2 + ii);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_fog_info_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    G3DFogInfo *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDPFX_fog_info_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (G3DFogInfo *)(G3DFogInfo *) ((arg1)->fog_info);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_G3DFogInfo, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_use_fog_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDPFX_use_fog_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->use_fog = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_use_fog_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDPFX_use_fog_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->use_fog);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_mat_handle_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    iMaterialHandle *arg2 = (iMaterialHandle *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDPFX_mat_handle_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterialHandle,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->mat_handle = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_mat_handle_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    iMaterialHandle *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDPFX_mat_handle_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialHandle *) ((arg1)->mat_handle);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialHandle, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_mixmode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    uint arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDPFX_mixmode_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->mixmode = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_mixmode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    uint result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDPFX_mixmode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint) ((arg1)->mixmode);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_flat_color_r_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    uint8 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDPFX_flat_color_r_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint8) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->flat_color_r = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_flat_color_r_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    uint8 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDPFX_flat_color_r_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint8) ((arg1)->flat_color_r);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_flat_color_g_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    uint8 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDPFX_flat_color_g_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint8) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->flat_color_g = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_flat_color_g_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    uint8 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDPFX_flat_color_g_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint8) ((arg1)->flat_color_g);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_flat_color_b_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    uint8 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDPFX_flat_color_b_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint8) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->flat_color_b = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDPFX_flat_color_b_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    uint8 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDPFX_flat_color_b_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint8) ((arg1)->flat_color_b);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_G3DPolygonDPFX(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_G3DPolygonDPFX")) goto fail;
    result = (G3DPolygonDPFX *)new G3DPolygonDPFX();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_G3DPolygonDPFX, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_G3DPolygonDPFX(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDPFX *arg1 = (G3DPolygonDPFX *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_G3DPolygonDPFX",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * G3DPolygonDPFX_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_G3DPolygonDPFX, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_G3DPolygonDFP_num_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDFP *arg1 = (G3DPolygonDFP *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:G3DPolygonDFP_num_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDFP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->num = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDFP_num_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDFP *arg1 = (G3DPolygonDFP *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDFP_num_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDFP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->num);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDFP_vertices_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDFP *arg1 = (G3DPolygonDFP *) 0 ;
    csVector2 *arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDFP_vertices_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDFP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        int ii;
        csVector2 *b = (csVector2 *) arg1->vertices;
        for (ii = 0; ii < 100; ii++) b[ii] = *((csVector2 *) arg2 + ii);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDFP_vertices_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDFP *arg1 = (G3DPolygonDFP *) 0 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDFP_vertices_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDFP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector2 *)(csVector2 *) ((arg1)->vertices);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDFP_normal_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDFP *arg1 = (G3DPolygonDFP *) 0 ;
    csPlane3 *arg2 = (csPlane3 *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDFP_normal_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDFP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->normal = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDFP_normal_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDFP *arg1 = (G3DPolygonDFP *) 0 ;
    csPlane3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDFP_normal_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDFP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csPlane3 *)& ((arg1)->normal);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPlane3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_G3DPolygonDFP(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDFP *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_G3DPolygonDFP")) goto fail;
    result = (G3DPolygonDFP *)new G3DPolygonDFP();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_G3DPolygonDFP, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_G3DPolygonDFP(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDFP *arg1 = (G3DPolygonDFP *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_G3DPolygonDFP",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDFP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * G3DPolygonDFP_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_G3DPolygonDFP, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_G3DPolygonDP_fog_info_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDP *arg1 = (G3DPolygonDP *) 0 ;
    G3DFogInfo *arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDP_fog_info_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_G3DFogInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        int ii;
        G3DFogInfo *b = (G3DFogInfo *) arg1->fog_info;
        for (ii = 0; ii < 100; ii++) b[ii] = *((G3DFogInfo *) arg2 + ii);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDP_fog_info_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDP *arg1 = (G3DPolygonDP *) 0 ;
    G3DFogInfo *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDP_fog_info_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (G3DFogInfo *)(G3DFogInfo *) ((arg1)->fog_info);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_G3DFogInfo, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDP_use_fog_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDP *arg1 = (G3DPolygonDP *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDP_use_fog_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->use_fog = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDP_use_fog_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDP *arg1 = (G3DPolygonDP *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDP_use_fog_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->use_fog);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDP_mat_handle_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDP *arg1 = (G3DPolygonDP *) 0 ;
    iMaterialHandle *arg2 = (iMaterialHandle *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDP_mat_handle_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterialHandle,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->mat_handle = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDP_mat_handle_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDP *arg1 = (G3DPolygonDP *) 0 ;
    iMaterialHandle *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDP_mat_handle_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialHandle *) ((arg1)->mat_handle);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialHandle, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDP_plane_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDP *arg1 = (G3DPolygonDP *) 0 ;
    G3DTexturePlane *arg2 = (G3DTexturePlane *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDP_plane_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_G3DTexturePlane,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->plane = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDP_plane_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDP *arg1 = (G3DPolygonDP *) 0 ;
    G3DTexturePlane *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDP_plane_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (G3DTexturePlane *)& ((arg1)->plane);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_G3DTexturePlane, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDP_poly_texture_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDP *arg1 = (G3DPolygonDP *) 0 ;
    iPolygonTexture *arg2 = (iPolygonTexture *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDP_poly_texture_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPolygonTexture,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->poly_texture = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDP_poly_texture_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDP *arg1 = (G3DPolygonDP *) 0 ;
    iPolygonTexture *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDP_poly_texture_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPolygonTexture *) ((arg1)->poly_texture);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygonTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDP_do_fullbright_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDP *arg1 = (G3DPolygonDP *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDP_do_fullbright_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->do_fullbright = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDP_do_fullbright_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDP *arg1 = (G3DPolygonDP *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDP_do_fullbright_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->do_fullbright);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDP_mixmode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDP *arg1 = (G3DPolygonDP *) 0 ;
    uint arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonDP_mixmode_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->mixmode = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDP_mixmode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDP *arg1 = (G3DPolygonDP *) 0 ;
    uint result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDP_mixmode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint) ((arg1)->mixmode);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDP_z_value_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDP *arg1 = (G3DPolygonDP *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:G3DPolygonDP_z_value_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->z_value = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonDP_z_value_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDP *arg1 = (G3DPolygonDP *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonDP_z_value_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->z_value);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_G3DPolygonDP(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDP *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_G3DPolygonDP")) goto fail;
    result = (G3DPolygonDP *)new G3DPolygonDP();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_G3DPolygonDP, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_G3DPolygonDP(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonDP *arg1 = (G3DPolygonDP *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_G3DPolygonDP",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonDP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * G3DPolygonDP_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_G3DPolygonDP, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csGraphics3DCaps_CanClip_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 = (csGraphics3DCaps *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csGraphics3DCaps_CanClip_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->CanClip = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGraphics3DCaps_CanClip_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 = (csGraphics3DCaps *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGraphics3DCaps_CanClip_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->CanClip);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGraphics3DCaps_minTexHeight_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 = (csGraphics3DCaps *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csGraphics3DCaps_minTexHeight_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->minTexHeight = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGraphics3DCaps_minTexHeight_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 = (csGraphics3DCaps *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGraphics3DCaps_minTexHeight_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->minTexHeight);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGraphics3DCaps_minTexWidth_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 = (csGraphics3DCaps *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csGraphics3DCaps_minTexWidth_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->minTexWidth = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGraphics3DCaps_minTexWidth_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 = (csGraphics3DCaps *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGraphics3DCaps_minTexWidth_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->minTexWidth);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGraphics3DCaps_maxTexHeight_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 = (csGraphics3DCaps *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csGraphics3DCaps_maxTexHeight_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->maxTexHeight = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGraphics3DCaps_maxTexHeight_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 = (csGraphics3DCaps *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGraphics3DCaps_maxTexHeight_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->maxTexHeight);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGraphics3DCaps_maxTexWidth_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 = (csGraphics3DCaps *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csGraphics3DCaps_maxTexWidth_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->maxTexWidth = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGraphics3DCaps_maxTexWidth_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 = (csGraphics3DCaps *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGraphics3DCaps_maxTexWidth_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->maxTexWidth);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGraphics3DCaps_fog_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 = (csGraphics3DCaps *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csGraphics3DCaps_fog_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->fog = (G3D_FOGMETHOD )arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGraphics3DCaps_fog_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 = (csGraphics3DCaps *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGraphics3DCaps_fog_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->fog);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGraphics3DCaps_NeedsPO2Maps_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 = (csGraphics3DCaps *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csGraphics3DCaps_NeedsPO2Maps_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->NeedsPO2Maps = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGraphics3DCaps_NeedsPO2Maps_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 = (csGraphics3DCaps *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGraphics3DCaps_NeedsPO2Maps_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->NeedsPO2Maps);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGraphics3DCaps_MaxAspectRatio_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 = (csGraphics3DCaps *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csGraphics3DCaps_MaxAspectRatio_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->MaxAspectRatio = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csGraphics3DCaps_MaxAspectRatio_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 = (csGraphics3DCaps *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGraphics3DCaps_MaxAspectRatio_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->MaxAspectRatio);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csGraphics3DCaps(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csGraphics3DCaps")) goto fail;
    result = (csGraphics3DCaps *)new csGraphics3DCaps();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csGraphics3DCaps, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csGraphics3DCaps(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 = (csGraphics3DCaps *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csGraphics3DCaps",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csGraphics3DCaps_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csGraphics3DCaps, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_G3DTriangleMesh_num_vertices_pool_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:G3DTriangleMesh_num_vertices_pool_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->num_vertices_pool = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_num_vertices_pool_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DTriangleMesh_num_vertices_pool_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->num_vertices_pool);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_num_triangles_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:G3DTriangleMesh_num_triangles_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->num_triangles = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_num_triangles_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DTriangleMesh_num_triangles_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->num_triangles);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_triangles_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    csTriangle *arg2 = (csTriangle *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DTriangleMesh_triangles_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csTriangle,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->triangles = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_triangles_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    csTriangle *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DTriangleMesh_triangles_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csTriangle *) ((arg1)->triangles);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csTriangle, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_clip_portal_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:G3DTriangleMesh_clip_portal_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->clip_portal = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_clip_portal_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DTriangleMesh_clip_portal_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->clip_portal);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_clip_plane_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:G3DTriangleMesh_clip_plane_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->clip_plane = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_clip_plane_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DTriangleMesh_clip_plane_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->clip_plane);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_clip_z_plane_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:G3DTriangleMesh_clip_z_plane_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->clip_z_plane = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_clip_z_plane_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DTriangleMesh_clip_z_plane_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->clip_z_plane);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_use_vertex_color_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DTriangleMesh_use_vertex_color_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->use_vertex_color = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_use_vertex_color_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DTriangleMesh_use_vertex_color_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->use_vertex_color);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_do_fog_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DTriangleMesh_do_fog_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->do_fog = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_do_fog_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DTriangleMesh_do_fog_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->do_fog);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_do_mirror_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DTriangleMesh_do_mirror_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->do_mirror = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_do_mirror_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DTriangleMesh_do_mirror_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->do_mirror);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_do_morph_texels_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DTriangleMesh_do_morph_texels_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->do_morph_texels = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_do_morph_texels_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DTriangleMesh_do_morph_texels_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->do_morph_texels);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_do_morph_colors_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DTriangleMesh_do_morph_colors_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->do_morph_colors = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_do_morph_colors_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DTriangleMesh_do_morph_colors_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->do_morph_colors);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_vertex_mode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:G3DTriangleMesh_vertex_mode_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->vertex_mode = (G3DTriangleMesh::VertexMode )arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_vertex_mode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DTriangleMesh_vertex_mode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->vertex_mode);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_mixmode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    uint arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DTriangleMesh_mixmode_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->mixmode = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_mixmode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    uint result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DTriangleMesh_mixmode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint) ((arg1)->mixmode);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_morph_factor_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:G3DTriangleMesh_morph_factor_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->morph_factor = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_morph_factor_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DTriangleMesh_morph_factor_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->morph_factor);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_buffers_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    iVertexBuffer **arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DTriangleMesh_buffers_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_p_iVertexBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        int ii;
        iVertexBuffer * *b = (iVertexBuffer * *) arg1->buffers;
        for (ii = 0; ii < G3DTriangleMesh::MAX_VERTEXPOOL; ii++) b[ii] = *((iVertexBuffer * *) arg2 + ii);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_buffers_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    iVertexBuffer **result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DTriangleMesh_buffers_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iVertexBuffer **)(iVertexBuffer **) ((arg1)->buffers);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_p_iVertexBuffer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_mat_handle_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    iMaterialHandle *arg2 = (iMaterialHandle *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DTriangleMesh_mat_handle_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterialHandle,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->mat_handle = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_mat_handle_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    iMaterialHandle *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DTriangleMesh_mat_handle_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialHandle *) ((arg1)->mat_handle);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialHandle, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_vertex_fog_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    G3DFogInfo *arg2 = (G3DFogInfo *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DTriangleMesh_vertex_fog_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_G3DFogInfo,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->vertex_fog = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DTriangleMesh_vertex_fog_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    G3DFogInfo *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DTriangleMesh_vertex_fog_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (G3DFogInfo *) ((arg1)->vertex_fog);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_G3DFogInfo, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_G3DTriangleMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_G3DTriangleMesh")) goto fail;
    result = (G3DTriangleMesh *)new G3DTriangleMesh();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_G3DTriangleMesh, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_G3DTriangleMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DTriangleMesh *arg1 = (G3DTriangleMesh *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_G3DTriangleMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * G3DTriangleMesh_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_G3DTriangleMesh, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_G3DPolygonMesh_polybuf_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *arg1 = (G3DPolygonMesh *) 0 ;
    iPolygonBuffer *arg2 = (iPolygonBuffer *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonMesh_polybuf_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPolygonBuffer,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->polybuf = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonMesh_polybuf_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *arg1 = (G3DPolygonMesh *) 0 ;
    iPolygonBuffer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonMesh_polybuf_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPolygonBuffer *) ((arg1)->polybuf);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygonBuffer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonMesh_do_fog_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *arg1 = (G3DPolygonMesh *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonMesh_do_fog_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->do_fog = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonMesh_do_fog_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *arg1 = (G3DPolygonMesh *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonMesh_do_fog_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->do_fog);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonMesh_mixmode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *arg1 = (G3DPolygonMesh *) 0 ;
    uint arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonMesh_mixmode_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->mixmode = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonMesh_mixmode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *arg1 = (G3DPolygonMesh *) 0 ;
    uint result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonMesh_mixmode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint) ((arg1)->mixmode);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonMesh_clip_portal_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *arg1 = (G3DPolygonMesh *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:G3DPolygonMesh_clip_portal_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->clip_portal = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonMesh_clip_portal_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *arg1 = (G3DPolygonMesh *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonMesh_clip_portal_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->clip_portal);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonMesh_clip_plane_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *arg1 = (G3DPolygonMesh *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:G3DPolygonMesh_clip_plane_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->clip_plane = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonMesh_clip_plane_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *arg1 = (G3DPolygonMesh *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonMesh_clip_plane_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->clip_plane);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonMesh_clip_z_plane_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *arg1 = (G3DPolygonMesh *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:G3DPolygonMesh_clip_z_plane_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->clip_z_plane = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonMesh_clip_z_plane_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *arg1 = (G3DPolygonMesh *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonMesh_clip_z_plane_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->clip_z_plane);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonMesh_do_mirror_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *arg1 = (G3DPolygonMesh *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonMesh_do_mirror_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->do_mirror = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonMesh_do_mirror_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *arg1 = (G3DPolygonMesh *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonMesh_do_mirror_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->do_mirror);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonMesh_vertex_mode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *arg1 = (G3DPolygonMesh *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:G3DPolygonMesh_vertex_mode_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->vertex_mode = (G3DPolygonMesh::VertexMode )arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonMesh_vertex_mode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *arg1 = (G3DPolygonMesh *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonMesh_vertex_mode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->vertex_mode);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonMesh_vertex_fog_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *arg1 = (G3DPolygonMesh *) 0 ;
    G3DFogInfo *arg2 = (G3DFogInfo *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:G3DPolygonMesh_vertex_fog_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_G3DFogInfo,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->vertex_fog = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_G3DPolygonMesh_vertex_fog_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *arg1 = (G3DPolygonMesh *) 0 ;
    G3DFogInfo *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:G3DPolygonMesh_vertex_fog_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (G3DFogInfo *) ((arg1)->vertex_fog);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_G3DFogInfo, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_G3DPolygonMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_G3DPolygonMesh")) goto fail;
    result = (G3DPolygonMesh *)new G3DPolygonMesh();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_G3DPolygonMesh, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_G3DPolygonMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    G3DPolygonMesh *arg1 = (G3DPolygonMesh *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_G3DPolygonMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * G3DPolygonMesh_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_G3DPolygonMesh, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csFog_enabled_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFog *arg1 = (csFog *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csFog_enabled_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFog,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->enabled = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFog_enabled_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFog *arg1 = (csFog *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csFog_enabled_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFog,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->enabled);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFog_density_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFog *arg1 = (csFog *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csFog_density_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFog,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->density = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFog_density_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFog *arg1 = (csFog *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csFog_density_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFog,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->density);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFog_red_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFog *arg1 = (csFog *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csFog_red_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFog,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->red = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFog_red_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFog *arg1 = (csFog *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csFog_red_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFog,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->red);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFog_green_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFog *arg1 = (csFog *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csFog_green_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFog,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->green = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFog_green_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFog *arg1 = (csFog *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csFog_green_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFog,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->green);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFog_blue_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFog *arg1 = (csFog *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csFog_blue_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFog,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->blue = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csFog_blue_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFog *arg1 = (csFog *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csFog_blue_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFog,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->blue);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csFog(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFog *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csFog")) goto fail;
    result = (csFog *)new csFog();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csFog, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csFog(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csFog *arg1 = (csFog *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csFog",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csFog,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csFog_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csFog, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iGraphics3D_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iGraphics3D_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iGraphics3D_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iGraphics3D_VERSION);
    return pyobj;
}


static PyObject *_wrap_iGraphics3D_Open(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_Open",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Open();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_Close(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_Close",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Close();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_GetDriver2D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    iGraphics2D *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_GetDriver2D",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iGraphics2D *)(arg1)->GetDriver2D();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iGraphics2D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_SetDimensions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iGraphics3D_SetDimensions",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDimensions(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_GetWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_GetWidth",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_GetHeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_GetHeight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetHeight();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_GetCaps(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    csGraphics3DCaps *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_GetCaps",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csGraphics3DCaps *)(arg1)->GetCaps();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csGraphics3DCaps, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_SetPerspectiveCenter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iGraphics3D_SetPerspectiveCenter",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPerspectiveCenter(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_GetPerspectiveCenter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_GetPerspectiveCenter",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetPerspectiveCenter(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_SetPerspectiveAspect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iGraphics3D_SetPerspectiveAspect",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPerspectiveAspect(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_GetPerspectiveAspect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_GetPerspectiveAspect",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetPerspectiveAspect();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_SetObjectToCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    csReversibleTransform *arg2 = (csReversibleTransform *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_SetObjectToCamera",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetObjectToCamera(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_GetObjectToCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    csReversibleTransform *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_GetObjectToCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csReversibleTransform const &_result_ref = (arg1)->GetObjectToCamera();
        result = (csReversibleTransform *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csReversibleTransform, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_SetClipper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    iClipper2D *arg2 = (iClipper2D *) 0 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iGraphics3D_SetClipper",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iClipper2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetClipper(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_GetClipper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    iClipper2D *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_GetClipper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iClipper2D *)(arg1)->GetClipper();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iClipper2D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_GetClipType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_GetClipType",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetClipType();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_SetNearPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    csPlane3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_SetNearPlane",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetNearPlane((csPlane3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_ResetNearPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_ResetNearPlane",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ResetNearPlane();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_GetNearPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    csPlane3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_GetNearPlane",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csPlane3 const &_result_ref = (arg1)->GetNearPlane();
        result = (csPlane3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPlane3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_HasNearPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_HasNearPlane",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->HasNearPlane();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_GetZBuffAt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    int arg2 ;
    int arg3 ;
    uint32 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iGraphics3D_GetZBuffAt",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint32 *)(arg1)->GetZBuffAt(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_uint32, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_GetZBuffValue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    int arg2 ;
    int arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iGraphics3D_GetZBuffValue",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetZBuffValue(arg2,arg3);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_BeginDraw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iGraphics3D_BeginDraw",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->BeginDraw(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_FinishDraw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_FinishDraw",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FinishDraw();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_Print(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    csRect *arg2 = (csRect *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_Print",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Print(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_SetRenderState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    int arg2 ;
    long arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oil:iGraphics3D_SetRenderState",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetRenderState((G3D_RENDERSTATEOPTION )arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_GetRenderState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    int arg2 ;
    long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iGraphics3D_GetRenderState",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (long)(arg1)->GetRenderState((G3D_RENDERSTATEOPTION )arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_DrawPolygon(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    G3DPolygonDP *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_DrawPolygon",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_G3DPolygonDP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->DrawPolygon(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_DrawPolygonDebug(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    G3DPolygonDP *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_DrawPolygonDebug",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_G3DPolygonDP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->DrawPolygonDebug(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_DrawPolygonFX(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    G3DPolygonDPFX *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_DrawPolygonFX",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_G3DPolygonDPFX,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->DrawPolygonFX(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_DrawTriangleMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    G3DTriangleMesh *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_DrawTriangleMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_G3DTriangleMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->DrawTriangleMesh(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_DrawPolygonMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    G3DPolygonMesh *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_DrawPolygonMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_G3DPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->DrawPolygonMesh(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_OpenFogObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    CS_ID arg2 ;
    csFog *arg3 = (csFog *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iGraphics3D_OpenFogObject",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (CS_ID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csFog,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->OpenFogObject(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_DrawFogPolygon(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    CS_ID arg2 ;
    G3DPolygonDFP *arg3 = 0 ;
    int arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOi:iGraphics3D_DrawFogPolygon",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (CS_ID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_G3DPolygonDFP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->DrawFogPolygon(arg2,*arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_CloseFogObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    CS_ID arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_CloseFogObject",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (CS_ID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->CloseFogObject(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_OpenPortal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    G3DPolygonDFP *arg2 = (G3DPolygonDFP *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_OpenPortal",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_G3DPolygonDFP,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->OpenPortal(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_ClosePortal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_ClosePortal",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClosePortal();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_DrawLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    float arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOfi:iGraphics3D_DrawLine",&obj0,&obj1,&obj2,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->DrawLine((csVector3 const &)*arg2,(csVector3 const &)*arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_CreateHalo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    unsigned char *arg5 = (unsigned char *) 0 ;
    int arg6 ;
    int arg7 ;
    iHalo *result;
    PyObject * obj0 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OfffOii:iGraphics3D_CreateHalo",&obj0,&arg2,&arg3,&arg4,&obj4,&arg6,&arg7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_unsigned_char,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iHalo *)(arg1)->CreateHalo(arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iHalo, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_DrawPixmap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    iTextureHandle *arg2 = (iTextureHandle *) 0 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    int arg6 ;
    int arg7 ;
    int arg8 ;
    int arg9 ;
    int arg10 ;
    uint8 arg11 = (uint8) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj10 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiiiiiii|O:iGraphics3D_DrawPixmap",&obj0,&obj1,&arg3,&arg4,&arg5,&arg6,&arg7,&arg8,&arg9,&arg10,&obj10)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj10) {
        arg11 = (uint8) PyInt_AsLong(obj10);
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->DrawPixmap(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_GetTextureManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    iTextureManager *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_GetTextureManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iTextureManager *)(arg1)->GetTextureManager();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureManager, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_DumpCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_DumpCache",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DumpCache();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_ClearCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_ClearCache",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearCache();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_RemoveFromCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    iPolygonTexture *arg2 = (iPolygonTexture *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_RemoveFromCache",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPolygonTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveFromCache(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_GetVertexBufferManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    iVertexBufferManager *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_GetVertexBufferManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iVertexBufferManager *)(arg1)->GetVertexBufferManager();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iVertexBufferManager, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_IsLightmapOK(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    iPolygonTexture *arg2 = (iPolygonTexture *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_IsLightmapOK",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPolygonTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsLightmapOK(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_SetRenderTarget(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    iTextureHandle *arg2 = (iTextureHandle *) 0 ;
    bool arg3 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:iGraphics3D_SetRenderTarget",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->SetRenderTarget(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics3D_GetRenderTarget(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    iTextureHandle *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_GetRenderTarget",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iTextureHandle *)((iGraphics3D const *)arg1)->GetRenderTarget();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureHandle, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iGraphics3D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 = (iGraphics3D *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iGraphics3D",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iGraphics3D(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iGraphics3D_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iGraphics3D, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csPixelCoord_x_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelCoord *arg1 = (csPixelCoord *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPixelCoord_x_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelCoord,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelCoord_x_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelCoord *arg1 = (csPixelCoord *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelCoord_x_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelCoord,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->x);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelCoord_y_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelCoord *arg1 = (csPixelCoord *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPixelCoord_y_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelCoord,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelCoord_y_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelCoord *arg1 = (csPixelCoord *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelCoord_y_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelCoord,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->y);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPixelCoord(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelCoord *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csPixelCoord")) goto fail;
    result = (csPixelCoord *)new csPixelCoord();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPixelCoord, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csPixelCoord(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelCoord *arg1 = (csPixelCoord *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csPixelCoord",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelCoord,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csPixelCoord_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csPixelCoord, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csPixelFormat_RedMask_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    uint32 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPixelFormat_RedMask_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint32) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->RedMask = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_RedMask_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    uint32 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_RedMask_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint32) ((arg1)->RedMask);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_GreenMask_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    uint32 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPixelFormat_GreenMask_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint32) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->GreenMask = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_GreenMask_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    uint32 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_GreenMask_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint32) ((arg1)->GreenMask);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_BlueMask_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    uint32 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPixelFormat_BlueMask_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint32) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->BlueMask = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_BlueMask_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    uint32 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_BlueMask_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint32) ((arg1)->BlueMask);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_RedShift_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPixelFormat_RedShift_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->RedShift = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_RedShift_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_RedShift_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->RedShift);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_GreenShift_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPixelFormat_GreenShift_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->GreenShift = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_GreenShift_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_GreenShift_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->GreenShift);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_BlueShift_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPixelFormat_BlueShift_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->BlueShift = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_BlueShift_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_BlueShift_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->BlueShift);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_RedBits_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPixelFormat_RedBits_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->RedBits = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_RedBits_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_RedBits_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->RedBits);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_GreenBits_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPixelFormat_GreenBits_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->GreenBits = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_GreenBits_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_GreenBits_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->GreenBits);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_BlueBits_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPixelFormat_BlueBits_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->BlueBits = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_BlueBits_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_BlueBits_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->BlueBits);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_PalEntries_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPixelFormat_PalEntries_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->PalEntries = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_PalEntries_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_PalEntries_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->PalEntries);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_PixelBytes_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPixelFormat_PixelBytes_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->PixelBytes = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_PixelBytes_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_PixelBytes_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->PixelBytes);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csPixelFormat_complete(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_complete",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->complete();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csPixelFormat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csPixelFormat")) goto fail;
    result = (csPixelFormat *)new csPixelFormat();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPixelFormat, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csPixelFormat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 = (csPixelFormat *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csPixelFormat",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csPixelFormat_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csPixelFormat, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csImageArea_x_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 = (csImageArea *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csImageArea_x_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csImageArea_x_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 = (csImageArea *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csImageArea_x_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->x);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csImageArea_y_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 = (csImageArea *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csImageArea_y_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csImageArea_y_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 = (csImageArea *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csImageArea_y_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->y);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csImageArea_w_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 = (csImageArea *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csImageArea_w_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->w = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csImageArea_w_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 = (csImageArea *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csImageArea_w_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->w);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csImageArea_h_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 = (csImageArea *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csImageArea_h_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->h = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csImageArea_h_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 = (csImageArea *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csImageArea_h_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->h);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csImageArea_data_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 = (csImageArea *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:csImageArea_data_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg1->data) delete [] arg1->data;
        if (arg2) {
            arg1->data = (char *) (new char[strlen(arg2)+1]);
            strcpy((char *) arg1->data,arg2);
        }else {
            arg1->data = 0;
        }
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csImageArea_data_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 = (csImageArea *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csImageArea_data_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->data);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csImageArea(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    csImageArea *result;
    
    if(!PyArg_ParseTuple(args,(char *)"iiii:new_csImageArea",&arg1,&arg2,&arg3,&arg4)) goto fail;
    result = (csImageArea *)new csImageArea(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csImageArea, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csImageArea(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 = (csImageArea *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csImageArea",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csImageArea_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csImageArea, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iOffscreenCanvasCallback_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iOffscreenCanvasCallback_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iOffscreenCanvasCallback_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iOffscreenCanvasCallback_VERSION);
    return pyobj;
}


static PyObject *_wrap_iOffscreenCanvasCallback_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iOffscreenCanvasCallback_scfGetID")) goto fail;
    result = (scfInterfaceID)iOffscreenCanvasCallback_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iOffscreenCanvasCallback_FinishDraw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iOffscreenCanvasCallback *arg1 = (iOffscreenCanvasCallback *) 0 ;
    iGraphics2D *arg2 = (iGraphics2D *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iOffscreenCanvasCallback_FinishDraw",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iOffscreenCanvasCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FinishDraw(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iOffscreenCanvasCallback_SetRGB(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iOffscreenCanvasCallback *arg1 = (iOffscreenCanvasCallback *) 0 ;
    iGraphics2D *arg2 = (iGraphics2D *) 0 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    int arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiii:iOffscreenCanvasCallback_SetRGB",&obj0,&obj1,&arg3,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iOffscreenCanvasCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetRGB(arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iOffscreenCanvasCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iOffscreenCanvasCallback *arg1 = (iOffscreenCanvasCallback *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iOffscreenCanvasCallback",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iOffscreenCanvasCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iOffscreenCanvasCallback_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iOffscreenCanvasCallback, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iGraphics2D_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iGraphics2D_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iGraphics2D_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iGraphics2D_VERSION);
    return pyobj;
}


static PyObject *_wrap_iGraphics2D_Open(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_Open",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Open();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_Close(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_Close",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Close();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_GetWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetWidth",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_GetHeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetHeight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetHeight();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_GetPage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetPage",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetPage();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_DoubleBuffer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    bool arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics2D_DoubleBuffer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->DoubleBuffer(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_GetDoubleBufferState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetDoubleBufferState",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->GetDoubleBufferState();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_GetPixelFormat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    csPixelFormat *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetPixelFormat",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csPixelFormat *)(arg1)->GetPixelFormat();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPixelFormat, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_GetPixelBytes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetPixelBytes",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetPixelBytes();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_GetPalEntryCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetPalEntryCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetPalEntryCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_GetPalette(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    csRGBpixel *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetPalette",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csRGBpixel *)(arg1)->GetPalette();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csRGBpixel, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_SetRGB(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:iGraphics2D_SetRGB",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetRGB(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_FindRGB(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:iGraphics2D_FindRGB",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->FindRGB(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_SetClipRect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:iGraphics2D_SetClipRect",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetClipRect(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_GetClipRect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    int *arg5 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:iGraphics2D_GetClipRect",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetClipRect(*arg2,*arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_BeginDraw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_BeginDraw",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->BeginDraw();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_FinishDraw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_FinishDraw",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FinishDraw();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_Print(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    csRect *arg2 = (csRect *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics2D_Print",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Print(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iGraphics2D_Clear",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Clear(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_ClearAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iGraphics2D_ClearAll",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearAll(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_DrawLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    float arg5 ;
    int arg6 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offffi:iGraphics2D_DrawLine",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DrawLine(arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_DrawBox(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    int arg6 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiiii:iGraphics2D_DrawBox",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DrawBox(arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_ClipLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    float *arg2 = 0 ;
    float *arg3 = 0 ;
    float *arg4 = 0 ;
    float *arg5 = 0 ;
    int arg6 ;
    int arg7 ;
    int arg8 ;
    int arg9 ;
    bool result;
    float temp2 ;
    float temp3 ;
    float temp4 ;
    float temp5 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    arg4 = &temp4;
    arg5 = &temp5;
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:iGraphics2D_ClipLine",&obj0,&arg6,&arg7,&arg8,&arg9)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->ClipLine(*arg2,*arg3,*arg4,*arg5,arg6,arg7,arg8,arg9);
    
    resultobj = PyInt_FromLong((long)result);
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg5));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_DrawPixel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:iGraphics2D_DrawPixel",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DrawPixel(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_DrawPixels(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    csPixelCoord *arg2 = (csPixelCoord *) 0 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOii:iGraphics2D_DrawPixels",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPixelCoord,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DrawPixels(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_Blit(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    unsigned char *arg6 = (unsigned char *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiiiO:iGraphics2D_Blit",&obj0,&arg2,&arg3,&arg4,&arg5,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_unsigned_char,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Blit(arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_GetPixelAt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    int arg2 ;
    int arg3 ;
    unsigned char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iGraphics2D_GetPixelAt",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char *)(arg1)->GetPixelAt(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_unsigned_char, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_GetPixel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    int arg2 ;
    int arg3 ;
    uint8 *arg4 = 0 ;
    uint8 *arg5 = 0 ;
    uint8 *arg6 = 0 ;
    uint8 temp4 ;
    uint8 temp5 ;
    uint8 temp6 ;
    PyObject * obj0 = 0 ;
    
    arg4 = &temp4;
    arg5 = &temp5;
    arg6 = &temp6;
    if(!PyArg_ParseTuple(args,(char *)"Oii:iGraphics2D_GetPixel",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetPixel(arg2,arg3,*arg4,*arg5,*arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg5));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg6));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_SaveArea(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    csImageArea *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:iGraphics2D_SaveArea",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csImageArea *)(arg1)->SaveArea(arg2,arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csImageArea, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_RestoreArea(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    csImageArea *arg2 = (csImageArea *) 0 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iGraphics2D_RestoreArea",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csImageArea,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->RestoreArea(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_FreeArea(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    csImageArea *arg2 = (csImageArea *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics2D_FreeArea",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csImageArea,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FreeArea(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_Write(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    iFont *arg2 = (iFont *) 0 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    int arg6 ;
    char *arg7 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiiis:iGraphics2D_Write",&obj0,&obj1,&arg3,&arg4,&arg5,&arg6,&arg7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Write(arg2,arg3,arg4,arg5,arg6,(char const *)arg7);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_WriteBaseline(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    iFont *arg2 = (iFont *) 0 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    int arg6 ;
    char *arg7 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiiis:iGraphics2D_WriteBaseline",&obj0,&obj1,&arg3,&arg4,&arg5,&arg6,&arg7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->WriteBaseline(arg2,arg3,arg4,arg5,arg6,(char const *)arg7);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_AllowResize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics2D_AllowResize",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->AllowResize(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_Resize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    int arg2 ;
    int arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iGraphics2D_Resize",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Resize(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_GetFontServer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    iFontServer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetFontServer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iFontServer *)(arg1)->GetFontServer();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iFontServer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_PerformExtension__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    char *arg2 ;
    void *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iGraphics2D_PerformExtension",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->PerformExtension((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_PerformExtension(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *varargs;
    PyObject *newargs;
    
    newargs = PyTuple_GetSlice(args,0,2);
    varargs = PyTuple_GetSlice(args,2,PyTuple_Size(args)+1);
    resultobj = _wrap_iGraphics2D_PerformExtension__varargs__(self,newargs,varargs);
    Py_XDECREF(newargs);
    Py_XDECREF(varargs);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_PerformExtensionV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    char *arg2 ;
    va_list arg3 ;
    bool result;
    va_list *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iGraphics2D_PerformExtensionV",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_va_list,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    result = (bool)(arg1)->PerformExtensionV((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_ScreenShot(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    SwigValueWrapper< csPtr<iImage > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_ScreenShot",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->ScreenShot();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iImage> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iImage *)ref), (void *)(iImage *)ref, "iImage" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_GetNativeWindow(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    iNativeWindow *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetNativeWindow",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iNativeWindow *)(arg1)->GetNativeWindow();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iNativeWindow, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_GetFullScreen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetFullScreen",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->GetFullScreen();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_SetFullScreen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics2D_SetFullScreen",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetFullScreen(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_SetMousePosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    int arg2 ;
    int arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iGraphics2D_SetMousePosition",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetMousePosition(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_SetMouseCursor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    csMouseCursorID arg2 ;
    bool result;
    csMouseCursorID *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics2D_SetMouseCursor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csMouseCursorID,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (bool)(arg1)->SetMouseCursor(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_SetGamma(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    float arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iGraphics2D_SetGamma",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetGamma(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_GetGamma(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetGamma",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iGraphics2D const *)arg1)->GetGamma();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iGraphics2D_CreateOffscreenCanvas(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    void *arg2 = (void *) 0 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    iOffscreenCanvasCallback *arg6 = (iOffscreenCanvasCallback *) 0 ;
    SwigValueWrapper< csPtr<iGraphics2D > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiiO:iGraphics2D_CreateOffscreenCanvas",&obj0,&obj1,&arg3,&arg4,&arg5,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_iOffscreenCanvasCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateOffscreenCanvas(arg2,arg3,arg4,arg5,arg6);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iGraphics2D> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iGraphics2D *)ref), (void *)(iGraphics2D *)ref, "iGraphics2D" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iGraphics2D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 = (iGraphics2D *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iGraphics2D",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iGraphics2D(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iGraphics2D_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iGraphics2D, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iFontDeleteNotify_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iFontDeleteNotify_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iFontDeleteNotify_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iFontDeleteNotify_VERSION);
    return pyobj;
}


static PyObject *_wrap_iFontDeleteNotify_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iFontDeleteNotify_scfGetID")) goto fail;
    result = (scfInterfaceID)iFontDeleteNotify_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFontDeleteNotify_BeforeDelete(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFontDeleteNotify *arg1 = (iFontDeleteNotify *) 0 ;
    iFont *arg2 = (iFont *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iFontDeleteNotify_BeforeDelete",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFontDeleteNotify,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->BeforeDelete(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iFontDeleteNotify(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFontDeleteNotify *arg1 = (iFontDeleteNotify *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iFontDeleteNotify",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFontDeleteNotify,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iFontDeleteNotify_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iFontDeleteNotify, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iFont_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iFont_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iFont_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iFont_VERSION);
    return pyobj;
}


static PyObject *_wrap_iFont_AddDeleteCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 = (iFont *) 0 ;
    iFontDeleteNotify *arg2 = (iFontDeleteNotify *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iFont_AddDeleteCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iFontDeleteNotify,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddDeleteCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFont_RemoveDeleteCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 = (iFont *) 0 ;
    iFontDeleteNotify *arg2 = (iFontDeleteNotify *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iFont_RemoveDeleteCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iFontDeleteNotify,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveDeleteCallback(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFont_SetSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 = (iFont *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iFont_SetSize",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSize(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFont_GetSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 = (iFont *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFont_GetSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetSize();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFont_GetMaxSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 = (iFont *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTuple(args,(char *)"O:iFont_GetMaxSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetMaxSize(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFont_GetGlyphSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 = (iFont *) 0 ;
    uint8 arg2 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    int *arg5 = 0 ;
    int *arg6 = 0 ;
    int *arg7 = 0 ;
    bool result;
    int temp3 ;
    int temp4 ;
    int temp5 ;
    int temp6 ;
    int temp7 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    arg3 = &temp3;
    arg4 = &temp4;
    arg5 = &temp5;
    arg6 = &temp6;
    arg7 = &temp7;
    if(!PyArg_ParseTuple(args,(char *)"OO:iFont_GetGlyphSize",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint8) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->GetGlyphSize(arg2,*arg3,*arg4,*arg5,*arg6,*arg7);
    
    resultobj = PyInt_FromLong((long)result);
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg5));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg6));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg7));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFont_GetGlyphBitmap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 = (iFont *) 0 ;
    uint8 arg2 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    int *arg5 = 0 ;
    int *arg6 = 0 ;
    int *arg7 = 0 ;
    uint8 *result;
    int temp3 ;
    int temp4 ;
    int temp5 ;
    int temp6 ;
    int temp7 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    arg3 = &temp3;
    arg4 = &temp4;
    arg5 = &temp5;
    arg6 = &temp6;
    arg7 = &temp7;
    if(!PyArg_ParseTuple(args,(char *)"OO:iFont_GetGlyphBitmap",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint8) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (uint8 *)(arg1)->GetGlyphBitmap(arg2,*arg3,*arg4,*arg5,*arg6,*arg7);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_uint8, 0);
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg5));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg6));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg7));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFont_GetGlyphAlphaBitmap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 = (iFont *) 0 ;
    uint8 arg2 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    int *arg5 = 0 ;
    int *arg6 = 0 ;
    int *arg7 = 0 ;
    uint8 *result;
    int temp3 ;
    int temp4 ;
    int temp5 ;
    int temp6 ;
    int temp7 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    arg3 = &temp3;
    arg4 = &temp4;
    arg5 = &temp5;
    arg6 = &temp6;
    arg7 = &temp7;
    if(!PyArg_ParseTuple(args,(char *)"OO:iFont_GetGlyphAlphaBitmap",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint8) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (uint8 *)(arg1)->GetGlyphAlphaBitmap(arg2,*arg3,*arg4,*arg5,*arg6,*arg7);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_uint8, 0);
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg5));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg6));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg7));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFont_GetDimensions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 = (iFont *) 0 ;
    char *arg2 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    int *arg5 = 0 ;
    int temp3 ;
    int temp4 ;
    int temp5 ;
    PyObject * obj0 = 0 ;
    
    arg3 = &temp3;
    arg4 = &temp4;
    arg5 = &temp5;
    if(!PyArg_ParseTuple(args,(char *)"Os:iFont_GetDimensions",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetDimensions((char const *)arg2,*arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg5));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFont_GetLength(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 = (iFont *) 0 ;
    char *arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:iFont_GetLength",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetLength((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFont_GetDescent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 = (iFont *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFont_GetDescent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetDescent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFont_GetAscent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 = (iFont *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFont_GetAscent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetAscent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 = (iFont *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iFont",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iFont(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iFont_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iFont, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iFontServer_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iFontServer_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iFontServer_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iFontServer_VERSION);
    return pyobj;
}


static PyObject *_wrap_iFontServer_LoadFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFontServer *arg1 = (iFontServer *) 0 ;
    char *arg2 ;
    SwigValueWrapper< csPtr<iFont > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iFontServer_LoadFont",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFontServer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->LoadFont((char const *)arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iFont> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iFont *)ref), (void *)(iFont *)ref, "iFont" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFontServer_GetFontCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFontServer *arg1 = (iFontServer *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFontServer_GetFontCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFontServer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetFontCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iFontServer_GetFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFontServer *arg1 = (iFontServer *) 0 ;
    int arg2 ;
    iFont *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iFontServer_GetFont",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFontServer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iFont *)(arg1)->GetFont(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iFont, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iFontServer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFontServer *arg1 = (iFontServer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iFontServer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFontServer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iFontServer(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iFontServer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iFontServer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iHalo_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iHalo_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iHalo_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iHalo_VERSION);
    return pyobj;
}


static PyObject *_wrap_iHalo_GetWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iHalo *arg1 = (iHalo *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iHalo_GetWidth",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iHalo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iHalo_GetHeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iHalo *arg1 = (iHalo *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iHalo_GetHeight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iHalo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetHeight();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iHalo_SetColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iHalo *arg1 = (iHalo *) 0 ;
    float *arg2 = 0 ;
    float *arg3 = 0 ;
    float *arg4 = 0 ;
    float temp2 ;
    float temp3 ;
    float temp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iHalo_SetColor",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iHalo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        temp2 = PyFloat_AsDouble(obj1);
        if (PyErr_Occurred()) SWIG_fail;
        arg2 = &temp2;
    }
    {
        temp3 = PyFloat_AsDouble(obj2);
        if (PyErr_Occurred()) SWIG_fail;
        arg3 = &temp3;
    }
    {
        temp4 = PyFloat_AsDouble(obj3);
        if (PyErr_Occurred()) SWIG_fail;
        arg4 = &temp4;
    }
    (arg1)->SetColor(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iHalo_GetColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iHalo *arg1 = (iHalo *) 0 ;
    float *arg2 = 0 ;
    float *arg3 = 0 ;
    float *arg4 = 0 ;
    float temp2 ;
    float temp3 ;
    float temp4 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    arg4 = &temp4;
    if(!PyArg_ParseTuple(args,(char *)"O:iHalo_GetColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iHalo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetColor(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iHalo_Draw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iHalo *arg1 = (iHalo *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    float arg5 ;
    float arg6 ;
    csVector2 *arg7 = (csVector2 *) 0 ;
    int arg8 ;
    PyObject * obj0 = 0 ;
    PyObject * obj6 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OfffffOi:iHalo_Draw",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&obj6,&arg8)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iHalo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Draw(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iHalo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iHalo *arg1 = (iHalo *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iHalo",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iHalo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iHalo(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iHalo_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iHalo, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iTextureHandle_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iTextureHandle_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iTextureHandle_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iTextureHandle_VERSION);
    return pyobj;
}


static PyObject *_wrap_iTextureHandle_GetFlags(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 = (iTextureHandle *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureHandle_GetFlags",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetFlags();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureHandle_SetKeyColor__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 = (iTextureHandle *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iTextureHandle_SetKeyColor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetKeyColor(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureHandle_SetKeyColor__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 = (iTextureHandle *) 0 ;
    uint8 arg2 ;
    uint8 arg3 ;
    uint8 arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iTextureHandle_SetKeyColor",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint8) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (uint8) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    arg4 = (uint8) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetKeyColor(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureHandle_SetKeyColor(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iTextureHandle, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iTextureHandle_SetKeyColor__SWIG_0(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iTextureHandle, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_iTextureHandle_SetKeyColor__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iTextureHandle_SetKeyColor'");
    return NULL;
}


static PyObject *_wrap_iTextureHandle_GetKeyColorStatus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 = (iTextureHandle *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureHandle_GetKeyColorStatus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->GetKeyColor();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureHandle_GetKeyColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 = (iTextureHandle *) 0 ;
    uint8 *arg2 = 0 ;
    uint8 *arg3 = 0 ;
    uint8 *arg4 = 0 ;
    uint8 temp2 ;
    uint8 temp3 ;
    uint8 temp4 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    arg4 = &temp4;
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureHandle_GetKeyColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetKeyColor(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureHandle_GetMipMapDimensions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 = (iTextureHandle *) 0 ;
    int arg2 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    bool result;
    int temp3 ;
    int temp4 ;
    PyObject * obj0 = 0 ;
    
    arg3 = &temp3;
    arg4 = &temp4;
    if(!PyArg_ParseTuple(args,(char *)"Oi:iTextureHandle_GetMipMapDimensions",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->GetMipMapDimensions(arg2,*arg3,*arg4);
    
    resultobj = PyInt_FromLong((long)result);
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureHandle_GetOriginalDimensions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 = (iTextureHandle *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureHandle_GetOriginalDimensions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetOriginalDimensions(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureHandle_GetMeanColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 = (iTextureHandle *) 0 ;
    uint8 *arg2 = 0 ;
    uint8 *arg3 = 0 ;
    uint8 *arg4 = 0 ;
    uint8 temp2 ;
    uint8 temp3 ;
    uint8 temp4 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    arg4 = &temp4;
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureHandle_GetMeanColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetMeanColor(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureHandle_GetCacheData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 = (iTextureHandle *) 0 ;
    void *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureHandle_GetCacheData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *)(arg1)->GetCacheData();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureHandle_SetCacheData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 = (iTextureHandle *) 0 ;
    void *arg2 = (void *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iTextureHandle_SetCacheData",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCacheData(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureHandle_GetPrivateObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 = (iTextureHandle *) 0 ;
    void *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureHandle_GetPrivateObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *)(arg1)->GetPrivateObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureHandle_GetAlphaMap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 = (iTextureHandle *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureHandle_GetAlphaMap",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->GetAlphaMap();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureHandle_Prepare(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 = (iTextureHandle *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureHandle_Prepare",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Prepare();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureHandle_GetCanvas(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 = (iTextureHandle *) 0 ;
    iGraphics2D *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureHandle_GetCanvas",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iGraphics2D *)(arg1)->GetCanvas();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iGraphics2D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iTextureHandle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 = (iTextureHandle *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iTextureHandle",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iTextureHandle(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iTextureHandle_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iTextureHandle, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iTextureManager_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iTextureManager_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iTextureManager_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iTextureManager_VERSION);
    return pyobj;
}


static PyObject *_wrap_iTextureManager_RegisterTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 = (iTextureManager *) 0 ;
    iImage *arg2 = (iImage *) 0 ;
    int arg3 ;
    SwigValueWrapper< csPtr<iTextureHandle > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iTextureManager_RegisterTexture",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->RegisterTexture(arg2,arg3);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iTextureHandle> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iTextureHandle *)ref), (void *)(iTextureHandle *)ref, "iTextureHandle" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureManager_PrepareTextures(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 = (iTextureManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureManager_PrepareTextures",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PrepareTextures();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureManager_FreeImages(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 = (iTextureManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureManager_FreeImages",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FreeImages();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureManager_RegisterMaterial__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 = (iTextureManager *) 0 ;
    iMaterial *arg2 = (iMaterial *) 0 ;
    SwigValueWrapper< csPtr<iMaterialHandle > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iTextureManager_RegisterMaterial",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterial,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->RegisterMaterial(arg2);
    
    {
        csPtr<iMaterialHandle > * resultptr;
        resultptr = new csPtr<iMaterialHandle >((csPtr<iMaterialHandle > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiMaterialHandle_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureManager_RegisterMaterial__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 = (iTextureManager *) 0 ;
    iTextureHandle *arg2 = (iTextureHandle *) 0 ;
    SwigValueWrapper< csPtr<iMaterialHandle > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iTextureManager_RegisterMaterial",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iTextureHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->RegisterMaterial(arg2);
    
    {
        csPtr<iMaterialHandle > * resultptr;
        resultptr = new csPtr<iMaterialHandle >((csPtr<iMaterialHandle > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiMaterialHandle_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureManager_RegisterMaterial(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iTextureManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iMaterial, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iTextureManager_RegisterMaterial__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iTextureManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iTextureHandle, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iTextureManager_RegisterMaterial__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iTextureManager_RegisterMaterial'");
    return NULL;
}


static PyObject *_wrap_iTextureManager_PrepareMaterials(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 = (iTextureManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureManager_PrepareMaterials",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PrepareMaterials();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureManager_FreeMaterials(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 = (iTextureManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureManager_FreeMaterials",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FreeMaterials();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureManager_SetVerbose(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 = (iTextureManager *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iTextureManager_SetVerbose",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetVerbose(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iTextureManager_GetTextureFormat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 = (iTextureManager *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureManager_GetTextureFormat",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetTextureFormat();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iTextureManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 = (iTextureManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iTextureManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iTextureManager(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iTextureManager_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iTextureManager, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iVertexBuffer_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iVertexBuffer_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iVertexBuffer_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iVertexBuffer_VERSION);
    return pyobj;
}


static PyObject *_wrap_iVertexBuffer_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iVertexBuffer_scfGetID")) goto fail;
    result = (scfInterfaceID)iVertexBuffer_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVertexBuffer_GetPriority(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBuffer *arg1 = (iVertexBuffer *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVertexBuffer_GetPriority",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iVertexBuffer const *)arg1)->GetPriority();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVertexBuffer_IsLocked(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBuffer *arg1 = (iVertexBuffer *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVertexBuffer_IsLocked",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iVertexBuffer const *)arg1)->IsLocked();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVertexBuffer_GetVertices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBuffer *arg1 = (iVertexBuffer *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVertexBuffer_GetVertices",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)((iVertexBuffer const *)arg1)->GetVertices();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVertexBuffer_GetTexels(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBuffer *arg1 = (iVertexBuffer *) 0 ;
    csVector2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVertexBuffer_GetTexels",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector2 *)((iVertexBuffer const *)arg1)->GetTexels();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVertexBuffer_GetColors(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBuffer *arg1 = (iVertexBuffer *) 0 ;
    csColor *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVertexBuffer_GetColors",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csColor *)((iVertexBuffer const *)arg1)->GetColors();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVertexBuffer_GetUserArray(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBuffer *arg1 = (iVertexBuffer *) 0 ;
    int arg2 ;
    float *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iVertexBuffer_GetUserArray",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float *)((iVertexBuffer const *)arg1)->GetUserArray(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_float, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVertexBuffer_GetUserArrayComponentCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBuffer *arg1 = (iVertexBuffer *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iVertexBuffer_GetUserArrayComponentCount",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iVertexBuffer const *)arg1)->GetUserArrayComponentCount(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVertexBuffer_GetVertexCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBuffer *arg1 = (iVertexBuffer *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVertexBuffer_GetVertexCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iVertexBuffer const *)arg1)->GetVertexCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVertexBuffer_GetBoundingBox(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBuffer *arg1 = (iVertexBuffer *) 0 ;
    csBox3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVertexBuffer_GetBoundingBox",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csBox3 const &_result_ref = ((iVertexBuffer const *)arg1)->GetBoundingBox();
        result = (csBox3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csBox3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iVertexBuffer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBuffer *arg1 = (iVertexBuffer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iVertexBuffer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iVertexBuffer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iVertexBuffer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iPolygonBuffer_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iPolygonBuffer_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iPolygonBuffer_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iPolygonBuffer_VERSION);
    return pyobj;
}


static PyObject *_wrap_iPolygonBuffer_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iPolygonBuffer_scfGetID")) goto fail;
    result = (scfInterfaceID)iPolygonBuffer_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonBuffer_AddPolygon(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonBuffer *arg1 = (iPolygonBuffer *) 0 ;
    int *arg2 = (int *) 0 ;
    int arg3 ;
    csPlane3 *arg4 = 0 ;
    int arg5 ;
    csMatrix3 *arg6 = 0 ;
    csVector3 *arg7 = 0 ;
    iPolygonTexture *arg8 = (iPolygonTexture *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    PyObject * obj7 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiOiOOO:iPolygonBuffer_AddPolygon",&obj0,&obj1,&arg3,&obj3,&arg5,&obj5,&obj6,&obj7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj7,(void **) &arg8, SWIGTYPE_p_iPolygonTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddPolygon(arg2,arg3,(csPlane3 const &)*arg4,arg5,(csMatrix3 const &)*arg6,(csVector3 const &)*arg7,arg8);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonBuffer_SetVertexArray(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonBuffer *arg1 = (iPolygonBuffer *) 0 ;
    csVector3 *arg2 = (csVector3 *) 0 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iPolygonBuffer_SetVertexArray",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetVertexArray(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonBuffer_AddMaterial(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonBuffer *arg1 = (iPolygonBuffer *) 0 ;
    iMaterialHandle *arg2 = (iMaterialHandle *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPolygonBuffer_AddMaterial",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterialHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddMaterial(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonBuffer_GetMaterialCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonBuffer *arg1 = (iPolygonBuffer *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonBuffer_GetMaterialCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iPolygonBuffer const *)arg1)->GetMaterialCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonBuffer_GetMaterial(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonBuffer *arg1 = (iPolygonBuffer *) 0 ;
    int arg2 ;
    iMaterialHandle *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPolygonBuffer_GetMaterial",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialHandle *)((iPolygonBuffer const *)arg1)->GetMaterial(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialHandle, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonBuffer_GetVertexCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonBuffer *arg1 = (iPolygonBuffer *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonBuffer_GetVertexCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iPolygonBuffer const *)arg1)->GetVertexCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonBuffer_GetVertices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonBuffer *arg1 = (iPolygonBuffer *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonBuffer_GetVertices",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)((iPolygonBuffer const *)arg1)->GetVertices();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonBuffer_SetMaterial(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonBuffer *arg1 = (iPolygonBuffer *) 0 ;
    int arg2 ;
    iMaterialHandle *arg3 = (iMaterialHandle *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:iPolygonBuffer_SetMaterial",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iMaterialHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMaterial(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonBuffer_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonBuffer *arg1 = (iPolygonBuffer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonBuffer_Clear",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Clear();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonBuffer_Prepare(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonBuffer *arg1 = (iPolygonBuffer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonBuffer_Prepare",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Prepare();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonBuffer_MarkLightmapsDirty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonBuffer *arg1 = (iPolygonBuffer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonBuffer_MarkLightmapsDirty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MarkLightmapsDirty();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPolygonBuffer_GetBoundingBox(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonBuffer *arg1 = (iPolygonBuffer *) 0 ;
    csBox3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonBuffer_GetBoundingBox",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csBox3 const &_result_ref = ((iPolygonBuffer const *)arg1)->GetBoundingBox();
        result = (csBox3 *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csBox3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPolygonBuffer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonBuffer *arg1 = (iPolygonBuffer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPolygonBuffer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPolygonBuffer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPolygonBuffer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iVertexBufferManagerClient_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iVertexBufferManagerClient_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iVertexBufferManagerClient_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iVertexBufferManagerClient_VERSION);
    return pyobj;
}


static PyObject *_wrap_iVertexBufferManagerClient_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iVertexBufferManagerClient_scfGetID")) goto fail;
    result = (scfInterfaceID)iVertexBufferManagerClient_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVertexBufferManagerClient_ManagerClosing(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBufferManagerClient *arg1 = (iVertexBufferManagerClient *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVertexBufferManagerClient_ManagerClosing",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBufferManagerClient,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ManagerClosing();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iVertexBufferManagerClient(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBufferManagerClient *arg1 = (iVertexBufferManagerClient *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iVertexBufferManagerClient",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBufferManagerClient,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iVertexBufferManagerClient_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iVertexBufferManagerClient, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iVertexBufferManager_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iVertexBufferManager_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iVertexBufferManager_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iVertexBufferManager_VERSION);
    return pyobj;
}


static PyObject *_wrap_iVertexBufferManager_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iVertexBufferManager_scfGetID")) goto fail;
    result = (scfInterfaceID)iVertexBufferManager_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVertexBufferManager_CreateBuffer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBufferManager *arg1 = (iVertexBufferManager *) 0 ;
    int arg2 ;
    SwigValueWrapper< csPtr<iVertexBuffer > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iVertexBufferManager_CreateBuffer",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBufferManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateBuffer(arg2);
    
    {
        csPtr<iVertexBuffer > * resultptr;
        resultptr = new csPtr<iVertexBuffer >((csPtr<iVertexBuffer > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiVertexBuffer_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVertexBufferManager_ChangePriority(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBufferManager *arg1 = (iVertexBufferManager *) 0 ;
    iVertexBuffer *arg2 = (iVertexBuffer *) 0 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iVertexBufferManager_ChangePriority",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBufferManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iVertexBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ChangePriority(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVertexBufferManager_LockBuffer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBufferManager *arg1 = (iVertexBufferManager *) 0 ;
    iVertexBuffer *arg2 = (iVertexBuffer *) 0 ;
    csVector3 *arg3 = (csVector3 *) 0 ;
    csVector2 *arg4 = (csVector2 *) 0 ;
    csColor *arg5 = (csColor *) 0 ;
    int arg6 ;
    int arg7 ;
    csBox3 *arg8 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj7 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOiiO:iVertexBufferManager_LockBuffer",&obj0,&obj1,&obj2,&obj3,&obj4,&arg6,&arg7,&obj7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBufferManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iVertexBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj7,(void **) &arg8, SWIGTYPE_p_csBox3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg8 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->LockBuffer(arg2,arg3,arg4,arg5,arg6,arg7,(csBox3 const &)*arg8);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVertexBufferManager_LockUserArray(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBufferManager *arg1 = (iVertexBufferManager *) 0 ;
    iVertexBuffer *arg2 = (iVertexBuffer *) 0 ;
    int arg3 ;
    float *arg4 = (float *) 0 ;
    int arg5 ;
    int arg6 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiOii:iVertexBufferManager_LockUserArray",&obj0,&obj1,&arg3,&obj3,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBufferManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iVertexBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->LockUserArray(arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVertexBufferManager_UnlockBuffer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBufferManager *arg1 = (iVertexBufferManager *) 0 ;
    iVertexBuffer *arg2 = (iVertexBuffer *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iVertexBufferManager_UnlockBuffer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBufferManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iVertexBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UnlockBuffer(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVertexBufferManager_CreatePolygonBuffer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBufferManager *arg1 = (iVertexBufferManager *) 0 ;
    iPolygonBuffer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVertexBufferManager_CreatePolygonBuffer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBufferManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPolygonBuffer *)(arg1)->CreatePolygonBuffer();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygonBuffer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVertexBufferManager_AddClient(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBufferManager *arg1 = (iVertexBufferManager *) 0 ;
    iVertexBufferManagerClient *arg2 = (iVertexBufferManagerClient *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iVertexBufferManager_AddClient",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBufferManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iVertexBufferManagerClient,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddClient(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVertexBufferManager_RemoveClient(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBufferManager *arg1 = (iVertexBufferManager *) 0 ;
    iVertexBufferManagerClient *arg2 = (iVertexBufferManagerClient *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iVertexBufferManager_RemoveClient",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBufferManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iVertexBufferManagerClient,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveClient(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iVertexBufferManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVertexBufferManager *arg1 = (iVertexBufferManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iVertexBufferManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVertexBufferManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iVertexBufferManager_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iVertexBufferManager, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csTextureLayer_txt_handle_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTextureLayer *arg1 = (csTextureLayer *) 0 ;
    csRef<iTextureHandle > *arg2 = (csRef<iTextureHandle > *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTextureLayer_txt_handle_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTextureLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRefTiTextureHandle_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->txt_handle = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTextureLayer_txt_handle_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTextureLayer *arg1 = (csTextureLayer *) 0 ;
    csRef<iTextureHandle > *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csTextureLayer_txt_handle_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTextureLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csRef<iTextureHandle > *)& ((arg1)->txt_handle);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csRefTiTextureHandle_t, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTextureLayer_mode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTextureLayer *arg1 = (csTextureLayer *) 0 ;
    uint arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csTextureLayer_mode_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTextureLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->mode = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTextureLayer_mode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTextureLayer *arg1 = (csTextureLayer *) 0 ;
    uint result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csTextureLayer_mode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTextureLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint) ((arg1)->mode);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTextureLayer_uscale_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTextureLayer *arg1 = (csTextureLayer *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csTextureLayer_uscale_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTextureLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->uscale = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTextureLayer_uscale_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTextureLayer *arg1 = (csTextureLayer *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csTextureLayer_uscale_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTextureLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->uscale);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTextureLayer_vscale_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTextureLayer *arg1 = (csTextureLayer *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csTextureLayer_vscale_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTextureLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->vscale = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTextureLayer_vscale_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTextureLayer *arg1 = (csTextureLayer *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csTextureLayer_vscale_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTextureLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->vscale);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTextureLayer_ushift_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTextureLayer *arg1 = (csTextureLayer *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csTextureLayer_ushift_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTextureLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->ushift = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTextureLayer_ushift_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTextureLayer *arg1 = (csTextureLayer *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csTextureLayer_ushift_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTextureLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->ushift);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTextureLayer_vshift_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTextureLayer *arg1 = (csTextureLayer *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csTextureLayer_vshift_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTextureLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->vshift = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csTextureLayer_vshift_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTextureLayer *arg1 = (csTextureLayer *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csTextureLayer_vshift_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTextureLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->vshift);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csTextureLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTextureLayer *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csTextureLayer")) goto fail;
    result = (csTextureLayer *)new csTextureLayer();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csTextureLayer, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csTextureLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csTextureLayer *arg1 = (csTextureLayer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csTextureLayer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csTextureLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csTextureLayer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csTextureLayer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iMaterial_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iMaterial_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iMaterial_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iMaterial_VERSION);
    return pyobj;
}


static PyObject *_wrap_iMaterial_SetEffect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterial *arg1 = (iMaterial *) 0 ;
    iEffectDefinition *arg2 = (iEffectDefinition *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMaterial_SetEffect",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterial,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iEffectDefinition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetEffect(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterial_GetEffect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterial *arg1 = (iMaterial *) 0 ;
    iEffectDefinition *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMaterial_GetEffect",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterial,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iEffectDefinition *)(arg1)->GetEffect();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iEffectDefinition, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterial_GetTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterial *arg1 = (iMaterial *) 0 ;
    iTextureHandle *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMaterial_GetTexture",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterial,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iTextureHandle *)(arg1)->GetTexture();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureHandle, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterial_GetTextureLayerCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterial *arg1 = (iMaterial *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMaterial_GetTextureLayerCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterial,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetTextureLayerCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterial_GetTextureLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterial *arg1 = (iMaterial *) 0 ;
    int arg2 ;
    csTextureLayer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iMaterial_GetTextureLayer",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterial,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csTextureLayer *)(arg1)->GetTextureLayer(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csTextureLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterial_GetFlatColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterial *arg1 = (iMaterial *) 0 ;
    csRGBpixel *arg2 = 0 ;
    bool arg3 = (bool) 1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:iMaterial_GetFlatColor",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterial,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->GetFlatColor(*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterial_SetFlatColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterial *arg1 = (iMaterial *) 0 ;
    csRGBcolor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMaterial_SetFlatColor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterial,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRGBcolor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetFlatColor((csRGBcolor const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterial_GetReflection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterial *arg1 = (iMaterial *) 0 ;
    float *arg2 = 0 ;
    float *arg3 = 0 ;
    float *arg4 = 0 ;
    float temp2 ;
    float temp3 ;
    float temp4 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    arg4 = &temp4;
    if(!PyArg_ParseTuple(args,(char *)"O:iMaterial_GetReflection",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterial,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetReflection(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterial_SetReflection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterial *arg1 = (iMaterial *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offf:iMaterial_SetReflection",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterial,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetReflection(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iMaterial(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterial *arg1 = (iMaterial *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMaterial",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterial,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iMaterial(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iMaterial_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMaterial, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iMaterialHandle_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iMaterialHandle_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iMaterialHandle_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iMaterialHandle_VERSION);
    return pyobj;
}


static PyObject *_wrap_iMaterialHandle_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iMaterialHandle_scfGetID")) goto fail;
    result = (scfInterfaceID)iMaterialHandle_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialHandle_GetTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialHandle *arg1 = (iMaterialHandle *) 0 ;
    iTextureHandle *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMaterialHandle_GetTexture",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iTextureHandle *)(arg1)->GetTexture();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureHandle, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialHandle_GetFlatColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialHandle *arg1 = (iMaterialHandle *) 0 ;
    csRGBpixel *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMaterialHandle_GetFlatColor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetFlatColor(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialHandle_GetReflection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialHandle *arg1 = (iMaterialHandle *) 0 ;
    float *arg2 = 0 ;
    float *arg3 = 0 ;
    float *arg4 = 0 ;
    float temp2 ;
    float temp3 ;
    float temp4 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    arg4 = &temp4;
    if(!PyArg_ParseTuple(args,(char *)"O:iMaterialHandle_GetReflection",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetReflection(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyFloat_FromDouble((double) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iMaterialHandle_Prepare(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialHandle *arg1 = (iMaterialHandle *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMaterialHandle_Prepare",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Prepare();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iMaterialHandle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialHandle *arg1 = (iMaterialHandle *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMaterialHandle",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialHandle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iMaterialHandle_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMaterialHandle, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iNativeWindowManager_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iNativeWindowManager_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iNativeWindowManager_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iNativeWindowManager_VERSION);
    return pyobj;
}


static PyObject *_wrap_iNativeWindowManager_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iNativeWindowManager_scfGetID")) goto fail;
    result = (scfInterfaceID)iNativeWindowManager_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNativeWindowManager_Alert__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
    PyObject *resultobj;
    iNativeWindowManager *arg1 = (iNativeWindowManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    char *arg4 ;
    char *arg5 ;
    void *arg6 = 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisss:iNativeWindowManager_Alert",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNativeWindowManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Alert(arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNativeWindowManager_Alert(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *varargs;
    PyObject *newargs;
    
    newargs = PyTuple_GetSlice(args,0,5);
    varargs = PyTuple_GetSlice(args,5,PyTuple_Size(args)+1);
    resultobj = _wrap_iNativeWindowManager_Alert__varargs__(self,newargs,varargs);
    Py_XDECREF(newargs);
    Py_XDECREF(varargs);
    return resultobj;
}


static PyObject *_wrap_iNativeWindowManager_AlertV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNativeWindowManager *arg1 = (iNativeWindowManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    char *arg4 ;
    char *arg5 ;
    va_list arg6 ;
    va_list *argp6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisssO:iNativeWindowManager_AlertV",&obj0,&arg2,&arg3,&arg4,&arg5,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNativeWindowManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj5,(void **) &argp6, SWIGTYPE_p_va_list,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg6 = *argp6; 
    (arg1)->AlertV(arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iNativeWindowManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNativeWindowManager *arg1 = (iNativeWindowManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iNativeWindowManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNativeWindowManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iNativeWindowManager_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iNativeWindowManager, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iNativeWindow_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iNativeWindow_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iNativeWindow_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iNativeWindow_VERSION);
    return pyobj;
}


static PyObject *_wrap_iNativeWindow_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iNativeWindow_scfGetID")) goto fail;
    result = (scfInterfaceID)iNativeWindow_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNativeWindow_SetTitle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNativeWindow *arg1 = (iNativeWindow *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iNativeWindow_SetTitle",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNativeWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetTitle((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iNativeWindow(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNativeWindow *arg1 = (iNativeWindow *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iNativeWindow",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNativeWindow,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iNativeWindow_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iNativeWindow, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csStreamDescription_type_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csStreamDescription *arg1 = (csStreamDescription *) 0 ;
    uint16 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csStreamDescription_type_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint16) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->type = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csStreamDescription_type_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csStreamDescription *arg1 = (csStreamDescription *) 0 ;
    uint16 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csStreamDescription_type_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint16) ((arg1)->type);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csStreamDescription_codec_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csStreamDescription *arg1 = (csStreamDescription *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:csStreamDescription_codec_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg2) strncpy(arg1->codec,arg2,64);
        else arg1->codec[0] = 0;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csStreamDescription_codec_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csStreamDescription *arg1 = (csStreamDescription *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csStreamDescription_codec_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(char *) ((arg1)->codec);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csStreamDescription_name_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csStreamDescription *arg1 = (csStreamDescription *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csStreamDescription_name_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->name);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csStreamDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csStreamDescription *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csStreamDescription")) goto fail;
    result = (csStreamDescription *)new csStreamDescription();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csStreamDescription, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csStreamDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csStreamDescription *arg1 = (csStreamDescription *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csStreamDescription",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csStreamDescription_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csStreamDescription, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csVideoStreamDescription_colordepth_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVideoStreamDescription *arg1 = (csVideoStreamDescription *) 0 ;
    int8 arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oc:csVideoStreamDescription_colordepth_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVideoStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->colordepth = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVideoStreamDescription_colordepth_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVideoStreamDescription *arg1 = (csVideoStreamDescription *) 0 ;
    int8 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVideoStreamDescription_colordepth_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVideoStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int8) ((arg1)->colordepth);
    
    resultobj = Py_BuildValue((char*)"c",result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVideoStreamDescription_framecount_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVideoStreamDescription *arg1 = (csVideoStreamDescription *) 0 ;
    int32 arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csVideoStreamDescription_framecount_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVideoStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->framecount = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVideoStreamDescription_framecount_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVideoStreamDescription *arg1 = (csVideoStreamDescription *) 0 ;
    int32 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVideoStreamDescription_framecount_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVideoStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int32) ((arg1)->framecount);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVideoStreamDescription_width_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVideoStreamDescription *arg1 = (csVideoStreamDescription *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csVideoStreamDescription_width_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVideoStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->width = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVideoStreamDescription_width_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVideoStreamDescription *arg1 = (csVideoStreamDescription *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVideoStreamDescription_width_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVideoStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->width);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVideoStreamDescription_height_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVideoStreamDescription *arg1 = (csVideoStreamDescription *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csVideoStreamDescription_height_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVideoStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->height = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVideoStreamDescription_height_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVideoStreamDescription *arg1 = (csVideoStreamDescription *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVideoStreamDescription_height_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVideoStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->height);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVideoStreamDescription_framerate_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVideoStreamDescription *arg1 = (csVideoStreamDescription *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVideoStreamDescription_framerate_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVideoStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->framerate = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVideoStreamDescription_framerate_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVideoStreamDescription *arg1 = (csVideoStreamDescription *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVideoStreamDescription_framerate_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVideoStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->framerate);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVideoStreamDescription_duration_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVideoStreamDescription *arg1 = (csVideoStreamDescription *) 0 ;
    int32 arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csVideoStreamDescription_duration_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVideoStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->duration = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csVideoStreamDescription_duration_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVideoStreamDescription *arg1 = (csVideoStreamDescription *) 0 ;
    int32 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVideoStreamDescription_duration_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVideoStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int32) ((arg1)->duration);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csVideoStreamDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVideoStreamDescription *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csVideoStreamDescription")) goto fail;
    result = (csVideoStreamDescription *)new csVideoStreamDescription();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVideoStreamDescription, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csVideoStreamDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVideoStreamDescription *arg1 = (csVideoStreamDescription *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csVideoStreamDescription",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVideoStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csVideoStreamDescription_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csVideoStreamDescription, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csAudioStreamDescription_formattag_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csAudioStreamDescription *arg1 = (csAudioStreamDescription *) 0 ;
    uint16 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csAudioStreamDescription_formattag_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csAudioStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint16) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->formattag = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csAudioStreamDescription_formattag_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csAudioStreamDescription *arg1 = (csAudioStreamDescription *) 0 ;
    uint16 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csAudioStreamDescription_formattag_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csAudioStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint16) ((arg1)->formattag);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csAudioStreamDescription_channels_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csAudioStreamDescription *arg1 = (csAudioStreamDescription *) 0 ;
    uint16 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csAudioStreamDescription_channels_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csAudioStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint16) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->channels = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csAudioStreamDescription_channels_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csAudioStreamDescription *arg1 = (csAudioStreamDescription *) 0 ;
    uint16 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csAudioStreamDescription_channels_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csAudioStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint16) ((arg1)->channels);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csAudioStreamDescription_samplespersecond_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csAudioStreamDescription *arg1 = (csAudioStreamDescription *) 0 ;
    uint32 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csAudioStreamDescription_samplespersecond_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csAudioStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint32) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->samplespersecond = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csAudioStreamDescription_samplespersecond_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csAudioStreamDescription *arg1 = (csAudioStreamDescription *) 0 ;
    uint32 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csAudioStreamDescription_samplespersecond_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csAudioStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint32) ((arg1)->samplespersecond);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csAudioStreamDescription_bitspersample_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csAudioStreamDescription *arg1 = (csAudioStreamDescription *) 0 ;
    uint16 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csAudioStreamDescription_bitspersample_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csAudioStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint16) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->bitspersample = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csAudioStreamDescription_bitspersample_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csAudioStreamDescription *arg1 = (csAudioStreamDescription *) 0 ;
    uint16 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csAudioStreamDescription_bitspersample_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csAudioStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint16) ((arg1)->bitspersample);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csAudioStreamDescription_duration_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csAudioStreamDescription *arg1 = (csAudioStreamDescription *) 0 ;
    uint32 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csAudioStreamDescription_duration_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csAudioStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint32) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->duration = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csAudioStreamDescription_duration_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csAudioStreamDescription *arg1 = (csAudioStreamDescription *) 0 ;
    uint32 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csAudioStreamDescription_duration_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csAudioStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint32) ((arg1)->duration);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csAudioStreamDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csAudioStreamDescription *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csAudioStreamDescription")) goto fail;
    result = (csAudioStreamDescription *)new csAudioStreamDescription();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csAudioStreamDescription, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csAudioStreamDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csAudioStreamDescription *arg1 = (csAudioStreamDescription *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csAudioStreamDescription",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csAudioStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csAudioStreamDescription_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csAudioStreamDescription, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iStreamIterator_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iStreamIterator_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iStreamIterator_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iStreamIterator_VERSION);
    return pyobj;
}


static PyObject *_wrap_iStreamIterator_HasNext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStreamIterator *arg1 = (iStreamIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iStreamIterator_HasNext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStreamIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->HasNext();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStreamIterator_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStreamIterator *arg1 = (iStreamIterator *) 0 ;
    iStream *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iStreamIterator_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStreamIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iStream *)(arg1)->Next();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iStream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iStreamIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStreamIterator *arg1 = (iStreamIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iStreamIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStreamIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iStreamIterator(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iStreamIterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iStreamIterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iStreamFormat_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iStreamFormat_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iStreamFormat_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iStreamFormat_VERSION);
    return pyobj;
}


static PyObject *_wrap_iStreamFormat_GetCaps(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStreamFormat *arg1 = (iStreamFormat *) 0 ;
    csStreamFormatCap *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iStreamFormat_GetCaps",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStreamFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csStreamFormatCap,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetCaps(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStreamFormat_GetStreamIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStreamFormat *arg1 = (iStreamFormat *) 0 ;
    iStreamIterator *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iStreamFormat_GetStreamIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStreamFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iStreamIterator *)(arg1)->GetStreamIterator();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iStreamIterator, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStreamFormat_Select(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStreamFormat *arg1 = (iStreamFormat *) 0 ;
    iAudioStream *arg2 = (iAudioStream *) 0 ;
    iVideoStream *arg3 = (iVideoStream *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iStreamFormat_Select",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStreamFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iAudioStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iVideoStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Select(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStreamFormat_NextFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStreamFormat *arg1 = (iStreamFormat *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iStreamFormat_NextFrame",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStreamFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->NextFrame();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStreamFormat_Load(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStreamFormat *arg1 = (iStreamFormat *) 0 ;
    iFile *arg2 = (iFile *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iStreamFormat_Load",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStreamFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Load(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStreamFormat_Unload(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStreamFormat *arg1 = (iStreamFormat *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iStreamFormat_Unload",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStreamFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Unload();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iStreamFormat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStreamFormat *arg1 = (iStreamFormat *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iStreamFormat",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStreamFormat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iStreamFormat(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iStreamFormat_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iStreamFormat, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iStream_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iStream_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iStream_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iStream_VERSION);
    return pyobj;
}


static PyObject *_wrap_iStream_GetStreamDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStream *arg1 = (iStream *) 0 ;
    csStreamDescription *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iStream_GetStreamDescription",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetStreamDescription(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStream_GotoFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStream *arg1 = (iStream *) 0 ;
    uint32 arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iStream_GotoFrame",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint32) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->GotoFrame(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStream_GotoTime(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStream *arg1 = (iStream *) 0 ;
    uint32 arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iStream_GotoTime",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint32) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->GotoTime(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStream_SetPlayMethod(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStream *arg1 = (iStream *) 0 ;
    bool arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iStream_SetPlayMethod",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->SetPlayMethod(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStream_NextFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStream *arg1 = (iStream *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iStream_NextFrame",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->NextFrame();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iStream(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStream *arg1 = (iStream *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iStream",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iStream(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iStream_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iStream, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iVideoStream_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iVideoStream_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iVideoStream_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iVideoStream_VERSION);
    return pyobj;
}


static PyObject *_wrap_iVideoStream_GetStreamDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVideoStream *arg1 = (iVideoStream *) 0 ;
    csVideoStreamDescription *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iVideoStream_GetStreamDescription",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVideoStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVideoStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetStreamDescription(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVideoStream_SetRect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVideoStream *arg1 = (iVideoStream *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:iVideoStream_SetRect",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVideoStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetRect(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVideoStream_SetFXMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVideoStream *arg1 = (iVideoStream *) 0 ;
    uint arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iVideoStream_SetFXMode",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVideoStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->SetFXMode(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iVideoStream_NextFrameGetMaterial(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVideoStream *arg1 = (iVideoStream *) 0 ;
    iMaterialHandle *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iVideoStream_NextFrameGetMaterial",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVideoStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMaterialHandle *)(arg1)->NextFrameGetMaterial();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialHandle, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iVideoStream(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iVideoStream *arg1 = (iVideoStream *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iVideoStream",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iVideoStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iVideoStream(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iVideoStream_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iVideoStream, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iAudioStream_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iAudioStream_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iAudioStream_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iAudioStream_VERSION);
    return pyobj;
}


static PyObject *_wrap_iAudioStream_GetStreamDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iAudioStream *arg1 = (iAudioStream *) 0 ;
    csAudioStreamDescription *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iAudioStream_GetStreamDescription",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iAudioStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csAudioStreamDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetStreamDescription(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iAudioStream(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iAudioStream *arg1 = (iAudioStream *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iAudioStream",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iAudioStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iAudioStream(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iAudioStream_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iAudioStream, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csCodecDescription_codec_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCodecDescription *arg1 = (csCodecDescription *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:csCodecDescription_codec_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCodecDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg2) strncpy(arg1->codec,arg2,64);
        else arg1->codec[0] = 0;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCodecDescription_codec_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCodecDescription *arg1 = (csCodecDescription *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csCodecDescription_codec_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCodecDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(char *) ((arg1)->codec);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCodecDescription_bEncode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCodecDescription *arg1 = (csCodecDescription *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csCodecDescription_bEncode_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCodecDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->bEncode = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCodecDescription_bEncode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCodecDescription *arg1 = (csCodecDescription *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csCodecDescription_bEncode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCodecDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->bEncode);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCodecDescription_bDecode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCodecDescription *arg1 = (csCodecDescription *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csCodecDescription_bDecode_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCodecDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->bDecode = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCodecDescription_bDecode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCodecDescription *arg1 = (csCodecDescription *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csCodecDescription_bDecode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCodecDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->bDecode);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCodecDescription_decodeoutput_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCodecDescription *arg1 = (csCodecDescription *) 0 ;
    uint16 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csCodecDescription_decodeoutput_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCodecDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint16) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->decodeoutput = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCodecDescription_decodeoutput_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCodecDescription *arg1 = (csCodecDescription *) 0 ;
    uint16 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csCodecDescription_decodeoutput_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCodecDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint16) ((arg1)->decodeoutput);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCodecDescription_encodeinput_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCodecDescription *arg1 = (csCodecDescription *) 0 ;
    uint16 arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csCodecDescription_encodeinput_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCodecDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint16) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->encodeinput = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCodecDescription_encodeinput_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCodecDescription *arg1 = (csCodecDescription *) 0 ;
    uint16 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csCodecDescription_encodeinput_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCodecDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint16) ((arg1)->encodeinput);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csCodecDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCodecDescription *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csCodecDescription")) goto fail;
    result = (csCodecDescription *)new csCodecDescription();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csCodecDescription, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csCodecDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCodecDescription *arg1 = (csCodecDescription *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csCodecDescription",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCodecDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csCodecDescription_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csCodecDescription, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iImage_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iImage_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iImage_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iImage_VERSION);
    return pyobj;
}


static PyObject *_wrap_iImage_GetImageData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    void *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_GetImageData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *)(arg1)->GetImageData();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImage_GetWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_GetWidth",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImage_GetHeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_GetHeight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetHeight();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImage_GetSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_GetSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetSize();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImage_Rescale(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iImage_Rescale",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Rescale(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImage_MipMap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    int arg2 ;
    csRGBpixel *arg3 = (csRGBpixel *) 0 ;
    SwigValueWrapper< csPtr<iImage > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:iImage_MipMap",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->MipMap(arg2,arg3);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iImage> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iImage *)ref), (void *)(iImage *)ref, "iImage" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImage_SetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iImage_SetName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImage_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImage_GetFormat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_GetFormat",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetFormat();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImage_GetPalette(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    csRGBpixel *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_GetPalette",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csRGBpixel *)(arg1)->GetPalette();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csRGBpixel, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImage_GetAlpha(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    uint8 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_GetAlpha",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint8 *)(arg1)->GetAlpha();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_uint8, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImage_SetFormat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iImage_SetFormat",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFormat(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImage_Clone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    SwigValueWrapper< csPtr<iImage > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_Clone",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Clone();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iImage> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iImage *)ref), (void *)(iImage *)ref, "iImage" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImage_Crop(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    SwigValueWrapper< csPtr<iImage > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:iImage_Crop",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Crop(arg2,arg3,arg4,arg5);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iImage> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iImage *)ref), (void *)(iImage *)ref, "iImage" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImage_CheckAlpha(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_CheckAlpha",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CheckAlpha();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImage_HasKeycolor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_HasKeycolor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->HasKeycolor();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImage_GetKeycolor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    int temp2 ;
    int temp3 ;
    int temp4 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    arg4 = &temp4;
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_GetKeycolor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetKeycolor(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImage_Sharpen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    csRGBpixel *arg2 = (csRGBpixel *) 0 ;
    int arg3 ;
    SwigValueWrapper< csPtr<iImage > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iImage_Sharpen",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRGBpixel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Sharpen(arg2,arg3);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iImage> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iImage *)ref), (void *)(iImage *)ref, "iImage" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImage_HasMipmaps(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_HasMipmaps",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->HasMipmaps();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iImage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 = (iImage *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iImage",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iImage(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iImage_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iImage, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iImageIO_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iImageIO_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iImageIO_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iImageIO_VERSION);
    return pyobj;
}


static PyObject *_wrap_csImageIOFileFormatDescription_mime_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageIOFileFormatDescription *arg1 = (csImageIOFileFormatDescription *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csImageIOFileFormatDescription_mime_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageIOFileFormatDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->mime);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csImageIOFileFormatDescription_subtype_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageIOFileFormatDescription *arg1 = (csImageIOFileFormatDescription *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csImageIOFileFormatDescription_subtype_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageIOFileFormatDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->subtype);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csImageIOFileFormatDescription_cap_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageIOFileFormatDescription *arg1 = (csImageIOFileFormatDescription *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csImageIOFileFormatDescription_cap_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageIOFileFormatDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->cap = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csImageIOFileFormatDescription_cap_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageIOFileFormatDescription *arg1 = (csImageIOFileFormatDescription *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csImageIOFileFormatDescription_cap_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageIOFileFormatDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->cap);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csImageIOFileFormatDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageIOFileFormatDescription *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csImageIOFileFormatDescription")) goto fail;
    result = (csImageIOFileFormatDescription *)new csImageIOFileFormatDescription();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csImageIOFileFormatDescription, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csImageIOFileFormatDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageIOFileFormatDescription *arg1 = (csImageIOFileFormatDescription *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csImageIOFileFormatDescription",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageIOFileFormatDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csImageIOFileFormatDescription_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csImageIOFileFormatDescription, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iImageIO_GetDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImageIO *arg1 = (iImageIO *) 0 ;
    csVector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImageIO_GetDescription",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImageIO,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csVector const &_result_ref = (arg1)->GetDescription();
        result = (csVector *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImageIO_Load(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImageIO *arg1 = (iImageIO *) 0 ;
    uint8 *arg2 = (uint8 *) 0 ;
    uint32 arg3 ;
    int arg4 ;
    SwigValueWrapper< csPtr<iImage > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOi:iImageIO_Load",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImageIO,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_uint8,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (uint32) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (arg1)->Load(arg2,arg3,arg4);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iImage> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iImage *)ref), (void *)(iImage *)ref, "iImage" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImageIO_SetDithering(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImageIO *arg1 = (iImageIO *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iImageIO_SetDithering",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImageIO,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetDithering(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImageIO_Save__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImageIO *arg1 = (iImageIO *) 0 ;
    iImage *arg2 = (iImage *) 0 ;
    iImageIO::FileFormatDescription *arg3 = (iImageIO::FileFormatDescription *) 0 ;
    char *arg4 = (char *) 0 ;
    SwigValueWrapper< csPtr<iDataBuffer > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|s:iImageIO_Save",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImageIO,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iImageIO__FileFormatDescription,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Save(arg2,arg3,(char const *)arg4);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iDataBuffer> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iDataBuffer *)ref), (void *)(iDataBuffer *)ref, "iDataBuffer" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImageIO_Save__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImageIO *arg1 = (iImageIO *) 0 ;
    iImage *arg2 = (iImage *) 0 ;
    char *arg3 = (char *) 0 ;
    char *arg4 = (char *) 0 ;
    SwigValueWrapper< csPtr<iDataBuffer > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|ss:iImageIO_Save",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImageIO,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Save(arg2,(char const *)arg3,(char const *)arg4);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iDataBuffer> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iDataBuffer *)ref), (void *)(iDataBuffer *)ref, "iDataBuffer" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iImageIO_Save(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iImageIO, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iImage, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_iImageIO_Save__SWIG_1(self,args);
                }
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_iImageIO_Save__SWIG_1(self,args);
                    }
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_iImageIO_Save__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iImageIO, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iImage, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iImageIO__FileFormatDescription, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_iImageIO_Save__SWIG_0(self,args);
                    }
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_iImageIO_Save__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iImageIO_Save'");
    return NULL;
}


static PyObject *_wrap_delete_iImageIO(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImageIO *arg1 = (iImageIO *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iImageIO",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImageIO,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iImageIO(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iImageIO_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iImageIO, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iReporterListener_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iReporterListener_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iReporterListener_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iReporterListener_VERSION);
    return pyobj;
}


static PyObject *_wrap_iReporterListener_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iReporterListener_scfGetID")) goto fail;
    result = (scfInterfaceID)iReporterListener_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iReporterListener_Report(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iReporterListener *arg1 = (iReporterListener *) 0 ;
    iReporter *arg2 = (iReporter *) 0 ;
    int arg3 ;
    char *arg4 ;
    char *arg5 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiss:iReporterListener_Report",&obj0,&obj1,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporterListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iReporter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Report(arg2,arg3,(char const *)arg4,(char const *)arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iReporterListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iReporterListener *arg1 = (iReporterListener *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iReporterListener",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporterListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iReporterListener_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iReporterListener, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iReporterIterator_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iReporterIterator_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iReporterIterator_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iReporterIterator_VERSION);
    return pyobj;
}


static PyObject *_wrap_iReporterIterator_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iReporterIterator_scfGetID")) goto fail;
    result = (scfInterfaceID)iReporterIterator_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iReporterIterator_HasNext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iReporterIterator *arg1 = (iReporterIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iReporterIterator_HasNext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporterIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->HasNext();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iReporterIterator_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iReporterIterator *arg1 = (iReporterIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iReporterIterator_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporterIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Next();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iReporterIterator_GetMessageSeverity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iReporterIterator *arg1 = (iReporterIterator *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iReporterIterator_GetMessageSeverity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporterIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iReporterIterator const *)arg1)->GetMessageSeverity();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iReporterIterator_GetMessageId(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iReporterIterator *arg1 = (iReporterIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iReporterIterator_GetMessageId",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporterIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iReporterIterator const *)arg1)->GetMessageId();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iReporterIterator_GetMessageDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iReporterIterator *arg1 = (iReporterIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iReporterIterator_GetMessageDescription",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporterIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iReporterIterator const *)arg1)->GetMessageDescription();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iReporterIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iReporterIterator *arg1 = (iReporterIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iReporterIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporterIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iReporterIterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iReporterIterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iReporter_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iReporter_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iReporter_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iReporter_VERSION);
    return pyobj;
}


static PyObject *_wrap_iReporter_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iReporter_scfGetID")) goto fail;
    result = (scfInterfaceID)iReporter_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iReporter_Report__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
    PyObject *resultobj;
    iReporter *arg1 = (iReporter *) 0 ;
    int arg2 ;
    char *arg3 ;
    char *arg4 ;
    void *arg5 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisO:iReporter_Report",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg4 = "%s";
        arg5 = (void *) PyString_AsString(obj3);
    }
    (arg1)->Report(arg2,(char const *)arg3,(char const *)arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iReporter_Report(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *varargs;
    PyObject *newargs;
    
    newargs = PyTuple_GetSlice(args,0,4);
    varargs = PyTuple_GetSlice(args,4,PyTuple_Size(args)+1);
    resultobj = _wrap_iReporter_Report__varargs__(self,newargs,varargs);
    Py_XDECREF(newargs);
    Py_XDECREF(varargs);
    return resultobj;
}


static PyObject *_wrap_iReporter_Clear__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iReporter *arg1 = (iReporter *) 0 ;
    int arg2 = (int) -1 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|i:iReporter_Clear",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Clear(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iReporter_Clear__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iReporter *arg1 = (iReporter *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iReporter_Clear",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Clear((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iReporter_Clear(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iReporter, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_iReporter_Clear__SWIG_0(self,args);
            }
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iReporter_Clear__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iReporter, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iReporter_Clear__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iReporter_Clear'");
    return NULL;
}


static PyObject *_wrap_iReporter_GetMessageIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iReporter *arg1 = (iReporter *) 0 ;
    SwigValueWrapper< csPtr<iReporterIterator > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iReporter_GetMessageIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetMessageIterator();
    
    {
        csPtr<iReporterIterator > * resultptr;
        resultptr = new csPtr<iReporterIterator >((csPtr<iReporterIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiReporterIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iReporter_AddReporterListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iReporter *arg1 = (iReporter *) 0 ;
    iReporterListener *arg2 = (iReporterListener *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iReporter_AddReporterListener",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iReporterListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddReporterListener(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iReporter_RemoveReporterListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iReporter *arg1 = (iReporter *) 0 ;
    iReporterListener *arg2 = (iReporterListener *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iReporter_RemoveReporterListener",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iReporterListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveReporterListener(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iReporter_FindReporterListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iReporter *arg1 = (iReporter *) 0 ;
    iReporterListener *arg2 = (iReporterListener *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iReporter_FindReporterListener",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iReporterListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->FindReporterListener(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iReporter_ReportError__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
    PyObject *resultobj;
    iReporter *arg1 = (iReporter *) 0 ;
    char *arg2 ;
    char *arg3 ;
    void *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iReporter_ReportError",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg3 = "%s";
        arg4 = (void *) PyString_AsString(obj2);
    }
    (arg1)->ReportError((char const *)arg2,(char const *)arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iReporter_ReportError(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *varargs;
    PyObject *newargs;
    
    newargs = PyTuple_GetSlice(args,0,3);
    varargs = PyTuple_GetSlice(args,3,PyTuple_Size(args)+1);
    resultobj = _wrap_iReporter_ReportError__varargs__(self,newargs,varargs);
    Py_XDECREF(newargs);
    Py_XDECREF(varargs);
    return resultobj;
}


static PyObject *_wrap_iReporter_ReportWarning__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
    PyObject *resultobj;
    iReporter *arg1 = (iReporter *) 0 ;
    char *arg2 ;
    char *arg3 ;
    void *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iReporter_ReportWarning",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg3 = "%s";
        arg4 = (void *) PyString_AsString(obj2);
    }
    (arg1)->ReportWarning((char const *)arg2,(char const *)arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iReporter_ReportWarning(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *varargs;
    PyObject *newargs;
    
    newargs = PyTuple_GetSlice(args,0,3);
    varargs = PyTuple_GetSlice(args,3,PyTuple_Size(args)+1);
    resultobj = _wrap_iReporter_ReportWarning__varargs__(self,newargs,varargs);
    Py_XDECREF(newargs);
    Py_XDECREF(varargs);
    return resultobj;
}


static PyObject *_wrap_iReporter_ReportNotify__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
    PyObject *resultobj;
    iReporter *arg1 = (iReporter *) 0 ;
    char *arg2 ;
    char *arg3 ;
    void *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iReporter_ReportNotify",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg3 = "%s";
        arg4 = (void *) PyString_AsString(obj2);
    }
    (arg1)->ReportNotify((char const *)arg2,(char const *)arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iReporter_ReportNotify(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *varargs;
    PyObject *newargs;
    
    newargs = PyTuple_GetSlice(args,0,3);
    varargs = PyTuple_GetSlice(args,3,PyTuple_Size(args)+1);
    resultobj = _wrap_iReporter_ReportNotify__varargs__(self,newargs,varargs);
    Py_XDECREF(newargs);
    Py_XDECREF(varargs);
    return resultobj;
}


static PyObject *_wrap_iReporter_ReportBug__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
    PyObject *resultobj;
    iReporter *arg1 = (iReporter *) 0 ;
    char *arg2 ;
    char *arg3 ;
    void *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iReporter_ReportBug",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg3 = "%s";
        arg4 = (void *) PyString_AsString(obj2);
    }
    (arg1)->ReportBug((char const *)arg2,(char const *)arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iReporter_ReportBug(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *varargs;
    PyObject *newargs;
    
    newargs = PyTuple_GetSlice(args,0,3);
    varargs = PyTuple_GetSlice(args,3,PyTuple_Size(args)+1);
    resultobj = _wrap_iReporter_ReportBug__varargs__(self,newargs,varargs);
    Py_XDECREF(newargs);
    Py_XDECREF(varargs);
    return resultobj;
}


static PyObject *_wrap_iReporter_ReportDebug__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
    PyObject *resultobj;
    iReporter *arg1 = (iReporter *) 0 ;
    char *arg2 ;
    char *arg3 ;
    void *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iReporter_ReportDebug",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg3 = "%s";
        arg4 = (void *) PyString_AsString(obj2);
    }
    (arg1)->ReportDebug((char const *)arg2,(char const *)arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iReporter_ReportDebug(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *varargs;
    PyObject *newargs;
    
    newargs = PyTuple_GetSlice(args,0,3);
    varargs = PyTuple_GetSlice(args,3,PyTuple_Size(args)+1);
    resultobj = _wrap_iReporter_ReportDebug__varargs__(self,newargs,varargs);
    Py_XDECREF(newargs);
    Py_XDECREF(varargs);
    return resultobj;
}


static PyObject *_wrap_delete_iReporter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iReporter *arg1 = (iReporter *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iReporter",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iReporter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iReporter_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iReporter, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csReporterHelper_Report__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    int arg2 ;
    char *arg3 ;
    char *arg4 ;
    void *arg5 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisO:csReporterHelper_Report",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        arg4 = "%s";
        arg5 = (void *) PyString_AsString(obj3);
    }
    csReporterHelper::Report(arg1,arg2,(char const *)arg3,(char const *)arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csReporterHelper_Report(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *varargs;
    PyObject *newargs;
    
    newargs = PyTuple_GetSlice(args,0,4);
    varargs = PyTuple_GetSlice(args,4,PyTuple_Size(args)+1);
    resultobj = _wrap_csReporterHelper_Report__varargs__(self,newargs,varargs);
    Py_XDECREF(newargs);
    Py_XDECREF(varargs);
    return resultobj;
}


static PyObject *_wrap_new_csReporterHelper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReporterHelper *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csReporterHelper")) goto fail;
    result = (csReporterHelper *)new csReporterHelper();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csReporterHelper, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csReporterHelper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csReporterHelper *arg1 = (csReporterHelper *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csReporterHelper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csReporterHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csReporterHelper_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csReporterHelper, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iStandardReporterListener_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iStandardReporterListener_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iStandardReporterListener_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iStandardReporterListener_VERSION);
    return pyobj;
}


static PyObject *_wrap_iStandardReporterListener_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iStandardReporterListener_scfGetID")) goto fail;
    result = (scfInterfaceID)iStandardReporterListener_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStandardReporterListener_SetOutputConsole(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStandardReporterListener *arg1 = (iStandardReporterListener *) 0 ;
    iConsoleOutput *arg2 = (iConsoleOutput *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iStandardReporterListener_SetOutputConsole",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStandardReporterListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetOutputConsole(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStandardReporterListener_SetNativeWindowManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStandardReporterListener *arg1 = (iStandardReporterListener *) 0 ;
    iNativeWindowManager *arg2 = (iNativeWindowManager *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iStandardReporterListener_SetNativeWindowManager",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStandardReporterListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iNativeWindowManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetNativeWindowManager(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStandardReporterListener_SetReporter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStandardReporterListener *arg1 = (iStandardReporterListener *) 0 ;
    iReporter *arg2 = (iReporter *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iStandardReporterListener_SetReporter",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStandardReporterListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iReporter,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetReporter(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStandardReporterListener_SetDebugFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStandardReporterListener *arg1 = (iStandardReporterListener *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iStandardReporterListener_SetDebugFile",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStandardReporterListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDebugFile((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStandardReporterListener_SetDefaults(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStandardReporterListener *arg1 = (iStandardReporterListener *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iStandardReporterListener_SetDefaults",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStandardReporterListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDefaults();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStandardReporterListener_SetMessageDestination(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStandardReporterListener *arg1 = (iStandardReporterListener *) 0 ;
    int arg2 ;
    bool arg3 ;
    bool arg4 ;
    bool arg5 ;
    bool arg6 ;
    bool arg7 ;
    bool arg8 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    PyObject * obj7 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOOOOO|O:iStandardReporterListener_SetMessageDestination",&obj0,&arg2,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStandardReporterListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    arg4 = PyInt_AsLong(obj3) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    arg5 = PyInt_AsLong(obj4) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    arg6 = PyInt_AsLong(obj5) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    arg7 = PyInt_AsLong(obj6) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (obj7) {
        arg8 = PyInt_AsLong(obj7) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->SetMessageDestination(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStandardReporterListener_RemoveMessages(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStandardReporterListener *arg1 = (iStandardReporterListener *) 0 ;
    int arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:iStandardReporterListener_RemoveMessages",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStandardReporterListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->RemoveMessages(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iStandardReporterListener_ShowMessageID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStandardReporterListener *arg1 = (iStandardReporterListener *) 0 ;
    int arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:iStandardReporterListener_ShowMessageID",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStandardReporterListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->ShowMessageID(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iStandardReporterListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iStandardReporterListener *arg1 = (iStandardReporterListener *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iStandardReporterListener",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iStandardReporterListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iStandardReporterListener_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iStandardReporterListener, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iView_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iView_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iView_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iView_VERSION);
    return pyobj;
}


static PyObject *_wrap_iView_GetEngine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iView *arg1 = (iView *) 0 ;
    iEngine *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iView_GetEngine",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iEngine *)(arg1)->GetEngine();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iEngine, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iView_SetEngine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iView *arg1 = (iView *) 0 ;
    iEngine *arg2 = (iEngine *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iView_SetEngine",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetEngine(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iView_GetCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iView *arg1 = (iView *) 0 ;
    iCamera *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iView_GetCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCamera *)(arg1)->GetCamera();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iView_SetCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iView *arg1 = (iView *) 0 ;
    iCamera *arg2 = (iCamera *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iView_SetCamera",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCamera(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iView_GetContext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iView *arg1 = (iView *) 0 ;
    iGraphics3D *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iView_GetContext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iGraphics3D *)(arg1)->GetContext();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iGraphics3D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iView_SetContext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iView *arg1 = (iView *) 0 ;
    iGraphics3D *arg2 = (iGraphics3D *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iView_SetContext",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetContext(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iView_SetRectangle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iView *arg1 = (iView *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:iView_SetRectangle",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetRectangle(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iView_ClearView(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iView *arg1 = (iView *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iView_ClearView",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearView();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iView_AddViewVertex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iView *arg1 = (iView *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iView_AddViewVertex",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddViewVertex(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iView_RestrictClipperToScreen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iView *arg1 = (iView *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iView_RestrictClipperToScreen",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RestrictClipperToScreen();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iView_UpdateClipper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iView *arg1 = (iView *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iView_UpdateClipper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UpdateClipper();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iView_GetClipper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iView *arg1 = (iView *) 0 ;
    iClipper2D *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iView_GetClipper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iClipper2D *)(arg1)->GetClipper();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iClipper2D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iView_Draw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iView *arg1 = (iView *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iView_Draw",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Draw();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iView(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iView *arg1 = (iView *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iView",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iView(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iView_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iView, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csCollisionPair_a1_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCollisionPair *arg1 = (csCollisionPair *) 0 ;
    csVector3 *arg2 = (csVector3 *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csCollisionPair_a1_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCollisionPair,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->a1 = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCollisionPair_a1_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCollisionPair *arg1 = (csCollisionPair *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csCollisionPair_a1_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCollisionPair,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)& ((arg1)->a1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCollisionPair_b1_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCollisionPair *arg1 = (csCollisionPair *) 0 ;
    csVector3 *arg2 = (csVector3 *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csCollisionPair_b1_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCollisionPair,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->b1 = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCollisionPair_b1_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCollisionPair *arg1 = (csCollisionPair *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csCollisionPair_b1_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCollisionPair,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)& ((arg1)->b1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCollisionPair_c1_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCollisionPair *arg1 = (csCollisionPair *) 0 ;
    csVector3 *arg2 = (csVector3 *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csCollisionPair_c1_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCollisionPair,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->c1 = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCollisionPair_c1_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCollisionPair *arg1 = (csCollisionPair *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csCollisionPair_c1_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCollisionPair,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)& ((arg1)->c1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCollisionPair_a2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCollisionPair *arg1 = (csCollisionPair *) 0 ;
    csVector3 *arg2 = (csVector3 *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csCollisionPair_a2_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCollisionPair,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->a2 = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCollisionPair_a2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCollisionPair *arg1 = (csCollisionPair *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csCollisionPair_a2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCollisionPair,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)& ((arg1)->a2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCollisionPair_b2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCollisionPair *arg1 = (csCollisionPair *) 0 ;
    csVector3 *arg2 = (csVector3 *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csCollisionPair_b2_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCollisionPair,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->b2 = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCollisionPair_b2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCollisionPair *arg1 = (csCollisionPair *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csCollisionPair_b2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCollisionPair,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)& ((arg1)->b2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCollisionPair_c2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCollisionPair *arg1 = (csCollisionPair *) 0 ;
    csVector3 *arg2 = (csVector3 *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csCollisionPair_c2_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCollisionPair,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->c2 = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csCollisionPair_c2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCollisionPair *arg1 = (csCollisionPair *) 0 ;
    csVector3 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csCollisionPair_c2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCollisionPair,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csVector3 *)& ((arg1)->c2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csCollisionPair(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCollisionPair *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csCollisionPair")) goto fail;
    result = (csCollisionPair *)new csCollisionPair();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csCollisionPair, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csCollisionPair(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csCollisionPair *arg1 = (csCollisionPair *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csCollisionPair",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csCollisionPair,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csCollisionPair_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csCollisionPair, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iCollider_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iCollider_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iCollider_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iCollider_VERSION);
    return pyobj;
}


static PyObject *_wrap_delete_iCollider(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCollider *arg1 = (iCollider *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCollider",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCollider,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iCollider(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCollider_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCollider, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iCollideSystem_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iCollideSystem_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iCollideSystem_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iCollideSystem_VERSION);
    return pyobj;
}


static PyObject *_wrap_iCollideSystem_CreateCollider(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCollideSystem *arg1 = (iCollideSystem *) 0 ;
    iPolygonMesh *arg2 = (iPolygonMesh *) 0 ;
    SwigValueWrapper< csPtr<iCollider > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCollideSystem_CreateCollider",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCollideSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateCollider(arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iCollider> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iCollider *)ref), (void *)(iCollider *)ref, "iCollider" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCollideSystem_CreateSphereCollider(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCollideSystem *arg1 = (iCollideSystem *) 0 ;
    iMeshObject *arg2 = (iMeshObject *) 0 ;
    SwigValueWrapper< csPtr<iCollider > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCollideSystem_CreateSphereCollider",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCollideSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateSphereCollider(arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iCollider> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iCollider *)ref), (void *)(iCollider *)ref, "iCollider" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCollideSystem_CreateBoxCollider(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCollideSystem *arg1 = (iCollideSystem *) 0 ;
    iMeshObject *arg2 = (iMeshObject *) 0 ;
    SwigValueWrapper< csPtr<iCollider > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCollideSystem_CreateBoxCollider",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCollideSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateBoxCollider(arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iCollider> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iCollider *)ref), (void *)(iCollider *)ref, "iCollider" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCollideSystem_Collide(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCollideSystem *arg1 = (iCollideSystem *) 0 ;
    iCollider *arg2 = (iCollider *) 0 ;
    csReversibleTransform *arg3 = (csReversibleTransform *) 0 ;
    iCollider *arg4 = (iCollider *) 0 ;
    csReversibleTransform *arg5 = (csReversibleTransform *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:iCollideSystem_Collide",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCollideSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCollider,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iCollider,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Collide(arg2,(csReversibleTransform const *)arg3,arg4,(csReversibleTransform const *)arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCollideSystem_GetCollisionPairs(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCollideSystem *arg1 = (iCollideSystem *) 0 ;
    csCollisionPair *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCollideSystem_GetCollisionPairs",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCollideSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csCollisionPair *)(arg1)->GetCollisionPairs();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csCollisionPair, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCollideSystem_GetCollisionPairCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCollideSystem *arg1 = (iCollideSystem *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCollideSystem_GetCollisionPairCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCollideSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetCollisionPairCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCollideSystem_ResetCollisionPairs(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCollideSystem *arg1 = (iCollideSystem *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCollideSystem_ResetCollisionPairs",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCollideSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ResetCollisionPairs();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCollideSystem_SetOneHitOnly(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCollideSystem *arg1 = (iCollideSystem *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCollideSystem_SetOneHitOnly",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCollideSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetOneHitOnly(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCollideSystem_GetOneHitOnly(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCollideSystem *arg1 = (iCollideSystem *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCollideSystem_GetOneHitOnly",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCollideSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->GetOneHitOnly();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCollideSystem_CollidePath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCollideSystem *arg1 = (iCollideSystem *) 0 ;
    iCollider *arg2 = (iCollider *) 0 ;
    csReversibleTransform *arg3 = (csReversibleTransform *) 0 ;
    csVector3 *arg4 = 0 ;
    int arg5 ;
    iCollider **arg6 = (iCollider **) 0 ;
    csReversibleTransform **arg7 = (csReversibleTransform **) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOiOO:iCollideSystem_CollidePath",&obj0,&obj1,&obj2,&obj3,&arg5,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCollideSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCollider,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_p_iCollider,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->CollidePath(arg2,(csReversibleTransform const *)arg3,*arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCollideSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCollideSystem *arg1 = (iCollideSystem *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCollideSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCollideSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iCollideSystem(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCollideSystem_GetCollisionPairByIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCollideSystem *arg1 = (iCollideSystem *) 0 ;
    int arg2 ;
    csCollisionPair *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iCollideSystem_GetCollisionPairByIndex",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCollideSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csCollisionPair *)iCollideSystem_GetCollisionPairByIndex(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csCollisionPair, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCollideSystem_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCollideSystem, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iDynamics_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iDynamics_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iDynamics_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iDynamics_VERSION);
    return pyobj;
}


static PyObject *_wrap_iDynamics_CreateSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamics *arg1 = (iDynamics *) 0 ;
    SwigValueWrapper< csPtr<iDynamicSystem > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDynamics_CreateSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateSystem();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iDynamicSystem> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iDynamicSystem *)ref), (void *)(iDynamicSystem *)ref, "iDynamicSystem" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamics_RemoveSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamics *arg1 = (iDynamics *) 0 ;
    iDynamicSystem *arg2 = (iDynamicSystem *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iDynamics_RemoveSystem",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveSystem(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamics_FindSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamics *arg1 = (iDynamics *) 0 ;
    char *arg2 ;
    iDynamicSystem *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iDynamics_FindSystem",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iDynamicSystem *)(arg1)->FindSystem((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iDynamicSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamics_Step(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamics *arg1 = (iDynamics *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iDynamics_Step",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Step(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iDynamics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamics *arg1 = (iDynamics *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iDynamics",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iDynamics(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iDynamics_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iDynamics, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iDynamicSystem_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iDynamicSystem_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iDynamicSystem_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iDynamicSystem_VERSION);
    return pyobj;
}


static PyObject *_wrap_iDynamicSystem_QueryObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDynamicSystem_QueryObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)(arg1)->QueryObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_SetGravity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iDynamicSystem_SetGravity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetGravity((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_GetGravity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDynamicSystem_GetGravity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iDynamicSystem const *)arg1)->GetGravity();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_SetLinearDampener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iDynamicSystem_SetLinearDampener",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetLinearDampener(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_GetLinearDampener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDynamicSystem_GetLinearDampener",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iDynamicSystem const *)arg1)->GetLinearDampener();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_SetRollingDampener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iDynamicSystem_SetRollingDampener",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetRollingDampener(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_GetRollingDampener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDynamicSystem_GetRollingDampener",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iDynamicSystem const *)arg1)->GetRollingDampener();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_Step(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iDynamicSystem_Step",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Step(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_CreateBody(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    SwigValueWrapper< csPtr<iRigidBody > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDynamicSystem_CreateBody",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateBody();
    
    {
        csPtr<iRigidBody > * resultptr;
        resultptr = new csPtr<iRigidBody >((csPtr<iRigidBody > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiRigidBody_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_RemoveBody(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    iRigidBody *arg2 = (iRigidBody *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iDynamicSystem_RemoveBody",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveBody(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_FindBody(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    char *arg2 ;
    iRigidBody *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iDynamicSystem_FindBody",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iRigidBody *)(arg1)->FindBody((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iRigidBody, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_CreateGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    SwigValueWrapper< csPtr<iBodyGroup > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDynamicSystem_CreateGroup",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateGroup();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iBodyGroup> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iBodyGroup *)ref), (void *)(iBodyGroup *)ref, "iBodyGroup" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_RemoveGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    iBodyGroup *arg2 = (iBodyGroup *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iDynamicSystem_RemoveGroup",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBodyGroup,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveGroup(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_CreateJoint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    SwigValueWrapper< csPtr<iJoint > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDynamicSystem_CreateJoint",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateJoint();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iJoint> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iJoint *)ref), (void *)(iJoint *)ref, "iJoint" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_RemoveJoint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    iJoint *arg2 = (iJoint *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iDynamicSystem_RemoveJoint",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveJoint(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_GetDefaultMoveCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    iDynamicsMoveCallback *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iDynamicSystem_GetDefaultMoveCallback",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iDynamicsMoveCallback *)(arg1)->GetDefaultMoveCallback();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iDynamicsMoveCallback, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_AttachColliderMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    csOrthoTransform *arg3 = 0 ;
    float arg4 ;
    float arg5 ;
    float arg6 = (float) 0.316f ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOff|f:iDynamicSystem_AttachColliderMesh",&obj0,&obj1,&obj2,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csOrthoTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->AttachColliderMesh(arg2,(csOrthoTransform const &)*arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_AttachColliderCylinder(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    float arg2 ;
    float arg3 ;
    csOrthoTransform *arg4 = 0 ;
    float arg5 ;
    float arg6 ;
    float arg7 = (float) 0.316f ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OffOff|f:iDynamicSystem_AttachColliderCylinder",&obj0,&arg2,&arg3,&obj3,&arg5,&arg6,&arg7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csOrthoTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->AttachColliderCylinder(arg2,arg3,(csOrthoTransform const &)*arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_AttachColliderBox(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    csVector3 *arg2 = 0 ;
    csOrthoTransform *arg3 = 0 ;
    float arg4 ;
    float arg5 ;
    float arg6 = (float) 0.316f ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOff|f:iDynamicSystem_AttachColliderBox",&obj0,&obj1,&obj2,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csOrthoTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->AttachColliderBox((csVector3 const &)*arg2,(csOrthoTransform const &)*arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_AttachColliderSphere(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    float arg2 ;
    csVector3 *arg3 = 0 ;
    float arg4 ;
    float arg5 ;
    float arg6 = (float) 0.316f ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OfOff|f:iDynamicSystem_AttachColliderSphere",&obj0,&arg2,&obj2,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->AttachColliderSphere(arg2,(csVector3 const &)*arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicSystem_AttachColliderPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    csPlane3 *arg2 = 0 ;
    float arg3 ;
    float arg4 ;
    float arg5 = (float) 0.316f ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOff|f:iDynamicSystem_AttachColliderPlane",&obj0,&obj1,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->AttachColliderPlane((csPlane3 const &)*arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iDynamicSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicSystem *arg1 = (iDynamicSystem *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iDynamicSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iDynamicSystem(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iDynamicSystem_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iDynamicSystem, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iDynamicsMoveCallback_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iDynamicsMoveCallback_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iDynamicsMoveCallback_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iDynamicsMoveCallback_VERSION);
    return pyobj;
}


static PyObject *_wrap_iDynamicsMoveCallback_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iDynamicsMoveCallback_scfGetID")) goto fail;
    result = (scfInterfaceID)iDynamicsMoveCallback_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicsMoveCallback_Execute__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicsMoveCallback *arg1 = (iDynamicsMoveCallback *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    csOrthoTransform *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iDynamicsMoveCallback_Execute",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicsMoveCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csOrthoTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Execute(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicsMoveCallback_Execute__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicsMoveCallback *arg1 = (iDynamicsMoveCallback *) 0 ;
    iSkeletonBone *arg2 = (iSkeletonBone *) 0 ;
    csOrthoTransform *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iDynamicsMoveCallback_Execute",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicsMoveCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSkeletonBone,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csOrthoTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Execute(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicsMoveCallback_Execute__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicsMoveCallback *arg1 = (iDynamicsMoveCallback *) 0 ;
    csOrthoTransform *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iDynamicsMoveCallback_Execute",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicsMoveCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csOrthoTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Execute(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicsMoveCallback_Execute(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iDynamicsMoveCallback, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csOrthoTransform, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iDynamicsMoveCallback_Execute__SWIG_2(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iDynamicsMoveCallback, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iSkeletonBone, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csOrthoTransform, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iDynamicsMoveCallback_Execute__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iDynamicsMoveCallback, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iMeshWrapper, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csOrthoTransform, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iDynamicsMoveCallback_Execute__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iDynamicsMoveCallback_Execute'");
    return NULL;
}


static PyObject *_wrap_delete_iDynamicsMoveCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicsMoveCallback *arg1 = (iDynamicsMoveCallback *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iDynamicsMoveCallback",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicsMoveCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iDynamicsMoveCallback_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iDynamicsMoveCallback, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iDynamicsCollisionCallback_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iDynamicsCollisionCallback_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iDynamicsCollisionCallback_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iDynamicsCollisionCallback_VERSION);
    return pyobj;
}


static PyObject *_wrap_iDynamicsCollisionCallback_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iDynamicsCollisionCallback_scfGetID")) goto fail;
    result = (scfInterfaceID)iDynamicsCollisionCallback_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iDynamicsCollisionCallback_Execute(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicsCollisionCallback *arg1 = (iDynamicsCollisionCallback *) 0 ;
    iRigidBody *arg2 = (iRigidBody *) 0 ;
    iRigidBody *arg3 = (iRigidBody *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iDynamicsCollisionCallback_Execute",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicsCollisionCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Execute(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iDynamicsCollisionCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iDynamicsCollisionCallback *arg1 = (iDynamicsCollisionCallback *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iDynamicsCollisionCallback",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iDynamicsCollisionCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iDynamicsCollisionCallback_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iDynamicsCollisionCallback, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iBodyGroup_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iBodyGroup_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iBodyGroup_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iBodyGroup_VERSION);
    return pyobj;
}


static PyObject *_wrap_iBodyGroup_AddBody(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBodyGroup *arg1 = (iBodyGroup *) 0 ;
    iRigidBody *arg2 = (iRigidBody *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBodyGroup_AddBody",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBodyGroup,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddBody(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBodyGroup_RemoveBody(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBodyGroup *arg1 = (iBodyGroup *) 0 ;
    iRigidBody *arg2 = (iRigidBody *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBodyGroup_RemoveBody",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBodyGroup,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveBody(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBodyGroup_BodyInGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBodyGroup *arg1 = (iBodyGroup *) 0 ;
    iRigidBody *arg2 = (iRigidBody *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBodyGroup_BodyInGroup",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBodyGroup,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->BodyInGroup(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iBodyGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBodyGroup *arg1 = (iBodyGroup *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iBodyGroup",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBodyGroup,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iBodyGroup(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iBodyGroup_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iBodyGroup, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iRigidBody_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iRigidBody_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iRigidBody_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iRigidBody_VERSION);
    return pyobj;
}


static PyObject *_wrap_iRigidBody_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iRigidBody_scfGetID")) goto fail;
    result = (scfInterfaceID)iRigidBody_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_QueryObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iRigidBody_QueryObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)(arg1)->QueryObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_MakeStatic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iRigidBody_MakeStatic",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->MakeStatic();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_MakeDynamic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iRigidBody_MakeDynamic",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->MakeDynamic();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_IsStatic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iRigidBody_IsStatic",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsStatic();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_GetGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    SwigValueWrapper< csRef<iBodyGroup > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iRigidBody_GetGroup",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetGroup();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iBodyGroup> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iBodyGroup *)ref), (void *)(iBodyGroup *)ref, "iBodyGroup" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_AttachColliderMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    csOrthoTransform *arg3 = 0 ;
    float arg4 ;
    float arg5 ;
    float arg6 ;
    float arg7 = (float) 0.316f ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOfff|f:iRigidBody_AttachColliderMesh",&obj0,&obj1,&obj2,&arg4,&arg5,&arg6,&arg7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csOrthoTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->AttachColliderMesh(arg2,(csOrthoTransform const &)*arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_AttachColliderCylinder(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    float arg2 ;
    float arg3 ;
    csOrthoTransform *arg4 = 0 ;
    float arg5 ;
    float arg6 ;
    float arg7 ;
    float arg8 = (float) 0.316f ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OffOfff|f:iRigidBody_AttachColliderCylinder",&obj0,&arg2,&arg3,&obj3,&arg5,&arg6,&arg7,&arg8)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csOrthoTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->AttachColliderCylinder(arg2,arg3,(csOrthoTransform const &)*arg4,arg5,arg6,arg7,arg8);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_AttachColliderBox(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csVector3 *arg2 = 0 ;
    csOrthoTransform *arg3 = 0 ;
    float arg4 ;
    float arg5 ;
    float arg6 ;
    float arg7 = (float) 0.316f ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOfff|f:iRigidBody_AttachColliderBox",&obj0,&obj1,&obj2,&arg4,&arg5,&arg6,&arg7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csOrthoTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->AttachColliderBox((csVector3 const &)*arg2,(csOrthoTransform const &)*arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_AttachColliderSphere(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    float arg2 ;
    csVector3 *arg3 = 0 ;
    float arg4 ;
    float arg5 ;
    float arg6 ;
    float arg7 = (float) 0.316f ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OfOfff|f:iRigidBody_AttachColliderSphere",&obj0,&arg2,&obj2,&arg4,&arg5,&arg6,&arg7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->AttachColliderSphere(arg2,(csVector3 const &)*arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_AttachColliderPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csPlane3 *arg2 = 0 ;
    float arg3 ;
    float arg4 ;
    float arg5 ;
    float arg6 = (float) 0.316f ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOfff|f:iRigidBody_AttachColliderPlane",&obj0,&obj1,&arg3,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->AttachColliderPlane((csPlane3 const &)*arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_SetPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iRigidBody_SetPosition",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetPosition((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_GetPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iRigidBody_GetPosition",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iRigidBody const *)arg1)->GetPosition();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_SetOrientation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csMatrix3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iRigidBody_SetOrientation",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetOrientation((csMatrix3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_GetOrientation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csMatrix3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iRigidBody_GetOrientation",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iRigidBody const *)arg1)->GetOrientation();
    
    {
        csMatrix3 * resultptr;
        resultptr = new csMatrix3((csMatrix3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csMatrix3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_SetTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csOrthoTransform *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iRigidBody_SetTransform",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csOrthoTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetTransform((csOrthoTransform const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_GetTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csOrthoTransform result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iRigidBody_GetTransform",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iRigidBody const *)arg1)->GetTransform();
    
    {
        csOrthoTransform * resultptr;
        resultptr = new csOrthoTransform((csOrthoTransform &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csOrthoTransform, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_SetLinearVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iRigidBody_SetLinearVelocity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetLinearVelocity((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_GetLinearVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iRigidBody_GetLinearVelocity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iRigidBody const *)arg1)->GetLinearVelocity();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_SetAngularVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iRigidBody_SetAngularVelocity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetAngularVelocity((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_GetAngularVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iRigidBody_GetAngularVelocity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iRigidBody const *)arg1)->GetAngularVelocity();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_SetProperties(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    float arg2 ;
    csVector3 *arg3 = 0 ;
    csMatrix3 *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OfOO:iRigidBody_SetProperties",&obj0,&arg2,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetProperties(arg2,(csVector3 const &)*arg3,(csMatrix3 const &)*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_GetProperties(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    float *arg2 = (float *) 0 ;
    csVector3 *arg3 = (csVector3 *) 0 ;
    csMatrix3 *arg4 = (csMatrix3 *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iRigidBody_GetProperties",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csMatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetProperties(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_AdjustTotalMass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iRigidBody_AdjustTotalMass",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AdjustTotalMass(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_AddForce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iRigidBody_AddForce",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddForce((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_AddTorque(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iRigidBody_AddTorque",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddTorque((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_AddRelForce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iRigidBody_AddRelForce",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddRelForce((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_AddRelTorque(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iRigidBody_AddRelTorque",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddRelTorque((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_AddForceAtPos(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iRigidBody_AddForceAtPos",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddForceAtPos((csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_AddForceAtRelPos(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iRigidBody_AddForceAtRelPos",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddForceAtRelPos((csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_AddRelForceAtPos(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iRigidBody_AddRelForceAtPos",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddRelForceAtPos((csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_AddRelForceAtRelPos(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iRigidBody_AddRelForceAtRelPos",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddRelForceAtRelPos((csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_GetForce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iRigidBody_GetForce",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iRigidBody const *)arg1)->GetForce();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_GetTorque(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iRigidBody_GetTorque",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iRigidBody const *)arg1)->GetTorque();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_AttachMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iRigidBody_AttachMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AttachMesh(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_GetAttachedMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    SwigValueWrapper< csRef<iMeshWrapper > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iRigidBody_GetAttachedMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetAttachedMesh();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iMeshWrapper> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iMeshWrapper *)ref), (void *)(iMeshWrapper *)ref, "iMeshWrapper" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_AttachBone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    iSkeletonBone *arg2 = (iSkeletonBone *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iRigidBody_AttachBone",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSkeletonBone,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AttachBone(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_GetAttachedBone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    SwigValueWrapper< csRef<iSkeletonBone > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iRigidBody_GetAttachedBone",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetAttachedBone();
    
    {
        csRef<iSkeletonBone > * resultptr;
        resultptr = new csRef<iSkeletonBone >((csRef<iSkeletonBone > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csRefTiSkeletonBone_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_SetMoveCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    iDynamicsMoveCallback *arg2 = (iDynamicsMoveCallback *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iRigidBody_SetMoveCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iDynamicsMoveCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMoveCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_SetCollisionCallback(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    iDynamicsCollisionCallback *arg2 = (iDynamicsCollisionCallback *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iRigidBody_SetCollisionCallback",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iDynamicsCollisionCallback,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCollisionCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_Collision(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    iRigidBody *arg2 = (iRigidBody *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iRigidBody_Collision",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Collision(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iRigidBody_Update(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iRigidBody_Update",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Update();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iRigidBody(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iRigidBody *arg1 = (iRigidBody *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iRigidBody",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iRigidBody_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iRigidBody, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iJoint_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iJoint_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iJoint_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iJoint_VERSION);
    return pyobj;
}


static PyObject *_wrap_iJoint_Attach(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    iRigidBody *arg2 = (iRigidBody *) 0 ;
    iRigidBody *arg3 = (iRigidBody *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iJoint_Attach",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iRigidBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Attach(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoint_GetAttachedBody(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    int arg2 ;
    SwigValueWrapper< csRef<iRigidBody > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iJoint_GetAttachedBody",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetAttachedBody(arg2);
    
    {
        csRef<iRigidBody > * resultptr;
        resultptr = new csRef<iRigidBody >((csRef<iRigidBody > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csRefTiRigidBody_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoint_SetTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    csOrthoTransform *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iJoint_SetTransform",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csOrthoTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetTransform((csOrthoTransform const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoint_GetTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    csOrthoTransform result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iJoint_GetTransform",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetTransform();
    
    {
        csOrthoTransform * resultptr;
        resultptr = new csOrthoTransform((csOrthoTransform &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csOrthoTransform, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoint_SetTransConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    bool arg2 ;
    bool arg3 ;
    bool arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iJoint_SetTransConstraints",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    arg4 = PyInt_AsLong(obj3) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetTransConstraints(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoint_IsXTransConstrained(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iJoint_IsXTransConstrained",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsXTransConstrained();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoint_IsYTransConstrained(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iJoint_IsYTransConstrained",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsYTransConstrained();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoint_IsZTransConstrained(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iJoint_IsZTransConstrained",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsZTransConstrained();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoint_SetMinimumDistance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iJoint_SetMinimumDistance",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetMinimumDistance((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoint_GetMinimumDistance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iJoint_GetMinimumDistance",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetMinimumDistance();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoint_SetMaximumDistance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iJoint_SetMaximumDistance",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetMaximumDistance((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoint_GetMaximumDistance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iJoint_GetMaximumDistance",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetMaximumDistance();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoint_SetRotConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    bool arg2 ;
    bool arg3 ;
    bool arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iJoint_SetRotConstraints",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    arg4 = PyInt_AsLong(obj3) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetRotConstraints(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoint_IsXRotConstrained(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iJoint_IsXRotConstrained",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsXRotConstrained();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoint_IsYRotConstrained(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iJoint_IsYRotConstrained",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsYRotConstrained();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoint_IsZRotConstrained(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iJoint_IsZRotConstrained",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsZRotConstrained();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoint_SetMinimumAngle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iJoint_SetMinimumAngle",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetMinimumAngle((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoint_GetMinimumAngle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iJoint_GetMinimumAngle",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetMinimumAngle();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoint_SetMaximumAngle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iJoint_SetMaximumAngle",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetMaximumAngle((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iJoint_GetMaximumAngle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iJoint_GetMaximumAngle",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetMaximumAngle();
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iJoint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iJoint *arg1 = (iJoint *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iJoint",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iJoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iJoint(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iJoint_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iJoint, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iConsoleWatcher_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iConsoleWatcher_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iConsoleWatcher_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iConsoleWatcher_VERSION);
    return pyobj;
}


static PyObject *_wrap_iConsoleWatcher_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iConsoleWatcher_scfGetID")) goto fail;
    result = (scfInterfaceID)iConsoleWatcher_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleWatcher_ConsoleVisibilityChanged(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleWatcher *arg1 = (iConsoleWatcher *) 0 ;
    iConsoleOutput *arg2 = (iConsoleOutput *) 0 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iConsoleWatcher_ConsoleVisibilityChanged",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleWatcher,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->ConsoleVisibilityChanged(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iConsoleWatcher(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleWatcher *arg1 = (iConsoleWatcher *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iConsoleWatcher",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleWatcher,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iConsoleWatcher_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iConsoleWatcher, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iConsoleOutput_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iConsoleOutput_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iConsoleOutput_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iConsoleOutput_VERSION);
    return pyobj;
}


static PyObject *_wrap_iConsoleOutput_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iConsoleOutput_scfGetID")) goto fail;
    result = (scfInterfaceID)iConsoleOutput_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_PutText__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    char *arg2 ;
    void *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iConsoleOutput_PutText",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PutText((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_PutText(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *varargs;
    PyObject *newargs;
    
    newargs = PyTuple_GetSlice(args,0,2);
    varargs = PyTuple_GetSlice(args,2,PyTuple_Size(args)+1);
    resultobj = _wrap_iConsoleOutput_PutText__varargs__(self,newargs,varargs);
    Py_XDECREF(newargs);
    Py_XDECREF(varargs);
    return resultobj;
}


static PyObject *_wrap_iConsoleOutput_PutTextV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    char *arg2 ;
    va_list arg3 ;
    va_list *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iConsoleOutput_PutTextV",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_va_list,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    (arg1)->PutTextV((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_GetLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    int arg2 = (int) -1 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|i:iConsoleOutput_GetLine",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iConsoleOutput const *)arg1)->GetLine(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_Draw2D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    csRect *arg2 = (csRect *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:iConsoleOutput_Draw2D",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    (arg1)->Draw2D(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_Draw3D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    csRect *arg2 = (csRect *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:iConsoleOutput_Draw3D",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    (arg1)->Draw3D(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    bool arg2 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:iConsoleOutput_Clear",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->Clear(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_SetBufferSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iConsoleOutput_SetBufferSize",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetBufferSize(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_GetTransparency(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConsoleOutput_GetTransparency",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iConsoleOutput const *)arg1)->GetTransparency();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_SetTransparency(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iConsoleOutput_SetTransparency",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetTransparency(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_GetFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    iFont *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConsoleOutput_GetFont",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iFont *)((iConsoleOutput const *)arg1)->GetFont();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iFont, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_SetFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    iFont *arg2 = (iFont *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iConsoleOutput_SetFont",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFont(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_GetTopLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConsoleOutput_GetTopLine",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iConsoleOutput const *)arg1)->GetTopLine();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_ScrollTo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    int arg2 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi|O:iConsoleOutput_ScrollTo",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->ScrollTo(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_GetCursorStyle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConsoleOutput_GetCursorStyle",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iConsoleOutput const *)arg1)->GetCursorStyle();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_SetCursorStyle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iConsoleOutput_SetCursorStyle",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCursorStyle(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_SetVisible(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iConsoleOutput_SetVisible",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetVisible(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_GetVisible(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConsoleOutput_GetVisible",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->GetVisible();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_AutoUpdate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iConsoleOutput_AutoUpdate",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->AutoUpdate(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_SetCursorPos(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iConsoleOutput_SetCursorPos",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCursorPos(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_GetMaxLineWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iConsoleOutput_GetMaxLineWidth",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetMaxLineWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_RegisterWatcher(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    iConsoleWatcher *arg2 = (iConsoleWatcher *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iConsoleOutput_RegisterWatcher",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iConsoleWatcher,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RegisterWatcher(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_PerformExtension__varargs__(PyObject *self, PyObject *args, PyObject *varargs) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    char *arg2 ;
    void *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iConsoleOutput_PerformExtension",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->PerformExtension((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iConsoleOutput_PerformExtension(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *varargs;
    PyObject *newargs;
    
    newargs = PyTuple_GetSlice(args,0,2);
    varargs = PyTuple_GetSlice(args,2,PyTuple_Size(args)+1);
    resultobj = _wrap_iConsoleOutput_PerformExtension__varargs__(self,newargs,varargs);
    Py_XDECREF(newargs);
    Py_XDECREF(varargs);
    return resultobj;
}


static PyObject *_wrap_iConsoleOutput_PerformExtensionV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    char *arg2 ;
    va_list arg3 ;
    bool result;
    va_list *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iConsoleOutput_PerformExtensionV",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_va_list,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    result = (bool)(arg1)->PerformExtensionV((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iConsoleOutput(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iConsoleOutput *arg1 = (iConsoleOutput *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iConsoleOutput",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iConsoleOutput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iConsoleOutput_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iConsoleOutput, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iParameterESM_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iParameterESM_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iParameterESM_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iParameterESM_VERSION);
    return pyobj;
}


static PyObject *_wrap_iParameterESM_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iParameterESM_scfGetID")) goto fail;
    result = (scfInterfaceID)iParameterESM_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iParameterESM_GetValue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iParameterESM *arg1 = (iParameterESM *) 0 ;
    iBase *arg2 = (iBase *) 0 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:iParameterESM_GetValue",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (iBase *)((iParameterESM const *)arg1)->GetValue(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iParameterESM_IsConstant(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iParameterESM *arg1 = (iParameterESM *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iParameterESM_IsConstant",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iParameterESM const *)arg1)->IsConstant();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iParameterESM(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iParameterESM *arg1 = (iParameterESM *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iParameterESM",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iParameterESM_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iParameterESM, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iEngineSequenceParameters_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iEngineSequenceParameters_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iEngineSequenceParameters_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iEngineSequenceParameters_VERSION);
    return pyobj;
}


static PyObject *_wrap_iEngineSequenceParameters_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iEngineSequenceParameters_scfGetID")) goto fail;
    result = (scfInterfaceID)iEngineSequenceParameters_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceParameters_GetParameterCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceParameters *arg1 = (iEngineSequenceParameters *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngineSequenceParameters_GetParameterCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceParameters,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iEngineSequenceParameters const *)arg1)->GetParameterCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceParameters_GetParameter__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceParameters *arg1 = (iEngineSequenceParameters *) 0 ;
    int arg2 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iEngineSequenceParameters_GetParameter",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceParameters,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBase *)((iEngineSequenceParameters const *)arg1)->GetParameter(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceParameters_GetParameter__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceParameters *arg1 = (iEngineSequenceParameters *) 0 ;
    char *arg2 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iEngineSequenceParameters_GetParameter",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceParameters,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBase *)((iEngineSequenceParameters const *)arg1)->GetParameter((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceParameters_GetParameter(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngineSequenceParameters, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iEngineSequenceParameters_GetParameter__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngineSequenceParameters, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iEngineSequenceParameters_GetParameter__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iEngineSequenceParameters_GetParameter'");
    return NULL;
}


static PyObject *_wrap_iEngineSequenceParameters_GetParameterIdx(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceParameters *arg1 = (iEngineSequenceParameters *) 0 ;
    char *arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iEngineSequenceParameters_GetParameterIdx",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceParameters,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iEngineSequenceParameters const *)arg1)->GetParameterIdx((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceParameters_GetParameterName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceParameters *arg1 = (iEngineSequenceParameters *) 0 ;
    int arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iEngineSequenceParameters_GetParameterName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceParameters,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iEngineSequenceParameters const *)arg1)->GetParameterName(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceParameters_AddParameter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceParameters *arg1 = (iEngineSequenceParameters *) 0 ;
    char *arg2 ;
    iBase *arg3 = (iBase *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iEngineSequenceParameters_AddParameter",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceParameters,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    (arg1)->AddParameter((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceParameters_SetParameter__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceParameters *arg1 = (iEngineSequenceParameters *) 0 ;
    int arg2 ;
    iBase *arg3 = (iBase *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:iEngineSequenceParameters_SetParameter",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceParameters,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetParameter(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceParameters_SetParameter__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceParameters *arg1 = (iEngineSequenceParameters *) 0 ;
    char *arg2 ;
    iBase *arg3 = (iBase *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iEngineSequenceParameters_SetParameter",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceParameters,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetParameter((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceParameters_SetParameter(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngineSequenceParameters, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iBase, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iEngineSequenceParameters_SetParameter__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iEngineSequenceParameters, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iBase, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iEngineSequenceParameters_SetParameter__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iEngineSequenceParameters_SetParameter'");
    return NULL;
}


static PyObject *_wrap_iEngineSequenceParameters_CreateParameterESM(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceParameters *arg1 = (iEngineSequenceParameters *) 0 ;
    char *arg2 ;
    SwigValueWrapper< csPtr<iParameterESM > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iEngineSequenceParameters_CreateParameterESM",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceParameters,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateParameterESM((char const *)arg2);
    
    {
        csPtr<iParameterESM > * resultptr;
        resultptr = new csPtr<iParameterESM >((csPtr<iParameterESM > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiParameterESM_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iEngineSequenceParameters(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceParameters *arg1 = (iEngineSequenceParameters *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iEngineSequenceParameters",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceParameters,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iEngineSequenceParameters_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iEngineSequenceParameters, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSequenceWrapper_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSequenceWrapper_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSequenceWrapper_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSequenceWrapper_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSequenceWrapper_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iSequenceWrapper_scfGetID")) goto fail;
    result = (scfInterfaceID)iSequenceWrapper_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_QueryObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSequenceWrapper_QueryObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)(arg1)->QueryObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_GetSequence(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    iSequence *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSequenceWrapper_GetSequence",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSequence *)(arg1)->GetSequence();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSequence, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_CreateBaseParameterBlock(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    iEngineSequenceParameters *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSequenceWrapper_CreateBaseParameterBlock",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iEngineSequenceParameters *)(arg1)->CreateBaseParameterBlock();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iEngineSequenceParameters, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_GetBaseParameterBlock(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    iEngineSequenceParameters *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSequenceWrapper_GetBaseParameterBlock",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iEngineSequenceParameters *)(arg1)->GetBaseParameterBlock();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iEngineSequenceParameters, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_CreateParameterBlock(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    SwigValueWrapper< csPtr<iEngineSequenceParameters > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSequenceWrapper_CreateParameterBlock",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateParameterBlock();
    
    {
        csPtr<iEngineSequenceParameters > * resultptr;
        resultptr = new csPtr<iEngineSequenceParameters >((csPtr<iEngineSequenceParameters > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiEngineSequenceParameters_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationSetVariable__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    iSharedVariable *arg3 = (iSharedVariable *) 0 ;
    float arg4 ;
    float arg5 = (float) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOf|f:iSequenceWrapper_AddOperationSetVariable",&obj0,&obj1,&obj2,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iSharedVariable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddOperationSetVariable(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationSetVariable__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    iSharedVariable *arg3 = (iSharedVariable *) 0 ;
    iSharedVariable *arg4 = (iSharedVariable *) 0 ;
    iSharedVariable *arg5 = (iSharedVariable *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO|O:iSequenceWrapper_AddOperationSetVariable",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iSharedVariable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iSharedVariable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj4) {
        if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_iSharedVariable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    (arg1)->AddOperationSetVariable(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationSetVariable__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    iSharedVariable *arg3 = (iSharedVariable *) 0 ;
    csVector3 *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iSequenceWrapper_AddOperationSetVariable",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iSharedVariable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddOperationSetVariable(arg2,arg3,(csVector3 const &)*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationSetVariable__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    iSharedVariable *arg3 = (iSharedVariable *) 0 ;
    csColor *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iSequenceWrapper_AddOperationSetVariable",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iSharedVariable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddOperationSetVariable(arg2,arg3,(csColor const &)*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationSetVariable(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 4) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSequenceWrapper, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iSharedVariable, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_iSharedVariable, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_iSequenceWrapper_AddOperationSetVariable__SWIG_1(self,args);
                        }
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_iSharedVariable, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_iSequenceWrapper_AddOperationSetVariable__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSequenceWrapper, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iSharedVariable, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_iSequenceWrapper_AddOperationSetVariable__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSequenceWrapper, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iSharedVariable, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csColor, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_iSequenceWrapper_AddOperationSetVariable__SWIG_3(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 4) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSequenceWrapper, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iSharedVariable, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyFloat_Check(argv[3]) || PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_iSequenceWrapper_AddOperationSetVariable__SWIG_0(self,args);
                        }
                        {
                            _v = (PyFloat_Check(argv[4]) || PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_iSequenceWrapper_AddOperationSetVariable__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iSequenceWrapper_AddOperationSetVariable'");
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationSetMaterial(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    iParameterESM *arg3 = (iParameterESM *) 0 ;
    iParameterESM *arg4 = (iParameterESM *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iSequenceWrapper_AddOperationSetMaterial",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddOperationSetMaterial(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationSetPolygonMaterial(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    iParameterESM *arg3 = (iParameterESM *) 0 ;
    iParameterESM *arg4 = (iParameterESM *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iSequenceWrapper_AddOperationSetPolygonMaterial",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddOperationSetPolygonMaterial(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationSetLight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    iParameterESM *arg3 = (iParameterESM *) 0 ;
    csColor *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iSequenceWrapper_AddOperationSetLight",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddOperationSetLight(arg2,arg3,(csColor const &)*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationFadeLight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    iParameterESM *arg3 = (iParameterESM *) 0 ;
    csColor *arg4 = 0 ;
    csTicks arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:iSequenceWrapper_AddOperationFadeLight",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg5 = (csTicks) PyInt_AsLong(obj4);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->AddOperationFadeLight(arg2,arg3,(csColor const &)*arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationSetAmbient(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    iParameterESM *arg3 = (iParameterESM *) 0 ;
    csColor *arg4 = 0 ;
    iSharedVariable *arg5 = (iSharedVariable *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:iSequenceWrapper_AddOperationSetAmbient",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_iSharedVariable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddOperationSetAmbient(arg2,arg3,(csColor const &)*arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationFadeAmbient(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    iParameterESM *arg3 = (iParameterESM *) 0 ;
    csColor *arg4 = 0 ;
    csTicks arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:iSequenceWrapper_AddOperationFadeAmbient",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg5 = (csTicks) PyInt_AsLong(obj4);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->AddOperationFadeAmbient(arg2,arg3,(csColor const &)*arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationRandomDelay(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOii:iSequenceWrapper_AddOperationRandomDelay",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->AddOperationRandomDelay(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationSetMeshColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    iParameterESM *arg3 = (iParameterESM *) 0 ;
    csColor *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iSequenceWrapper_AddOperationSetMeshColor",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddOperationSetMeshColor(arg2,arg3,(csColor const &)*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationFadeMeshColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    iParameterESM *arg3 = (iParameterESM *) 0 ;
    csColor *arg4 = 0 ;
    csTicks arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:iSequenceWrapper_AddOperationFadeMeshColor",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg5 = (csTicks) PyInt_AsLong(obj4);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->AddOperationFadeMeshColor(arg2,arg3,(csColor const &)*arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationSetFog(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    iParameterESM *arg3 = (iParameterESM *) 0 ;
    csColor *arg4 = 0 ;
    float arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOf:iSequenceWrapper_AddOperationSetFog",&obj0,&obj1,&obj2,&obj3,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddOperationSetFog(arg2,arg3,(csColor const &)*arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationFadeFog(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    iParameterESM *arg3 = (iParameterESM *) 0 ;
    csColor *arg4 = 0 ;
    float arg5 ;
    csTicks arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOfO:iSequenceWrapper_AddOperationFadeFog",&obj0,&obj1,&obj2,&obj3,&arg5,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg6 = (csTicks) PyInt_AsLong(obj5);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->AddOperationFadeFog(arg2,arg3,(csColor const &)*arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationRotateDuration(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    iParameterESM *arg3 = (iParameterESM *) 0 ;
    int arg4 ;
    float arg5 ;
    int arg6 ;
    float arg7 ;
    int arg8 ;
    float arg9 ;
    csVector3 *arg10 = 0 ;
    csTicks arg11 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj9 = 0 ;
    PyObject * obj10 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOifififOO:iSequenceWrapper_AddOperationRotateDuration",&obj0,&obj1,&obj2,&arg4,&arg5,&arg6,&arg7,&arg8,&arg9,&obj9,&obj10)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj9,(void **) &arg10, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg10 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg11 = (csTicks) PyInt_AsLong(obj10);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->AddOperationRotateDuration(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,(csVector3 const &)*arg10,arg11);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationMoveDuration(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    iParameterESM *arg3 = (iParameterESM *) 0 ;
    csVector3 *arg4 = 0 ;
    csTicks arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:iSequenceWrapper_AddOperationMoveDuration",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg5 = (csTicks) PyInt_AsLong(obj4);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->AddOperationMoveDuration(arg2,arg3,(csVector3 const &)*arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationTriggerState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    iParameterESM *arg3 = (iParameterESM *) 0 ;
    bool arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iSequenceWrapper_AddOperationTriggerState",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg4 = PyInt_AsLong(obj3) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->AddOperationTriggerState(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationCheckTrigger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    iParameterESM *arg3 = (iParameterESM *) 0 ;
    csTicks arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iSequenceWrapper_AddOperationCheckTrigger",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg4 = (csTicks) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->AddOperationCheckTrigger(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceWrapper_AddOperationTestTrigger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    csTicks arg2 ;
    iParameterESM *arg3 = (iParameterESM *) 0 ;
    iSequence *arg4 = (iSequence *) 0 ;
    iSequence *arg5 = (iSequence *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:iSequenceWrapper_AddOperationTestTrigger",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iParameterESM,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iSequence,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_iSequence,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddOperationTestTrigger(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSequenceWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceWrapper *arg1 = (iSequenceWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSequenceWrapper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSequenceWrapper_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSequenceWrapper, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSequenceTrigger_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSequenceTrigger_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSequenceTrigger_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSequenceTrigger_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSequenceTrigger_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iSequenceTrigger_scfGetID")) goto fail;
    result = (scfInterfaceID)iSequenceTrigger_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_QueryObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSequenceTrigger_QueryObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)(arg1)->QueryObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_AddConditionInSector__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSequenceTrigger_AddConditionInSector",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddConditionInSector(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_AddConditionInSector__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csBox3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iSequenceTrigger_AddConditionInSector",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csBox3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddConditionInSector(arg2,(csBox3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_AddConditionInSector__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csSphere *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iSequenceTrigger_AddConditionInSector",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csSphere,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddConditionInSector(arg2,(csSphere const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_AddConditionInSector(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSequenceTrigger, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iSequenceTrigger_AddConditionInSector__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSequenceTrigger, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csBox3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iSequenceTrigger_AddConditionInSector__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iSequenceTrigger, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iSector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csSphere, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iSequenceTrigger_AddConditionInSector__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iSequenceTrigger_AddConditionInSector'");
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_AddConditionSectorVisible(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSequenceTrigger_AddConditionSectorVisible",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddConditionSectorVisible(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_AddConditionMeshClick(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSequenceTrigger_AddConditionMeshClick",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddConditionMeshClick(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_AddConditionLightChange(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    iLight *arg2 = (iLight *) 0 ;
    int arg3 ;
    csColor *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiO:iSequenceTrigger_AddConditionLightChange",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iLight,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddConditionLightChange(arg2,arg3,(csColor const &)*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_AddConditionManual(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSequenceTrigger_AddConditionManual",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddConditionManual();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_SetEnabled(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSequenceTrigger_SetEnabled",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetEnabled(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_IsEnabled(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSequenceTrigger_IsEnabled",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iSequenceTrigger const *)arg1)->IsEnabled();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_ClearConditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSequenceTrigger_ClearConditions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearConditions();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_Trigger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSequenceTrigger_Trigger",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Trigger();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_SetParameters(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    iEngineSequenceParameters *arg2 = (iEngineSequenceParameters *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSequenceTrigger_SetParameters",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iEngineSequenceParameters,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetParameters(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_GetParameters(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    iEngineSequenceParameters *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSequenceTrigger_GetParameters",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iEngineSequenceParameters *)((iSequenceTrigger const *)arg1)->GetParameters();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iEngineSequenceParameters, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_FireSequence(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    csTicks arg2 ;
    iSequenceWrapper *arg3 = (iSequenceWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iSequenceTrigger_FireSequence",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FireSequence(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_GetFiredSequence(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    iSequenceWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSequenceTrigger_GetFiredSequence",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSequenceWrapper *)(arg1)->GetFiredSequence();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSequenceWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_TestConditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    csTicks arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSequenceTrigger_TestConditions",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->TestConditions(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_CheckState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSequenceTrigger_CheckState",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->CheckState();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTrigger_ForceFire(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    bool arg2 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:iSequenceTrigger_ForceFire",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->ForceFire(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSequenceTrigger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTrigger *arg1 = (iSequenceTrigger *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSequenceTrigger",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSequenceTrigger_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSequenceTrigger, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iSequenceTimedOperation_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iSequenceTimedOperation_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iSequenceTimedOperation_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iSequenceTimedOperation_VERSION);
    return pyobj;
}


static PyObject *_wrap_iSequenceTimedOperation_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iSequenceTimedOperation_scfGetID")) goto fail;
    result = (scfInterfaceID)iSequenceTimedOperation_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iSequenceTimedOperation_Do(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTimedOperation *arg1 = (iSequenceTimedOperation *) 0 ;
    float arg2 ;
    iBase *arg3 = (iBase *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OfO:iSequenceTimedOperation_Do",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTimedOperation,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Do(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iSequenceTimedOperation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSequenceTimedOperation *arg1 = (iSequenceTimedOperation *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSequenceTimedOperation",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSequenceTimedOperation,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iSequenceTimedOperation_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSequenceTimedOperation, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iEngineSequenceManager_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iEngineSequenceManager_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iEngineSequenceManager_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iEngineSequenceManager_VERSION);
    return pyobj;
}


static PyObject *_wrap_iEngineSequenceManager_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iEngineSequenceManager_scfGetID")) goto fail;
    result = (scfInterfaceID)iEngineSequenceManager_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceManager_GetSequenceManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    iSequenceManager *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngineSequenceManager_GetSequenceManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSequenceManager *)(arg1)->GetSequenceManager();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSequenceManager, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceManager_SetCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    iCamera *arg2 = (iCamera *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEngineSequenceManager_SetCamera",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCamera(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceManager_GetCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    iCamera *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngineSequenceManager_GetCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCamera *)(arg1)->GetCamera();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceManager_CreateParameterESM(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    iBase *arg2 = (iBase *) 0 ;
    SwigValueWrapper< csPtr<iParameterESM > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEngineSequenceManager_CreateParameterESM",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateParameterESM(arg2);
    
    {
        csPtr<iParameterESM > * resultptr;
        resultptr = new csPtr<iParameterESM >((csPtr<iParameterESM > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiParameterESM_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceManager_CreateTrigger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    char *arg2 ;
    SwigValueWrapper< csPtr<iSequenceTrigger > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iEngineSequenceManager_CreateTrigger",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateTrigger((char const *)arg2);
    
    {
        csPtr<iSequenceTrigger > * resultptr;
        resultptr = new csPtr<iSequenceTrigger >((csPtr<iSequenceTrigger > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiSequenceTrigger_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceManager_RemoveTrigger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    iSequenceTrigger *arg2 = (iSequenceTrigger *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEngineSequenceManager_RemoveTrigger",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSequenceTrigger,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveTrigger(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceManager_RemoveTriggers(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngineSequenceManager_RemoveTriggers",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveTriggers();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceManager_GetTriggerCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngineSequenceManager_GetTriggerCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iEngineSequenceManager const *)arg1)->GetTriggerCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceManager_GetTrigger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    int arg2 ;
    iSequenceTrigger *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iEngineSequenceManager_GetTrigger",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSequenceTrigger *)((iEngineSequenceManager const *)arg1)->GetTrigger(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSequenceTrigger, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceManager_FindTriggerByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    char *arg2 ;
    iSequenceTrigger *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iEngineSequenceManager_FindTriggerByName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSequenceTrigger *)((iEngineSequenceManager const *)arg1)->FindTriggerByName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSequenceTrigger, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceManager_FireTriggerByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    char *arg2 ;
    bool arg3 = (bool) false ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iEngineSequenceManager_FireTriggerByName",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)((iEngineSequenceManager const *)arg1)->FireTriggerByName((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceManager_CreateSequence(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    char *arg2 ;
    SwigValueWrapper< csPtr<iSequenceWrapper > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iEngineSequenceManager_CreateSequence",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->CreateSequence((char const *)arg2);
    
    {
        csPtr<iSequenceWrapper > * resultptr;
        resultptr = new csPtr<iSequenceWrapper >((csPtr<iSequenceWrapper > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiSequenceWrapper_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceManager_RemoveSequence(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    iSequenceWrapper *arg2 = (iSequenceWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEngineSequenceManager_RemoveSequence",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSequenceWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveSequence(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceManager_RemoveSequences(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngineSequenceManager_RemoveSequences",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveSequences();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceManager_GetSequenceCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngineSequenceManager_GetSequenceCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iEngineSequenceManager const *)arg1)->GetSequenceCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceManager_GetSequence(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    int arg2 ;
    iSequenceWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iEngineSequenceManager_GetSequence",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSequenceWrapper *)((iEngineSequenceManager const *)arg1)->GetSequence(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSequenceWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceManager_FindSequenceByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    char *arg2 ;
    iSequenceWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iEngineSequenceManager_FindSequenceByName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSequenceWrapper *)((iEngineSequenceManager const *)arg1)->FindSequenceByName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSequenceWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceManager_RunSequenceByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    char *arg2 ;
    int arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:iEngineSequenceManager_RunSequenceByName",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iEngineSequenceManager const *)arg1)->RunSequenceByName((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iEngineSequenceManager_FireTimedOperation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    csTicks arg2 ;
    csTicks arg3 ;
    iSequenceTimedOperation *arg4 = (iSequenceTimedOperation *) 0 ;
    iBase *arg5 = (iBase *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO|O:iEngineSequenceManager_FireTimedOperation",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (csTicks) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iSequenceTimedOperation,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj4) {
        if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    (arg1)->FireTimedOperation(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iEngineSequenceManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngineSequenceManager *arg1 = (iEngineSequenceManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iEngineSequenceManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngineSequenceManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iEngineSequenceManager_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iEngineSequenceManager, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iNetworkPacket_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iNetworkPacket_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iNetworkPacket_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iNetworkPacket_VERSION);
    return pyobj;
}


static PyObject *_wrap_iNetworkPacket_Read(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkPacket *arg1 = (iNetworkPacket *) 0 ;
    csDataStream *arg2 = 0 ;
    iNetworkConnection *arg3 = (iNetworkConnection *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iNetworkPacket_Read",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkPacket,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csDataStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iNetworkConnection,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Read(*arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkPacket_Write(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkPacket *arg1 = (iNetworkPacket *) 0 ;
    size_t *arg2 = 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iNetworkPacket_Write",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkPacket,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_size_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (char *)(arg1)->Write(*arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkPacket_New(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkPacket *arg1 = (iNetworkPacket *) 0 ;
    SwigValueWrapper< csPtr<iNetworkPacket > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iNetworkPacket_New",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkPacket,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->New();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iNetworkPacket> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iNetworkPacket *)ref), (void *)(iNetworkPacket *)ref, "iNetworkPacket" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkPacket_FilterSocket(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkPacket *arg1 = (iNetworkPacket *) 0 ;
    iNetworkConnection *arg2 = (iNetworkConnection *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iNetworkPacket_FilterSocket",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkPacket,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iNetworkConnection,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->FilterSocket(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iNetworkPacket(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkPacket *arg1 = (iNetworkPacket *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iNetworkPacket",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkPacket,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iNetworkPacket(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iNetworkPacket_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iNetworkPacket, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iNetworkPacket2_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iNetworkPacket2_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iNetworkPacket2_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iNetworkPacket2_VERSION);
    return pyobj;
}


static PyObject *_wrap_iNetworkPacket2_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":iNetworkPacket2_scfGetID")) goto fail;
    result = (scfInterfaceID)iNetworkPacket2_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkPacket2_Read(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkPacket2 *arg1 = (iNetworkPacket2 *) 0 ;
    csDataStream *arg2 = 0 ;
    iNetworkSocket2 *arg3 = (iNetworkSocket2 *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iNetworkPacket2_Read",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkPacket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csDataStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Read(*arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkPacket2_Write(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkPacket2 *arg1 = (iNetworkPacket2 *) 0 ;
    size_t *arg2 = 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iNetworkPacket2_Write",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkPacket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_size_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (char *)(arg1)->Write(*arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkPacket2_New(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkPacket2 *arg1 = (iNetworkPacket2 *) 0 ;
    SwigValueWrapper< csPtr<iNetworkPacket2 > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iNetworkPacket2_New",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkPacket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->New();
    
    {
        csPtr<iNetworkPacket2 > * resultptr;
        resultptr = new csPtr<iNetworkPacket2 >((csPtr<iNetworkPacket2 > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiNetworkPacket2_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkPacket2_FilterSocket(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkPacket2 *arg1 = (iNetworkPacket2 *) 0 ;
    iNetworkSocket2 *arg2 = (iNetworkSocket2 *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iNetworkPacket2_FilterSocket",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkPacket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->FilterSocket(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iNetworkPacket2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkPacket2 *arg1 = (iNetworkPacket2 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iNetworkPacket2",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkPacket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iNetworkPacket2_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iNetworkPacket2, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iNetworkManager_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iNetworkManager_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iNetworkManager_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iNetworkManager_VERSION);
    return pyobj;
}


static PyObject *_wrap_iNetworkManager_RegisterConnection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkManager *arg1 = (iNetworkManager *) 0 ;
    iNetworkConnection *arg2 = (iNetworkConnection *) 0 ;
    iNetworkPacket *arg3 = (iNetworkPacket *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iNetworkManager_RegisterConnection",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iNetworkConnection,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iNetworkPacket,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RegisterConnection(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkManager_RegisterListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkManager *arg1 = (iNetworkManager *) 0 ;
    iNetworkListener *arg2 = (iNetworkListener *) 0 ;
    iNetworkPacket *arg3 = (iNetworkPacket *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iNetworkManager_RegisterListener",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iNetworkListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iNetworkPacket,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RegisterListener(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkManager_UnregisterEndPoint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkManager *arg1 = (iNetworkManager *) 0 ;
    iNetworkEndPoint *arg2 = (iNetworkEndPoint *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iNetworkManager_UnregisterEndPoint",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iNetworkEndPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->UnregisterEndPoint(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkManager_Send__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkManager *arg1 = (iNetworkManager *) 0 ;
    iNetworkConnection *arg2 = (iNetworkConnection *) 0 ;
    iNetworkPacket *arg3 = (iNetworkPacket *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iNetworkManager_Send",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iNetworkConnection,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iNetworkPacket,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Send(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkManager_SendToAll__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkManager *arg1 = (iNetworkManager *) 0 ;
    iNetworkPacket *arg2 = (iNetworkPacket *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iNetworkManager_SendToAll",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iNetworkPacket,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SendToAll(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkManager_RegisterConnectedSocket(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkManager *arg1 = (iNetworkManager *) 0 ;
    iNetworkSocket2 *arg2 = (iNetworkSocket2 *) 0 ;
    iNetworkPacket2 *arg3 = (iNetworkPacket2 *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iNetworkManager_RegisterConnectedSocket",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iNetworkPacket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RegisterConnectedSocket(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkManager_UnregisterConnectedSocket(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkManager *arg1 = (iNetworkManager *) 0 ;
    iNetworkSocket2 *arg2 = (iNetworkSocket2 *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iNetworkManager_UnregisterConnectedSocket",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->UnregisterConnectedSocket(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkManager_RegisterListeningSocket(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkManager *arg1 = (iNetworkManager *) 0 ;
    iNetworkSocket2 *arg2 = (iNetworkSocket2 *) 0 ;
    iNetworkPacket2 *arg3 = (iNetworkPacket2 *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iNetworkManager_RegisterListeningSocket",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iNetworkPacket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RegisterListeningSocket(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkManager_UnregisterListeningSocket(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkManager *arg1 = (iNetworkManager *) 0 ;
    iNetworkSocket2 *arg2 = (iNetworkSocket2 *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iNetworkManager_UnregisterListeningSocket",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->UnregisterListeningSocket(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkManager_Send__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkManager *arg1 = (iNetworkManager *) 0 ;
    iNetworkSocket2 *arg2 = (iNetworkSocket2 *) 0 ;
    iNetworkPacket2 *arg3 = (iNetworkPacket2 *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iNetworkManager_Send",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iNetworkPacket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Send(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkManager_Send(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iNetworkManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iNetworkConnection, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iNetworkPacket, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iNetworkManager_Send__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iNetworkManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iNetworkSocket2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iNetworkPacket2, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iNetworkManager_Send__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iNetworkManager_Send'");
    return NULL;
}


static PyObject *_wrap_iNetworkManager_SendToAll__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkManager *arg1 = (iNetworkManager *) 0 ;
    iNetworkPacket2 *arg2 = (iNetworkPacket2 *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iNetworkManager_SendToAll",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iNetworkPacket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SendToAll(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkManager_SendToAll(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iNetworkManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iNetworkPacket, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iNetworkManager_SendToAll__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iNetworkManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iNetworkPacket2, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iNetworkManager_SendToAll__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iNetworkManager_SendToAll'");
    return NULL;
}


static PyObject *_wrap_delete_iNetworkManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkManager *arg1 = (iNetworkManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iNetworkManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iNetworkManager(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iNetworkManager_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iNetworkManager, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csNetworkDriverCapabilities_ConnectionReliable_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csNetworkDriverCapabilities *arg1 = (csNetworkDriverCapabilities *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csNetworkDriverCapabilities_ConnectionReliable_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csNetworkDriverCapabilities,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->ConnectionReliable = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csNetworkDriverCapabilities_ConnectionReliable_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csNetworkDriverCapabilities *arg1 = (csNetworkDriverCapabilities *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csNetworkDriverCapabilities_ConnectionReliable_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csNetworkDriverCapabilities,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->ConnectionReliable);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csNetworkDriverCapabilities_ConnectionUnreliable_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csNetworkDriverCapabilities *arg1 = (csNetworkDriverCapabilities *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csNetworkDriverCapabilities_ConnectionUnreliable_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csNetworkDriverCapabilities,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->ConnectionUnreliable = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csNetworkDriverCapabilities_ConnectionUnreliable_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csNetworkDriverCapabilities *arg1 = (csNetworkDriverCapabilities *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csNetworkDriverCapabilities_ConnectionUnreliable_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csNetworkDriverCapabilities,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->ConnectionUnreliable);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csNetworkDriverCapabilities_BehaviorBlocking_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csNetworkDriverCapabilities *arg1 = (csNetworkDriverCapabilities *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csNetworkDriverCapabilities_BehaviorBlocking_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csNetworkDriverCapabilities,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->BehaviorBlocking = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csNetworkDriverCapabilities_BehaviorBlocking_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csNetworkDriverCapabilities *arg1 = (csNetworkDriverCapabilities *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csNetworkDriverCapabilities_BehaviorBlocking_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csNetworkDriverCapabilities,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->BehaviorBlocking);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csNetworkDriverCapabilities_BehaviorNonBlocking_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csNetworkDriverCapabilities *arg1 = (csNetworkDriverCapabilities *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csNetworkDriverCapabilities_BehaviorNonBlocking_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csNetworkDriverCapabilities,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->BehaviorNonBlocking = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csNetworkDriverCapabilities_BehaviorNonBlocking_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csNetworkDriverCapabilities *arg1 = (csNetworkDriverCapabilities *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csNetworkDriverCapabilities_BehaviorNonBlocking_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csNetworkDriverCapabilities,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->BehaviorNonBlocking);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csNetworkDriverCapabilities(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csNetworkDriverCapabilities *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csNetworkDriverCapabilities")) goto fail;
    result = (csNetworkDriverCapabilities *)new csNetworkDriverCapabilities();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csNetworkDriverCapabilities, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csNetworkDriverCapabilities(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csNetworkDriverCapabilities *arg1 = (csNetworkDriverCapabilities *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csNetworkDriverCapabilities",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csNetworkDriverCapabilities,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csNetworkDriverCapabilities_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csNetworkDriverCapabilities, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iNetworkEndPoint_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iNetworkEndPoint_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iNetworkEndPoint_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iNetworkEndPoint_VERSION);
    return pyobj;
}


static PyObject *_wrap_iNetworkEndPoint_Terminate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkEndPoint *arg1 = (iNetworkEndPoint *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iNetworkEndPoint_Terminate",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkEndPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Terminate();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkEndPoint_SetOption(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkEndPoint *arg1 = (iNetworkEndPoint *) 0 ;
    char *arg2 ;
    int arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:iNetworkEndPoint_SetOption",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkEndPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetOption((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkEndPoint_GetLastError(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkEndPoint *arg1 = (iNetworkEndPoint *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iNetworkEndPoint_GetLastError",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkEndPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iNetworkEndPoint const *)arg1)->GetLastError();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iNetworkEndPoint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkEndPoint *arg1 = (iNetworkEndPoint *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iNetworkEndPoint",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkEndPoint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iNetworkEndPoint(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iNetworkEndPoint_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iNetworkEndPoint, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iNetworkConnection_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iNetworkConnection_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iNetworkConnection_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iNetworkConnection_VERSION);
    return pyobj;
}


static PyObject *_wrap_iNetworkConnection_Send(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkConnection *arg1 = (iNetworkConnection *) 0 ;
    void *arg2 = (void *) 0 ;
    size_t arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iNetworkConnection_Send",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkConnection,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (size_t) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->Send((void const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkConnection_IsConnected(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkConnection *arg1 = (iNetworkConnection *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iNetworkConnection_IsConnected",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkConnection,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iNetworkConnection const *)arg1)->IsConnected();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkConnection_Receive(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkConnection *arg1 = (iNetworkConnection *) 0 ;
    void *arg2 = (void *) 0 ;
    size_t arg3 ;
    size_t result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iNetworkConnection_Receive",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkConnection,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (size_t) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (arg1)->Receive(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkConnection_IsDataWaiting(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkConnection *arg1 = (iNetworkConnection *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iNetworkConnection_IsDataWaiting",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkConnection,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iNetworkConnection const *)arg1)->IsDataWaiting();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iNetworkConnection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkConnection *arg1 = (iNetworkConnection *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iNetworkConnection",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkConnection,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iNetworkConnection(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iNetworkConnection_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iNetworkConnection, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iNetworkListener_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iNetworkListener_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iNetworkListener_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iNetworkListener_VERSION);
    return pyobj;
}


static PyObject *_wrap_iNetworkListener_Accept(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkListener *arg1 = (iNetworkListener *) 0 ;
    SwigValueWrapper< csPtr<iNetworkConnection > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iNetworkListener_Accept",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Accept();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iNetworkConnection> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iNetworkConnection *)ref), (void *)(iNetworkConnection *)ref, "iNetworkConnection" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iNetworkListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkListener *arg1 = (iNetworkListener *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iNetworkListener",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkListener,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iNetworkListener(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iNetworkListener_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iNetworkListener, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iNetworkDriver_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iNetworkDriver_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iNetworkDriver_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iNetworkDriver_VERSION);
    return pyobj;
}


static PyObject *_wrap_iNetworkDriver_NewConnection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkDriver *arg1 = (iNetworkDriver *) 0 ;
    char *arg2 ;
    bool arg3 = (bool) true ;
    bool arg4 = (bool) false ;
    SwigValueWrapper< csPtr<iNetworkConnection > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|OO:iNetworkDriver_NewConnection",&obj0,&arg2,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        arg4 = PyInt_AsLong(obj3) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (arg1)->NewConnection((char const *)arg2,arg3,arg4);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iNetworkConnection> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iNetworkConnection *)ref), (void *)(iNetworkConnection *)ref, "iNetworkConnection" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkDriver_NewListener(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkDriver *arg1 = (iNetworkDriver *) 0 ;
    char *arg2 ;
    bool arg3 = (bool) true ;
    bool arg4 = (bool) false ;
    bool arg5 = (bool) false ;
    SwigValueWrapper< csPtr<iNetworkListener > > result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|OOO:iNetworkDriver_NewListener",&obj0,&arg2,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        arg4 = PyInt_AsLong(obj3) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        arg5 = PyInt_AsLong(obj4) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (arg1)->NewListener((char const *)arg2,arg3,arg4,arg5);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iNetworkListener> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iNetworkListener *)ref), (void *)(iNetworkListener *)ref, "iNetworkListener" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkDriver_GetCapabilities(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkDriver *arg1 = (iNetworkDriver *) 0 ;
    csNetworkDriverCapabilities result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iNetworkDriver_GetCapabilities",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((iNetworkDriver const *)arg1)->GetCapabilities();
    
    {
        csNetworkDriverCapabilities * resultptr;
        resultptr = new csNetworkDriverCapabilities((csNetworkDriverCapabilities &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csNetworkDriverCapabilities, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkDriver_GetLastError(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkDriver *arg1 = (iNetworkDriver *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iNetworkDriver_GetLastError",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iNetworkDriver const *)arg1)->GetLastError();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iNetworkDriver(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkDriver *arg1 = (iNetworkDriver *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iNetworkDriver",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkDriver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iNetworkDriver(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iNetworkDriver_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iNetworkDriver, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_iNetworkSocket2_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable iNetworkSocket2_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_iNetworkSocket2_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)iNetworkSocket2_VERSION);
    return pyobj;
}


static PyObject *_wrap_iNetworkSocket2_IsConnected(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkSocket2 *arg1 = (iNetworkSocket2 *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iNetworkSocket2_IsConnected",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iNetworkSocket2 const *)arg1)->IsConnected();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkSocket2_LastError(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkSocket2 *arg1 = (iNetworkSocket2 *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iNetworkSocket2_LastError",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iNetworkSocket2 const *)arg1)->LastError();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkSocket2_SetSocketBlock(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkSocket2 *arg1 = (iNetworkSocket2 *) 0 ;
    bool arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iNetworkSocket2_SetSocketBlock",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    result = (int)(arg1)->SetSocketBlock(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkSocket2_SetSocketReuse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkSocket2 *arg1 = (iNetworkSocket2 *) 0 ;
    bool arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iNetworkSocket2_SetSocketReuse",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    result = (int)(arg1)->SetSocketReuse(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkSocket2_Connect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkSocket2 *arg1 = (iNetworkSocket2 *) 0 ;
    char *arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:iNetworkSocket2_Connect",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Connect((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkSocket2_Send(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkSocket2 *arg1 = (iNetworkSocket2 *) 0 ;
    char *arg2 ;
    size_t arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iNetworkSocket2_Send",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (size_t) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (int)(arg1)->Send((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkSocket2_Recv(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkSocket2 *arg1 = (iNetworkSocket2 *) 0 ;
    char *arg2 ;
    size_t arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iNetworkSocket2_Recv",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (size_t) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (int)(arg1)->Recv(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkSocket2_Close(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkSocket2 *arg1 = (iNetworkSocket2 *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iNetworkSocket2_Close",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Close();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkSocket2_Disconnect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkSocket2 *arg1 = (iNetworkSocket2 *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iNetworkSocket2_Disconnect",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Disconnect();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkSocket2_WaitForConnection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkSocket2 *arg1 = (iNetworkSocket2 *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:iNetworkSocket2_WaitForConnection",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->WaitForConnection(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkSocket2_Accept(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkSocket2 *arg1 = (iNetworkSocket2 *) 0 ;
    iNetworkSocket2 *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iNetworkSocket2_Accept",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iNetworkSocket2 *)(arg1)->Accept();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iNetworkSocket2, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkSocket2_ReadLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkSocket2 *arg1 = (iNetworkSocket2 *) 0 ;
    char *arg2 ;
    size_t arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iNetworkSocket2_ReadLine",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (size_t) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (int)(arg1)->ReadLine(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iNetworkSocket2_RemoteName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkSocket2 *arg1 = (iNetworkSocket2 *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iNetworkSocket2_RemoteName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iNetworkSocket2 const *)arg1)->RemoteName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iNetworkSocket2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iNetworkSocket2 *arg1 = (iNetworkSocket2 *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iNetworkSocket2",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iNetworkSocket2,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_iNetworkSocket2(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iNetworkSocket2_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iNetworkSocket2, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csObject__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBase *arg1 = (iBase *) 0 ;
    csObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"|O:new_csObject",&obj0)) goto fail;
    if (obj0) {
        if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (csObject *)new csObject(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csObject, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csObject__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = 0 ;
    csObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_csObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csObject *)new csObject(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csObject, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csObject(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 0) && (argc <= 1)) {
        int _v;
        if (argc <= 0) {
            return _wrap_new_csObject__SWIG_0(self,args);
        }
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iBase, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csObject__SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csObject, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_csObject__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csObject'");
    return NULL;
}


static PyObject *_wrap_delete_csObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_SetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:csObject_SetName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csObject_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((csObject const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_GetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    CS_ID result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csObject_GetID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CS_ID)((csObject const *)arg1)->GetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_SetObjectParent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    iObject *arg2 = (iObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csObject_SetObjectParent",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetObjectParent(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_GetObjectParent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csObject_GetObjectParent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)((csObject const *)arg1)->GetObjectParent();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_ObjAdd(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    iObject *arg2 = (iObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csObject_ObjAdd",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ObjAdd(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_ObjRemove(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    iObject *arg2 = (iObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csObject_ObjRemove",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ObjRemove(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_ObjRemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csObject_ObjRemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ObjRemoveAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_ObjAddChildren(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    iObject *arg2 = (iObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csObject_ObjAddChildren",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ObjAddChildren(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_GetChild__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    int arg2 ;
    int arg3 ;
    char *arg4 = (char *) 0 ;
    bool arg5 = (bool) false ;
    void *result;
    PyObject * obj0 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii|sO:csObject_GetChild",&obj0,&arg2,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj4) {
        arg5 = PyInt_AsLong(obj4) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (void *)((csObject const *)arg1)->GetChild(arg2,arg3,(char const *)arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_GetChild__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    char *arg2 ;
    iObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:csObject_GetChild",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iObject *)((csObject const *)arg1)->GetChild((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObject, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_GetChild(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csObject, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_csObject_GetChild__SWIG_1(self,args);
            }
        }
    }
    if ((argc >= 3) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csObject, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_csObject_GetChild__SWIG_0(self,args);
                    }
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_csObject_GetChild__SWIG_0(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_csObject_GetChild__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csObject_GetChild'");
    return NULL;
}


static PyObject *_wrap_csObject_GetIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    SwigValueWrapper< csPtr<iObjectIterator > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csObject_GetIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetIterator();
    
    {
        csPtr<iObjectIterator > * resultptr;
        resultptr = new csPtr<iObjectIterator >((csPtr<iObjectIterator > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiObjectIterator_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_scfRefCount_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csObject_scfRefCount_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->scfRefCount = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_scfRefCount_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csObject_scfRefCount_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->scfRefCount);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_scfParent_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    iBase *arg2 = (iBase *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csObject_scfParent_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->scfParent = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_scfParent_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csObject_scfParent_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBase *) ((arg1)->scfParent);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_IncRef(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csObject_IncRef",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->IncRef();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_DecRef(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csObject_DecRef",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DecRef();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_GetRefCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csObject_GetRefCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetRefCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_QueryInterface(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    scfInterfaceID arg2 ;
    int arg3 ;
    void *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:csObject_QueryInterface",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (scfInterfaceID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (void *)(arg1)->QueryInterface(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csObject_ObjReleaseOld(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = (csObject *) 0 ;
    iObject *arg2 = (iObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csObject_ObjReleaseOld",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ObjReleaseOld(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csObject_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csObject, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_csView(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 = (iEngine *) 0 ;
    iGraphics3D *arg2 = (iGraphics3D *) 0 ;
    csView *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_csView",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csView *)new csView(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csView, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csView(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csView",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_GetEngine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    iEngine *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csView_GetEngine",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iEngine *)(arg1)->GetEngine();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iEngine, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_SetEngine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    iEngine *arg2 = (iEngine *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csView_SetEngine",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetEngine(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_GetCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    iCamera *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csView_GetCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCamera *)(arg1)->GetCamera();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_SetCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    iCamera *arg2 = (iCamera *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csView_SetCamera",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCamera(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_GetContext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    iGraphics3D *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csView_GetContext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iGraphics3D *)(arg1)->GetContext();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iGraphics3D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_SetContext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    iGraphics3D *arg2 = (iGraphics3D *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csView_SetContext",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iGraphics3D,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetContext(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_SetRectangle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:csView_SetRectangle",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetRectangle(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_ClearView(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csView_ClearView",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearView();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_AddViewVertex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:csView_AddViewVertex",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddViewVertex(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_RestrictClipperToScreen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csView_RestrictClipperToScreen",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RestrictClipperToScreen();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_UpdateClipper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csView_UpdateClipper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UpdateClipper();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_GetClipper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    iClipper2D *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csView_GetClipper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iClipper2D *)(arg1)->GetClipper();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iClipper2D, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_Draw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csView_Draw",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Draw();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_scfRefCount_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csView_scfRefCount_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->scfRefCount = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_scfRefCount_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csView_scfRefCount_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->scfRefCount);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_scfParent_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    iBase *arg2 = (iBase *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csView_scfParent_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->scfParent = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_scfParent_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csView_scfParent_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBase *) ((arg1)->scfParent);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_IncRef(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csView_IncRef",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->IncRef();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_DecRef(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csView_DecRef",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DecRef();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_GetRefCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csView_GetRefCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetRefCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csView_QueryInterface(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csView *arg1 = (csView *) 0 ;
    scfInterfaceID arg2 ;
    int arg3 ;
    void *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:csView_QueryInterface",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csView,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (scfInterfaceID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (void *)(arg1)->QueryInterface(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csView_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csView, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_csColliderWrapper_VERSION_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable csColliderWrapper_VERSION is read-only.");
    return 1;
}


static PyObject *_wrap_csColliderWrapper_VERSION_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)csColliderWrapper_VERSION);
    return pyobj;
}


static PyObject *_wrap_csColliderWrapper_scfGetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    scfInterfaceID result;
    
    if(!PyArg_ParseTuple(args,(char *)":csColliderWrapper_scfGetID")) goto fail;
    result = (scfInterfaceID)csColliderWrapper_scfGetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csColliderWrapper__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = 0 ;
    iCollideSystem *arg2 = (iCollideSystem *) 0 ;
    iPolygonMesh *arg3 = (iPolygonMesh *) 0 ;
    csColliderWrapper *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_csColliderWrapper",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCollideSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csColliderWrapper *)new csColliderWrapper(*arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColliderWrapper, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csColliderWrapper__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    iCollideSystem *arg2 = (iCollideSystem *) 0 ;
    iPolygonMesh *arg3 = (iPolygonMesh *) 0 ;
    csColliderWrapper *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_csColliderWrapper",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCollideSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iPolygonMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csColliderWrapper *)new csColliderWrapper(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColliderWrapper, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csColliderWrapper__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    iCollideSystem *arg2 = (iCollideSystem *) 0 ;
    iCollider *arg3 = (iCollider *) 0 ;
    csColliderWrapper *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_csColliderWrapper",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCollideSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iCollider,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csColliderWrapper *)new csColliderWrapper(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColliderWrapper, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csColliderWrapper(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csObject, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iCollideSystem, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iPolygonMesh, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_new_csColliderWrapper__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iObject, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iCollideSystem, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iPolygonMesh, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_new_csColliderWrapper__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iObject, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iCollideSystem, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_iCollider, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_new_csColliderWrapper__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_csColliderWrapper'");
    return NULL;
}


static PyObject *_wrap_delete_csColliderWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColliderWrapper *arg1 = (csColliderWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csColliderWrapper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColliderWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColliderWrapper_GetCollider(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColliderWrapper *arg1 = (csColliderWrapper *) 0 ;
    iCollider *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csColliderWrapper_GetCollider",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColliderWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCollider *)(arg1)->GetCollider();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCollider, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColliderWrapper_GetCollideSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColliderWrapper *arg1 = (csColliderWrapper *) 0 ;
    iCollideSystem *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csColliderWrapper_GetCollideSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColliderWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCollideSystem *)(arg1)->GetCollideSystem();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCollideSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColliderWrapper_Collide__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColliderWrapper *arg1 = (csColliderWrapper *) 0 ;
    csColliderWrapper *arg2 = 0 ;
    csReversibleTransform *arg3 = (csReversibleTransform *) 0 ;
    csReversibleTransform *arg4 = (csReversibleTransform *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:csColliderWrapper_Collide",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColliderWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csColliderWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (bool)(arg1)->Collide(*arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColliderWrapper_Collide__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColliderWrapper *arg1 = (csColliderWrapper *) 0 ;
    csObject *arg2 = 0 ;
    csReversibleTransform *arg3 = (csReversibleTransform *) 0 ;
    csReversibleTransform *arg4 = (csReversibleTransform *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:csColliderWrapper_Collide",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColliderWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (bool)(arg1)->Collide(*arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColliderWrapper_Collide__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColliderWrapper *arg1 = (csColliderWrapper *) 0 ;
    iObject *arg2 = (iObject *) 0 ;
    csReversibleTransform *arg3 = (csReversibleTransform *) 0 ;
    csReversibleTransform *arg4 = (csReversibleTransform *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:csColliderWrapper_Collide",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColliderWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csReversibleTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (bool)(arg1)->Collide(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColliderWrapper_Collide(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csColliderWrapper, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csColliderWrapper, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_csColliderWrapper_Collide__SWIG_0(self,args);
                }
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_csColliderWrapper_Collide__SWIG_0(self,args);
                    }
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_csColliderWrapper_Collide__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csColliderWrapper, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csObject, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_csColliderWrapper_Collide__SWIG_1(self,args);
                }
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_csColliderWrapper_Collide__SWIG_1(self,args);
                    }
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_csColliderWrapper_Collide__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csColliderWrapper, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iObject, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_csColliderWrapper_Collide__SWIG_2(self,args);
                }
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_csColliderWrapper_Collide__SWIG_2(self,args);
                    }
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csReversibleTransform, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_csColliderWrapper_Collide__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csColliderWrapper_Collide'");
    return NULL;
}


static PyObject *_wrap_csColliderWrapper_GetColliderWrapper__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csObject *arg1 = 0 ;
    csColliderWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csColliderWrapper_GetColliderWrapper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (csColliderWrapper *)csColliderWrapper::GetColliderWrapper(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColliderWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColliderWrapper_GetColliderWrapper__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    csColliderWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csColliderWrapper_GetColliderWrapper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csColliderWrapper *)csColliderWrapper::GetColliderWrapper(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColliderWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColliderWrapper_GetColliderWrapper(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_csObject, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_csColliderWrapper_GetColliderWrapper__SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iObject, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_csColliderWrapper_GetColliderWrapper__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'csColliderWrapper_GetColliderWrapper'");
    return NULL;
}


static PyObject *_wrap_csColliderWrapper_IncRef(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColliderWrapper *arg1 = (csColliderWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csColliderWrapper_IncRef",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColliderWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->IncRef();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColliderWrapper_DecRef(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColliderWrapper *arg1 = (csColliderWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csColliderWrapper_DecRef",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColliderWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DecRef();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColliderWrapper_GetRefCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColliderWrapper *arg1 = (csColliderWrapper *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csColliderWrapper_GetRefCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColliderWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetRefCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColliderWrapper_QueryInterface(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColliderWrapper *arg1 = (csColliderWrapper *) 0 ;
    scfInterfaceID arg2 ;
    int arg3 ;
    void *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:csColliderWrapper_QueryInterface",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColliderWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (scfInterfaceID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (void *)(arg1)->QueryInterface(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csColliderWrapper_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csColliderWrapper, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csColliderHelper_InitializeCollisionWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCollideSystem *arg1 = (iCollideSystem *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csColliderHelper_InitializeCollisionWrapper",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCollideSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    csColliderHelper::InitializeCollisionWrapper(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_csColliderHelper_InitializeCollisionWrappers(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCollideSystem *arg1 = (iCollideSystem *) 0 ;
    iEngine *arg2 = (iEngine *) 0 ;
    iRegion *arg3 = (iRegion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:csColliderHelper_InitializeCollisionWrappers",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCollideSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iEngine,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    csColliderHelper::InitializeCollisionWrappers(arg1,arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_csColliderHelper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColliderHelper *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csColliderHelper")) goto fail;
    result = (csColliderHelper *)new csColliderHelper();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csColliderHelper, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_csColliderHelper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csColliderHelper *arg1 = (csColliderHelper *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csColliderHelper",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csColliderHelper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * csColliderHelper_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csColliderHelper, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CS_IS_KEYBOARD_EVENT(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CS_IS_KEYBOARD_EVENT",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)CS_IS_KEYBOARD_EVENT((iEvent const &)*arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CS_IS_MOUSE_EVENT(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CS_IS_MOUSE_EVENT",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)CS_IS_MOUSE_EVENT((iEvent const &)*arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CS_IS_JOYSTICK_EVENT(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CS_IS_JOYSTICK_EVENT",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)CS_IS_JOYSTICK_EVENT((iEvent const &)*arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CS_IS_INPUT_EVENT(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CS_IS_INPUT_EVENT",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)CS_IS_INPUT_EVENT((iEvent const &)*arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CS_IS_NETWORK_EVENT(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEvent *arg1 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CS_IS_NETWORK_EVENT",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)CS_IS_NETWORK_EVENT((iEvent const &)*arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CS_QUERY_REGISTRY_TAG(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    char *arg2 ;
    SwigValueWrapper< csPtr<iBase > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CS_QUERY_REGISTRY_TAG",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = CS_QUERY_REGISTRY_TAG(arg1,(char const *)arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iBase> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iBase *)ref), (void *)(iBase *)ref, "iBase" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CS_LOAD_PLUGIN_ALWAYS(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPluginManager *arg1 = (iPluginManager *) 0 ;
    char *arg2 ;
    SwigValueWrapper< csPtr<iBase > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CS_LOAD_PLUGIN_ALWAYS",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPluginManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = CS_LOAD_PLUGIN_ALWAYS(arg1,(char const *)arg2);
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iBase> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iBase *)ref), (void *)(iBase *)ref, "iBase" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CS_FX_SETALPHA(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    uint arg1 ;
    uint result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CS_FX_SETALPHA",&obj0)) goto fail;
    arg1 = (uint) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    result = (uint)CS_FX_SETALPHA(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CS_FX_SETALPHA_INT(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    uint arg1 ;
    uint result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CS_FX_SETALPHA_INT",&obj0)) goto fail;
    arg1 = (uint) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    result = (uint)CS_FX_SETALPHA_INT(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap__csPyEventHandler_scfRefCount_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    _csPyEventHandler *arg1 = (_csPyEventHandler *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:_csPyEventHandler_scfRefCount_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p__csPyEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->scfRefCount = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap__csPyEventHandler_scfRefCount_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    _csPyEventHandler *arg1 = (_csPyEventHandler *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:_csPyEventHandler_scfRefCount_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p__csPyEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->scfRefCount);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap__csPyEventHandler_scfParent_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    _csPyEventHandler *arg1 = (_csPyEventHandler *) 0 ;
    iBase *arg2 = (iBase *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:_csPyEventHandler_scfParent_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p__csPyEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->scfParent = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap__csPyEventHandler_scfParent_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    _csPyEventHandler *arg1 = (_csPyEventHandler *) 0 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:_csPyEventHandler_scfParent_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p__csPyEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBase *) ((arg1)->scfParent);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap__csPyEventHandler_IncRef(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    _csPyEventHandler *arg1 = (_csPyEventHandler *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:_csPyEventHandler_IncRef",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p__csPyEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->IncRef();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap__csPyEventHandler_DecRef(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    _csPyEventHandler *arg1 = (_csPyEventHandler *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:_csPyEventHandler_DecRef",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p__csPyEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DecRef();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap__csPyEventHandler_GetRefCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    _csPyEventHandler *arg1 = (_csPyEventHandler *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:_csPyEventHandler_GetRefCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p__csPyEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetRefCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap__csPyEventHandler_QueryInterface(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    _csPyEventHandler *arg1 = (_csPyEventHandler *) 0 ;
    scfInterfaceID arg2 ;
    int arg3 ;
    void *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:_csPyEventHandler_QueryInterface",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p__csPyEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (scfInterfaceID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (void *)(arg1)->QueryInterface(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new__csPyEventHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *arg1 = (PyObject *) 0 ;
    _csPyEventHandler *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new__csPyEventHandler",&obj0)) goto fail;
    arg1 = obj0;
    result = (_csPyEventHandler *)new _csPyEventHandler(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p__csPyEventHandler, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete__csPyEventHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    _csPyEventHandler *arg1 = (_csPyEventHandler *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete__csPyEventHandler",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p__csPyEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap__csPyEventHandler_HandleEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    _csPyEventHandler *arg1 = (_csPyEventHandler *) 0 ;
    iEvent *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:_csPyEventHandler_HandleEvent",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p__csPyEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->HandleEvent(*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * _csPyEventHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p__csPyEventHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap__CS_QUERY_REGISTRY(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    char *arg2 ;
    int arg3 ;
    SwigValueWrapper< csWrapPtr > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:_CS_QUERY_REGISTRY",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = _CS_QUERY_REGISTRY(arg1,(char const *)arg2,arg3);
    
    {
        resultobj = _csWrapPtr_to_Python(result);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap__CS_QUERY_REGISTRY_TAG_INTERFACE(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    char *arg2 ;
    char *arg3 ;
    int arg4 ;
    SwigValueWrapper< csWrapPtr > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ossi:_CS_QUERY_REGISTRY_TAG_INTERFACE",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = _CS_QUERY_REGISTRY_TAG_INTERFACE(arg1,(char const *)arg2,(char const *)arg3,arg4);
    
    {
        resultobj = _csWrapPtr_to_Python(result);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap__SCF_QUERY_INTERFACE(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBase *arg1 = (iBase *) 0 ;
    char *arg2 ;
    int arg3 ;
    SwigValueWrapper< csWrapPtr > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:_SCF_QUERY_INTERFACE",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = _SCF_QUERY_INTERFACE(arg1,(char const *)arg2,arg3);
    
    {
        resultobj = _csWrapPtr_to_Python(result);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap__SCF_QUERY_INTERFACE_SAFE(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBase *arg1 = (iBase *) 0 ;
    char *arg2 ;
    int arg3 ;
    SwigValueWrapper< csWrapPtr > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:_SCF_QUERY_INTERFACE_SAFE",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = _SCF_QUERY_INTERFACE_SAFE(arg1,(char const *)arg2,arg3);
    
    {
        resultobj = _csWrapPtr_to_Python(result);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap__CS_QUERY_PLUGIN_CLASS(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPluginManager *arg1 = (iPluginManager *) 0 ;
    char *arg2 ;
    char *arg3 ;
    int arg4 ;
    SwigValueWrapper< csWrapPtr > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ossi:_CS_QUERY_PLUGIN_CLASS",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPluginManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = _CS_QUERY_PLUGIN_CLASS(arg1,(char const *)arg2,(char const *)arg3,arg4);
    
    {
        resultobj = _csWrapPtr_to_Python(result);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap__CS_LOAD_PLUGIN(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPluginManager *arg1 = (iPluginManager *) 0 ;
    char *arg2 ;
    char *arg3 ;
    int arg4 ;
    SwigValueWrapper< csWrapPtr > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ossi:_CS_LOAD_PLUGIN",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPluginManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = _CS_LOAD_PLUGIN(arg1,(char const *)arg2,(char const *)arg3,arg4);
    
    {
        resultobj = _csWrapPtr_to_Python(result);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap__CS_GET_CHILD_OBJECT(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    char *arg2 ;
    int arg3 ;
    SwigValueWrapper< csWrapPtr > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:_CS_GET_CHILD_OBJECT",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = _CS_GET_CHILD_OBJECT(arg1,(char const *)arg2,arg3);
    
    {
        resultobj = _csWrapPtr_to_Python(result);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap__CS_GET_NAMED_CHILD_OBJECT(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    SwigValueWrapper< csWrapPtr > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osis:_CS_GET_NAMED_CHILD_OBJECT",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = _CS_GET_NAMED_CHILD_OBJECT(arg1,(char const *)arg2,arg3,(char const *)arg4);
    
    {
        resultobj = _csWrapPtr_to_Python(result);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap__CS_GET_FIRST_NAMED_CHILD_OBJECT(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObject *arg1 = (iObject *) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    SwigValueWrapper< csWrapPtr > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osis:_CS_GET_FIRST_NAMED_CHILD_OBJECT",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObject,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = _CS_GET_FIRST_NAMED_CHILD_OBJECT(arg1,(char const *)arg2,arg3,(char const *)arg4);
    
    {
        resultobj = _csWrapPtr_to_Python(result);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_CreatePropertyClass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    char *arg3 ;
    iCelPropertyClass *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iCelPlLayer_CreatePropertyClass",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelPropertyClass *)(arg1)->CreatePropertyClass(arg2,(char const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClass, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_FetchString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    csStringID arg2 ;
    char *result;
    csStringID *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_FetchString",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (char *)(arg1)->FetchString(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_GetBehaviourLayerCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPlLayer_GetBehaviourLayerCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iCelPlLayer const *)arg1)->GetBehaviourLayerCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_GetBehaviourLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    int arg2 ;
    iCelBlLayer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iCelPlLayer_GetBehaviourLayer",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBlLayer *)((iCelPlLayer const *)arg1)->GetBehaviourLayer(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBlLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_FindBehaviourLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    char *arg2 ;
    iCelBlLayer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelPlLayer_FindBehaviourLayer",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBlLayer *)((iCelPlLayer const *)arg1)->FindBehaviourLayer((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBlLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelPlLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelPlLayer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelPlLayer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelPlLayer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csQueryRegistry_iCelPlLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    iCelPlLayer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csQueryRegistry_iCelPlLayer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelPlLayer *)csQueryRegistry_iCelPlLayer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPlLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntity_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelEntity const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_SetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelEntity_SetName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_SetBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iCelBehaviour *arg2 = (iCelBehaviour *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelEntity_SetBehaviour",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelBehaviour,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetBehaviour(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_GetBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iCelBehaviour *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntity_GetBehaviour",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBehaviour *)(arg1)->GetBehaviour();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBehaviour, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_GetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    CS_ID result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntity_GetID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CS_ID)((iCelEntity const *)arg1)->GetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_GetPropertyClassList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iCelPropertyClassList *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntity_GetPropertyClassList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelPropertyClassList *)(arg1)->GetPropertyClassList();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClassList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_CreateBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iCelBlLayer *arg2 = (iCelBlLayer *) 0 ;
    char *arg3 ;
    iCelBehaviour *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iCelEntity_CreateBehaviour",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelBlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBehaviour *)iCelEntity_CreateBehaviour(arg1,arg2,(char const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBehaviour, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelEntity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelEntity_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelEntity, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celRegisterPCFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:celRegisterPCFactory",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)celRegisterPCFactory(arg1,(char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celCreateEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    char *arg2 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:celCreateEntity",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)celCreateEntity(arg1,(char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQueryInterface_iCelEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBase *arg1 = (iBase *) 0 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQueryInterface_iCelEntity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)scfQueryInterface_iCelEntity(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_GetCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntityList_GetCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iCelEntityList const *)arg1)->GetCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_Get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    int arg2 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iCelEntityList_Get",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)((iCelEntityList const *)arg1)->Get(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_Add(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelEntityList_Add",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Add(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_Remove__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelEntityList_Remove",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_Remove__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iCelEntityList_Remove",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_Remove(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelEntityList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iCelEntity, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iCelEntityList_Remove__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelEntityList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iCelEntityList_Remove__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iCelEntityList_Remove'");
    return NULL;
}


static PyObject *_wrap_iCelEntityList_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntityList_RemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_Find(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelEntityList_Find",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iCelEntityList const *)arg1)->Find(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_FindByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    char *arg2 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelEntityList_FindByName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)((iCelEntityList const *)arg1)->FindByName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelEntityList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelEntityList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelEntityList_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelEntityList, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celFindNearbyEntities(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 arg3 ;
    float arg4 ;
    iCelEntityList *result;
    csVector3 *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOf:celFindNearbyEntities",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    result = (iCelEntityList *)celFindNearbyEntities(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntityList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelBlLayer_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBlLayer *arg1 = (iCelBlLayer *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelBlLayer_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelBlLayer const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelBlLayer_CreateBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBlLayer *arg1 = (iCelBlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    char *arg3 ;
    iCelBehaviour *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iCelBlLayer_CreateBehaviour",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBehaviour *)(arg1)->CreateBehaviour(arg2,(char const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBehaviour, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelBlLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBlLayer *arg1 = (iCelBlLayer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelBlLayer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelBlLayer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelBlLayer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csQueryRegistry_iCelBlLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    iCelBlLayer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csQueryRegistry_iCelBlLayer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBlLayer *)csQueryRegistry_iCelBlLayer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBlLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelBehaviour_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBehaviour *arg1 = (iCelBehaviour *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelBehaviour_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelBehaviour const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelBehaviour_GetBehaviourLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBehaviour *arg1 = (iCelBehaviour *) 0 ;
    iCelBlLayer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelBehaviour_GetBehaviourLayer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBlLayer *)((iCelBehaviour const *)arg1)->GetBehaviourLayer();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBlLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelBehaviour_SendMessage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBehaviour *arg1 = (iCelBehaviour *) 0 ;
    char *arg2 ;
    iBase *arg3 = (iBase *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iCelBehaviour_SendMessage",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SendMessage((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelBehaviour_GetPythonObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBehaviour *arg1 = (iCelBehaviour *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelBehaviour_GetPythonObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PyObject *)iCelBehaviour_GetPythonObject(arg1);
    
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBehaviour *arg1 = (iCelBehaviour *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelBehaviour",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelBehaviour_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelBehaviour, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelPropertyClass_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClass_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelPropertyClass const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClass_GetEntity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)(arg1)->GetEntity();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_SetEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetEntity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyOrActionType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    int result;
    csStringID *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyOrActionType",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (int)(arg1)->GetPropertyOrActionType(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_IsPropertyReadOnly(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    bool result;
    csStringID *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_IsPropertyReadOnly",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (bool)(arg1)->IsPropertyReadOnly(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyLong(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    long result;
    csStringID *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyLong",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (long)(arg1)->GetPropertyLong(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    float result;
    csStringID *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyFloat",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (float)(arg1)->GetPropertyFloat(arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyBool(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    bool result;
    csStringID *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyBool",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (bool)(arg1)->GetPropertyBool(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    char *result;
    csStringID *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyString",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (char *)(arg1)->GetPropertyString(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    csVector3 *arg3 = 0 ;
    bool result;
    csStringID *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelPropertyClass_GetPropertyVector",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->GetPropertyVector(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyAndActionCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClass_GetPropertyAndActionCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iCelPropertyClass const *)arg1)->GetPropertyAndActionCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyOrActionID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    int arg2 ;
    csStringID result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iCelPropertyClass_GetPropertyOrActionID",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetPropertyOrActionID(arg2);
    
    {
        csStringID * resultptr;
        resultptr = new csStringID((csStringID &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csStringID, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyOrActionDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    char *result;
    csStringID *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyOrActionDescription",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (char *)(arg1)->GetPropertyOrActionDescription(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_PerformAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    char *arg3 ;
    bool result;
    csStringID *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iCelPropertyClass_PerformAction",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (bool)(arg1)->PerformAction(arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyLong(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    long arg3 ;
    bool result;
    csStringID *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOl:iCelPropertyClass_SetPropertyLong",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (bool)iCelPropertyClass_SetPropertyLong(arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    float arg3 ;
    bool result;
    csStringID *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf:iCelPropertyClass_SetPropertyFloat",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (bool)iCelPropertyClass_SetPropertyFloat(arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyBool(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    bool arg3 ;
    bool result;
    csStringID *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelPropertyClass_SetPropertyBool",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)iCelPropertyClass_SetPropertyBool(arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    char *arg3 ;
    bool result;
    csStringID *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iCelPropertyClass_SetPropertyString",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (bool)iCelPropertyClass_SetPropertyString(arg1,arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyVector3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    csVector3 *arg3 = 0 ;
    bool result;
    csStringID *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelPropertyClass_SetPropertyVector3",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)iCelPropertyClass_SetPropertyVector3(arg1,arg2,(csVector3 const &)*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelPropertyClass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelPropertyClass",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelPropertyClass_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelPropertyClass, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelPropertyClassList_GetCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClassList_GetCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_Get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    int arg2 ;
    iCelPropertyClass *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iCelPropertyClassList_Get",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelPropertyClass *)(arg1)->Get(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClass, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_Find(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    iCelPropertyClass *arg2 = (iCelPropertyClass *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClassList_Find",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Find(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_FindByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    char *arg2 ;
    iCelPropertyClass *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelPropertyClassList_FindByName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelPropertyClass *)(arg1)->FindByName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClass, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_FindByInterface(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    scfInterfaceID arg2 ;
    int arg3 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iCelPropertyClassList_FindByInterface",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (scfInterfaceID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iBase *)(arg1)->FindByInterface(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelPropertyClassList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelPropertyClassList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelPropertyClassList_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelPropertyClassList, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iPcRegion_SetWorldFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 ;
    char *arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcRegion_SetWorldFile",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetWorldFile((char const *)arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_GetWorldDir(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_GetWorldDir",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iPcRegion const *)arg1)->GetWorldDir();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_GetWorldFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_GetWorldFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iPcRegion const *)arg1)->GetWorldFile();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_SetRegionName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcRegion_SetRegionName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetRegionName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_GetRegionName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_GetRegionName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iPcRegion const *)arg1)->GetRegionName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_Load(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_Load",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Load();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_Unload(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_Unload",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Unload();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_FindSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 ;
    iSector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcRegion_FindSector",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSector *)(arg1)->FindSector((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_GetStartSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 = (char *) 0 ;
    iSector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|s:iPcRegion_GetStartSector",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSector *)(arg1)->GetStartSector((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_GetStartPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 = (char *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|s:iPcRegion_GetStartPosition",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetStartPosition((char const *)arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_PointCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    iPcCamera *arg2 = (iPcCamera *) 0 ;
    char *arg3 = (char *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|s:iPcRegion_PointCamera",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PointCamera(arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_LoadWorld(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcRegion_LoadWorld",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)iPcRegion_LoadWorld(arg1,(char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcRegion",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcRegion_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcRegion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    char *arg3 ;
    iPcRegion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:celCreateRegion",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcRegion *)celCreateRegion(arg1,arg2,(char const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcRegion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcRegion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcRegion",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcRegion *)scfQuery_iPcRegion(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcRegion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celQueryPC_iPcRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    iPcRegion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celQueryPC_iPcRegion",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcRegion *)celQueryPC_iPcRegion(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcRegion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_Activate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    bool arg2 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:iPcCommandInput_Activate",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->Activate(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_LoadConfig(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCommandInput_LoadConfig",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->LoadConfig((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_Bind(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    char *arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcCommandInput_Bind",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Bind((char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_GetBind(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    char *arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCommandInput_GetBind",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iPcCommandInput const *)arg1)->GetBind((char const *)arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_RemoveBind(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    char *arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcCommandInput_RemoveBind",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveBind((char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcCommandInput(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcCommandInput",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcCommandInput_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcCommandInput, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateCommandInput(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcCommandInput *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateCommandInput",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCommandInput *)celCreateCommandInput(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCommandInput, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetRotation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_SetRotation",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetRotation((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcLinearMovement_SetSpeed",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSpeed(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetCameraPitchSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcLinearMovement_SetCameraPitchSpeed",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCameraPitchSpeed(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_SetVelocity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetVelocity((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_GetVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_GetVelocity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetVelocity(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_InitCD__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iPcLinearMovement_InitCD",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->InitCD((csVector3 const &)*arg2,(csVector3 const &)*arg3,(csVector3 const &)*arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_InitCD__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcLinearMovement_InitCD",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->InitCD();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_InitCD(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcLinearMovement, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_iPcLinearMovement_InitCD__SWIG_1(self,args);
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcLinearMovement, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_iPcLinearMovement_InitCD__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcLinearMovement_InitCD'");
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_GetDRData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    SwigValueWrapper< csPtr<iDataBuffer > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcLinearMovement_GetDRData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetDRData();
    
    {
        /*@c:\proj\cs\cs\include/ivaria/pythpre.i,46,TYPEMAP_OUT_csRef_BODY@*/
        csRef<iDataBuffer> ref(result);
        resultobj = _csRef_to_Python(csRef<iBase>(
        (iDataBuffer *)ref), (void *)(iDataBuffer *)ref, "iDataBuffer" " *");
        /*@@*/
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetDRData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    iDataBuffer *arg2 = (iDataBuffer *) 0 ;
    bool arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcLinearMovement_SetDRData",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iDataBuffer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->SetDRData(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_NeedDRData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    uint8 *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_NeedDRData",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_uint8,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->NeedDRData(*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    float arg3 ;
    iSector *arg4 = (iSector *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOfO:iPcLinearMovement_SetPosition",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPosition((csVector3 const &)*arg2,arg3,(iSector const *)arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_GetLastPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    float *arg3 = 0 ;
    iSector **arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iPcLinearMovement_GetLastPosition",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetLastPosition(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_GetSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    iSector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcLinearMovement_GetSector",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSector *)(arg1)->GetSector();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetReady(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_SetReady",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetReady(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_IsReady(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcLinearMovement_IsReady",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcLinearMovement const *)arg1)->IsReady();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_IsOnGround(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcLinearMovement_IsOnGround",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcLinearMovement const *)arg1)->IsOnGround();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_ExtrapolatePosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcLinearMovement_ExtrapolatePosition",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ExtrapolatePosition(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcLinearMovement(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcLinearMovement",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcLinearMovement_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcLinearMovement, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateLinearMovement(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcLinearMovement *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateLinearMovement",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcLinearMovement *)celCreateLinearMovement(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcLinearMovement, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    iPcRegion *arg2 = (iPcRegion *) 0 ;
    bool arg3 = (bool) true ;
    char *arg4 = (char *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|Os:iPcCamera_SetRegion",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->SetRegion(arg2,arg3,(char const *)arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    int arg2 ;
    bool arg3 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi|O:iPcCamera_SetMode",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->SetMode((iPcCamera::CameraMode )arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iPcCamera const *)arg1)->GetMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetFollowPos(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcCamera_SetFollowPos",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetFollowPos((csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetFollowPos(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcCamera_GetFollowPos",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((iPcCamera const *)arg1)->GetFollowPos(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetPitch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcCamera_SetPitch",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPitch(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetPitch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetPitch",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetPitch();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetRoll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcCamera_SetRoll",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetRoll(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetRoll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetRoll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)(arg1)->GetRoll();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetRectangle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:iPcCamera_SetRectangle",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetRectangle(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    iCamera *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCamera *)((iPcCamera const *)arg1)->GetCamera();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetView(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    iView *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetView",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iView *)((iPcCamera const *)arg1)->GetView();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iView, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcCamera_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcCamera, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcCamera *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateCamera",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCamera *)celCreateCamera(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcCamera *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCamera *)scfQuery_iPcCamera(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    iPcCamera *arg2 = (iPcCamera *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetCamera",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCamera(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetMouseButtons(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPcMeshSelect_SetMouseButtons",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMouseButtons(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_GetMouseButtons(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_GetMouseButtons",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iPcMeshSelect const *)arg1)->GetMouseButtons();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetGlobalSelection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetGlobalSelection",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetGlobalSelection(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasGlobalSelection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasGlobalSelection",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasGlobalSelection();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetFollowMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetFollowMode",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetFollowMode(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasFollowMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasFollowMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasFollowMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetFollowAlwaysMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetFollowAlwaysMode",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetFollowAlwaysMode(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasFollowAlwaysMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasFollowAlwaysMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasFollowAlwaysMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetDragMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetDragMode",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetDragMode(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasDragMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasDragMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasDragMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetDragPlaneNormal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    csVector3 *arg2 = 0 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcMeshSelect_SetDragPlaneNormal",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetDragPlaneNormal((csVector3 const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_GetDragPlaneNormal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    csVector3 *arg2 = 0 ;
    bool *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcMeshSelect_GetDragPlaneNormal",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_bool,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((iPcMeshSelect const *)arg1)->GetDragPlaneNormal(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetSendmoveEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetSendmoveEvent",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetSendmoveEvent(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasSendmoveEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasSendmoveEvent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasSendmoveEvent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetSendupEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetSendupEvent",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetSendupEvent(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasSendupEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasSendupEvent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasSendupEvent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetSenddownEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetSenddownEvent",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetSenddownEvent(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasSenddownEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasSenddownEvent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasSenddownEvent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcMeshSelect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMeshSelect",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcMeshSelect_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMeshSelect, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateMeshSelect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcMeshSelect *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateMeshSelect",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMeshSelect *)celCreateMeshSelect(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMeshSelect, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_LoadMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    char *arg2 ;
    char *arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcMesh_LoadMesh",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMesh((char const *)arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_SetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMesh_SetMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMesh(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_CreateEmptyThing(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_CreateEmptyThing",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CreateEmptyThing();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_GetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    iMeshWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_GetMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshWrapper *)((iPcMesh const *)arg1)->GetMesh();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_MoveMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcMesh_MoveMesh",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveMesh(arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_SetAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    char *arg2 ;
    bool arg3 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iPcMesh_SetAction",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->SetAction((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_GetAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_GetAction",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetAction();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_Hide(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_Hide",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Hide();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_Show(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_Show",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Show();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_IsVisible(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_IsVisible",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMesh const *)arg1)->IsVisible();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcMesh_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMesh, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcMesh *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMesh *)celCreateMesh(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcMesh *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMesh *)scfQuery_iPcMesh(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcTimer_WakeUp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTimer *arg1 = (iPcTimer *) 0 ;
    csTicks arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcTimer_WakeUp",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->WakeUp(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcTimer_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTimer *arg1 = (iPcTimer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcTimer_Clear",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Clear();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcTimer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTimer *arg1 = (iPcTimer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcTimer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcTimer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcTimer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateTimer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcTimer *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateTimer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcTimer *)celCreateTimer(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcTimer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcTimer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcTimer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcTimer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcTimer *)scfQuery_iPcTimer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcTimer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcSolid_SetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSolid *arg1 = (iPcSolid *) 0 ;
    iPcMesh *arg2 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcSolid_SetMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSolid,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMesh(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcSolid_GetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSolid *arg1 = (iPcSolid *) 0 ;
    iPcMesh *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcSolid_GetMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSolid,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMesh *)((iPcSolid const *)arg1)->GetMesh();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcSolid_GetCollider(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSolid *arg1 = (iPcSolid *) 0 ;
    iCollider *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcSolid_GetCollider",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSolid,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCollider *)(arg1)->GetCollider();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCollider, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSolid *arg1 = (iPcSolid *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcSolid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSolid,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcSolid_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcSolid, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcSolid *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateSolid",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcSolid *)celCreateSolid(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSolid, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_CreateGravityColliderFromMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    iPcMesh *arg2 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_CreateGravityColliderFromMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CreateGravityCollider(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_CreateGravityCollider(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcGravity_CreateGravityCollider",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->CreateGravityCollider((csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_GetGravityCollider(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    iCollider *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_GetGravityCollider",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCollider *)(arg1)->GetGravityCollider();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCollider, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_SetMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    iPcMovable *arg2 = (iPcMovable *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_SetMovable",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMovable(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_GetMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    iPcMovable *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_GetMovable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMovable *)(arg1)->GetMovable();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMovable, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_SetSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    iPcSolid *arg2 = (iPcSolid *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_SetSolid",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcSolid,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSolid(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_GetSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    iPcSolid *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_GetSolid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcSolid *)(arg1)->GetSolid();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSolid, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_SetWeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcGravity_SetWeight",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetWeight(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_GetWeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_GetWeight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcGravity const *)arg1)->GetWeight();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_ClearForces(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_ClearForces",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearForces();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_ClearPermanentForces(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_ClearPermanentForces",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearPermanentForces();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_ResetSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_ResetSpeed",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ResetSpeed();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_ApplyForce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    csVector3 *arg2 = 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf:iPcGravity_ApplyForce",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->ApplyForce((csVector3 const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_ApplyPermanentForce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_ApplyPermanentForce",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->ApplyPermanentForce((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_IsResting(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_IsResting",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcGravity const *)arg1)->IsResting();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_SetActive(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_SetActive",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetActive(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_IsActive(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_IsActive",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcGravity const *)arg1)->IsActive();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcGravity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcGravity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcGravity_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcGravity, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateGravity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcGravity *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateGravity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcGravity *)celCreateGravity(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcGravity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_SetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    iPcMesh *arg2 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMovable_SetMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMesh(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_GetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    iPcMesh *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMovable_GetMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMesh *)(arg1)->GetMesh();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_SetPos(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 *arg3 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcMovable_SetPos",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->Move(arg2,(csVector3 const &)*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_Move(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    csVector3 *arg2 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMovable_Move",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->Move((csVector3 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_AddConstraint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    iPcMovableConstraint *arg2 = (iPcMovableConstraint *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMovable_AddConstraint",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMovableConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddConstraint(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_RemoveConstraint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    iPcMovableConstraint *arg2 = (iPcMovableConstraint *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMovable_RemoveConstraint",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMovableConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveConstraint(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_RemoveAllConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMovable_RemoveAllConstraints",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAllConstraints();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMovable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcMovable_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMovable, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcMovable *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateMovable",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMovable *)celCreateMovable(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMovable, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_AddEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcInventory_AddEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->AddEntity(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_RemoveEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcInventory_RemoveEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveEntity(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcInventory_RemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveAll();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_GetEntityCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcInventory_GetEntityCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iPcInventory const *)arg1)->GetEntityCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_GetEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    int arg2 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPcInventory_GetEntity",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)((iPcInventory const *)arg1)->GetEntity(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_SetStrictCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    bool arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iPcInventory_SetStrictCharacteristics",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->SetStrictCharacteristics((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_HasStrictCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_HasStrictCharacteristics",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcInventory const *)arg1)->HasStrictCharacteristics((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_SetConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    float arg3 ;
    float arg4 ;
    float arg5 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osfff:iPcInventory_SetConstraints",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetConstraints((char const *)arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_GetConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    float *arg3 = 0 ;
    float *arg4 = 0 ;
    float *arg5 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOOO:iPcInventory_GetConstraints",&obj0,&arg2,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((iPcInventory const *)arg1)->GetConstraints((char const *)arg2,*arg3,*arg4,*arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_RemoveConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_RemoveConstraints",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveConstraints((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_RemoveAllConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcInventory_RemoveAllConstraints",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAllConstraints();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_GetCurrentCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_GetCurrentCharacteristic",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcInventory const *)arg1)->GetCurrentCharacteristic((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_MarkDirty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_MarkDirty",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MarkDirty((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_TestConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_TestConstraints",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->TestConstraints((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_Dump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcInventory_Dump",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Dump();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcInventory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcInventory_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcInventory, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcInventory *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateInventory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcInventory *)celCreateInventory(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcInventory, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcInventory *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcInventory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcInventory *)scfQuery_iPcInventory(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcInventory, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_SetCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    float arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osf:iPcCharacteristics_SetCharacteristic",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetCharacteristic((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_SetInheritedCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    float arg3 ;
    float arg4 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osff:iPcCharacteristics_SetInheritedCharacteristic",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetInheritedCharacteristic((char const *)arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_GetCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_GetCharacteristic",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcCharacteristics const *)arg1)->GetCharacteristic((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_GetLocalCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_GetLocalCharacteristic",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcCharacteristics const *)arg1)->GetLocalCharacteristic((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_GetInheritedCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_GetInheritedCharacteristic",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcCharacteristics const *)arg1)->GetInheritedCharacteristic((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_ClearCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_ClearCharacteristic",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->ClearCharacteristic((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_HasCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_HasCharacteristic",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcCharacteristics const *)arg1)->HasCharacteristic((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_ClearAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCharacteristics_ClearAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->ClearAll();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_AddToInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    iPcInventory *arg2 = (iPcInventory *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcCharacteristics_AddToInventory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddToInventory(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_RemoveFromInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    iPcInventory *arg2 = (iPcInventory *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcCharacteristics_RemoveFromInventory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveFromInventory(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_MarkDirty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_MarkDirty",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MarkDirty((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_TestConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_TestConstraints",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->TestConstraints((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_Dump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCharacteristics_Dump",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Dump();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcCharacteristics",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcCharacteristics_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcCharacteristics, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcCharacteristics *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateCharacteristics",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCharacteristics *)celCreateCharacteristics(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCharacteristics, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"csWrapPtr_Ref_set", _wrap_csWrapPtr_Ref_set, METH_VARARGS },
	 { (char *)"csWrapPtr_Ref_get", _wrap_csWrapPtr_Ref_get, METH_VARARGS },
	 { (char *)"csWrapPtr_VoidPtr_set", _wrap_csWrapPtr_VoidPtr_set, METH_VARARGS },
	 { (char *)"csWrapPtr_VoidPtr_get", _wrap_csWrapPtr_VoidPtr_get, METH_VARARGS },
	 { (char *)"csWrapPtr_Type_get", _wrap_csWrapPtr_Type_get, METH_VARARGS },
	 { (char *)"new_csWrapPtr", _wrap_new_csWrapPtr, METH_VARARGS },
	 { (char *)"delete_csWrapPtr", _wrap_delete_csWrapPtr, METH_VARARGS },
	 { (char *)"csWrapPtr_swigregister", csWrapPtr_swigregister, METH_VARARGS },
	 { (char *)"iBase_IncRef", _wrap_iBase_IncRef, METH_VARARGS },
	 { (char *)"iBase_DecRef", _wrap_iBase_DecRef, METH_VARARGS },
	 { (char *)"iBase_GetRefCount", _wrap_iBase_GetRefCount, METH_VARARGS },
	 { (char *)"iBase_QueryInterface", _wrap_iBase_QueryInterface, METH_VARARGS },
	 { (char *)"iBase_QueryInterfaceSafe", _wrap_iBase_QueryInterfaceSafe, METH_VARARGS },
	 { (char *)"delete_iBase", _wrap_delete_iBase, METH_VARARGS },
	 { (char *)"iBase__DynamicCast", _wrap_iBase__DynamicCast, METH_VARARGS },
	 { (char *)"iBase_swigregister", iBase_swigregister, METH_VARARGS },
	 { (char *)"iFactory_CreateInstance", _wrap_iFactory_CreateInstance, METH_VARARGS },
	 { (char *)"iFactory_TryUnload", _wrap_iFactory_TryUnload, METH_VARARGS },
	 { (char *)"iFactory_QueryDescription", _wrap_iFactory_QueryDescription, METH_VARARGS },
	 { (char *)"iFactory_QueryDependencies", _wrap_iFactory_QueryDependencies, METH_VARARGS },
	 { (char *)"iFactory_QueryClassID", _wrap_iFactory_QueryClassID, METH_VARARGS },
	 { (char *)"delete_iFactory", _wrap_delete_iFactory, METH_VARARGS },
	 { (char *)"iFactory_swigregister", iFactory_swigregister, METH_VARARGS },
	 { (char *)"scfInitialize", _wrap_scfInitialize, METH_VARARGS },
	 { (char *)"scfCompatibleVersion", _wrap_scfCompatibleVersion, METH_VARARGS },
	 { (char *)"iSCF_RegisterClasses", _wrap_iSCF_RegisterClasses, METH_VARARGS },
	 { (char *)"iSCF_ClassRegistered", _wrap_iSCF_ClassRegistered, METH_VARARGS },
	 { (char *)"iSCF_CreateInstance", _wrap_iSCF_CreateInstance, METH_VARARGS },
	 { (char *)"iSCF_GetClassDescription", _wrap_iSCF_GetClassDescription, METH_VARARGS },
	 { (char *)"iSCF_GetClassDependencies", _wrap_iSCF_GetClassDependencies, METH_VARARGS },
	 { (char *)"iSCF_UnloadUnusedModules", _wrap_iSCF_UnloadUnusedModules, METH_VARARGS },
	 { (char *)"iSCF_RegisterClass", _wrap_iSCF_RegisterClass, METH_VARARGS },
	 { (char *)"iSCF_RegisterFactoryFunc", _wrap_iSCF_RegisterFactoryFunc, METH_VARARGS },
	 { (char *)"iSCF_UnregisterClass", _wrap_iSCF_UnregisterClass, METH_VARARGS },
	 { (char *)"iSCF_GetInterfaceID", _wrap_iSCF_GetInterfaceID, METH_VARARGS },
	 { (char *)"iSCF_Finish", _wrap_iSCF_Finish, METH_VARARGS },
	 { (char *)"iSCF_QueryClassList", _wrap_iSCF_QueryClassList, METH_VARARGS },
	 { (char *)"iSCF_ScanPluginsPath", _wrap_iSCF_ScanPluginsPath, METH_VARARGS },
	 { (char *)"iSCF_RegisterPlugin", _wrap_iSCF_RegisterPlugin, METH_VARARGS },
	 { (char *)"delete_iSCF", _wrap_delete_iSCF, METH_VARARGS },
	 { (char *)"iSCF_swigregister", iSCF_swigregister, METH_VARARGS },
	 { (char *)"iDebugHelper_GetSupportedTests", _wrap_iDebugHelper_GetSupportedTests, METH_VARARGS },
	 { (char *)"iDebugHelper_UnitTest", _wrap_iDebugHelper_UnitTest, METH_VARARGS },
	 { (char *)"iDebugHelper_StateTest", _wrap_iDebugHelper_StateTest, METH_VARARGS },
	 { (char *)"iDebugHelper_Benchmark", _wrap_iDebugHelper_Benchmark, METH_VARARGS },
	 { (char *)"iDebugHelper_Dump", _wrap_iDebugHelper_Dump, METH_VARARGS },
	 { (char *)"iDebugHelper_DebugCommand", _wrap_iDebugHelper_DebugCommand, METH_VARARGS },
	 { (char *)"delete_iDebugHelper", _wrap_delete_iDebugHelper, METH_VARARGS },
	 { (char *)"iDebugHelper_swigregister", iDebugHelper_swigregister, METH_VARARGS },
	 { (char *)"csColor_red_set", _wrap_csColor_red_set, METH_VARARGS },
	 { (char *)"csColor_red_get", _wrap_csColor_red_get, METH_VARARGS },
	 { (char *)"csColor_green_set", _wrap_csColor_green_set, METH_VARARGS },
	 { (char *)"csColor_green_get", _wrap_csColor_green_get, METH_VARARGS },
	 { (char *)"csColor_blue_set", _wrap_csColor_blue_set, METH_VARARGS },
	 { (char *)"csColor_blue_get", _wrap_csColor_blue_get, METH_VARARGS },
	 { (char *)"new_csColor", _wrap_new_csColor, METH_VARARGS },
	 { (char *)"csColor_Set", _wrap_csColor_Set, METH_VARARGS },
	 { (char *)"csColor_Clamp", _wrap_csColor_Clamp, METH_VARARGS },
	 { (char *)"csColor_ClampDown", _wrap_csColor_ClampDown, METH_VARARGS },
	 { (char *)"csColor_assign", _wrap_csColor_assign, METH_VARARGS },
	 { (char *)"csColor___imul__", _wrap_csColor___imul__, METH_VARARGS },
	 { (char *)"csColor___iadd__", _wrap_csColor___iadd__, METH_VARARGS },
	 { (char *)"csColor___isub__", _wrap_csColor___isub__, METH_VARARGS },
	 { (char *)"csColor_Add", _wrap_csColor_Add, METH_VARARGS },
	 { (char *)"csColor_Subtract", _wrap_csColor_Subtract, METH_VARARGS },
	 { (char *)"csColor___add__", _wrap_csColor___add__, METH_VARARGS },
	 { (char *)"csColor___sub__", _wrap_csColor___sub__, METH_VARARGS },
	 { (char *)"csColor___mul__", _wrap_csColor___mul__, METH_VARARGS },
	 { (char *)"csColor___rmul__", _wrap_csColor___rmul__, METH_VARARGS },
	 { (char *)"delete_csColor", _wrap_delete_csColor, METH_VARARGS },
	 { (char *)"csColor_swigregister", csColor_swigregister, METH_VARARGS },
	 { (char *)"csCommandLineHelper_Help", _wrap_csCommandLineHelper_Help, METH_VARARGS },
	 { (char *)"csCommandLineHelper_CheckHelp", _wrap_csCommandLineHelper_CheckHelp, METH_VARARGS },
	 { (char *)"new_csCommandLineHelper", _wrap_new_csCommandLineHelper, METH_VARARGS },
	 { (char *)"delete_csCommandLineHelper", _wrap_delete_csCommandLineHelper, METH_VARARGS },
	 { (char *)"csCommandLineHelper_swigregister", csCommandLineHelper_swigregister, METH_VARARGS },
	 { (char *)"new_csStringSetIterator", _wrap_new_csStringSetIterator, METH_VARARGS },
	 { (char *)"csStringSetIterator_HasNext", _wrap_csStringSetIterator_HasNext, METH_VARARGS },
	 { (char *)"csStringSetIterator_Next", _wrap_csStringSetIterator_Next, METH_VARARGS },
	 { (char *)"delete_csStringSetIterator", _wrap_delete_csStringSetIterator, METH_VARARGS },
	 { (char *)"csStringSetIterator_swigregister", csStringSetIterator_swigregister, METH_VARARGS },
	 { (char *)"new_csStringSet", _wrap_new_csStringSet, METH_VARARGS },
	 { (char *)"delete_csStringSet", _wrap_delete_csStringSet, METH_VARARGS },
	 { (char *)"csStringSet_Request", _wrap_csStringSet_Request, METH_VARARGS },
	 { (char *)"csStringSet_Clear", _wrap_csStringSet_Clear, METH_VARARGS },
	 { (char *)"csStringSet_swigregister", csStringSet_swigregister, METH_VARARGS },
	 { (char *)"iString_SetCapacity", _wrap_iString_SetCapacity, METH_VARARGS },
	 { (char *)"iString_GetCapacity", _wrap_iString_GetCapacity, METH_VARARGS },
	 { (char *)"iString_SetGrowsBy", _wrap_iString_SetGrowsBy, METH_VARARGS },
	 { (char *)"iString_GetGrowsBy", _wrap_iString_GetGrowsBy, METH_VARARGS },
	 { (char *)"iString_SetGrowsExponentially", _wrap_iString_SetGrowsExponentially, METH_VARARGS },
	 { (char *)"iString_GetGrowsExponentially", _wrap_iString_GetGrowsExponentially, METH_VARARGS },
	 { (char *)"iString_Truncate", _wrap_iString_Truncate, METH_VARARGS },
	 { (char *)"iString_Reclaim", _wrap_iString_Reclaim, METH_VARARGS },
	 { (char *)"iString_Clear", _wrap_iString_Clear, METH_VARARGS },
	 { (char *)"iString_Clone", _wrap_iString_Clone, METH_VARARGS },
	 { (char *)"iString_GetData", _wrap_iString_GetData, METH_VARARGS },
	 { (char *)"iString_Length", _wrap_iString_Length, METH_VARARGS },
	 { (char *)"iString_IsEmpty", _wrap_iString_IsEmpty, METH_VARARGS },
	 { (char *)"iString_SetAt", _wrap_iString_SetAt, METH_VARARGS },
	 { (char *)"iString_GetAt", _wrap_iString_GetAt, METH_VARARGS },
	 { (char *)"iString_Insert", _wrap_iString_Insert, METH_VARARGS },
	 { (char *)"iString_Overwrite", _wrap_iString_Overwrite, METH_VARARGS },
	 { (char *)"iString_Append", _wrap_iString_Append, METH_VARARGS },
	 { (char *)"iString_SubString", _wrap_iString_SubString, METH_VARARGS },
	 { (char *)"iString_FindFirst", _wrap_iString_FindFirst, METH_VARARGS },
	 { (char *)"iString_FindLast", _wrap_iString_FindLast, METH_VARARGS },
	 { (char *)"iString_Format", _wrap_iString_Format, METH_VARARGS },
	 { (char *)"iString_FormatV", _wrap_iString_FormatV, METH_VARARGS },
	 { (char *)"iString_Replace", _wrap_iString_Replace, METH_VARARGS },
	 { (char *)"iString_Compare", _wrap_iString_Compare, METH_VARARGS },
	 { (char *)"iString_CompareNoCase", _wrap_iString_CompareNoCase, METH_VARARGS },
	 { (char *)"iString___iadd__", _wrap_iString___iadd__, METH_VARARGS },
	 { (char *)"iString___add__", _wrap_iString___add__, METH_VARARGS },
	 { (char *)"iString___eq__", _wrap_iString___eq__, METH_VARARGS },
	 { (char *)"delete_iString", _wrap_delete_iString, METH_VARARGS },
	 { (char *)"iString_swigregister", iString_swigregister, METH_VARARGS },
	 { (char *)"csString_SetCapacity", _wrap_csString_SetCapacity, METH_VARARGS },
	 { (char *)"csString_GetCapacity", _wrap_csString_GetCapacity, METH_VARARGS },
	 { (char *)"csString_SetGrowsBy", _wrap_csString_SetGrowsBy, METH_VARARGS },
	 { (char *)"csString_GetGrowsBy", _wrap_csString_GetGrowsBy, METH_VARARGS },
	 { (char *)"csString_SetGrowsExponentially", _wrap_csString_SetGrowsExponentially, METH_VARARGS },
	 { (char *)"csString_GetGrowsExponentially", _wrap_csString_GetGrowsExponentially, METH_VARARGS },
	 { (char *)"csString_Free", _wrap_csString_Free, METH_VARARGS },
	 { (char *)"csString_Truncate", _wrap_csString_Truncate, METH_VARARGS },
	 { (char *)"csString_Reclaim", _wrap_csString_Reclaim, METH_VARARGS },
	 { (char *)"csString_Clear", _wrap_csString_Clear, METH_VARARGS },
	 { (char *)"csString_GetData", _wrap_csString_GetData, METH_VARARGS },
	 { (char *)"csString_Length", _wrap_csString_Length, METH_VARARGS },
	 { (char *)"csString_IsEmpty", _wrap_csString_IsEmpty, METH_VARARGS },
	 { (char *)"csString_SetAt", _wrap_csString_SetAt, METH_VARARGS },
	 { (char *)"csString_GetAt", _wrap_csString_GetAt, METH_VARARGS },
	 { (char *)"csString_DeleteAt", _wrap_csString_DeleteAt, METH_VARARGS },
	 { (char *)"csString_Insert", _wrap_csString_Insert, METH_VARARGS },
	 { (char *)"csString_Overwrite", _wrap_csString_Overwrite, METH_VARARGS },
	 { (char *)"csString_Append", _wrap_csString_Append, METH_VARARGS },
	 { (char *)"csString_SubString", _wrap_csString_SubString, METH_VARARGS },
	 { (char *)"csString_FindFirst", _wrap_csString_FindFirst, METH_VARARGS },
	 { (char *)"csString_FindLast", _wrap_csString_FindLast, METH_VARARGS },
	 { (char *)"csString_Replace", _wrap_csString_Replace, METH_VARARGS },
	 { (char *)"csString_Compare", _wrap_csString_Compare, METH_VARARGS },
	 { (char *)"csString_CompareNoCase", _wrap_csString_CompareNoCase, METH_VARARGS },
	 { (char *)"new_csString", _wrap_new_csString, METH_VARARGS },
	 { (char *)"delete_csString", _wrap_delete_csString, METH_VARARGS },
	 { (char *)"csString_Clone", _wrap_csString_Clone, METH_VARARGS },
	 { (char *)"csString_LTrim", _wrap_csString_LTrim, METH_VARARGS },
	 { (char *)"csString_RTrim", _wrap_csString_RTrim, METH_VARARGS },
	 { (char *)"csString_Trim", _wrap_csString_Trim, METH_VARARGS },
	 { (char *)"csString_Collapse", _wrap_csString_Collapse, METH_VARARGS },
	 { (char *)"csString_Format", _wrap_csString_Format, METH_VARARGS },
	 { (char *)"csString_FormatV", _wrap_csString_FormatV, METH_VARARGS },
	 { (char *)"csString_AsPadLeft", _wrap_csString_AsPadLeft, METH_VARARGS },
	 { (char *)"csString_PadLeft", _wrap_csString_PadLeft, METH_VARARGS },
	 { (char *)"csString_AsPadRight", _wrap_csString_AsPadRight, METH_VARARGS },
	 { (char *)"csString_PadRight", _wrap_csString_PadRight, METH_VARARGS },
	 { (char *)"csString_AsPadCenter", _wrap_csString_AsPadCenter, METH_VARARGS },
	 { (char *)"csString_PadCenter", _wrap_csString_PadCenter, METH_VARARGS },
	 { (char *)"csString_assign", _wrap_csString_assign, METH_VARARGS },
	 { (char *)"csString___iadd__", _wrap_csString___iadd__, METH_VARARGS },
	 { (char *)"csString___add__", _wrap_csString___add__, METH_VARARGS },
	 { (char *)"csString___eq__", _wrap_csString___eq__, METH_VARARGS },
	 { (char *)"csString___ne__", _wrap_csString___ne__, METH_VARARGS },
	 { (char *)"csString_Detach", _wrap_csString_Detach, METH_VARARGS },
	 { (char *)"csString_strlwr", _wrap_csString_strlwr, METH_VARARGS },
	 { (char *)"csString_swigregister", csString_swigregister, METH_VARARGS },
	 { (char *)"csVector2_x_set", _wrap_csVector2_x_set, METH_VARARGS },
	 { (char *)"csVector2_x_get", _wrap_csVector2_x_get, METH_VARARGS },
	 { (char *)"csVector2_y_set", _wrap_csVector2_y_set, METH_VARARGS },
	 { (char *)"csVector2_y_get", _wrap_csVector2_y_get, METH_VARARGS },
	 { (char *)"new_csVector2", _wrap_new_csVector2, METH_VARARGS },
	 { (char *)"csVector2_Set", _wrap_csVector2_Set, METH_VARARGS },
	 { (char *)"csVector2_Norm", _wrap_csVector2_Norm, METH_VARARGS },
	 { (char *)"csVector2_SquaredNorm", _wrap_csVector2_SquaredNorm, METH_VARARGS },
	 { (char *)"csVector2_Rotate", _wrap_csVector2_Rotate, METH_VARARGS },
	 { (char *)"csVector2___iadd__", _wrap_csVector2___iadd__, METH_VARARGS },
	 { (char *)"csVector2___isub__", _wrap_csVector2___isub__, METH_VARARGS },
	 { (char *)"csVector2___imul__", _wrap_csVector2___imul__, METH_VARARGS },
	 { (char *)"csVector2___idiv__", _wrap_csVector2___idiv__, METH_VARARGS },
	 { (char *)"csVector2___pos__", _wrap_csVector2___pos__, METH_VARARGS },
	 { (char *)"csVector2___neg__", _wrap_csVector2___neg__, METH_VARARGS },
	 { (char *)"csVector2___add__", _wrap_csVector2___add__, METH_VARARGS },
	 { (char *)"csVector2___sub__", _wrap_csVector2___sub__, METH_VARARGS },
	 { (char *)"csVector2___mul__", _wrap_csVector2___mul__, METH_VARARGS },
	 { (char *)"csVector2___div__", _wrap_csVector2___div__, METH_VARARGS },
	 { (char *)"csVector2___eq__", _wrap_csVector2___eq__, METH_VARARGS },
	 { (char *)"csVector2___ne__", _wrap_csVector2___ne__, METH_VARARGS },
	 { (char *)"csVector2___lt__", _wrap_csVector2___lt__, METH_VARARGS },
	 { (char *)"csVector2___gt__", _wrap_csVector2___gt__, METH_VARARGS },
	 { (char *)"csVector2___rmul__", _wrap_csVector2___rmul__, METH_VARARGS },
	 { (char *)"csVector2___abs__", _wrap_csVector2___abs__, METH_VARARGS },
	 { (char *)"csVector2___getitem__", _wrap_csVector2___getitem__, METH_VARARGS },
	 { (char *)"csVector2___setitem__", _wrap_csVector2___setitem__, METH_VARARGS },
	 { (char *)"delete_csVector2", _wrap_delete_csVector2, METH_VARARGS },
	 { (char *)"csVector2_swigregister", csVector2_swigregister, METH_VARARGS },
	 { (char *)"csVector3_x_set", _wrap_csVector3_x_set, METH_VARARGS },
	 { (char *)"csVector3_x_get", _wrap_csVector3_x_get, METH_VARARGS },
	 { (char *)"csVector3_y_set", _wrap_csVector3_y_set, METH_VARARGS },
	 { (char *)"csVector3_y_get", _wrap_csVector3_y_get, METH_VARARGS },
	 { (char *)"csVector3_z_set", _wrap_csVector3_z_set, METH_VARARGS },
	 { (char *)"csVector3_z_get", _wrap_csVector3_z_get, METH_VARARGS },
	 { (char *)"new_csVector3", _wrap_new_csVector3, METH_VARARGS },
	 { (char *)"csVector3_Cross", _wrap_csVector3_Cross, METH_VARARGS },
	 { (char *)"csVector3___iadd__", _wrap_csVector3___iadd__, METH_VARARGS },
	 { (char *)"csVector3___isub__", _wrap_csVector3___isub__, METH_VARARGS },
	 { (char *)"csVector3___pos__", _wrap_csVector3___pos__, METH_VARARGS },
	 { (char *)"csVector3___neg__", _wrap_csVector3___neg__, METH_VARARGS },
	 { (char *)"csVector3_Set", _wrap_csVector3_Set, METH_VARARGS },
	 { (char *)"csVector3_Norm", _wrap_csVector3_Norm, METH_VARARGS },
	 { (char *)"csVector3_SquaredNorm", _wrap_csVector3_SquaredNorm, METH_VARARGS },
	 { (char *)"csVector3_Unit", _wrap_csVector3_Unit, METH_VARARGS },
	 { (char *)"csVector3_Normalize", _wrap_csVector3_Normalize, METH_VARARGS },
	 { (char *)"csVector3_IsZero", _wrap_csVector3_IsZero, METH_VARARGS },
	 { (char *)"csVector3___add__", _wrap_csVector3___add__, METH_VARARGS },
	 { (char *)"csVector3___sub__", _wrap_csVector3___sub__, METH_VARARGS },
	 { (char *)"csVector3___mul__", _wrap_csVector3___mul__, METH_VARARGS },
	 { (char *)"csVector3___eq__", _wrap_csVector3___eq__, METH_VARARGS },
	 { (char *)"csVector3___ne__", _wrap_csVector3___ne__, METH_VARARGS },
	 { (char *)"csVector3___lt__", _wrap_csVector3___lt__, METH_VARARGS },
	 { (char *)"csVector3___gt__", _wrap_csVector3___gt__, METH_VARARGS },
	 { (char *)"csVector3___imul__", _wrap_csVector3___imul__, METH_VARARGS },
	 { (char *)"csVector3___idiv__", _wrap_csVector3___idiv__, METH_VARARGS },
	 { (char *)"csVector3___div__", _wrap_csVector3___div__, METH_VARARGS },
	 { (char *)"csVector3_project", _wrap_csVector3_project, METH_VARARGS },
	 { (char *)"csVector3___rmul__", _wrap_csVector3___rmul__, METH_VARARGS },
	 { (char *)"csVector3___abs__", _wrap_csVector3___abs__, METH_VARARGS },
	 { (char *)"csVector3___getitem__", _wrap_csVector3___getitem__, METH_VARARGS },
	 { (char *)"csVector3___setitem__", _wrap_csVector3___setitem__, METH_VARARGS },
	 { (char *)"csVector3___nonzero__", _wrap_csVector3___nonzero__, METH_VARARGS },
	 { (char *)"delete_csVector3", _wrap_delete_csVector3, METH_VARARGS },
	 { (char *)"csVector3_swigregister", csVector3_swigregister, METH_VARARGS },
	 { (char *)"csMatrix2_m11_set", _wrap_csMatrix2_m11_set, METH_VARARGS },
	 { (char *)"csMatrix2_m11_get", _wrap_csMatrix2_m11_get, METH_VARARGS },
	 { (char *)"csMatrix2_m12_set", _wrap_csMatrix2_m12_set, METH_VARARGS },
	 { (char *)"csMatrix2_m12_get", _wrap_csMatrix2_m12_get, METH_VARARGS },
	 { (char *)"csMatrix2_m21_set", _wrap_csMatrix2_m21_set, METH_VARARGS },
	 { (char *)"csMatrix2_m21_get", _wrap_csMatrix2_m21_get, METH_VARARGS },
	 { (char *)"csMatrix2_m22_set", _wrap_csMatrix2_m22_set, METH_VARARGS },
	 { (char *)"csMatrix2_m22_get", _wrap_csMatrix2_m22_get, METH_VARARGS },
	 { (char *)"new_csMatrix2", _wrap_new_csMatrix2, METH_VARARGS },
	 { (char *)"csMatrix2_Row1", _wrap_csMatrix2_Row1, METH_VARARGS },
	 { (char *)"csMatrix2_Row2", _wrap_csMatrix2_Row2, METH_VARARGS },
	 { (char *)"csMatrix2_Col1", _wrap_csMatrix2_Col1, METH_VARARGS },
	 { (char *)"csMatrix2_Col2", _wrap_csMatrix2_Col2, METH_VARARGS },
	 { (char *)"csMatrix2_Set", _wrap_csMatrix2_Set, METH_VARARGS },
	 { (char *)"csMatrix2___iadd__", _wrap_csMatrix2___iadd__, METH_VARARGS },
	 { (char *)"csMatrix2___isub__", _wrap_csMatrix2___isub__, METH_VARARGS },
	 { (char *)"csMatrix2___imul__", _wrap_csMatrix2___imul__, METH_VARARGS },
	 { (char *)"csMatrix2___idiv__", _wrap_csMatrix2___idiv__, METH_VARARGS },
	 { (char *)"csMatrix2___pos__", _wrap_csMatrix2___pos__, METH_VARARGS },
	 { (char *)"csMatrix2___neg__", _wrap_csMatrix2___neg__, METH_VARARGS },
	 { (char *)"csMatrix2_Transpose", _wrap_csMatrix2_Transpose, METH_VARARGS },
	 { (char *)"csMatrix2_GetTranspose", _wrap_csMatrix2_GetTranspose, METH_VARARGS },
	 { (char *)"csMatrix2_GetInverse", _wrap_csMatrix2_GetInverse, METH_VARARGS },
	 { (char *)"csMatrix2_Invert", _wrap_csMatrix2_Invert, METH_VARARGS },
	 { (char *)"csMatrix2_Determinant", _wrap_csMatrix2_Determinant, METH_VARARGS },
	 { (char *)"csMatrix2_Identity", _wrap_csMatrix2_Identity, METH_VARARGS },
	 { (char *)"delete_csMatrix2", _wrap_delete_csMatrix2, METH_VARARGS },
	 { (char *)"csMatrix2_swigregister", csMatrix2_swigregister, METH_VARARGS },
	 { (char *)"csMatrix3_m11_set", _wrap_csMatrix3_m11_set, METH_VARARGS },
	 { (char *)"csMatrix3_m11_get", _wrap_csMatrix3_m11_get, METH_VARARGS },
	 { (char *)"csMatrix3_m12_set", _wrap_csMatrix3_m12_set, METH_VARARGS },
	 { (char *)"csMatrix3_m12_get", _wrap_csMatrix3_m12_get, METH_VARARGS },
	 { (char *)"csMatrix3_m13_set", _wrap_csMatrix3_m13_set, METH_VARARGS },
	 { (char *)"csMatrix3_m13_get", _wrap_csMatrix3_m13_get, METH_VARARGS },
	 { (char *)"csMatrix3_m21_set", _wrap_csMatrix3_m21_set, METH_VARARGS },
	 { (char *)"csMatrix3_m21_get", _wrap_csMatrix3_m21_get, METH_VARARGS },
	 { (char *)"csMatrix3_m22_set", _wrap_csMatrix3_m22_set, METH_VARARGS },
	 { (char *)"csMatrix3_m22_get", _wrap_csMatrix3_m22_get, METH_VARARGS },
	 { (char *)"csMatrix3_m23_set", _wrap_csMatrix3_m23_set, METH_VARARGS },
	 { (char *)"csMatrix3_m23_get", _wrap_csMatrix3_m23_get, METH_VARARGS },
	 { (char *)"csMatrix3_m31_set", _wrap_csMatrix3_m31_set, METH_VARARGS },
	 { (char *)"csMatrix3_m31_get", _wrap_csMatrix3_m31_get, METH_VARARGS },
	 { (char *)"csMatrix3_m32_set", _wrap_csMatrix3_m32_set, METH_VARARGS },
	 { (char *)"csMatrix3_m32_get", _wrap_csMatrix3_m32_get, METH_VARARGS },
	 { (char *)"csMatrix3_m33_set", _wrap_csMatrix3_m33_set, METH_VARARGS },
	 { (char *)"csMatrix3_m33_get", _wrap_csMatrix3_m33_get, METH_VARARGS },
	 { (char *)"new_csMatrix3", _wrap_new_csMatrix3, METH_VARARGS },
	 { (char *)"csMatrix3_Row1", _wrap_csMatrix3_Row1, METH_VARARGS },
	 { (char *)"csMatrix3_Row2", _wrap_csMatrix3_Row2, METH_VARARGS },
	 { (char *)"csMatrix3_Row3", _wrap_csMatrix3_Row3, METH_VARARGS },
	 { (char *)"csMatrix3_Col1", _wrap_csMatrix3_Col1, METH_VARARGS },
	 { (char *)"csMatrix3_Col2", _wrap_csMatrix3_Col2, METH_VARARGS },
	 { (char *)"csMatrix3_Col3", _wrap_csMatrix3_Col3, METH_VARARGS },
	 { (char *)"csMatrix3_Set", _wrap_csMatrix3_Set, METH_VARARGS },
	 { (char *)"csMatrix3___iadd__", _wrap_csMatrix3___iadd__, METH_VARARGS },
	 { (char *)"csMatrix3___isub__", _wrap_csMatrix3___isub__, METH_VARARGS },
	 { (char *)"csMatrix3___idiv__", _wrap_csMatrix3___idiv__, METH_VARARGS },
	 { (char *)"csMatrix3___pos__", _wrap_csMatrix3___pos__, METH_VARARGS },
	 { (char *)"csMatrix3___neg__", _wrap_csMatrix3___neg__, METH_VARARGS },
	 { (char *)"csMatrix3_Transpose", _wrap_csMatrix3_Transpose, METH_VARARGS },
	 { (char *)"csMatrix3_GetTranspose", _wrap_csMatrix3_GetTranspose, METH_VARARGS },
	 { (char *)"csMatrix3_GetInverse", _wrap_csMatrix3_GetInverse, METH_VARARGS },
	 { (char *)"csMatrix3_Invert", _wrap_csMatrix3_Invert, METH_VARARGS },
	 { (char *)"csMatrix3_Determinant", _wrap_csMatrix3_Determinant, METH_VARARGS },
	 { (char *)"csMatrix3_Identity", _wrap_csMatrix3_Identity, METH_VARARGS },
	 { (char *)"csMatrix3_IsIdentity", _wrap_csMatrix3_IsIdentity, METH_VARARGS },
	 { (char *)"csMatrix3___add__", _wrap_csMatrix3___add__, METH_VARARGS },
	 { (char *)"csMatrix3___sub__", _wrap_csMatrix3___sub__, METH_VARARGS },
	 { (char *)"csMatrix3___div__", _wrap_csMatrix3___div__, METH_VARARGS },
	 { (char *)"csMatrix3___eq__", _wrap_csMatrix3___eq__, METH_VARARGS },
	 { (char *)"csMatrix3___ne__", _wrap_csMatrix3___ne__, METH_VARARGS },
	 { (char *)"csMatrix3___lt__", _wrap_csMatrix3___lt__, METH_VARARGS },
	 { (char *)"csMatrix3___mul__", _wrap_csMatrix3___mul__, METH_VARARGS },
	 { (char *)"csMatrix3___imul__", _wrap_csMatrix3___imul__, METH_VARARGS },
	 { (char *)"csMatrix3___rmul__", _wrap_csMatrix3___rmul__, METH_VARARGS },
	 { (char *)"delete_csMatrix3", _wrap_delete_csMatrix3, METH_VARARGS },
	 { (char *)"csMatrix3_swigregister", csMatrix3_swigregister, METH_VARARGS },
	 { (char *)"new_csXRotMatrix3", _wrap_new_csXRotMatrix3, METH_VARARGS },
	 { (char *)"delete_csXRotMatrix3", _wrap_delete_csXRotMatrix3, METH_VARARGS },
	 { (char *)"csXRotMatrix3_swigregister", csXRotMatrix3_swigregister, METH_VARARGS },
	 { (char *)"new_csYRotMatrix3", _wrap_new_csYRotMatrix3, METH_VARARGS },
	 { (char *)"delete_csYRotMatrix3", _wrap_delete_csYRotMatrix3, METH_VARARGS },
	 { (char *)"csYRotMatrix3_swigregister", csYRotMatrix3_swigregister, METH_VARARGS },
	 { (char *)"new_csZRotMatrix3", _wrap_new_csZRotMatrix3, METH_VARARGS },
	 { (char *)"delete_csZRotMatrix3", _wrap_delete_csZRotMatrix3, METH_VARARGS },
	 { (char *)"csZRotMatrix3_swigregister", csZRotMatrix3_swigregister, METH_VARARGS },
	 { (char *)"new_csXScaleMatrix3", _wrap_new_csXScaleMatrix3, METH_VARARGS },
	 { (char *)"delete_csXScaleMatrix3", _wrap_delete_csXScaleMatrix3, METH_VARARGS },
	 { (char *)"csXScaleMatrix3_swigregister", csXScaleMatrix3_swigregister, METH_VARARGS },
	 { (char *)"new_csYScaleMatrix3", _wrap_new_csYScaleMatrix3, METH_VARARGS },
	 { (char *)"delete_csYScaleMatrix3", _wrap_delete_csYScaleMatrix3, METH_VARARGS },
	 { (char *)"csYScaleMatrix3_swigregister", csYScaleMatrix3_swigregister, METH_VARARGS },
	 { (char *)"new_csZScaleMatrix3", _wrap_new_csZScaleMatrix3, METH_VARARGS },
	 { (char *)"delete_csZScaleMatrix3", _wrap_delete_csZScaleMatrix3, METH_VARARGS },
	 { (char *)"csZScaleMatrix3_swigregister", csZScaleMatrix3_swigregister, METH_VARARGS },
	 { (char *)"new_csTransform", _wrap_new_csTransform, METH_VARARGS },
	 { (char *)"csTransform_Identity", _wrap_csTransform_Identity, METH_VARARGS },
	 { (char *)"csTransform_IsIdentity", _wrap_csTransform_IsIdentity, METH_VARARGS },
	 { (char *)"csTransform_GetO2T", _wrap_csTransform_GetO2T, METH_VARARGS },
	 { (char *)"csTransform_GetO2TTranslation", _wrap_csTransform_GetO2TTranslation, METH_VARARGS },
	 { (char *)"csTransform_GetOrigin", _wrap_csTransform_GetOrigin, METH_VARARGS },
	 { (char *)"csTransform_SetO2T", _wrap_csTransform_SetO2T, METH_VARARGS },
	 { (char *)"csTransform_SetO2TTranslation", _wrap_csTransform_SetO2TTranslation, METH_VARARGS },
	 { (char *)"csTransform_SetOrigin", _wrap_csTransform_SetOrigin, METH_VARARGS },
	 { (char *)"csTransform_Translate", _wrap_csTransform_Translate, METH_VARARGS },
	 { (char *)"csTransform_Other2ThisRelative", _wrap_csTransform_Other2ThisRelative, METH_VARARGS },
	 { (char *)"csTransform_Other2This", _wrap_csTransform_Other2This, METH_VARARGS },
	 { (char *)"csTransform_GetReflect", _wrap_csTransform_GetReflect, METH_VARARGS },
	 { (char *)"csTransform___mul__", _wrap_csTransform___mul__, METH_VARARGS },
	 { (char *)"csTransform___rmul__", _wrap_csTransform___rmul__, METH_VARARGS },
	 { (char *)"delete_csTransform", _wrap_delete_csTransform, METH_VARARGS },
	 { (char *)"csTransform_swigregister", csTransform_swigregister, METH_VARARGS },
	 { (char *)"new_csReversibleTransform", _wrap_new_csReversibleTransform, METH_VARARGS },
	 { (char *)"csReversibleTransform_GetT2O", _wrap_csReversibleTransform_GetT2O, METH_VARARGS },
	 { (char *)"csReversibleTransform_GetT2OTranslation", _wrap_csReversibleTransform_GetT2OTranslation, METH_VARARGS },
	 { (char *)"csReversibleTransform_GetInverse", _wrap_csReversibleTransform_GetInverse, METH_VARARGS },
	 { (char *)"csReversibleTransform_SetO2T", _wrap_csReversibleTransform_SetO2T, METH_VARARGS },
	 { (char *)"csReversibleTransform_SetT2O", _wrap_csReversibleTransform_SetT2O, METH_VARARGS },
	 { (char *)"csReversibleTransform_This2OtherRelative", _wrap_csReversibleTransform_This2OtherRelative, METH_VARARGS },
	 { (char *)"csReversibleTransform_This2Other", _wrap_csReversibleTransform_This2Other, METH_VARARGS },
	 { (char *)"csReversibleTransform_RotateOther", _wrap_csReversibleTransform_RotateOther, METH_VARARGS },
	 { (char *)"csReversibleTransform_RotateThis", _wrap_csReversibleTransform_RotateThis, METH_VARARGS },
	 { (char *)"csReversibleTransform_LookAt", _wrap_csReversibleTransform_LookAt, METH_VARARGS },
	 { (char *)"csReversibleTransform___imul__", _wrap_csReversibleTransform___imul__, METH_VARARGS },
	 { (char *)"csReversibleTransform___mul__", _wrap_csReversibleTransform___mul__, METH_VARARGS },
	 { (char *)"csReversibleTransform___idiv__", _wrap_csReversibleTransform___idiv__, METH_VARARGS },
	 { (char *)"csReversibleTransform___div__", _wrap_csReversibleTransform___div__, METH_VARARGS },
	 { (char *)"delete_csReversibleTransform", _wrap_delete_csReversibleTransform, METH_VARARGS },
	 { (char *)"csReversibleTransform_swigregister", csReversibleTransform_swigregister, METH_VARARGS },
	 { (char *)"new_csOrthoTransform", _wrap_new_csOrthoTransform, METH_VARARGS },
	 { (char *)"csOrthoTransform_SetO2T", _wrap_csOrthoTransform_SetO2T, METH_VARARGS },
	 { (char *)"csOrthoTransform_SetT2O", _wrap_csOrthoTransform_SetT2O, METH_VARARGS },
	 { (char *)"delete_csOrthoTransform", _wrap_delete_csOrthoTransform, METH_VARARGS },
	 { (char *)"csOrthoTransform_swigregister", csOrthoTransform_swigregister, METH_VARARGS },
	 { (char *)"new_csSphere", _wrap_new_csSphere, METH_VARARGS },
	 { (char *)"csSphere_GetCenter", _wrap_csSphere_GetCenter, METH_VARARGS },
	 { (char *)"csSphere_SetCenter", _wrap_csSphere_SetCenter, METH_VARARGS },
	 { (char *)"csSphere_GetRadius", _wrap_csSphere_GetRadius, METH_VARARGS },
	 { (char *)"csSphere_SetRadius", _wrap_csSphere_SetRadius, METH_VARARGS },
	 { (char *)"csSphere_Union", _wrap_csSphere_Union, METH_VARARGS },
	 { (char *)"csSphere___iadd__", _wrap_csSphere___iadd__, METH_VARARGS },
	 { (char *)"csSphere___imul__", _wrap_csSphere___imul__, METH_VARARGS },
	 { (char *)"csSphere___div__", _wrap_csSphere___div__, METH_VARARGS },
	 { (char *)"delete_csSphere", _wrap_delete_csSphere, METH_VARARGS },
	 { (char *)"csSphere_swigregister", csSphere_swigregister, METH_VARARGS },
	 { (char *)"csPlane2_norm_set", _wrap_csPlane2_norm_set, METH_VARARGS },
	 { (char *)"csPlane2_norm_get", _wrap_csPlane2_norm_get, METH_VARARGS },
	 { (char *)"csPlane2_CC_set", _wrap_csPlane2_CC_set, METH_VARARGS },
	 { (char *)"csPlane2_CC_get", _wrap_csPlane2_CC_get, METH_VARARGS },
	 { (char *)"new_csPlane2", _wrap_new_csPlane2, METH_VARARGS },
	 { (char *)"csPlane2_Normal", _wrap_csPlane2_Normal, METH_VARARGS },
	 { (char *)"csPlane2_GetNormal", _wrap_csPlane2_GetNormal, METH_VARARGS },
	 { (char *)"csPlane2_A", _wrap_csPlane2_A, METH_VARARGS },
	 { (char *)"csPlane2_B", _wrap_csPlane2_B, METH_VARARGS },
	 { (char *)"csPlane2_C", _wrap_csPlane2_C, METH_VARARGS },
	 { (char *)"csPlane2_Set", _wrap_csPlane2_Set, METH_VARARGS },
	 { (char *)"csPlane2_Classify", _wrap_csPlane2_Classify, METH_VARARGS },
	 { (char *)"csPlane2_Distance", _wrap_csPlane2_Distance, METH_VARARGS },
	 { (char *)"csPlane2_SquaredDistance", _wrap_csPlane2_SquaredDistance, METH_VARARGS },
	 { (char *)"csPlane2_Invert", _wrap_csPlane2_Invert, METH_VARARGS },
	 { (char *)"csPlane2_Normalize", _wrap_csPlane2_Normalize, METH_VARARGS },
	 { (char *)"delete_csPlane2", _wrap_delete_csPlane2, METH_VARARGS },
	 { (char *)"csPlane2_swigregister", csPlane2_swigregister, METH_VARARGS },
	 { (char *)"csPlane3_norm_set", _wrap_csPlane3_norm_set, METH_VARARGS },
	 { (char *)"csPlane3_norm_get", _wrap_csPlane3_norm_get, METH_VARARGS },
	 { (char *)"csPlane3_DD_set", _wrap_csPlane3_DD_set, METH_VARARGS },
	 { (char *)"csPlane3_DD_get", _wrap_csPlane3_DD_get, METH_VARARGS },
	 { (char *)"new_csPlane3", _wrap_new_csPlane3, METH_VARARGS },
	 { (char *)"csPlane3_Normal", _wrap_csPlane3_Normal, METH_VARARGS },
	 { (char *)"csPlane3_A", _wrap_csPlane3_A, METH_VARARGS },
	 { (char *)"csPlane3_B", _wrap_csPlane3_B, METH_VARARGS },
	 { (char *)"csPlane3_C", _wrap_csPlane3_C, METH_VARARGS },
	 { (char *)"csPlane3_D", _wrap_csPlane3_D, METH_VARARGS },
	 { (char *)"csPlane3_Set", _wrap_csPlane3_Set, METH_VARARGS },
	 { (char *)"csPlane3_Classify", _wrap_csPlane3_Classify, METH_VARARGS },
	 { (char *)"csPlane3_Distance", _wrap_csPlane3_Distance, METH_VARARGS },
	 { (char *)"csPlane3_Invert", _wrap_csPlane3_Invert, METH_VARARGS },
	 { (char *)"csPlane3_Normalize", _wrap_csPlane3_Normalize, METH_VARARGS },
	 { (char *)"csPlane3_ClipPolygon", _wrap_csPlane3_ClipPolygon, METH_VARARGS },
	 { (char *)"csPlane3___imul__", _wrap_csPlane3___imul__, METH_VARARGS },
	 { (char *)"csPlane3___idiv__", _wrap_csPlane3___idiv__, METH_VARARGS },
	 { (char *)"csPlane3___div__", _wrap_csPlane3___div__, METH_VARARGS },
	 { (char *)"delete_csPlane3", _wrap_delete_csPlane3, METH_VARARGS },
	 { (char *)"csPlane3_swigregister", csPlane3_swigregister, METH_VARARGS },
	 { (char *)"csMath2_WhichSide2D", _wrap_csMath2_WhichSide2D, METH_VARARGS },
	 { (char *)"csMath2_InPoly2D", _wrap_csMath2_InPoly2D, METH_VARARGS },
	 { (char *)"csMath2_Area2", _wrap_csMath2_Area2, METH_VARARGS },
	 { (char *)"csMath2_Right", _wrap_csMath2_Right, METH_VARARGS },
	 { (char *)"csMath2_Left", _wrap_csMath2_Left, METH_VARARGS },
	 { (char *)"csMath2_Visible", _wrap_csMath2_Visible, METH_VARARGS },
	 { (char *)"csMath2_PlanesEqual", _wrap_csMath2_PlanesEqual, METH_VARARGS },
	 { (char *)"csMath2_PlanesClose", _wrap_csMath2_PlanesClose, METH_VARARGS },
	 { (char *)"new_csMath2", _wrap_new_csMath2, METH_VARARGS },
	 { (char *)"delete_csMath2", _wrap_delete_csMath2, METH_VARARGS },
	 { (char *)"csMath2_swigregister", csMath2_swigregister, METH_VARARGS },
	 { (char *)"csIntersect2_IntersectPolygon", _wrap_csIntersect2_IntersectPolygon, METH_VARARGS },
	 { (char *)"csIntersect2_Segments", _wrap_csIntersect2_Segments, METH_VARARGS },
	 { (char *)"csIntersect2_SegmentLine", _wrap_csIntersect2_SegmentLine, METH_VARARGS },
	 { (char *)"csIntersect2_Lines", _wrap_csIntersect2_Lines, METH_VARARGS },
	 { (char *)"csIntersect2_Plane", _wrap_csIntersect2_Plane, METH_VARARGS },
	 { (char *)"csIntersect2_PlaneNoTest", _wrap_csIntersect2_PlaneNoTest, METH_VARARGS },
	 { (char *)"csIntersect2_Planes", _wrap_csIntersect2_Planes, METH_VARARGS },
	 { (char *)"new_csIntersect2", _wrap_new_csIntersect2, METH_VARARGS },
	 { (char *)"delete_csIntersect2", _wrap_delete_csIntersect2, METH_VARARGS },
	 { (char *)"csIntersect2_swigregister", csIntersect2_swigregister, METH_VARARGS },
	 { (char *)"new_csPoly2D", _wrap_new_csPoly2D, METH_VARARGS },
	 { (char *)"delete_csPoly2D", _wrap_delete_csPoly2D, METH_VARARGS },
	 { (char *)"csPoly2D_assign", _wrap_csPoly2D_assign, METH_VARARGS },
	 { (char *)"csPoly2D_MakeEmpty", _wrap_csPoly2D_MakeEmpty, METH_VARARGS },
	 { (char *)"csPoly2D_GetVertexCount", _wrap_csPoly2D_GetVertexCount, METH_VARARGS },
	 { (char *)"csPoly2D_GetVertices", _wrap_csPoly2D_GetVertices, METH_VARARGS },
	 { (char *)"csPoly2D_GetVertex", _wrap_csPoly2D_GetVertex, METH_VARARGS },
	 { (char *)"csPoly2D_GetFirst", _wrap_csPoly2D_GetFirst, METH_VARARGS },
	 { (char *)"csPoly2D_GetLast", _wrap_csPoly2D_GetLast, METH_VARARGS },
	 { (char *)"csPoly2D_In", _wrap_csPoly2D_In, METH_VARARGS },
	 { (char *)"csPoly2D_MakeRoom", _wrap_csPoly2D_MakeRoom, METH_VARARGS },
	 { (char *)"csPoly2D_SetVertexCount", _wrap_csPoly2D_SetVertexCount, METH_VARARGS },
	 { (char *)"csPoly2D_AddVertex", _wrap_csPoly2D_AddVertex, METH_VARARGS },
	 { (char *)"csPoly2D_SetVertices", _wrap_csPoly2D_SetVertices, METH_VARARGS },
	 { (char *)"csPoly2D_UpdateBoundingBox", _wrap_csPoly2D_UpdateBoundingBox, METH_VARARGS },
	 { (char *)"csPoly2D_GetBoundingBox", _wrap_csPoly2D_GetBoundingBox, METH_VARARGS },
	 { (char *)"csPoly2D_ClipAgainst", _wrap_csPoly2D_ClipAgainst, METH_VARARGS },
	 { (char *)"csPoly2D_Intersect", _wrap_csPoly2D_Intersect, METH_VARARGS },
	 { (char *)"csPoly2D_ClipPlane", _wrap_csPoly2D_ClipPlane, METH_VARARGS },
	 { (char *)"csPoly2D_ExtendConvex", _wrap_csPoly2D_ExtendConvex, METH_VARARGS },
	 { (char *)"csPoly2D_GetSignedArea", _wrap_csPoly2D_GetSignedArea, METH_VARARGS },
	 { (char *)"csPoly2D_Random", _wrap_csPoly2D_Random, METH_VARARGS },
	 { (char *)"csPoly2D___getitem__", _wrap_csPoly2D___getitem__, METH_VARARGS },
	 { (char *)"csPoly2D_swigregister", csPoly2D_swigregister, METH_VARARGS },
	 { (char *)"csPoly2DFactory_Create", _wrap_csPoly2DFactory_Create, METH_VARARGS },
	 { (char *)"new_csPoly2DFactory", _wrap_new_csPoly2DFactory, METH_VARARGS },
	 { (char *)"delete_csPoly2DFactory", _wrap_delete_csPoly2DFactory, METH_VARARGS },
	 { (char *)"csPoly2DFactory_swigregister", csPoly2DFactory_swigregister, METH_VARARGS },
	 { (char *)"fSqr", _wrap_fSqr, METH_VARARGS },
	 { (char *)"csMath3_WhichSide3D", _wrap_csMath3_WhichSide3D, METH_VARARGS },
	 { (char *)"csMath3_Visible", _wrap_csMath3_Visible, METH_VARARGS },
	 { (char *)"csMath3_FindIntersection", _wrap_csMath3_FindIntersection, METH_VARARGS },
	 { (char *)"csMath3_Between", _wrap_csMath3_Between, METH_VARARGS },
	 { (char *)"csMath3_SetMinMax", _wrap_csMath3_SetMinMax, METH_VARARGS },
	 { (char *)"csMath3_Area3", _wrap_csMath3_Area3, METH_VARARGS },
	 { (char *)"csMath3_CalcNormal", _wrap_csMath3_CalcNormal, METH_VARARGS },
	 { (char *)"csMath3_CalcPlane", _wrap_csMath3_CalcPlane, METH_VARARGS },
	 { (char *)"csMath3_PlanesEqual", _wrap_csMath3_PlanesEqual, METH_VARARGS },
	 { (char *)"csMath3_PlanesClose", _wrap_csMath3_PlanesClose, METH_VARARGS },
	 { (char *)"csMath3_OuterPlanes", _wrap_csMath3_OuterPlanes, METH_VARARGS },
	 { (char *)"csMath3_FindObserverSides", _wrap_csMath3_FindObserverSides, METH_VARARGS },
	 { (char *)"csMath3_SpherePosition", _wrap_csMath3_SpherePosition, METH_VARARGS },
	 { (char *)"new_csMath3", _wrap_new_csMath3, METH_VARARGS },
	 { (char *)"delete_csMath3", _wrap_delete_csMath3, METH_VARARGS },
	 { (char *)"csMath3_swigregister", csMath3_swigregister, METH_VARARGS },
	 { (char *)"csSquaredDist_PointPoint", _wrap_csSquaredDist_PointPoint, METH_VARARGS },
	 { (char *)"csSquaredDist_PointLine", _wrap_csSquaredDist_PointLine, METH_VARARGS },
	 { (char *)"csSquaredDist_PointPlane", _wrap_csSquaredDist_PointPlane, METH_VARARGS },
	 { (char *)"csSquaredDist_PointPoly", _wrap_csSquaredDist_PointPoly, METH_VARARGS },
	 { (char *)"new_csSquaredDist", _wrap_new_csSquaredDist, METH_VARARGS },
	 { (char *)"delete_csSquaredDist", _wrap_delete_csSquaredDist, METH_VARARGS },
	 { (char *)"csSquaredDist_swigregister", csSquaredDist_swigregister, METH_VARARGS },
	 { (char *)"csIntersect3_IntersectPolygon", _wrap_csIntersect3_IntersectPolygon, METH_VARARGS },
	 { (char *)"csIntersect3_IntersectSegment", _wrap_csIntersect3_IntersectSegment, METH_VARARGS },
	 { (char *)"csIntersect3_IntersectTriangle", _wrap_csIntersect3_IntersectTriangle, METH_VARARGS },
	 { (char *)"csIntersect3_Plane", _wrap_csIntersect3_Plane, METH_VARARGS },
	 { (char *)"csIntersect3_Planes", _wrap_csIntersect3_Planes, METH_VARARGS },
	 { (char *)"csIntersect3_PlaneXPlane", _wrap_csIntersect3_PlaneXPlane, METH_VARARGS },
	 { (char *)"csIntersect3_PlaneYPlane", _wrap_csIntersect3_PlaneYPlane, METH_VARARGS },
	 { (char *)"csIntersect3_PlaneZPlane", _wrap_csIntersect3_PlaneZPlane, METH_VARARGS },
	 { (char *)"csIntersect3_PlaneAxisPlane", _wrap_csIntersect3_PlaneAxisPlane, METH_VARARGS },
	 { (char *)"csIntersect3_Z0Plane", _wrap_csIntersect3_Z0Plane, METH_VARARGS },
	 { (char *)"csIntersect3_ZPlane", _wrap_csIntersect3_ZPlane, METH_VARARGS },
	 { (char *)"csIntersect3_XFrustum", _wrap_csIntersect3_XFrustum, METH_VARARGS },
	 { (char *)"csIntersect3_YFrustum", _wrap_csIntersect3_YFrustum, METH_VARARGS },
	 { (char *)"csIntersect3_BoxSegment", _wrap_csIntersect3_BoxSegment, METH_VARARGS },
	 { (char *)"csIntersect3_BoxFrustum", _wrap_csIntersect3_BoxFrustum, METH_VARARGS },
	 { (char *)"csIntersect3_BoxSphere", _wrap_csIntersect3_BoxSphere, METH_VARARGS },
	 { (char *)"new_csIntersect3", _wrap_new_csIntersect3, METH_VARARGS },
	 { (char *)"delete_csIntersect3", _wrap_delete_csIntersect3, METH_VARARGS },
	 { (char *)"csIntersect3_swigregister", csIntersect3_swigregister, METH_VARARGS },
	 { (char *)"new_csGeomDebugHelper", _wrap_new_csGeomDebugHelper, METH_VARARGS },
	 { (char *)"delete_csGeomDebugHelper", _wrap_delete_csGeomDebugHelper, METH_VARARGS },
	 { (char *)"csGeomDebugHelper_scfRefCount_set", _wrap_csGeomDebugHelper_scfRefCount_set, METH_VARARGS },
	 { (char *)"csGeomDebugHelper_scfRefCount_get", _wrap_csGeomDebugHelper_scfRefCount_get, METH_VARARGS },
	 { (char *)"csGeomDebugHelper_scfParent_set", _wrap_csGeomDebugHelper_scfParent_set, METH_VARARGS },
	 { (char *)"csGeomDebugHelper_scfParent_get", _wrap_csGeomDebugHelper_scfParent_get, METH_VARARGS },
	 { (char *)"csGeomDebugHelper_IncRef", _wrap_csGeomDebugHelper_IncRef, METH_VARARGS },
	 { (char *)"csGeomDebugHelper_DecRef", _wrap_csGeomDebugHelper_DecRef, METH_VARARGS },
	 { (char *)"csGeomDebugHelper_GetRefCount", _wrap_csGeomDebugHelper_GetRefCount, METH_VARARGS },
	 { (char *)"csGeomDebugHelper_QueryInterface", _wrap_csGeomDebugHelper_QueryInterface, METH_VARARGS },
	 { (char *)"csGeomDebugHelper_GetSupportedTests", _wrap_csGeomDebugHelper_GetSupportedTests, METH_VARARGS },
	 { (char *)"csGeomDebugHelper_UnitTest", _wrap_csGeomDebugHelper_UnitTest, METH_VARARGS },
	 { (char *)"csGeomDebugHelper_StateTest", _wrap_csGeomDebugHelper_StateTest, METH_VARARGS },
	 { (char *)"csGeomDebugHelper_Benchmark", _wrap_csGeomDebugHelper_Benchmark, METH_VARARGS },
	 { (char *)"csGeomDebugHelper_Dump", _wrap_csGeomDebugHelper_Dump, METH_VARARGS },
	 { (char *)"csGeomDebugHelper_DebugCommand", _wrap_csGeomDebugHelper_DebugCommand, METH_VARARGS },
	 { (char *)"csGeomDebugHelper_swigregister", csGeomDebugHelper_swigregister, METH_VARARGS },
	 { (char *)"new_csPoly3D", _wrap_new_csPoly3D, METH_VARARGS },
	 { (char *)"delete_csPoly3D", _wrap_delete_csPoly3D, METH_VARARGS },
	 { (char *)"csPoly3D_MakeEmpty", _wrap_csPoly3D_MakeEmpty, METH_VARARGS },
	 { (char *)"csPoly3D_GetVertexCount", _wrap_csPoly3D_GetVertexCount, METH_VARARGS },
	 { (char *)"csPoly3D_GetVertices", _wrap_csPoly3D_GetVertices, METH_VARARGS },
	 { (char *)"csPoly3D_GetVertex", _wrap_csPoly3D_GetVertex, METH_VARARGS },
	 { (char *)"csPoly3D_GetFirst", _wrap_csPoly3D_GetFirst, METH_VARARGS },
	 { (char *)"csPoly3D_GetLast", _wrap_csPoly3D_GetLast, METH_VARARGS },
	 { (char *)"csPoly3D_In", _wrap_csPoly3D_In, METH_VARARGS },
	 { (char *)"csPoly3D_MakeRoom", _wrap_csPoly3D_MakeRoom, METH_VARARGS },
	 { (char *)"csPoly3D_SetVertexCount", _wrap_csPoly3D_SetVertexCount, METH_VARARGS },
	 { (char *)"csPoly3D_AddVertex", _wrap_csPoly3D_AddVertex, METH_VARARGS },
	 { (char *)"csPoly3D_SetVertices", _wrap_csPoly3D_SetVertices, METH_VARARGS },
	 { (char *)"csPoly3D_ProjectXPlane", _wrap_csPoly3D_ProjectXPlane, METH_VARARGS },
	 { (char *)"csPoly3D_ProjectYPlane", _wrap_csPoly3D_ProjectYPlane, METH_VARARGS },
	 { (char *)"csPoly3D_ProjectZPlane", _wrap_csPoly3D_ProjectZPlane, METH_VARARGS },
	 { (char *)"csPoly3D_ProjectAxisPlane", _wrap_csPoly3D_ProjectAxisPlane, METH_VARARGS },
	 { (char *)"csPoly3D_Classify", _wrap_csPoly3D_Classify, METH_VARARGS },
	 { (char *)"csPoly3D_ClassifyX", _wrap_csPoly3D_ClassifyX, METH_VARARGS },
	 { (char *)"csPoly3D_ClassifyY", _wrap_csPoly3D_ClassifyY, METH_VARARGS },
	 { (char *)"csPoly3D_ClassifyZ", _wrap_csPoly3D_ClassifyZ, METH_VARARGS },
	 { (char *)"csPoly3D_CutToPlane", _wrap_csPoly3D_CutToPlane, METH_VARARGS },
	 { (char *)"csPoly3D_SplitWithPlane", _wrap_csPoly3D_SplitWithPlane, METH_VARARGS },
	 { (char *)"csPoly3D_SplitWithPlaneX", _wrap_csPoly3D_SplitWithPlaneX, METH_VARARGS },
	 { (char *)"csPoly3D_SplitWithPlaneY", _wrap_csPoly3D_SplitWithPlaneY, METH_VARARGS },
	 { (char *)"csPoly3D_SplitWithPlaneZ", _wrap_csPoly3D_SplitWithPlaneZ, METH_VARARGS },
	 { (char *)"csPoly3D_ComputeNormal", _wrap_csPoly3D_ComputeNormal, METH_VARARGS },
	 { (char *)"csPoly3D_ComputePlane", _wrap_csPoly3D_ComputePlane, METH_VARARGS },
	 { (char *)"csPoly3D_GetSignedArea", _wrap_csPoly3D_GetSignedArea, METH_VARARGS },
	 { (char *)"csPoly3D_GetCenter", _wrap_csPoly3D_GetCenter, METH_VARARGS },
	 { (char *)"csPoly3D___getitem__", _wrap_csPoly3D___getitem__, METH_VARARGS },
	 { (char *)"csPoly3D_swigregister", csPoly3D_swigregister, METH_VARARGS },
	 { (char *)"new_csVector3Array", _wrap_new_csVector3Array, METH_VARARGS },
	 { (char *)"csVector3Array_AddVertexSmart", _wrap_csVector3Array_AddVertexSmart, METH_VARARGS },
	 { (char *)"delete_csVector3Array", _wrap_delete_csVector3Array, METH_VARARGS },
	 { (char *)"csVector3Array_swigregister", csVector3Array_swigregister, METH_VARARGS },
	 { (char *)"csRect_xmin_set", _wrap_csRect_xmin_set, METH_VARARGS },
	 { (char *)"csRect_xmin_get", _wrap_csRect_xmin_get, METH_VARARGS },
	 { (char *)"csRect_ymin_set", _wrap_csRect_ymin_set, METH_VARARGS },
	 { (char *)"csRect_ymin_get", _wrap_csRect_ymin_get, METH_VARARGS },
	 { (char *)"csRect_xmax_set", _wrap_csRect_xmax_set, METH_VARARGS },
	 { (char *)"csRect_xmax_get", _wrap_csRect_xmax_get, METH_VARARGS },
	 { (char *)"csRect_ymax_set", _wrap_csRect_ymax_set, METH_VARARGS },
	 { (char *)"csRect_ymax_get", _wrap_csRect_ymax_get, METH_VARARGS },
	 { (char *)"new_csRect", _wrap_new_csRect, METH_VARARGS },
	 { (char *)"delete_csRect", _wrap_delete_csRect, METH_VARARGS },
	 { (char *)"csRect_Intersect", _wrap_csRect_Intersect, METH_VARARGS },
	 { (char *)"csRect_Intersects", _wrap_csRect_Intersects, METH_VARARGS },
	 { (char *)"csRect_Union", _wrap_csRect_Union, METH_VARARGS },
	 { (char *)"csRect_Exclude", _wrap_csRect_Exclude, METH_VARARGS },
	 { (char *)"csRect_Subtract", _wrap_csRect_Subtract, METH_VARARGS },
	 { (char *)"csRect_IsEmpty", _wrap_csRect_IsEmpty, METH_VARARGS },
	 { (char *)"csRect_MakeEmpty", _wrap_csRect_MakeEmpty, METH_VARARGS },
	 { (char *)"csRect_Set", _wrap_csRect_Set, METH_VARARGS },
	 { (char *)"csRect_SetPos", _wrap_csRect_SetPos, METH_VARARGS },
	 { (char *)"csRect_SetSize", _wrap_csRect_SetSize, METH_VARARGS },
	 { (char *)"csRect_Move", _wrap_csRect_Move, METH_VARARGS },
	 { (char *)"csRect_Width", _wrap_csRect_Width, METH_VARARGS },
	 { (char *)"csRect_Height", _wrap_csRect_Height, METH_VARARGS },
	 { (char *)"csRect_Contains", _wrap_csRect_Contains, METH_VARARGS },
	 { (char *)"csRect_ContainsRel", _wrap_csRect_ContainsRel, METH_VARARGS },
	 { (char *)"csRect_Equal", _wrap_csRect_Equal, METH_VARARGS },
	 { (char *)"csRect_Normalize", _wrap_csRect_Normalize, METH_VARARGS },
	 { (char *)"csRect_Area", _wrap_csRect_Area, METH_VARARGS },
	 { (char *)"csRect_AddAdjanced", _wrap_csRect_AddAdjanced, METH_VARARGS },
	 { (char *)"csRect___eq__", _wrap_csRect___eq__, METH_VARARGS },
	 { (char *)"csRect___ne__", _wrap_csRect___ne__, METH_VARARGS },
	 { (char *)"csRect_Extend", _wrap_csRect_Extend, METH_VARARGS },
	 { (char *)"csRect_Join", _wrap_csRect_Join, METH_VARARGS },
	 { (char *)"csRect_Outset", _wrap_csRect_Outset, METH_VARARGS },
	 { (char *)"csRect_Inset", _wrap_csRect_Inset, METH_VARARGS },
	 { (char *)"csRect_ClipLineGeneral", _wrap_csRect_ClipLineGeneral, METH_VARARGS },
	 { (char *)"csRect_ClipLine", _wrap_csRect_ClipLine, METH_VARARGS },
	 { (char *)"csRect_ClipLineSafe", _wrap_csRect_ClipLineSafe, METH_VARARGS },
	 { (char *)"csRect_swigregister", csRect_swigregister, METH_VARARGS },
	 { (char *)"new_csRectRegion", _wrap_new_csRectRegion, METH_VARARGS },
	 { (char *)"delete_csRectRegion", _wrap_delete_csRectRegion, METH_VARARGS },
	 { (char *)"csRectRegion_Include", _wrap_csRectRegion_Include, METH_VARARGS },
	 { (char *)"csRectRegion_Exclude", _wrap_csRectRegion_Exclude, METH_VARARGS },
	 { (char *)"csRectRegion_ClipTo", _wrap_csRectRegion_ClipTo, METH_VARARGS },
	 { (char *)"csRectRegion_Count", _wrap_csRectRegion_Count, METH_VARARGS },
	 { (char *)"csRectRegion_RectAt", _wrap_csRectRegion_RectAt, METH_VARARGS },
	 { (char *)"csRectRegion_makeEmpty", _wrap_csRectRegion_makeEmpty, METH_VARARGS },
	 { (char *)"csRectRegion_swigregister", csRectRegion_swigregister, METH_VARARGS },
	 { (char *)"csQuaternion_Init", _wrap_csQuaternion_Init, METH_VARARGS },
	 { (char *)"new_csQuaternion", _wrap_new_csQuaternion, METH_VARARGS },
	 { (char *)"csQuaternion___imul__", _wrap_csQuaternion___imul__, METH_VARARGS },
	 { (char *)"csQuaternion_Conjugate", _wrap_csQuaternion_Conjugate, METH_VARARGS },
	 { (char *)"csQuaternion_Negate", _wrap_csQuaternion_Negate, METH_VARARGS },
	 { (char *)"csQuaternion_Invert", _wrap_csQuaternion_Invert, METH_VARARGS },
	 { (char *)"csQuaternion_GetAxisAngle", _wrap_csQuaternion_GetAxisAngle, METH_VARARGS },
	 { (char *)"csQuaternion_SetWithAxisAngle", _wrap_csQuaternion_SetWithAxisAngle, METH_VARARGS },
	 { (char *)"csQuaternion_PrepRotation", _wrap_csQuaternion_PrepRotation, METH_VARARGS },
	 { (char *)"csQuaternion_Rotate", _wrap_csQuaternion_Rotate, METH_VARARGS },
	 { (char *)"csQuaternion_Normalize", _wrap_csQuaternion_Normalize, METH_VARARGS },
	 { (char *)"csQuaternion_SetWithEuler", _wrap_csQuaternion_SetWithEuler, METH_VARARGS },
	 { (char *)"csQuaternion_GetEulerAngles", _wrap_csQuaternion_GetEulerAngles, METH_VARARGS },
	 { (char *)"csQuaternion_ToAxisAngle", _wrap_csQuaternion_ToAxisAngle, METH_VARARGS },
	 { (char *)"csQuaternion_Slerp", _wrap_csQuaternion_Slerp, METH_VARARGS },
	 { (char *)"csQuaternion_r_set", _wrap_csQuaternion_r_set, METH_VARARGS },
	 { (char *)"csQuaternion_r_get", _wrap_csQuaternion_r_get, METH_VARARGS },
	 { (char *)"csQuaternion_x_set", _wrap_csQuaternion_x_set, METH_VARARGS },
	 { (char *)"csQuaternion_x_get", _wrap_csQuaternion_x_get, METH_VARARGS },
	 { (char *)"csQuaternion_y_set", _wrap_csQuaternion_y_set, METH_VARARGS },
	 { (char *)"csQuaternion_y_get", _wrap_csQuaternion_y_get, METH_VARARGS },
	 { (char *)"csQuaternion_z_set", _wrap_csQuaternion_z_set, METH_VARARGS },
	 { (char *)"csQuaternion_z_get", _wrap_csQuaternion_z_get, METH_VARARGS },
	 { (char *)"csQuaternion___add__", _wrap_csQuaternion___add__, METH_VARARGS },
	 { (char *)"csQuaternion___sub__", _wrap_csQuaternion___sub__, METH_VARARGS },
	 { (char *)"csQuaternion___mul__", _wrap_csQuaternion___mul__, METH_VARARGS },
	 { (char *)"delete_csQuaternion", _wrap_delete_csQuaternion, METH_VARARGS },
	 { (char *)"csQuaternion_swigregister", csQuaternion_swigregister, METH_VARARGS },
	 { (char *)"delete_csSpline", _wrap_delete_csSpline, METH_VARARGS },
	 { (char *)"csSpline_GetDimensionCount", _wrap_csSpline_GetDimensionCount, METH_VARARGS },
	 { (char *)"csSpline_GetPointCount", _wrap_csSpline_GetPointCount, METH_VARARGS },
	 { (char *)"csSpline_InsertPoint", _wrap_csSpline_InsertPoint, METH_VARARGS },
	 { (char *)"csSpline_RemovePoint", _wrap_csSpline_RemovePoint, METH_VARARGS },
	 { (char *)"csSpline_SetTimeValues", _wrap_csSpline_SetTimeValues, METH_VARARGS },
	 { (char *)"csSpline_SetTimeValue", _wrap_csSpline_SetTimeValue, METH_VARARGS },
	 { (char *)"csSpline_GetTimeValues", _wrap_csSpline_GetTimeValues, METH_VARARGS },
	 { (char *)"csSpline_GetTimeValue", _wrap_csSpline_GetTimeValue, METH_VARARGS },
	 { (char *)"csSpline_SetDimensionValues", _wrap_csSpline_SetDimensionValues, METH_VARARGS },
	 { (char *)"csSpline_SetDimensionValue", _wrap_csSpline_SetDimensionValue, METH_VARARGS },
	 { (char *)"csSpline_GetDimensionValues", _wrap_csSpline_GetDimensionValues, METH_VARARGS },
	 { (char *)"csSpline_GetDimensionValue", _wrap_csSpline_GetDimensionValue, METH_VARARGS },
	 { (char *)"csSpline_Calculate", _wrap_csSpline_Calculate, METH_VARARGS },
	 { (char *)"csSpline_GetCurrentIndex", _wrap_csSpline_GetCurrentIndex, METH_VARARGS },
	 { (char *)"csSpline_GetInterpolatedDimension", _wrap_csSpline_GetInterpolatedDimension, METH_VARARGS },
	 { (char *)"csSpline_swigregister", csSpline_swigregister, METH_VARARGS },
	 { (char *)"new_csCubicSpline", _wrap_new_csCubicSpline, METH_VARARGS },
	 { (char *)"delete_csCubicSpline", _wrap_delete_csCubicSpline, METH_VARARGS },
	 { (char *)"csCubicSpline_Calculate", _wrap_csCubicSpline_Calculate, METH_VARARGS },
	 { (char *)"csCubicSpline_GetInterpolatedDimension", _wrap_csCubicSpline_GetInterpolatedDimension, METH_VARARGS },
	 { (char *)"csCubicSpline_swigregister", csCubicSpline_swigregister, METH_VARARGS },
	 { (char *)"new_csBSpline", _wrap_new_csBSpline, METH_VARARGS },
	 { (char *)"delete_csBSpline", _wrap_delete_csBSpline, METH_VARARGS },
	 { (char *)"csBSpline_Calculate", _wrap_csBSpline_Calculate, METH_VARARGS },
	 { (char *)"csBSpline_GetInterpolatedDimension", _wrap_csBSpline_GetInterpolatedDimension, METH_VARARGS },
	 { (char *)"csBSpline_swigregister", csBSpline_swigregister, METH_VARARGS },
	 { (char *)"new_csCatmullRomSpline", _wrap_new_csCatmullRomSpline, METH_VARARGS },
	 { (char *)"delete_csCatmullRomSpline", _wrap_delete_csCatmullRomSpline, METH_VARARGS },
	 { (char *)"csCatmullRomSpline_swigregister", csCatmullRomSpline_swigregister, METH_VARARGS },
	 { (char *)"csPoint_x_set", _wrap_csPoint_x_set, METH_VARARGS },
	 { (char *)"csPoint_x_get", _wrap_csPoint_x_get, METH_VARARGS },
	 { (char *)"csPoint_y_set", _wrap_csPoint_y_set, METH_VARARGS },
	 { (char *)"csPoint_y_get", _wrap_csPoint_y_get, METH_VARARGS },
	 { (char *)"new_csPoint", _wrap_new_csPoint, METH_VARARGS },
	 { (char *)"csPoint_Set", _wrap_csPoint_Set, METH_VARARGS },
	 { (char *)"delete_csPoint", _wrap_delete_csPoint, METH_VARARGS },
	 { (char *)"csPoint_swigregister", csPoint_swigregister, METH_VARARGS },
	 { (char *)"csRGBcolor_red_set", _wrap_csRGBcolor_red_set, METH_VARARGS },
	 { (char *)"csRGBcolor_red_get", _wrap_csRGBcolor_red_get, METH_VARARGS },
	 { (char *)"csRGBcolor_green_set", _wrap_csRGBcolor_green_set, METH_VARARGS },
	 { (char *)"csRGBcolor_green_get", _wrap_csRGBcolor_green_get, METH_VARARGS },
	 { (char *)"csRGBcolor_blue_set", _wrap_csRGBcolor_blue_set, METH_VARARGS },
	 { (char *)"csRGBcolor_blue_get", _wrap_csRGBcolor_blue_get, METH_VARARGS },
	 { (char *)"new_csRGBcolor", _wrap_new_csRGBcolor, METH_VARARGS },
	 { (char *)"csRGBcolor_Set", _wrap_csRGBcolor_Set, METH_VARARGS },
	 { (char *)"csRGBcolor___eq__", _wrap_csRGBcolor___eq__, METH_VARARGS },
	 { (char *)"csRGBcolor___ne__", _wrap_csRGBcolor___ne__, METH_VARARGS },
	 { (char *)"csRGBcolor___add__", _wrap_csRGBcolor___add__, METH_VARARGS },
	 { (char *)"delete_csRGBcolor", _wrap_delete_csRGBcolor, METH_VARARGS },
	 { (char *)"csRGBcolor_swigregister", csRGBcolor_swigregister, METH_VARARGS },
	 { (char *)"csRGBpixel_red_set", _wrap_csRGBpixel_red_set, METH_VARARGS },
	 { (char *)"csRGBpixel_red_get", _wrap_csRGBpixel_red_get, METH_VARARGS },
	 { (char *)"csRGBpixel_green_set", _wrap_csRGBpixel_green_set, METH_VARARGS },
	 { (char *)"csRGBpixel_green_get", _wrap_csRGBpixel_green_get, METH_VARARGS },
	 { (char *)"csRGBpixel_blue_set", _wrap_csRGBpixel_blue_set, METH_VARARGS },
	 { (char *)"csRGBpixel_blue_get", _wrap_csRGBpixel_blue_get, METH_VARARGS },
	 { (char *)"csRGBpixel_alpha_set", _wrap_csRGBpixel_alpha_set, METH_VARARGS },
	 { (char *)"csRGBpixel_alpha_get", _wrap_csRGBpixel_alpha_get, METH_VARARGS },
	 { (char *)"new_csRGBpixel", _wrap_new_csRGBpixel, METH_VARARGS },
	 { (char *)"csRGBpixel___eq__", _wrap_csRGBpixel___eq__, METH_VARARGS },
	 { (char *)"csRGBpixel___ne__", _wrap_csRGBpixel___ne__, METH_VARARGS },
	 { (char *)"csRGBpixel_asRGBcolor", _wrap_csRGBpixel_asRGBcolor, METH_VARARGS },
	 { (char *)"csRGBpixel_eq", _wrap_csRGBpixel_eq, METH_VARARGS },
	 { (char *)"csRGBpixel_Intensity", _wrap_csRGBpixel_Intensity, METH_VARARGS },
	 { (char *)"csRGBpixel_Luminance", _wrap_csRGBpixel_Luminance, METH_VARARGS },
	 { (char *)"csRGBpixel_Set", _wrap_csRGBpixel_Set, METH_VARARGS },
	 { (char *)"csRGBpixel___iadd__", _wrap_csRGBpixel___iadd__, METH_VARARGS },
	 { (char *)"csRGBpixel_UnsafeAdd", _wrap_csRGBpixel_UnsafeAdd, METH_VARARGS },
	 { (char *)"csRGBpixel_SafeAdd", _wrap_csRGBpixel_SafeAdd, METH_VARARGS },
	 { (char *)"delete_csRGBpixel", _wrap_delete_csRGBpixel, METH_VARARGS },
	 { (char *)"csRGBpixel_swigregister", csRGBpixel_swigregister, METH_VARARGS },
	 { (char *)"csDefaultRunLoop", _wrap_csDefaultRunLoop, METH_VARARGS },
	 { (char *)"csPlatformStartup", _wrap_csPlatformStartup, METH_VARARGS },
	 { (char *)"csPlatformShutdown", _wrap_csPlatformShutdown, METH_VARARGS },
	 { (char *)"csPrintf", _wrap_csPrintf, METH_VARARGS },
	 { (char *)"csPrintfV", _wrap_csPrintfV, METH_VARARGS },
	 { (char *)"csGetTicks", _wrap_csGetTicks, METH_VARARGS },
	 { (char *)"csSleep", _wrap_csSleep, METH_VARARGS },
	 { (char *)"csGetUsername", _wrap_csGetUsername, METH_VARARGS },
	 { (char *)"csInitializer_CreateEnvironment", _wrap_csInitializer_CreateEnvironment, METH_VARARGS },
	 { (char *)"csInitializer_InitializeSCF", _wrap_csInitializer_InitializeSCF, METH_VARARGS },
	 { (char *)"csInitializer_CreateObjectRegistry", _wrap_csInitializer_CreateObjectRegistry, METH_VARARGS },
	 { (char *)"csInitializer_CreatePluginManager", _wrap_csInitializer_CreatePluginManager, METH_VARARGS },
	 { (char *)"csInitializer_CreateEventQueue", _wrap_csInitializer_CreateEventQueue, METH_VARARGS },
	 { (char *)"csInitializer_CreateVirtualClock", _wrap_csInitializer_CreateVirtualClock, METH_VARARGS },
	 { (char *)"csInitializer_CreateCommandLineParser", _wrap_csInitializer_CreateCommandLineParser, METH_VARARGS },
	 { (char *)"csInitializer_CreateConfigManager", _wrap_csInitializer_CreateConfigManager, METH_VARARGS },
	 { (char *)"csInitializer_CreateInputDrivers", _wrap_csInitializer_CreateInputDrivers, METH_VARARGS },
	 { (char *)"csInitializer_SetupConfigManager", _wrap_csInitializer_SetupConfigManager, METH_VARARGS },
	 { (char *)"csInitializer_OpenApplication", _wrap_csInitializer_OpenApplication, METH_VARARGS },
	 { (char *)"csInitializer_CloseApplication", _wrap_csInitializer_CloseApplication, METH_VARARGS },
	 { (char *)"csInitializer__SetupEventHandler", _wrap_csInitializer__SetupEventHandler, METH_VARARGS },
	 { (char *)"csInitializer_SetupEventHandler", _wrap_csInitializer_SetupEventHandler, METH_VARARGS },
	 { (char *)"csInitializer_DestroyApplication", _wrap_csInitializer_DestroyApplication, METH_VARARGS },
	 { (char *)"csInitializer__RequestPlugin", _wrap_csInitializer__RequestPlugin, METH_VARARGS },
	 { (char *)"new_csInitializer", _wrap_new_csInitializer, METH_VARARGS },
	 { (char *)"delete_csInitializer", _wrap_delete_csInitializer, METH_VARARGS },
	 { (char *)"csInitializer_swigregister", csInitializer_swigregister, METH_VARARGS },
	 { (char *)"csMeshedPolygon_num_vertices_set", _wrap_csMeshedPolygon_num_vertices_set, METH_VARARGS },
	 { (char *)"csMeshedPolygon_num_vertices_get", _wrap_csMeshedPolygon_num_vertices_get, METH_VARARGS },
	 { (char *)"csMeshedPolygon_vertices_set", _wrap_csMeshedPolygon_vertices_set, METH_VARARGS },
	 { (char *)"csMeshedPolygon_vertices_get", _wrap_csMeshedPolygon_vertices_get, METH_VARARGS },
	 { (char *)"new_csMeshedPolygon", _wrap_new_csMeshedPolygon, METH_VARARGS },
	 { (char *)"delete_csMeshedPolygon", _wrap_delete_csMeshedPolygon, METH_VARARGS },
	 { (char *)"csMeshedPolygon_swigregister", csMeshedPolygon_swigregister, METH_VARARGS },
	 { (char *)"iPolygonMesh_GetVertexCount", _wrap_iPolygonMesh_GetVertexCount, METH_VARARGS },
	 { (char *)"iPolygonMesh_GetVertices", _wrap_iPolygonMesh_GetVertices, METH_VARARGS },
	 { (char *)"iPolygonMesh_GetPolygonCount", _wrap_iPolygonMesh_GetPolygonCount, METH_VARARGS },
	 { (char *)"iPolygonMesh_GetPolygons", _wrap_iPolygonMesh_GetPolygons, METH_VARARGS },
	 { (char *)"iPolygonMesh_Cleanup", _wrap_iPolygonMesh_Cleanup, METH_VARARGS },
	 { (char *)"iPolygonMesh_IsDeformable", _wrap_iPolygonMesh_IsDeformable, METH_VARARGS },
	 { (char *)"iPolygonMesh_GetChangeNumber", _wrap_iPolygonMesh_GetChangeNumber, METH_VARARGS },
	 { (char *)"delete_iPolygonMesh", _wrap_delete_iPolygonMesh, METH_VARARGS },
	 { (char *)"iPolygonMesh_swigregister", iPolygonMesh_swigregister, METH_VARARGS },
	 { (char *)"csVertexStatus_Type_set", _wrap_csVertexStatus_Type_set, METH_VARARGS },
	 { (char *)"csVertexStatus_Type_get", _wrap_csVertexStatus_Type_get, METH_VARARGS },
	 { (char *)"csVertexStatus_Vertex_set", _wrap_csVertexStatus_Vertex_set, METH_VARARGS },
	 { (char *)"csVertexStatus_Vertex_get", _wrap_csVertexStatus_Vertex_get, METH_VARARGS },
	 { (char *)"csVertexStatus_Pos_set", _wrap_csVertexStatus_Pos_set, METH_VARARGS },
	 { (char *)"csVertexStatus_Pos_get", _wrap_csVertexStatus_Pos_get, METH_VARARGS },
	 { (char *)"new_csVertexStatus", _wrap_new_csVertexStatus, METH_VARARGS },
	 { (char *)"delete_csVertexStatus", _wrap_delete_csVertexStatus, METH_VARARGS },
	 { (char *)"csVertexStatus_swigregister", csVertexStatus_swigregister, METH_VARARGS },
	 { (char *)"iClipper2D_scfGetID", _wrap_iClipper2D_scfGetID, METH_VARARGS },
	 { (char *)"iClipper2D_Clip", _wrap_iClipper2D_Clip, METH_VARARGS },
	 { (char *)"iClipper2D_ClipInPlace", _wrap_iClipper2D_ClipInPlace, METH_VARARGS },
	 { (char *)"iClipper2D_ClassifyBox", _wrap_iClipper2D_ClassifyBox, METH_VARARGS },
	 { (char *)"iClipper2D_IsInside", _wrap_iClipper2D_IsInside, METH_VARARGS },
	 { (char *)"iClipper2D_GetVertexCount", _wrap_iClipper2D_GetVertexCount, METH_VARARGS },
	 { (char *)"iClipper2D_GetClipPoly", _wrap_iClipper2D_GetClipPoly, METH_VARARGS },
	 { (char *)"delete_iClipper2D", _wrap_delete_iClipper2D, METH_VARARGS },
	 { (char *)"iClipper2D_swigregister", iClipper2D_swigregister, METH_VARARGS },
	 { (char *)"iObjectModelListener_ObjectModelChanged", _wrap_iObjectModelListener_ObjectModelChanged, METH_VARARGS },
	 { (char *)"delete_iObjectModelListener", _wrap_delete_iObjectModelListener, METH_VARARGS },
	 { (char *)"iObjectModelListener_swigregister", iObjectModelListener_swigregister, METH_VARARGS },
	 { (char *)"iObjectModel_GetShapeNumber", _wrap_iObjectModel_GetShapeNumber, METH_VARARGS },
	 { (char *)"iObjectModel_GetPolygonMeshBase", _wrap_iObjectModel_GetPolygonMeshBase, METH_VARARGS },
	 { (char *)"iObjectModel_GetPolygonMeshColldet", _wrap_iObjectModel_GetPolygonMeshColldet, METH_VARARGS },
	 { (char *)"iObjectModel_SetPolygonMeshColldet", _wrap_iObjectModel_SetPolygonMeshColldet, METH_VARARGS },
	 { (char *)"iObjectModel_GetPolygonMeshViscull", _wrap_iObjectModel_GetPolygonMeshViscull, METH_VARARGS },
	 { (char *)"iObjectModel_SetPolygonMeshViscull", _wrap_iObjectModel_SetPolygonMeshViscull, METH_VARARGS },
	 { (char *)"iObjectModel_GetPolygonMeshShadows", _wrap_iObjectModel_GetPolygonMeshShadows, METH_VARARGS },
	 { (char *)"iObjectModel_SetPolygonMeshShadows", _wrap_iObjectModel_SetPolygonMeshShadows, METH_VARARGS },
	 { (char *)"iObjectModel_CreateLowerDetailPolygonMesh", _wrap_iObjectModel_CreateLowerDetailPolygonMesh, METH_VARARGS },
	 { (char *)"iObjectModel_GetObjectBoundingBox", _wrap_iObjectModel_GetObjectBoundingBox, METH_VARARGS },
	 { (char *)"iObjectModel_GetRadius", _wrap_iObjectModel_GetRadius, METH_VARARGS },
	 { (char *)"iObjectModel_AddListener", _wrap_iObjectModel_AddListener, METH_VARARGS },
	 { (char *)"iObjectModel_RemoveListener", _wrap_iObjectModel_RemoveListener, METH_VARARGS },
	 { (char *)"delete_iObjectModel", _wrap_delete_iObjectModel, METH_VARARGS },
	 { (char *)"iObjectModel_swigregister", iObjectModel_swigregister, METH_VARARGS },
	 { (char *)"delete_iFrustumViewUserdata", _wrap_delete_iFrustumViewUserdata, METH_VARARGS },
	 { (char *)"iFrustumViewUserdata_swigregister", iFrustumViewUserdata_swigregister, METH_VARARGS },
	 { (char *)"new_csFrustumContext", _wrap_new_csFrustumContext, METH_VARARGS },
	 { (char *)"csFrustumContext_assign", _wrap_csFrustumContext_assign, METH_VARARGS },
	 { (char *)"csFrustumContext_GetShadows", _wrap_csFrustumContext_GetShadows, METH_VARARGS },
	 { (char *)"csFrustumContext_SetShadows", _wrap_csFrustumContext_SetShadows, METH_VARARGS },
	 { (char *)"csFrustumContext_SetNewShadows", _wrap_csFrustumContext_SetNewShadows, METH_VARARGS },
	 { (char *)"csFrustumContext_IsShared", _wrap_csFrustumContext_IsShared, METH_VARARGS },
	 { (char *)"csFrustumContext_SetLightFrustum", _wrap_csFrustumContext_SetLightFrustum, METH_VARARGS },
	 { (char *)"csFrustumContext_SetNewLightFrustum", _wrap_csFrustumContext_SetNewLightFrustum, METH_VARARGS },
	 { (char *)"csFrustumContext_GetLightFrustum", _wrap_csFrustumContext_GetLightFrustum, METH_VARARGS },
	 { (char *)"csFrustumContext_SetMirrored", _wrap_csFrustumContext_SetMirrored, METH_VARARGS },
	 { (char *)"csFrustumContext_IsMirrored", _wrap_csFrustumContext_IsMirrored, METH_VARARGS },
	 { (char *)"delete_csFrustumContext", _wrap_delete_csFrustumContext, METH_VARARGS },
	 { (char *)"csFrustumContext_swigregister", csFrustumContext_swigregister, METH_VARARGS },
	 { (char *)"iFrustumView_GetFrustumContext", _wrap_iFrustumView_GetFrustumContext, METH_VARARGS },
	 { (char *)"iFrustumView_CreateFrustumContext", _wrap_iFrustumView_CreateFrustumContext, METH_VARARGS },
	 { (char *)"iFrustumView_CopyFrustumContext", _wrap_iFrustumView_CopyFrustumContext, METH_VARARGS },
	 { (char *)"iFrustumView_SetFrustumContext", _wrap_iFrustumView_SetFrustumContext, METH_VARARGS },
	 { (char *)"iFrustumView_RestoreFrustumContext", _wrap_iFrustumView_RestoreFrustumContext, METH_VARARGS },
	 { (char *)"iFrustumView_SetObjectFunction", _wrap_iFrustumView_SetObjectFunction, METH_VARARGS },
	 { (char *)"iFrustumView_CallObjectFunction", _wrap_iFrustumView_CallObjectFunction, METH_VARARGS },
	 { (char *)"iFrustumView_GetRadius", _wrap_iFrustumView_GetRadius, METH_VARARGS },
	 { (char *)"iFrustumView_GetSquaredRadius", _wrap_iFrustumView_GetSquaredRadius, METH_VARARGS },
	 { (char *)"iFrustumView_ThingShadowsEnabled", _wrap_iFrustumView_ThingShadowsEnabled, METH_VARARGS },
	 { (char *)"iFrustumView_CheckShadowMask", _wrap_iFrustumView_CheckShadowMask, METH_VARARGS },
	 { (char *)"iFrustumView_CheckProcessMask", _wrap_iFrustumView_CheckProcessMask, METH_VARARGS },
	 { (char *)"iFrustumView_StartNewShadowBlock", _wrap_iFrustumView_StartNewShadowBlock, METH_VARARGS },
	 { (char *)"iFrustumView_SetUserdata", _wrap_iFrustumView_SetUserdata, METH_VARARGS },
	 { (char *)"iFrustumView_GetUserdata", _wrap_iFrustumView_GetUserdata, METH_VARARGS },
	 { (char *)"iFrustumView_CreateShadowBlock", _wrap_iFrustumView_CreateShadowBlock, METH_VARARGS },
	 { (char *)"delete_iFrustumView", _wrap_delete_iFrustumView, METH_VARARGS },
	 { (char *)"iFrustumView_swigregister", iFrustumView_swigregister, METH_VARARGS },
	 { (char *)"iLightCallback_scfGetID", _wrap_iLightCallback_scfGetID, METH_VARARGS },
	 { (char *)"iLightCallback_OnColorChange", _wrap_iLightCallback_OnColorChange, METH_VARARGS },
	 { (char *)"iLightCallback_OnPositionChange", _wrap_iLightCallback_OnPositionChange, METH_VARARGS },
	 { (char *)"iLightCallback_OnSectorChange", _wrap_iLightCallback_OnSectorChange, METH_VARARGS },
	 { (char *)"iLightCallback_OnRadiusChange", _wrap_iLightCallback_OnRadiusChange, METH_VARARGS },
	 { (char *)"iLightCallback_OnDestroy", _wrap_iLightCallback_OnDestroy, METH_VARARGS },
	 { (char *)"delete_iLightCallback", _wrap_delete_iLightCallback, METH_VARARGS },
	 { (char *)"iLightCallback_swigregister", iLightCallback_swigregister, METH_VARARGS },
	 { (char *)"iLight_scfGetID", _wrap_iLight_scfGetID, METH_VARARGS },
	 { (char *)"iLight_GetPrivateObject", _wrap_iLight_GetPrivateObject, METH_VARARGS },
	 { (char *)"iLight_GetLightID", _wrap_iLight_GetLightID, METH_VARARGS },
	 { (char *)"iLight_QueryObject", _wrap_iLight_QueryObject, METH_VARARGS },
	 { (char *)"iLight_GetCenter", _wrap_iLight_GetCenter, METH_VARARGS },
	 { (char *)"iLight_SetCenter", _wrap_iLight_SetCenter, METH_VARARGS },
	 { (char *)"iLight_GetSector", _wrap_iLight_GetSector, METH_VARARGS },
	 { (char *)"iLight_SetSector", _wrap_iLight_SetSector, METH_VARARGS },
	 { (char *)"iLight_GetRadius", _wrap_iLight_GetRadius, METH_VARARGS },
	 { (char *)"iLight_GetSquaredRadius", _wrap_iLight_GetSquaredRadius, METH_VARARGS },
	 { (char *)"iLight_GetInverseRadius", _wrap_iLight_GetInverseRadius, METH_VARARGS },
	 { (char *)"iLight_SetRadius", _wrap_iLight_SetRadius, METH_VARARGS },
	 { (char *)"iLight_GetColor", _wrap_iLight_GetColor, METH_VARARGS },
	 { (char *)"iLight_SetColor", _wrap_iLight_SetColor, METH_VARARGS },
	 { (char *)"iLight_IsDynamic", _wrap_iLight_IsDynamic, METH_VARARGS },
	 { (char *)"iLight_GetAttenuation", _wrap_iLight_GetAttenuation, METH_VARARGS },
	 { (char *)"iLight_SetAttenuation", _wrap_iLight_SetAttenuation, METH_VARARGS },
	 { (char *)"iLight_CreateCrossHalo", _wrap_iLight_CreateCrossHalo, METH_VARARGS },
	 { (char *)"iLight_CreateNovaHalo", _wrap_iLight_CreateNovaHalo, METH_VARARGS },
	 { (char *)"iLight_CreateFlareHalo", _wrap_iLight_CreateFlareHalo, METH_VARARGS },
	 { (char *)"iLight_GetBrightnessAtDistance", _wrap_iLight_GetBrightnessAtDistance, METH_VARARGS },
	 { (char *)"iLight_GetFlags", _wrap_iLight_GetFlags, METH_VARARGS },
	 { (char *)"iLight_SetLightCallback", _wrap_iLight_SetLightCallback, METH_VARARGS },
	 { (char *)"iLight_RemoveLightCallback", _wrap_iLight_RemoveLightCallback, METH_VARARGS },
	 { (char *)"iLight_GetLightCallbackCount", _wrap_iLight_GetLightCallbackCount, METH_VARARGS },
	 { (char *)"iLight_GetLightCallback", _wrap_iLight_GetLightCallback, METH_VARARGS },
	 { (char *)"iLight_GetLightNumber", _wrap_iLight_GetLightNumber, METH_VARARGS },
	 { (char *)"delete_iLight", _wrap_delete_iLight, METH_VARARGS },
	 { (char *)"iLight_swigregister", iLight_swigregister, METH_VARARGS },
	 { (char *)"iLightList_GetCount", _wrap_iLightList_GetCount, METH_VARARGS },
	 { (char *)"iLightList_Get", _wrap_iLightList_Get, METH_VARARGS },
	 { (char *)"iLightList_Add", _wrap_iLightList_Add, METH_VARARGS },
	 { (char *)"iLightList_Remove", _wrap_iLightList_Remove, METH_VARARGS },
	 { (char *)"iLightList_RemoveAll", _wrap_iLightList_RemoveAll, METH_VARARGS },
	 { (char *)"iLightList_Find", _wrap_iLightList_Find, METH_VARARGS },
	 { (char *)"iLightList_FindByName", _wrap_iLightList_FindByName, METH_VARARGS },
	 { (char *)"iLightList_FindByID", _wrap_iLightList_FindByID, METH_VARARGS },
	 { (char *)"delete_iLightList", _wrap_delete_iLightList, METH_VARARGS },
	 { (char *)"iLightList_swigregister", iLightList_swigregister, METH_VARARGS },
	 { (char *)"iLightingProcessData_scfGetID", _wrap_iLightingProcessData_scfGetID, METH_VARARGS },
	 { (char *)"iLightingProcessData_FinalizeLighting", _wrap_iLightingProcessData_FinalizeLighting, METH_VARARGS },
	 { (char *)"delete_iLightingProcessData", _wrap_delete_iLightingProcessData, METH_VARARGS },
	 { (char *)"iLightingProcessData_swigregister", iLightingProcessData_swigregister, METH_VARARGS },
	 { (char *)"iLightingProcessInfo_scfGetID", _wrap_iLightingProcessInfo_scfGetID, METH_VARARGS },
	 { (char *)"iLightingProcessInfo_GetLight", _wrap_iLightingProcessInfo_GetLight, METH_VARARGS },
	 { (char *)"iLightingProcessInfo_IsDynamic", _wrap_iLightingProcessInfo_IsDynamic, METH_VARARGS },
	 { (char *)"iLightingProcessInfo_SetColor", _wrap_iLightingProcessInfo_SetColor, METH_VARARGS },
	 { (char *)"iLightingProcessInfo_GetColor", _wrap_iLightingProcessInfo_GetColor, METH_VARARGS },
	 { (char *)"iLightingProcessInfo_AttachUserdata", _wrap_iLightingProcessInfo_AttachUserdata, METH_VARARGS },
	 { (char *)"iLightingProcessInfo_QueryUserdata", _wrap_iLightingProcessInfo_QueryUserdata, METH_VARARGS },
	 { (char *)"iLightingProcessInfo_FinalizeLighting", _wrap_iLightingProcessInfo_FinalizeLighting, METH_VARARGS },
	 { (char *)"delete_iLightingProcessInfo", _wrap_delete_iLightingProcessInfo, METH_VARARGS },
	 { (char *)"iLightingProcessInfo_swigregister", iLightingProcessInfo_swigregister, METH_VARARGS },
	 { (char *)"iLightIterator_scfGetID", _wrap_iLightIterator_scfGetID, METH_VARARGS },
	 { (char *)"iLightIterator_HasNext", _wrap_iLightIterator_HasNext, METH_VARARGS },
	 { (char *)"iLightIterator_Next", _wrap_iLightIterator_Next, METH_VARARGS },
	 { (char *)"iLightIterator_GetLastSector", _wrap_iLightIterator_GetLastSector, METH_VARARGS },
	 { (char *)"iLightIterator_Reset", _wrap_iLightIterator_Reset, METH_VARARGS },
	 { (char *)"delete_iLightIterator", _wrap_delete_iLightIterator, METH_VARARGS },
	 { (char *)"iLightIterator_swigregister", iLightIterator_swigregister, METH_VARARGS },
	 { (char *)"iStatLight_GetPrivateObject", _wrap_iStatLight_GetPrivateObject, METH_VARARGS },
	 { (char *)"iStatLight_QueryObject", _wrap_iStatLight_QueryObject, METH_VARARGS },
	 { (char *)"iStatLight_QueryLight", _wrap_iStatLight_QueryLight, METH_VARARGS },
	 { (char *)"iStatLight_AddAffectedLightingInfo", _wrap_iStatLight_AddAffectedLightingInfo, METH_VARARGS },
	 { (char *)"delete_iStatLight", _wrap_delete_iStatLight, METH_VARARGS },
	 { (char *)"iStatLight_swigregister", iStatLight_swigregister, METH_VARARGS },
	 { (char *)"iSectorCallback_scfGetID", _wrap_iSectorCallback_scfGetID, METH_VARARGS },
	 { (char *)"iSectorCallback_Traverse", _wrap_iSectorCallback_Traverse, METH_VARARGS },
	 { (char *)"delete_iSectorCallback", _wrap_delete_iSectorCallback, METH_VARARGS },
	 { (char *)"iSectorCallback_swigregister", iSectorCallback_swigregister, METH_VARARGS },
	 { (char *)"iSector_GetPrivateObject", _wrap_iSector_GetPrivateObject, METH_VARARGS },
	 { (char *)"iSector_QueryObject", _wrap_iSector_QueryObject, METH_VARARGS },
	 { (char *)"iSector_HasFog", _wrap_iSector_HasFog, METH_VARARGS },
	 { (char *)"iSector_GetFog", _wrap_iSector_GetFog, METH_VARARGS },
	 { (char *)"iSector_SetFog", _wrap_iSector_SetFog, METH_VARARGS },
	 { (char *)"iSector_DisableFog", _wrap_iSector_DisableFog, METH_VARARGS },
	 { (char *)"iSector_GetMeshes", _wrap_iSector_GetMeshes, METH_VARARGS },
	 { (char *)"iSector_GetLights", _wrap_iSector_GetLights, METH_VARARGS },
	 { (char *)"iSector_ShineLights", _wrap_iSector_ShineLights, METH_VARARGS },
	 { (char *)"iSector_SetDynamicAmbientLight", _wrap_iSector_SetDynamicAmbientLight, METH_VARARGS },
	 { (char *)"iSector_GetDynamicAmbientLight", _wrap_iSector_GetDynamicAmbientLight, METH_VARARGS },
	 { (char *)"iSector_CalculateSectorBBox", _wrap_iSector_CalculateSectorBBox, METH_VARARGS },
	 { (char *)"iSector_SetVisibilityCullerPlugin", _wrap_iSector_SetVisibilityCullerPlugin, METH_VARARGS },
	 { (char *)"iSector_GetVisibilityCuller", _wrap_iSector_GetVisibilityCuller, METH_VARARGS },
	 { (char *)"iSector_GetRecLevel", _wrap_iSector_GetRecLevel, METH_VARARGS },
	 { (char *)"iSector_HitBeam", _wrap_iSector_HitBeam, METH_VARARGS },
	 { (char *)"iSector_FollowSegment", _wrap_iSector_FollowSegment, METH_VARARGS },
	 { (char *)"iSector_Draw", _wrap_iSector_Draw, METH_VARARGS },
	 { (char *)"iSector_SetSectorCallback", _wrap_iSector_SetSectorCallback, METH_VARARGS },
	 { (char *)"iSector_RemoveSectorCallback", _wrap_iSector_RemoveSectorCallback, METH_VARARGS },
	 { (char *)"iSector_GetSectorCallbackCount", _wrap_iSector_GetSectorCallbackCount, METH_VARARGS },
	 { (char *)"iSector_GetSectorCallback", _wrap_iSector_GetSectorCallback, METH_VARARGS },
	 { (char *)"iSector_CheckFrustum", _wrap_iSector_CheckFrustum, METH_VARARGS },
	 { (char *)"delete_iSector", _wrap_delete_iSector, METH_VARARGS },
	 { (char *)"iSector_swigregister", iSector_swigregister, METH_VARARGS },
	 { (char *)"iSectorList_GetCount", _wrap_iSectorList_GetCount, METH_VARARGS },
	 { (char *)"iSectorList_Get", _wrap_iSectorList_Get, METH_VARARGS },
	 { (char *)"iSectorList_Add", _wrap_iSectorList_Add, METH_VARARGS },
	 { (char *)"iSectorList_Remove", _wrap_iSectorList_Remove, METH_VARARGS },
	 { (char *)"iSectorList_RemoveAll", _wrap_iSectorList_RemoveAll, METH_VARARGS },
	 { (char *)"iSectorList_Find", _wrap_iSectorList_Find, METH_VARARGS },
	 { (char *)"iSectorList_FindByName", _wrap_iSectorList_FindByName, METH_VARARGS },
	 { (char *)"delete_iSectorList", _wrap_delete_iSectorList, METH_VARARGS },
	 { (char *)"iSectorList_swigregister", iSectorList_swigregister, METH_VARARGS },
	 { (char *)"iSectorIterator_scfGetID", _wrap_iSectorIterator_scfGetID, METH_VARARGS },
	 { (char *)"iSectorIterator_HasNext", _wrap_iSectorIterator_HasNext, METH_VARARGS },
	 { (char *)"iSectorIterator_Next", _wrap_iSectorIterator_Next, METH_VARARGS },
	 { (char *)"iSectorIterator_GetLastPosition", _wrap_iSectorIterator_GetLastPosition, METH_VARARGS },
	 { (char *)"iSectorIterator_Reset", _wrap_iSectorIterator_Reset, METH_VARARGS },
	 { (char *)"delete_iSectorIterator", _wrap_delete_iSectorIterator, METH_VARARGS },
	 { (char *)"iSectorIterator_swigregister", iSectorIterator_swigregister, METH_VARARGS },
	 { (char *)"iEngine_QueryObject", _wrap_iEngine_QueryObject, METH_VARARGS },
	 { (char *)"iEngine_Prepare", _wrap_iEngine_Prepare, METH_VARARGS },
	 { (char *)"iEngine_ForceRelight", _wrap_iEngine_ForceRelight, METH_VARARGS },
	 { (char *)"iEngine_RemoveLight", _wrap_iEngine_RemoveLight, METH_VARARGS },
	 { (char *)"iEngine_PrepareTextures", _wrap_iEngine_PrepareTextures, METH_VARARGS },
	 { (char *)"iEngine_PrepareMeshes", _wrap_iEngine_PrepareMeshes, METH_VARARGS },
	 { (char *)"iEngine_ShineLights", _wrap_iEngine_ShineLights, METH_VARARGS },
	 { (char *)"iEngine_GetTextureFormat", _wrap_iEngine_GetTextureFormat, METH_VARARGS },
	 { (char *)"iEngine_DeleteAll", _wrap_iEngine_DeleteAll, METH_VARARGS },
	 { (char *)"iEngine_RegisterRenderPriority", _wrap_iEngine_RegisterRenderPriority, METH_VARARGS },
	 { (char *)"iEngine_GetRenderPriority", _wrap_iEngine_GetRenderPriority, METH_VARARGS },
	 { (char *)"iEngine_SetRenderPriorityCamera", _wrap_iEngine_SetRenderPriorityCamera, METH_VARARGS },
	 { (char *)"iEngine_GetRenderPriorityCamera", _wrap_iEngine_GetRenderPriorityCamera, METH_VARARGS },
	 { (char *)"iEngine_GetRenderPrioritySorting", _wrap_iEngine_GetRenderPrioritySorting, METH_VARARGS },
	 { (char *)"iEngine_GetSkyRenderPriority", _wrap_iEngine_GetSkyRenderPriority, METH_VARARGS },
	 { (char *)"iEngine_GetWallRenderPriority", _wrap_iEngine_GetWallRenderPriority, METH_VARARGS },
	 { (char *)"iEngine_GetObjectRenderPriority", _wrap_iEngine_GetObjectRenderPriority, METH_VARARGS },
	 { (char *)"iEngine_GetAlphaRenderPriority", _wrap_iEngine_GetAlphaRenderPriority, METH_VARARGS },
	 { (char *)"iEngine_ClearRenderPriorities", _wrap_iEngine_ClearRenderPriorities, METH_VARARGS },
	 { (char *)"iEngine_GetRenderPriorityCount", _wrap_iEngine_GetRenderPriorityCount, METH_VARARGS },
	 { (char *)"iEngine_GetRenderPriorityName", _wrap_iEngine_GetRenderPriorityName, METH_VARARGS },
	 { (char *)"iEngine_CreateBaseMaterial", _wrap_iEngine_CreateBaseMaterial, METH_VARARGS },
	 { (char *)"iEngine_CreateTexture", _wrap_iEngine_CreateTexture, METH_VARARGS },
	 { (char *)"iEngine_CreateBlackTexture", _wrap_iEngine_CreateBlackTexture, METH_VARARGS },
	 { (char *)"iEngine_CreateMaterial", _wrap_iEngine_CreateMaterial, METH_VARARGS },
	 { (char *)"iEngine_CreateSector", _wrap_iEngine_CreateSector, METH_VARARGS },
	 { (char *)"iEngine_CreateSectorWallsMesh", _wrap_iEngine_CreateSectorWallsMesh, METH_VARARGS },
	 { (char *)"iEngine_CreateThingMesh", _wrap_iEngine_CreateThingMesh, METH_VARARGS },
	 { (char *)"iEngine_GetSectors", _wrap_iEngine_GetSectors, METH_VARARGS },
	 { (char *)"iEngine_GetMeshFactories", _wrap_iEngine_GetMeshFactories, METH_VARARGS },
	 { (char *)"iEngine_GetMeshes", _wrap_iEngine_GetMeshes, METH_VARARGS },
	 { (char *)"iEngine_GetCollections", _wrap_iEngine_GetCollections, METH_VARARGS },
	 { (char *)"iEngine_GetCameraPositions", _wrap_iEngine_GetCameraPositions, METH_VARARGS },
	 { (char *)"iEngine_GetTextureList", _wrap_iEngine_GetTextureList, METH_VARARGS },
	 { (char *)"iEngine_GetMaterialList", _wrap_iEngine_GetMaterialList, METH_VARARGS },
	 { (char *)"iEngine_GetVariableList", _wrap_iEngine_GetVariableList, METH_VARARGS },
	 { (char *)"iEngine_CreateRegion", _wrap_iEngine_CreateRegion, METH_VARARGS },
	 { (char *)"iEngine_GetRegions", _wrap_iEngine_GetRegions, METH_VARARGS },
	 { (char *)"iEngine_FindMaterial", _wrap_iEngine_FindMaterial, METH_VARARGS },
	 { (char *)"iEngine_FindTexture", _wrap_iEngine_FindTexture, METH_VARARGS },
	 { (char *)"iEngine_FindSector", _wrap_iEngine_FindSector, METH_VARARGS },
	 { (char *)"iEngine_FindMeshObject", _wrap_iEngine_FindMeshObject, METH_VARARGS },
	 { (char *)"iEngine_FindMeshFactory", _wrap_iEngine_FindMeshFactory, METH_VARARGS },
	 { (char *)"iEngine_FindCameraPosition", _wrap_iEngine_FindCameraPosition, METH_VARARGS },
	 { (char *)"iEngine_FindCollection", _wrap_iEngine_FindCollection, METH_VARARGS },
	 { (char *)"iEngine_SetLightingCacheMode", _wrap_iEngine_SetLightingCacheMode, METH_VARARGS },
	 { (char *)"iEngine_GetLightingCacheMode", _wrap_iEngine_GetLightingCacheMode, METH_VARARGS },
	 { (char *)"iEngine_SetFastMeshThresshold", _wrap_iEngine_SetFastMeshThresshold, METH_VARARGS },
	 { (char *)"iEngine_GetFastMeshThresshold", _wrap_iEngine_GetFastMeshThresshold, METH_VARARGS },
	 { (char *)"iEngine_SetClearZBuf", _wrap_iEngine_SetClearZBuf, METH_VARARGS },
	 { (char *)"iEngine_GetClearZBuf", _wrap_iEngine_GetClearZBuf, METH_VARARGS },
	 { (char *)"iEngine_GetDefaultClearZBuf", _wrap_iEngine_GetDefaultClearZBuf, METH_VARARGS },
	 { (char *)"iEngine_SetClearScreen", _wrap_iEngine_SetClearScreen, METH_VARARGS },
	 { (char *)"iEngine_GetClearScreen", _wrap_iEngine_GetClearScreen, METH_VARARGS },
	 { (char *)"iEngine_GetDefaultClearScreen", _wrap_iEngine_GetDefaultClearScreen, METH_VARARGS },
	 { (char *)"iEngine_SetMaxLightmapSize", _wrap_iEngine_SetMaxLightmapSize, METH_VARARGS },
	 { (char *)"iEngine_GetMaxLightmapSize", _wrap_iEngine_GetMaxLightmapSize, METH_VARARGS },
	 { (char *)"iEngine_GetDefaultMaxLightmapSize", _wrap_iEngine_GetDefaultMaxLightmapSize, METH_VARARGS },
	 { (char *)"iEngine_GetLightmapsRequirePO2", _wrap_iEngine_GetLightmapsRequirePO2, METH_VARARGS },
	 { (char *)"iEngine_GetMaxLightmapAspectRatio", _wrap_iEngine_GetMaxLightmapAspectRatio, METH_VARARGS },
	 { (char *)"iEngine_ResetWorldSpecificSettings", _wrap_iEngine_ResetWorldSpecificSettings, METH_VARARGS },
	 { (char *)"iEngine_CreateCamera", _wrap_iEngine_CreateCamera, METH_VARARGS },
	 { (char *)"iEngine_CreateLight", _wrap_iEngine_CreateLight, METH_VARARGS },
	 { (char *)"iEngine_FindLight", _wrap_iEngine_FindLight, METH_VARARGS },
	 { (char *)"iEngine_FindLightID", _wrap_iEngine_FindLightID, METH_VARARGS },
	 { (char *)"iEngine_GetLightIterator", _wrap_iEngine_GetLightIterator, METH_VARARGS },
	 { (char *)"iEngine_CreateDynLight", _wrap_iEngine_CreateDynLight, METH_VARARGS },
	 { (char *)"iEngine_RemoveDynLight", _wrap_iEngine_RemoveDynLight, METH_VARARGS },
	 { (char *)"iEngine_GetFirstDynLight", _wrap_iEngine_GetFirstDynLight, METH_VARARGS },
	 { (char *)"iEngine_GetBeginDrawFlags", _wrap_iEngine_GetBeginDrawFlags, METH_VARARGS },
	 { (char *)"iEngine_GetTopLevelClipper", _wrap_iEngine_GetTopLevelClipper, METH_VARARGS },
	 { (char *)"iEngine_CreateMeshFactory", _wrap_iEngine_CreateMeshFactory, METH_VARARGS },
	 { (char *)"iEngine_CreateLoaderContext", _wrap_iEngine_CreateLoaderContext, METH_VARARGS },
	 { (char *)"iEngine_LoadMeshFactory", _wrap_iEngine_LoadMeshFactory, METH_VARARGS },
	 { (char *)"iEngine_CreateMeshWrapper", _wrap_iEngine_CreateMeshWrapper, METH_VARARGS },
	 { (char *)"iEngine_LoadMeshWrapper", _wrap_iEngine_LoadMeshWrapper, METH_VARARGS },
	 { (char *)"iEngine_Draw", _wrap_iEngine_Draw, METH_VARARGS },
	 { (char *)"iEngine_SetContext", _wrap_iEngine_SetContext, METH_VARARGS },
	 { (char *)"iEngine_GetContext", _wrap_iEngine_GetContext, METH_VARARGS },
	 { (char *)"iEngine_SetAmbientLight", _wrap_iEngine_SetAmbientLight, METH_VARARGS },
	 { (char *)"iEngine_GetAmbientLight", _wrap_iEngine_GetAmbientLight, METH_VARARGS },
	 { (char *)"iEngine_GetNearbyLights", _wrap_iEngine_GetNearbyLights, METH_VARARGS },
	 { (char *)"iEngine_GetNearbySectors", _wrap_iEngine_GetNearbySectors, METH_VARARGS },
	 { (char *)"iEngine_GetNearbyObjects", _wrap_iEngine_GetNearbyObjects, METH_VARARGS },
	 { (char *)"iEngine_GetNearbyMeshes", _wrap_iEngine_GetNearbyMeshes, METH_VARARGS },
	 { (char *)"iEngine_GetVisibleObjects", _wrap_iEngine_GetVisibleObjects, METH_VARARGS },
	 { (char *)"iEngine_GetVisibleMeshes", _wrap_iEngine_GetVisibleMeshes, METH_VARARGS },
	 { (char *)"iEngine_RemoveObject", _wrap_iEngine_RemoveObject, METH_VARARGS },
	 { (char *)"iEngine_SetCacheManager", _wrap_iEngine_SetCacheManager, METH_VARARGS },
	 { (char *)"iEngine_GetCacheManager", _wrap_iEngine_GetCacheManager, METH_VARARGS },
	 { (char *)"iEngine_GetDefaultAmbientLight", _wrap_iEngine_GetDefaultAmbientLight, METH_VARARGS },
	 { (char *)"iEngine_CreateFrustumView", _wrap_iEngine_CreateFrustumView, METH_VARARGS },
	 { (char *)"iEngine_CreateObjectWatcher", _wrap_iEngine_CreateObjectWatcher, METH_VARARGS },
	 { (char *)"iEngine_WantToDie", _wrap_iEngine_WantToDie, METH_VARARGS },
	 { (char *)"delete_iEngine", _wrap_delete_iEngine, METH_VARARGS },
	 { (char *)"iEngine_swigregister", iEngine_swigregister, METH_VARARGS },
	 { (char *)"iCamera_Clone", _wrap_iCamera_Clone, METH_VARARGS },
	 { (char *)"iCamera_GetFOV", _wrap_iCamera_GetFOV, METH_VARARGS },
	 { (char *)"iCamera_GetInvFOV", _wrap_iCamera_GetInvFOV, METH_VARARGS },
	 { (char *)"iCamera_GetFOVAngle", _wrap_iCamera_GetFOVAngle, METH_VARARGS },
	 { (char *)"iCamera_SetFOV", _wrap_iCamera_SetFOV, METH_VARARGS },
	 { (char *)"iCamera_SetFOVAngle", _wrap_iCamera_SetFOVAngle, METH_VARARGS },
	 { (char *)"iCamera_GetShiftX", _wrap_iCamera_GetShiftX, METH_VARARGS },
	 { (char *)"iCamera_GetShiftY", _wrap_iCamera_GetShiftY, METH_VARARGS },
	 { (char *)"iCamera_SetPerspectiveCenter", _wrap_iCamera_SetPerspectiveCenter, METH_VARARGS },
	 { (char *)"iCamera_GetTransform", _wrap_iCamera_GetTransform, METH_VARARGS },
	 { (char *)"iCamera_SetTransform", _wrap_iCamera_SetTransform, METH_VARARGS },
	 { (char *)"iCamera_MoveWorld", _wrap_iCamera_MoveWorld, METH_VARARGS },
	 { (char *)"iCamera_Move", _wrap_iCamera_Move, METH_VARARGS },
	 { (char *)"iCamera_MoveWorldUnrestricted", _wrap_iCamera_MoveWorldUnrestricted, METH_VARARGS },
	 { (char *)"iCamera_MoveUnrestricted", _wrap_iCamera_MoveUnrestricted, METH_VARARGS },
	 { (char *)"iCamera_GetSector", _wrap_iCamera_GetSector, METH_VARARGS },
	 { (char *)"iCamera_SetSector", _wrap_iCamera_SetSector, METH_VARARGS },
	 { (char *)"iCamera_Correct", _wrap_iCamera_Correct, METH_VARARGS },
	 { (char *)"iCamera_IsMirrored", _wrap_iCamera_IsMirrored, METH_VARARGS },
	 { (char *)"iCamera_SetMirrored", _wrap_iCamera_SetMirrored, METH_VARARGS },
	 { (char *)"iCamera_GetHit", _wrap_iCamera_GetHit, METH_VARARGS },
	 { (char *)"iCamera_GetFarPlane", _wrap_iCamera_GetFarPlane, METH_VARARGS },
	 { (char *)"iCamera_SetFarPlane", _wrap_iCamera_SetFarPlane, METH_VARARGS },
	 { (char *)"iCamera_GetCameraNumber", _wrap_iCamera_GetCameraNumber, METH_VARARGS },
	 { (char *)"iCamera_Perspective", _wrap_iCamera_Perspective, METH_VARARGS },
	 { (char *)"iCamera_InvPerspective", _wrap_iCamera_InvPerspective, METH_VARARGS },
	 { (char *)"iCamera_OnlyPortals", _wrap_iCamera_OnlyPortals, METH_VARARGS },
	 { (char *)"iCamera_GetOnlyPortals", _wrap_iCamera_GetOnlyPortals, METH_VARARGS },
	 { (char *)"delete_iCamera", _wrap_delete_iCamera, METH_VARARGS },
	 { (char *)"iCamera_swigregister", iCamera_swigregister, METH_VARARGS },
	 { (char *)"iCameraPosition_QueryObject", _wrap_iCameraPosition_QueryObject, METH_VARARGS },
	 { (char *)"iCameraPosition_Clone", _wrap_iCameraPosition_Clone, METH_VARARGS },
	 { (char *)"iCameraPosition_GetSector", _wrap_iCameraPosition_GetSector, METH_VARARGS },
	 { (char *)"iCameraPosition_SetSector", _wrap_iCameraPosition_SetSector, METH_VARARGS },
	 { (char *)"iCameraPosition_GetPosition", _wrap_iCameraPosition_GetPosition, METH_VARARGS },
	 { (char *)"iCameraPosition_SetPosition", _wrap_iCameraPosition_SetPosition, METH_VARARGS },
	 { (char *)"iCameraPosition_GetUpwardVector", _wrap_iCameraPosition_GetUpwardVector, METH_VARARGS },
	 { (char *)"iCameraPosition_SetUpwardVector", _wrap_iCameraPosition_SetUpwardVector, METH_VARARGS },
	 { (char *)"iCameraPosition_GetForwardVector", _wrap_iCameraPosition_GetForwardVector, METH_VARARGS },
	 { (char *)"iCameraPosition_SetForwardVector", _wrap_iCameraPosition_SetForwardVector, METH_VARARGS },
	 { (char *)"iCameraPosition_Set", _wrap_iCameraPosition_Set, METH_VARARGS },
	 { (char *)"iCameraPosition_Load", _wrap_iCameraPosition_Load, METH_VARARGS },
	 { (char *)"iCameraPosition_SetFarPlane", _wrap_iCameraPosition_SetFarPlane, METH_VARARGS },
	 { (char *)"iCameraPosition_ClearFarPlane", _wrap_iCameraPosition_ClearFarPlane, METH_VARARGS },
	 { (char *)"iCameraPosition_GetFarPlane", _wrap_iCameraPosition_GetFarPlane, METH_VARARGS },
	 { (char *)"delete_iCameraPosition", _wrap_delete_iCameraPosition, METH_VARARGS },
	 { (char *)"iCameraPosition_swigregister", iCameraPosition_swigregister, METH_VARARGS },
	 { (char *)"iCameraPositionList_scfGetID", _wrap_iCameraPositionList_scfGetID, METH_VARARGS },
	 { (char *)"iCameraPositionList_NewCameraPosition", _wrap_iCameraPositionList_NewCameraPosition, METH_VARARGS },
	 { (char *)"iCameraPositionList_GetCount", _wrap_iCameraPositionList_GetCount, METH_VARARGS },
	 { (char *)"iCameraPositionList_Get", _wrap_iCameraPositionList_Get, METH_VARARGS },
	 { (char *)"iCameraPositionList_Add", _wrap_iCameraPositionList_Add, METH_VARARGS },
	 { (char *)"iCameraPositionList_Remove", _wrap_iCameraPositionList_Remove, METH_VARARGS },
	 { (char *)"iCameraPositionList_RemoveAll", _wrap_iCameraPositionList_RemoveAll, METH_VARARGS },
	 { (char *)"iCameraPositionList_Find", _wrap_iCameraPositionList_Find, METH_VARARGS },
	 { (char *)"iCameraPositionList_FindByName", _wrap_iCameraPositionList_FindByName, METH_VARARGS },
	 { (char *)"delete_iCameraPositionList", _wrap_delete_iCameraPositionList, METH_VARARGS },
	 { (char *)"iCameraPositionList_swigregister", iCameraPositionList_swigregister, METH_VARARGS },
	 { (char *)"iTextureCallback_scfGetID", _wrap_iTextureCallback_scfGetID, METH_VARARGS },
	 { (char *)"iTextureCallback_UseTexture", _wrap_iTextureCallback_UseTexture, METH_VARARGS },
	 { (char *)"delete_iTextureCallback", _wrap_delete_iTextureCallback, METH_VARARGS },
	 { (char *)"iTextureCallback_swigregister", iTextureCallback_swigregister, METH_VARARGS },
	 { (char *)"iTextureWrapper_QueryObject", _wrap_iTextureWrapper_QueryObject, METH_VARARGS },
	 { (char *)"iTextureWrapper_Clone", _wrap_iTextureWrapper_Clone, METH_VARARGS },
	 { (char *)"iTextureWrapper_SetImageFile", _wrap_iTextureWrapper_SetImageFile, METH_VARARGS },
	 { (char *)"iTextureWrapper_GetImageFile", _wrap_iTextureWrapper_GetImageFile, METH_VARARGS },
	 { (char *)"iTextureWrapper_SetTextureHandle", _wrap_iTextureWrapper_SetTextureHandle, METH_VARARGS },
	 { (char *)"iTextureWrapper_GetTextureHandle", _wrap_iTextureWrapper_GetTextureHandle, METH_VARARGS },
	 { (char *)"iTextureWrapper_SetKeyColor", _wrap_iTextureWrapper_SetKeyColor, METH_VARARGS },
	 { (char *)"iTextureWrapper_GetKeyColor", _wrap_iTextureWrapper_GetKeyColor, METH_VARARGS },
	 { (char *)"iTextureWrapper_SetFlags", _wrap_iTextureWrapper_SetFlags, METH_VARARGS },
	 { (char *)"iTextureWrapper_GetFlags", _wrap_iTextureWrapper_GetFlags, METH_VARARGS },
	 { (char *)"iTextureWrapper_Register", _wrap_iTextureWrapper_Register, METH_VARARGS },
	 { (char *)"iTextureWrapper_SetUseCallback", _wrap_iTextureWrapper_SetUseCallback, METH_VARARGS },
	 { (char *)"iTextureWrapper_GetUseCallback", _wrap_iTextureWrapper_GetUseCallback, METH_VARARGS },
	 { (char *)"iTextureWrapper_Visit", _wrap_iTextureWrapper_Visit, METH_VARARGS },
	 { (char *)"iTextureWrapper_SetKeepImage", _wrap_iTextureWrapper_SetKeepImage, METH_VARARGS },
	 { (char *)"iTextureWrapper_KeepImage", _wrap_iTextureWrapper_KeepImage, METH_VARARGS },
	 { (char *)"delete_iTextureWrapper", _wrap_delete_iTextureWrapper, METH_VARARGS },
	 { (char *)"iTextureWrapper_swigregister", iTextureWrapper_swigregister, METH_VARARGS },
	 { (char *)"iTextureList_NewTexture", _wrap_iTextureList_NewTexture, METH_VARARGS },
	 { (char *)"iTextureList_GetCount", _wrap_iTextureList_GetCount, METH_VARARGS },
	 { (char *)"iTextureList_Get", _wrap_iTextureList_Get, METH_VARARGS },
	 { (char *)"iTextureList_Add", _wrap_iTextureList_Add, METH_VARARGS },
	 { (char *)"iTextureList_Remove", _wrap_iTextureList_Remove, METH_VARARGS },
	 { (char *)"iTextureList_RemoveAll", _wrap_iTextureList_RemoveAll, METH_VARARGS },
	 { (char *)"iTextureList_Find", _wrap_iTextureList_Find, METH_VARARGS },
	 { (char *)"iTextureList_FindByName", _wrap_iTextureList_FindByName, METH_VARARGS },
	 { (char *)"delete_iTextureList", _wrap_delete_iTextureList, METH_VARARGS },
	 { (char *)"iTextureList_swigregister", iTextureList_swigregister, METH_VARARGS },
	 { (char *)"iMaterialWrapper_QueryObject", _wrap_iMaterialWrapper_QueryObject, METH_VARARGS },
	 { (char *)"iMaterialWrapper_Clone", _wrap_iMaterialWrapper_Clone, METH_VARARGS },
	 { (char *)"iMaterialWrapper_SetMaterialHandle", _wrap_iMaterialWrapper_SetMaterialHandle, METH_VARARGS },
	 { (char *)"iMaterialWrapper_GetMaterialHandle", _wrap_iMaterialWrapper_GetMaterialHandle, METH_VARARGS },
	 { (char *)"iMaterialWrapper_SetMaterial", _wrap_iMaterialWrapper_SetMaterial, METH_VARARGS },
	 { (char *)"iMaterialWrapper_GetMaterial", _wrap_iMaterialWrapper_GetMaterial, METH_VARARGS },
	 { (char *)"iMaterialWrapper_Register", _wrap_iMaterialWrapper_Register, METH_VARARGS },
	 { (char *)"iMaterialWrapper_Visit", _wrap_iMaterialWrapper_Visit, METH_VARARGS },
	 { (char *)"delete_iMaterialWrapper", _wrap_delete_iMaterialWrapper, METH_VARARGS },
	 { (char *)"iMaterialWrapper_swigregister", iMaterialWrapper_swigregister, METH_VARARGS },
	 { (char *)"iMaterialEngine_scfGetID", _wrap_iMaterialEngine_scfGetID, METH_VARARGS },
	 { (char *)"iMaterialEngine_GetTextureWrapper", _wrap_iMaterialEngine_GetTextureWrapper, METH_VARARGS },
	 { (char *)"delete_iMaterialEngine", _wrap_delete_iMaterialEngine, METH_VARARGS },
	 { (char *)"iMaterialEngine_swigregister", iMaterialEngine_swigregister, METH_VARARGS },
	 { (char *)"iMaterialList_scfGetID", _wrap_iMaterialList_scfGetID, METH_VARARGS },
	 { (char *)"iMaterialList_NewMaterial", _wrap_iMaterialList_NewMaterial, METH_VARARGS },
	 { (char *)"iMaterialList_GetCount", _wrap_iMaterialList_GetCount, METH_VARARGS },
	 { (char *)"iMaterialList_Get", _wrap_iMaterialList_Get, METH_VARARGS },
	 { (char *)"iMaterialList_Add", _wrap_iMaterialList_Add, METH_VARARGS },
	 { (char *)"iMaterialList_Remove", _wrap_iMaterialList_Remove, METH_VARARGS },
	 { (char *)"iMaterialList_RemoveAll", _wrap_iMaterialList_RemoveAll, METH_VARARGS },
	 { (char *)"iMaterialList_Find", _wrap_iMaterialList_Find, METH_VARARGS },
	 { (char *)"iMaterialList_FindByName", _wrap_iMaterialList_FindByName, METH_VARARGS },
	 { (char *)"delete_iMaterialList", _wrap_delete_iMaterialList, METH_VARARGS },
	 { (char *)"iMaterialList_swigregister", iMaterialList_swigregister, METH_VARARGS },
	 { (char *)"iMeshDrawCallback_scfGetID", _wrap_iMeshDrawCallback_scfGetID, METH_VARARGS },
	 { (char *)"iMeshDrawCallback_BeforeDrawing", _wrap_iMeshDrawCallback_BeforeDrawing, METH_VARARGS },
	 { (char *)"delete_iMeshDrawCallback", _wrap_delete_iMeshDrawCallback, METH_VARARGS },
	 { (char *)"iMeshDrawCallback_swigregister", iMeshDrawCallback_swigregister, METH_VARARGS },
	 { (char *)"iMeshWrapper_QueryObject", _wrap_iMeshWrapper_QueryObject, METH_VARARGS },
	 { (char *)"iMeshWrapper_GetMeshObject", _wrap_iMeshWrapper_GetMeshObject, METH_VARARGS },
	 { (char *)"iMeshWrapper_SetMeshObject", _wrap_iMeshWrapper_SetMeshObject, METH_VARARGS },
	 { (char *)"iMeshWrapper_GetLightingInfo", _wrap_iMeshWrapper_GetLightingInfo, METH_VARARGS },
	 { (char *)"iMeshWrapper_GetShadowReceiver", _wrap_iMeshWrapper_GetShadowReceiver, METH_VARARGS },
	 { (char *)"iMeshWrapper_GetVisibilityNumber", _wrap_iMeshWrapper_GetVisibilityNumber, METH_VARARGS },
	 { (char *)"iMeshWrapper_GetFactory", _wrap_iMeshWrapper_GetFactory, METH_VARARGS },
	 { (char *)"iMeshWrapper_SetFactory", _wrap_iMeshWrapper_SetFactory, METH_VARARGS },
	 { (char *)"iMeshWrapper_DeferUpdateLighting", _wrap_iMeshWrapper_DeferUpdateLighting, METH_VARARGS },
	 { (char *)"iMeshWrapper_UpdateLighting", _wrap_iMeshWrapper_UpdateLighting, METH_VARARGS },
	 { (char *)"iMeshWrapper_GetMovable", _wrap_iMeshWrapper_GetMovable, METH_VARARGS },
	 { (char *)"iMeshWrapper_PlaceMesh", _wrap_iMeshWrapper_PlaceMesh, METH_VARARGS },
	 { (char *)"iMeshWrapper_HitBeamBBox", _wrap_iMeshWrapper_HitBeamBBox, METH_VARARGS },
	 { (char *)"iMeshWrapper_HitBeamOutline", _wrap_iMeshWrapper_HitBeamOutline, METH_VARARGS },
	 { (char *)"iMeshWrapper_HitBeamObject", _wrap_iMeshWrapper_HitBeamObject, METH_VARARGS },
	 { (char *)"iMeshWrapper_HitBeam", _wrap_iMeshWrapper_HitBeam, METH_VARARGS },
	 { (char *)"iMeshWrapper_SetDrawCallback", _wrap_iMeshWrapper_SetDrawCallback, METH_VARARGS },
	 { (char *)"iMeshWrapper_RemoveDrawCallback", _wrap_iMeshWrapper_RemoveDrawCallback, METH_VARARGS },
	 { (char *)"iMeshWrapper_GetDrawCallbackCount", _wrap_iMeshWrapper_GetDrawCallbackCount, METH_VARARGS },
	 { (char *)"iMeshWrapper_GetDrawCallback", _wrap_iMeshWrapper_GetDrawCallback, METH_VARARGS },
	 { (char *)"iMeshWrapper_SetRenderPriority", _wrap_iMeshWrapper_SetRenderPriority, METH_VARARGS },
	 { (char *)"iMeshWrapper_GetRenderPriority", _wrap_iMeshWrapper_GetRenderPriority, METH_VARARGS },
	 { (char *)"iMeshWrapper_GetFlags", _wrap_iMeshWrapper_GetFlags, METH_VARARGS },
	 { (char *)"iMeshWrapper_SetZBufMode", _wrap_iMeshWrapper_SetZBufMode, METH_VARARGS },
	 { (char *)"iMeshWrapper_GetZBufMode", _wrap_iMeshWrapper_GetZBufMode, METH_VARARGS },
	 { (char *)"iMeshWrapper_HardTransform", _wrap_iMeshWrapper_HardTransform, METH_VARARGS },
	 { (char *)"iMeshWrapper_GetWorldBoundingBox", _wrap_iMeshWrapper_GetWorldBoundingBox, METH_VARARGS },
	 { (char *)"iMeshWrapper_GetTransformedBoundingBox", _wrap_iMeshWrapper_GetTransformedBoundingBox, METH_VARARGS },
	 { (char *)"iMeshWrapper_GetScreenBoundingBox", _wrap_iMeshWrapper_GetScreenBoundingBox, METH_VARARGS },
	 { (char *)"iMeshWrapper_GetChildren", _wrap_iMeshWrapper_GetChildren, METH_VARARGS },
	 { (char *)"iMeshWrapper_GetParentContainer", _wrap_iMeshWrapper_GetParentContainer, METH_VARARGS },
	 { (char *)"iMeshWrapper_SetParentContainer", _wrap_iMeshWrapper_SetParentContainer, METH_VARARGS },
	 { (char *)"iMeshWrapper_GetRadius", _wrap_iMeshWrapper_GetRadius, METH_VARARGS },
	 { (char *)"iMeshWrapper_Draw", _wrap_iMeshWrapper_Draw, METH_VARARGS },
	 { (char *)"delete_iMeshWrapper", _wrap_delete_iMeshWrapper, METH_VARARGS },
	 { (char *)"iMeshWrapper_swigregister", iMeshWrapper_swigregister, METH_VARARGS },
	 { (char *)"iMeshFactoryWrapper_QueryObject", _wrap_iMeshFactoryWrapper_QueryObject, METH_VARARGS },
	 { (char *)"iMeshFactoryWrapper_GetMeshObjectFactory", _wrap_iMeshFactoryWrapper_GetMeshObjectFactory, METH_VARARGS },
	 { (char *)"iMeshFactoryWrapper_SetMeshObjectFactory", _wrap_iMeshFactoryWrapper_SetMeshObjectFactory, METH_VARARGS },
	 { (char *)"iMeshFactoryWrapper_HardTransform", _wrap_iMeshFactoryWrapper_HardTransform, METH_VARARGS },
	 { (char *)"iMeshFactoryWrapper_CreateMeshWrapper", _wrap_iMeshFactoryWrapper_CreateMeshWrapper, METH_VARARGS },
	 { (char *)"iMeshFactoryWrapper_GetParentContainer", _wrap_iMeshFactoryWrapper_GetParentContainer, METH_VARARGS },
	 { (char *)"iMeshFactoryWrapper_SetParentContainer", _wrap_iMeshFactoryWrapper_SetParentContainer, METH_VARARGS },
	 { (char *)"iMeshFactoryWrapper_GetChildren", _wrap_iMeshFactoryWrapper_GetChildren, METH_VARARGS },
	 { (char *)"iMeshFactoryWrapper_GetTransform", _wrap_iMeshFactoryWrapper_GetTransform, METH_VARARGS },
	 { (char *)"iMeshFactoryWrapper_SetTransform", _wrap_iMeshFactoryWrapper_SetTransform, METH_VARARGS },
	 { (char *)"delete_iMeshFactoryWrapper", _wrap_delete_iMeshFactoryWrapper, METH_VARARGS },
	 { (char *)"iMeshFactoryWrapper_swigregister", iMeshFactoryWrapper_swigregister, METH_VARARGS },
	 { (char *)"iMeshList_scfGetID", _wrap_iMeshList_scfGetID, METH_VARARGS },
	 { (char *)"iMeshList_GetCount", _wrap_iMeshList_GetCount, METH_VARARGS },
	 { (char *)"iMeshList_Get", _wrap_iMeshList_Get, METH_VARARGS },
	 { (char *)"iMeshList_Add", _wrap_iMeshList_Add, METH_VARARGS },
	 { (char *)"iMeshList_Remove", _wrap_iMeshList_Remove, METH_VARARGS },
	 { (char *)"iMeshList_RemoveAll", _wrap_iMeshList_RemoveAll, METH_VARARGS },
	 { (char *)"iMeshList_Find", _wrap_iMeshList_Find, METH_VARARGS },
	 { (char *)"iMeshList_FindByName", _wrap_iMeshList_FindByName, METH_VARARGS },
	 { (char *)"delete_iMeshList", _wrap_delete_iMeshList, METH_VARARGS },
	 { (char *)"iMeshList_swigregister", iMeshList_swigregister, METH_VARARGS },
	 { (char *)"iMeshFactoryList_scfGetID", _wrap_iMeshFactoryList_scfGetID, METH_VARARGS },
	 { (char *)"iMeshFactoryList_GetCount", _wrap_iMeshFactoryList_GetCount, METH_VARARGS },
	 { (char *)"iMeshFactoryList_Get", _wrap_iMeshFactoryList_Get, METH_VARARGS },
	 { (char *)"iMeshFactoryList_Add", _wrap_iMeshFactoryList_Add, METH_VARARGS },
	 { (char *)"iMeshFactoryList_Remove", _wrap_iMeshFactoryList_Remove, METH_VARARGS },
	 { (char *)"iMeshFactoryList_RemoveAll", _wrap_iMeshFactoryList_RemoveAll, METH_VARARGS },
	 { (char *)"iMeshFactoryList_Find", _wrap_iMeshFactoryList_Find, METH_VARARGS },
	 { (char *)"iMeshFactoryList_FindByName", _wrap_iMeshFactoryList_FindByName, METH_VARARGS },
	 { (char *)"delete_iMeshFactoryList", _wrap_delete_iMeshFactoryList, METH_VARARGS },
	 { (char *)"iMeshFactoryList_swigregister", iMeshFactoryList_swigregister, METH_VARARGS },
	 { (char *)"iMeshWrapperIterator_scfGetID", _wrap_iMeshWrapperIterator_scfGetID, METH_VARARGS },
	 { (char *)"iMeshWrapperIterator_Next", _wrap_iMeshWrapperIterator_Next, METH_VARARGS },
	 { (char *)"iMeshWrapperIterator_Reset", _wrap_iMeshWrapperIterator_Reset, METH_VARARGS },
	 { (char *)"iMeshWrapperIterator_HasNext", _wrap_iMeshWrapperIterator_HasNext, METH_VARARGS },
	 { (char *)"delete_iMeshWrapperIterator", _wrap_delete_iMeshWrapperIterator, METH_VARARGS },
	 { (char *)"iMeshWrapperIterator_swigregister", iMeshWrapperIterator_swigregister, METH_VARARGS },
	 { (char *)"iMovableListener_MovableChanged", _wrap_iMovableListener_MovableChanged, METH_VARARGS },
	 { (char *)"iMovableListener_MovableDestroyed", _wrap_iMovableListener_MovableDestroyed, METH_VARARGS },
	 { (char *)"delete_iMovableListener", _wrap_delete_iMovableListener, METH_VARARGS },
	 { (char *)"iMovableListener_swigregister", iMovableListener_swigregister, METH_VARARGS },
	 { (char *)"iMovable_GetParent", _wrap_iMovable_GetParent, METH_VARARGS },
	 { (char *)"iMovable_SetParent", _wrap_iMovable_SetParent, METH_VARARGS },
	 { (char *)"iMovable_SetSector", _wrap_iMovable_SetSector, METH_VARARGS },
	 { (char *)"iMovable_ClearSectors", _wrap_iMovable_ClearSectors, METH_VARARGS },
	 { (char *)"iMovable_GetSectors", _wrap_iMovable_GetSectors, METH_VARARGS },
	 { (char *)"iMovable_InSector", _wrap_iMovable_InSector, METH_VARARGS },
	 { (char *)"iMovable_SetPosition", _wrap_iMovable_SetPosition, METH_VARARGS },
	 { (char *)"iMovable_GetPosition", _wrap_iMovable_GetPosition, METH_VARARGS },
	 { (char *)"iMovable_GetFullPosition", _wrap_iMovable_GetFullPosition, METH_VARARGS },
	 { (char *)"iMovable_SetTransform", _wrap_iMovable_SetTransform, METH_VARARGS },
	 { (char *)"iMovable_GetTransform", _wrap_iMovable_GetTransform, METH_VARARGS },
	 { (char *)"iMovable_GetFullTransform", _wrap_iMovable_GetFullTransform, METH_VARARGS },
	 { (char *)"iMovable_MovePosition", _wrap_iMovable_MovePosition, METH_VARARGS },
	 { (char *)"iMovable_Transform", _wrap_iMovable_Transform, METH_VARARGS },
	 { (char *)"iMovable_AddListener", _wrap_iMovable_AddListener, METH_VARARGS },
	 { (char *)"iMovable_RemoveListener", _wrap_iMovable_RemoveListener, METH_VARARGS },
	 { (char *)"iMovable_UpdateMove", _wrap_iMovable_UpdateMove, METH_VARARGS },
	 { (char *)"iMovable_GetUpdateNumber", _wrap_iMovable_GetUpdateNumber, METH_VARARGS },
	 { (char *)"iMovable_IsTransformIdentity", _wrap_iMovable_IsTransformIdentity, METH_VARARGS },
	 { (char *)"iMovable_IsFullTransformIdentity", _wrap_iMovable_IsFullTransformIdentity, METH_VARARGS },
	 { (char *)"iMovable_TransformIdentity", _wrap_iMovable_TransformIdentity, METH_VARARGS },
	 { (char *)"delete_iMovable", _wrap_delete_iMovable, METH_VARARGS },
	 { (char *)"iMovable_swigregister", iMovable_swigregister, METH_VARARGS },
	 { (char *)"iVisibilityObjectIterator_scfGetID", _wrap_iVisibilityObjectIterator_scfGetID, METH_VARARGS },
	 { (char *)"iVisibilityObjectIterator_HasNext", _wrap_iVisibilityObjectIterator_HasNext, METH_VARARGS },
	 { (char *)"iVisibilityObjectIterator_Next", _wrap_iVisibilityObjectIterator_Next, METH_VARARGS },
	 { (char *)"iVisibilityObjectIterator_Reset", _wrap_iVisibilityObjectIterator_Reset, METH_VARARGS },
	 { (char *)"delete_iVisibilityObjectIterator", _wrap_delete_iVisibilityObjectIterator, METH_VARARGS },
	 { (char *)"iVisibilityObjectIterator_swigregister", iVisibilityObjectIterator_swigregister, METH_VARARGS },
	 { (char *)"iVisibilityCuller_Setup", _wrap_iVisibilityCuller_Setup, METH_VARARGS },
	 { (char *)"iVisibilityCuller_RegisterVisObject", _wrap_iVisibilityCuller_RegisterVisObject, METH_VARARGS },
	 { (char *)"iVisibilityCuller_UnregisterVisObject", _wrap_iVisibilityCuller_UnregisterVisObject, METH_VARARGS },
	 { (char *)"iVisibilityCuller_VisTest", _wrap_iVisibilityCuller_VisTest, METH_VARARGS },
	 { (char *)"iVisibilityCuller_IntersectSegment", _wrap_iVisibilityCuller_IntersectSegment, METH_VARARGS },
	 { (char *)"iVisibilityCuller_CastShadows", _wrap_iVisibilityCuller_CastShadows, METH_VARARGS },
	 { (char *)"iVisibilityCuller_GetCurrentVisibilityNumber", _wrap_iVisibilityCuller_GetCurrentVisibilityNumber, METH_VARARGS },
	 { (char *)"delete_iVisibilityCuller", _wrap_delete_iVisibilityCuller, METH_VARARGS },
	 { (char *)"iVisibilityCuller_swigregister", iVisibilityCuller_swigregister, METH_VARARGS },
	 { (char *)"iVisibilityObject_scfGetID", _wrap_iVisibilityObject_scfGetID, METH_VARARGS },
	 { (char *)"iVisibilityObject_GetMovable", _wrap_iVisibilityObject_GetMovable, METH_VARARGS },
	 { (char *)"iVisibilityObject_GetMeshWrapper", _wrap_iVisibilityObject_GetMeshWrapper, METH_VARARGS },
	 { (char *)"iVisibilityObject_SetVisibilityNumber", _wrap_iVisibilityObject_SetVisibilityNumber, METH_VARARGS },
	 { (char *)"iVisibilityObject_GetVisibilityNumber", _wrap_iVisibilityObject_GetVisibilityNumber, METH_VARARGS },
	 { (char *)"iVisibilityObject_GetObjectModel", _wrap_iVisibilityObject_GetObjectModel, METH_VARARGS },
	 { (char *)"iVisibilityObject_GetCullerFlags", _wrap_iVisibilityObject_GetCullerFlags, METH_VARARGS },
	 { (char *)"delete_iVisibilityObject", _wrap_delete_iVisibilityObject, METH_VARARGS },
	 { (char *)"iVisibilityObject_swigregister", iVisibilityObject_swigregister, METH_VARARGS },
	 { (char *)"csModelConverterFormat_Name_set", _wrap_csModelConverterFormat_Name_set, METH_VARARGS },
	 { (char *)"csModelConverterFormat_Name_get", _wrap_csModelConverterFormat_Name_get, METH_VARARGS },
	 { (char *)"csModelConverterFormat_CanLoad_set", _wrap_csModelConverterFormat_CanLoad_set, METH_VARARGS },
	 { (char *)"csModelConverterFormat_CanLoad_get", _wrap_csModelConverterFormat_CanLoad_get, METH_VARARGS },
	 { (char *)"csModelConverterFormat_CanSave_set", _wrap_csModelConverterFormat_CanSave_set, METH_VARARGS },
	 { (char *)"csModelConverterFormat_CanSave_get", _wrap_csModelConverterFormat_CanSave_get, METH_VARARGS },
	 { (char *)"new_csModelConverterFormat", _wrap_new_csModelConverterFormat, METH_VARARGS },
	 { (char *)"delete_csModelConverterFormat", _wrap_delete_csModelConverterFormat, METH_VARARGS },
	 { (char *)"csModelConverterFormat_swigregister", csModelConverterFormat_swigregister, METH_VARARGS },
	 { (char *)"iModelConverter_GetFormatCount", _wrap_iModelConverter_GetFormatCount, METH_VARARGS },
	 { (char *)"iModelConverter_GetFormat", _wrap_iModelConverter_GetFormat, METH_VARARGS },
	 { (char *)"iModelConverter_Load", _wrap_iModelConverter_Load, METH_VARARGS },
	 { (char *)"iModelConverter_Save", _wrap_iModelConverter_Save, METH_VARARGS },
	 { (char *)"delete_iModelConverter", _wrap_delete_iModelConverter, METH_VARARGS },
	 { (char *)"iModelConverter_swigregister", iModelConverter_swigregister, METH_VARARGS },
	 { (char *)"iMeshObjectDrawCallback_scfGetID", _wrap_iMeshObjectDrawCallback_scfGetID, METH_VARARGS },
	 { (char *)"iMeshObjectDrawCallback_BeforeDrawing", _wrap_iMeshObjectDrawCallback_BeforeDrawing, METH_VARARGS },
	 { (char *)"delete_iMeshObjectDrawCallback", _wrap_delete_iMeshObjectDrawCallback, METH_VARARGS },
	 { (char *)"iMeshObjectDrawCallback_swigregister", iMeshObjectDrawCallback_swigregister, METH_VARARGS },
	 { (char *)"iMeshObject_GetFactory", _wrap_iMeshObject_GetFactory, METH_VARARGS },
	 { (char *)"iMeshObject_DrawTest", _wrap_iMeshObject_DrawTest, METH_VARARGS },
	 { (char *)"iMeshObject_UpdateLighting", _wrap_iMeshObject_UpdateLighting, METH_VARARGS },
	 { (char *)"iMeshObject_Draw", _wrap_iMeshObject_Draw, METH_VARARGS },
	 { (char *)"iMeshObject_SetVisibleCallback", _wrap_iMeshObject_SetVisibleCallback, METH_VARARGS },
	 { (char *)"iMeshObject_GetVisibleCallback", _wrap_iMeshObject_GetVisibleCallback, METH_VARARGS },
	 { (char *)"iMeshObject_NextFrame", _wrap_iMeshObject_NextFrame, METH_VARARGS },
	 { (char *)"iMeshObject_HardTransform", _wrap_iMeshObject_HardTransform, METH_VARARGS },
	 { (char *)"iMeshObject_SupportsHardTransform", _wrap_iMeshObject_SupportsHardTransform, METH_VARARGS },
	 { (char *)"iMeshObject_HitBeamOutline", _wrap_iMeshObject_HitBeamOutline, METH_VARARGS },
	 { (char *)"iMeshObject_HitBeamObject", _wrap_iMeshObject_HitBeamObject, METH_VARARGS },
	 { (char *)"iMeshObject_SetLogicalParent", _wrap_iMeshObject_SetLogicalParent, METH_VARARGS },
	 { (char *)"iMeshObject_GetLogicalParent", _wrap_iMeshObject_GetLogicalParent, METH_VARARGS },
	 { (char *)"iMeshObject_GetObjectModel", _wrap_iMeshObject_GetObjectModel, METH_VARARGS },
	 { (char *)"iMeshObject_SetColor", _wrap_iMeshObject_SetColor, METH_VARARGS },
	 { (char *)"iMeshObject_GetColor", _wrap_iMeshObject_GetColor, METH_VARARGS },
	 { (char *)"iMeshObject_SetMaterialWrapper", _wrap_iMeshObject_SetMaterialWrapper, METH_VARARGS },
	 { (char *)"iMeshObject_GetMaterialWrapper", _wrap_iMeshObject_GetMaterialWrapper, METH_VARARGS },
	 { (char *)"iMeshObject_GetPortalCount", _wrap_iMeshObject_GetPortalCount, METH_VARARGS },
	 { (char *)"iMeshObject_GetPortal", _wrap_iMeshObject_GetPortal, METH_VARARGS },
	 { (char *)"delete_iMeshObject", _wrap_delete_iMeshObject, METH_VARARGS },
	 { (char *)"iMeshObject_swigregister", iMeshObject_swigregister, METH_VARARGS },
	 { (char *)"iMeshObjectFactory_NewInstance", _wrap_iMeshObjectFactory_NewInstance, METH_VARARGS },
	 { (char *)"iMeshObjectFactory_HardTransform", _wrap_iMeshObjectFactory_HardTransform, METH_VARARGS },
	 { (char *)"iMeshObjectFactory_SupportsHardTransform", _wrap_iMeshObjectFactory_SupportsHardTransform, METH_VARARGS },
	 { (char *)"iMeshObjectFactory_SetLogicalParent", _wrap_iMeshObjectFactory_SetLogicalParent, METH_VARARGS },
	 { (char *)"iMeshObjectFactory_GetLogicalParent", _wrap_iMeshObjectFactory_GetLogicalParent, METH_VARARGS },
	 { (char *)"iMeshObjectFactory_GetObjectModel", _wrap_iMeshObjectFactory_GetObjectModel, METH_VARARGS },
	 { (char *)"delete_iMeshObjectFactory", _wrap_delete_iMeshObjectFactory, METH_VARARGS },
	 { (char *)"iMeshObjectFactory_swigregister", iMeshObjectFactory_swigregister, METH_VARARGS },
	 { (char *)"iMeshObjectType_NewFactory", _wrap_iMeshObjectType_NewFactory, METH_VARARGS },
	 { (char *)"delete_iMeshObjectType", _wrap_delete_iMeshObjectType, METH_VARARGS },
	 { (char *)"iMeshObjectType_swigregister", iMeshObjectType_swigregister, METH_VARARGS },
	 { (char *)"csSprite2DVertex_pos_set", _wrap_csSprite2DVertex_pos_set, METH_VARARGS },
	 { (char *)"csSprite2DVertex_pos_get", _wrap_csSprite2DVertex_pos_get, METH_VARARGS },
	 { (char *)"csSprite2DVertex_color_init_set", _wrap_csSprite2DVertex_color_init_set, METH_VARARGS },
	 { (char *)"csSprite2DVertex_color_init_get", _wrap_csSprite2DVertex_color_init_get, METH_VARARGS },
	 { (char *)"csSprite2DVertex_color_set", _wrap_csSprite2DVertex_color_set, METH_VARARGS },
	 { (char *)"csSprite2DVertex_color_get", _wrap_csSprite2DVertex_color_get, METH_VARARGS },
	 { (char *)"csSprite2DVertex_u_set", _wrap_csSprite2DVertex_u_set, METH_VARARGS },
	 { (char *)"csSprite2DVertex_u_get", _wrap_csSprite2DVertex_u_get, METH_VARARGS },
	 { (char *)"csSprite2DVertex_v_set", _wrap_csSprite2DVertex_v_set, METH_VARARGS },
	 { (char *)"csSprite2DVertex_v_get", _wrap_csSprite2DVertex_v_get, METH_VARARGS },
	 { (char *)"new_csSprite2DVertex", _wrap_new_csSprite2DVertex, METH_VARARGS },
	 { (char *)"delete_csSprite2DVertex", _wrap_delete_csSprite2DVertex, METH_VARARGS },
	 { (char *)"csSprite2DVertex_swigregister", csSprite2DVertex_swigregister, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimationFrame_scfGetID", _wrap_iSprite2DUVAnimationFrame_scfGetID, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimationFrame_SetName", _wrap_iSprite2DUVAnimationFrame_SetName, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimationFrame_GetName", _wrap_iSprite2DUVAnimationFrame_GetName, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimationFrame_GetUVCoo", _wrap_iSprite2DUVAnimationFrame_GetUVCoo, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimationFrame_GetUVCount", _wrap_iSprite2DUVAnimationFrame_GetUVCount, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimationFrame_SetUV", _wrap_iSprite2DUVAnimationFrame_SetUV, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimationFrame_SetFrameData", _wrap_iSprite2DUVAnimationFrame_SetFrameData, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimationFrame_RemoveUV", _wrap_iSprite2DUVAnimationFrame_RemoveUV, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimationFrame_GetDuration", _wrap_iSprite2DUVAnimationFrame_GetDuration, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimationFrame_SetDuration", _wrap_iSprite2DUVAnimationFrame_SetDuration, METH_VARARGS },
	 { (char *)"delete_iSprite2DUVAnimationFrame", _wrap_delete_iSprite2DUVAnimationFrame, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimationFrame_swigregister", iSprite2DUVAnimationFrame_swigregister, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimation_scfGetID", _wrap_iSprite2DUVAnimation_scfGetID, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimation_SetName", _wrap_iSprite2DUVAnimation_SetName, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimation_GetName", _wrap_iSprite2DUVAnimation_GetName, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimation_GetFrameCount", _wrap_iSprite2DUVAnimation_GetFrameCount, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimation_GetFrame", _wrap_iSprite2DUVAnimation_GetFrame, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimation_CreateFrame", _wrap_iSprite2DUVAnimation_CreateFrame, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimation_MoveFrame", _wrap_iSprite2DUVAnimation_MoveFrame, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimation_RemoveFrame", _wrap_iSprite2DUVAnimation_RemoveFrame, METH_VARARGS },
	 { (char *)"delete_iSprite2DUVAnimation", _wrap_delete_iSprite2DUVAnimation, METH_VARARGS },
	 { (char *)"iSprite2DUVAnimation_swigregister", iSprite2DUVAnimation_swigregister, METH_VARARGS },
	 { (char *)"iSprite2DFactoryState_scfGetID", _wrap_iSprite2DFactoryState_scfGetID, METH_VARARGS },
	 { (char *)"iSprite2DFactoryState_SetMaterialWrapper", _wrap_iSprite2DFactoryState_SetMaterialWrapper, METH_VARARGS },
	 { (char *)"iSprite2DFactoryState_GetMaterialWrapper", _wrap_iSprite2DFactoryState_GetMaterialWrapper, METH_VARARGS },
	 { (char *)"iSprite2DFactoryState_SetMixMode", _wrap_iSprite2DFactoryState_SetMixMode, METH_VARARGS },
	 { (char *)"iSprite2DFactoryState_GetMixMode", _wrap_iSprite2DFactoryState_GetMixMode, METH_VARARGS },
	 { (char *)"iSprite2DFactoryState_SetLighting", _wrap_iSprite2DFactoryState_SetLighting, METH_VARARGS },
	 { (char *)"iSprite2DFactoryState_HasLighting", _wrap_iSprite2DFactoryState_HasLighting, METH_VARARGS },
	 { (char *)"iSprite2DFactoryState_GetUVAnimationCount", _wrap_iSprite2DFactoryState_GetUVAnimationCount, METH_VARARGS },
	 { (char *)"iSprite2DFactoryState_CreateUVAnimation", _wrap_iSprite2DFactoryState_CreateUVAnimation, METH_VARARGS },
	 { (char *)"iSprite2DFactoryState_RemoveUVAnimation", _wrap_iSprite2DFactoryState_RemoveUVAnimation, METH_VARARGS },
	 { (char *)"iSprite2DFactoryState_GetUVAnimation", _wrap_iSprite2DFactoryState_GetUVAnimation, METH_VARARGS },
	 { (char *)"delete_iSprite2DFactoryState", _wrap_delete_iSprite2DFactoryState, METH_VARARGS },
	 { (char *)"iSprite2DFactoryState_swigregister", iSprite2DFactoryState_swigregister, METH_VARARGS },
	 { (char *)"iSprite2DState_GetVertices", _wrap_iSprite2DState_GetVertices, METH_VARARGS },
	 { (char *)"iSprite2DState_CreateRegularVertices", _wrap_iSprite2DState_CreateRegularVertices, METH_VARARGS },
	 { (char *)"iSprite2DState_SetUVAnimation", _wrap_iSprite2DState_SetUVAnimation, METH_VARARGS },
	 { (char *)"iSprite2DState_StopUVAnimation", _wrap_iSprite2DState_StopUVAnimation, METH_VARARGS },
	 { (char *)"iSprite2DState_PlayUVAnimation", _wrap_iSprite2DState_PlayUVAnimation, METH_VARARGS },
	 { (char *)"iSprite2DState_GetVertexByIndex", _wrap_iSprite2DState_GetVertexByIndex, METH_VARARGS },
	 { (char *)"delete_iSprite2DState", _wrap_delete_iSprite2DState, METH_VARARGS },
	 { (char *)"iSprite2DState_swigregister", iSprite2DState_swigregister, METH_VARARGS },
	 { (char *)"iSpriteFrame_scfGetID", _wrap_iSpriteFrame_scfGetID, METH_VARARGS },
	 { (char *)"iSpriteFrame_SetName", _wrap_iSpriteFrame_SetName, METH_VARARGS },
	 { (char *)"iSpriteFrame_GetName", _wrap_iSpriteFrame_GetName, METH_VARARGS },
	 { (char *)"iSpriteFrame_GetAnmIndex", _wrap_iSpriteFrame_GetAnmIndex, METH_VARARGS },
	 { (char *)"iSpriteFrame_GetTexIndex", _wrap_iSpriteFrame_GetTexIndex, METH_VARARGS },
	 { (char *)"delete_iSpriteFrame", _wrap_delete_iSpriteFrame, METH_VARARGS },
	 { (char *)"iSpriteFrame_swigregister", iSpriteFrame_swigregister, METH_VARARGS },
	 { (char *)"iSpriteAction_scfGetID", _wrap_iSpriteAction_scfGetID, METH_VARARGS },
	 { (char *)"iSpriteAction_SetName", _wrap_iSpriteAction_SetName, METH_VARARGS },
	 { (char *)"iSpriteAction_GetName", _wrap_iSpriteAction_GetName, METH_VARARGS },
	 { (char *)"iSpriteAction_GetFrameCount", _wrap_iSpriteAction_GetFrameCount, METH_VARARGS },
	 { (char *)"iSpriteAction_GetFrame", _wrap_iSpriteAction_GetFrame, METH_VARARGS },
	 { (char *)"iSpriteAction_GetNextFrame", _wrap_iSpriteAction_GetNextFrame, METH_VARARGS },
	 { (char *)"iSpriteAction_GetFrameDelay", _wrap_iSpriteAction_GetFrameDelay, METH_VARARGS },
	 { (char *)"iSpriteAction_GetFrameDisplacement", _wrap_iSpriteAction_GetFrameDisplacement, METH_VARARGS },
	 { (char *)"iSpriteAction_AddFrame", _wrap_iSpriteAction_AddFrame, METH_VARARGS },
	 { (char *)"delete_iSpriteAction", _wrap_delete_iSpriteAction, METH_VARARGS },
	 { (char *)"iSpriteAction_swigregister", iSpriteAction_swigregister, METH_VARARGS },
	 { (char *)"iSpriteSocket_scfGetID", _wrap_iSpriteSocket_scfGetID, METH_VARARGS },
	 { (char *)"iSpriteSocket_SetName", _wrap_iSpriteSocket_SetName, METH_VARARGS },
	 { (char *)"iSpriteSocket_GetName", _wrap_iSpriteSocket_GetName, METH_VARARGS },
	 { (char *)"iSpriteSocket_SetMeshWrapper", _wrap_iSpriteSocket_SetMeshWrapper, METH_VARARGS },
	 { (char *)"iSpriteSocket_GetMeshWrapper", _wrap_iSpriteSocket_GetMeshWrapper, METH_VARARGS },
	 { (char *)"iSpriteSocket_SetTriangleIndex", _wrap_iSpriteSocket_SetTriangleIndex, METH_VARARGS },
	 { (char *)"iSpriteSocket_GetTriangleIndex", _wrap_iSpriteSocket_GetTriangleIndex, METH_VARARGS },
	 { (char *)"delete_iSpriteSocket", _wrap_delete_iSpriteSocket, METH_VARARGS },
	 { (char *)"iSpriteSocket_swigregister", iSpriteSocket_swigregister, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_scfGetID", _wrap_iSprite3DFactoryState_scfGetID, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_SetMaterialWrapper", _wrap_iSprite3DFactoryState_SetMaterialWrapper, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetMaterialWrapper", _wrap_iSprite3DFactoryState_GetMaterialWrapper, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_AddVertices", _wrap_iSprite3DFactoryState_AddVertices, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetVertexCount", _wrap_iSprite3DFactoryState_GetVertexCount, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetVertex", _wrap_iSprite3DFactoryState_GetVertex, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_SetVertex", _wrap_iSprite3DFactoryState_SetVertex, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetVertices", _wrap_iSprite3DFactoryState_GetVertices, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_SetVertices", _wrap_iSprite3DFactoryState_SetVertices, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetTexel", _wrap_iSprite3DFactoryState_GetTexel, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_SetTexel", _wrap_iSprite3DFactoryState_SetTexel, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetTexels", _wrap_iSprite3DFactoryState_GetTexels, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_SetTexels", _wrap_iSprite3DFactoryState_SetTexels, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetNormal", _wrap_iSprite3DFactoryState_GetNormal, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_SetNormal", _wrap_iSprite3DFactoryState_SetNormal, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetNormals", _wrap_iSprite3DFactoryState_GetNormals, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_SetNormals", _wrap_iSprite3DFactoryState_SetNormals, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_AddTriangle", _wrap_iSprite3DFactoryState_AddTriangle, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetTriangle", _wrap_iSprite3DFactoryState_GetTriangle, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetTriangles", _wrap_iSprite3DFactoryState_GetTriangles, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetTriangleCount", _wrap_iSprite3DFactoryState_GetTriangleCount, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_SetTriangleCount", _wrap_iSprite3DFactoryState_SetTriangleCount, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_SetTriangles", _wrap_iSprite3DFactoryState_SetTriangles, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_AddFrame", _wrap_iSprite3DFactoryState_AddFrame, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_FindFrame", _wrap_iSprite3DFactoryState_FindFrame, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetFrameCount", _wrap_iSprite3DFactoryState_GetFrameCount, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetFrame", _wrap_iSprite3DFactoryState_GetFrame, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_AddAction", _wrap_iSprite3DFactoryState_AddAction, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_FindAction", _wrap_iSprite3DFactoryState_FindAction, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetFirstAction", _wrap_iSprite3DFactoryState_GetFirstAction, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetActionCount", _wrap_iSprite3DFactoryState_GetActionCount, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetAction", _wrap_iSprite3DFactoryState_GetAction, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_AddSocket", _wrap_iSprite3DFactoryState_AddSocket, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_FindSocket", _wrap_iSprite3DFactoryState_FindSocket, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetSocketCount", _wrap_iSprite3DFactoryState_GetSocketCount, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetSocket", _wrap_iSprite3DFactoryState_GetSocket, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_EnableSkeletalAnimation", _wrap_iSprite3DFactoryState_EnableSkeletalAnimation, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetSkeleton", _wrap_iSprite3DFactoryState_GetSkeleton, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_EnableTweening", _wrap_iSprite3DFactoryState_EnableTweening, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_IsTweeningEnabled", _wrap_iSprite3DFactoryState_IsTweeningEnabled, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_SetLightingQuality", _wrap_iSprite3DFactoryState_SetLightingQuality, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetLightingQuality", _wrap_iSprite3DFactoryState_GetLightingQuality, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_SetLightingQualityConfig", _wrap_iSprite3DFactoryState_SetLightingQualityConfig, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetLightingQualityConfig", _wrap_iSprite3DFactoryState_GetLightingQualityConfig, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_SetLodLevelConfig", _wrap_iSprite3DFactoryState_SetLodLevelConfig, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetLodLevelConfig", _wrap_iSprite3DFactoryState_GetLodLevelConfig, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_MergeNormals", _wrap_iSprite3DFactoryState_MergeNormals, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_SetMixMode", _wrap_iSprite3DFactoryState_SetMixMode, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_GetMixMode", _wrap_iSprite3DFactoryState_GetMixMode, METH_VARARGS },
	 { (char *)"delete_iSprite3DFactoryState", _wrap_delete_iSprite3DFactoryState, METH_VARARGS },
	 { (char *)"iSprite3DFactoryState_swigregister", iSprite3DFactoryState_swigregister, METH_VARARGS },
	 { (char *)"iSprite3DState_SetMaterialWrapper", _wrap_iSprite3DState_SetMaterialWrapper, METH_VARARGS },
	 { (char *)"iSprite3DState_GetMaterialWrapper", _wrap_iSprite3DState_GetMaterialWrapper, METH_VARARGS },
	 { (char *)"iSprite3DState_SetMixMode", _wrap_iSprite3DState_SetMixMode, METH_VARARGS },
	 { (char *)"iSprite3DState_GetMixMode", _wrap_iSprite3DState_GetMixMode, METH_VARARGS },
	 { (char *)"iSprite3DState_SetLighting", _wrap_iSprite3DState_SetLighting, METH_VARARGS },
	 { (char *)"iSprite3DState_IsLighting", _wrap_iSprite3DState_IsLighting, METH_VARARGS },
	 { (char *)"iSprite3DState_GetSkeletonState", _wrap_iSprite3DState_GetSkeletonState, METH_VARARGS },
	 { (char *)"iSprite3DState_SetFrame", _wrap_iSprite3DState_SetFrame, METH_VARARGS },
	 { (char *)"iSprite3DState_GetCurFrame", _wrap_iSprite3DState_GetCurFrame, METH_VARARGS },
	 { (char *)"iSprite3DState_GetFrameCount", _wrap_iSprite3DState_GetFrameCount, METH_VARARGS },
	 { (char *)"iSprite3DState_SetAction", _wrap_iSprite3DState_SetAction, METH_VARARGS },
	 { (char *)"iSprite3DState_SetReverseAction", _wrap_iSprite3DState_SetReverseAction, METH_VARARGS },
	 { (char *)"iSprite3DState_SetSingleStepAction", _wrap_iSprite3DState_SetSingleStepAction, METH_VARARGS },
	 { (char *)"iSprite3DState_SetOverrideAction", _wrap_iSprite3DState_SetOverrideAction, METH_VARARGS },
	 { (char *)"iSprite3DState_PropagateAction", _wrap_iSprite3DState_PropagateAction, METH_VARARGS },
	 { (char *)"iSprite3DState_GetCurAction", _wrap_iSprite3DState_GetCurAction, METH_VARARGS },
	 { (char *)"iSprite3DState_GetReverseAction", _wrap_iSprite3DState_GetReverseAction, METH_VARARGS },
	 { (char *)"iSprite3DState_EnableTweening", _wrap_iSprite3DState_EnableTweening, METH_VARARGS },
	 { (char *)"iSprite3DState_IsTweeningEnabled", _wrap_iSprite3DState_IsTweeningEnabled, METH_VARARGS },
	 { (char *)"iSprite3DState_UnsetTexture", _wrap_iSprite3DState_UnsetTexture, METH_VARARGS },
	 { (char *)"iSprite3DState_GetLightingQuality", _wrap_iSprite3DState_GetLightingQuality, METH_VARARGS },
	 { (char *)"iSprite3DState_SetLocalLightingQuality", _wrap_iSprite3DState_SetLocalLightingQuality, METH_VARARGS },
	 { (char *)"iSprite3DState_SetLightingQualityConfig", _wrap_iSprite3DState_SetLightingQualityConfig, METH_VARARGS },
	 { (char *)"iSprite3DState_GetLightingQualityConfig", _wrap_iSprite3DState_GetLightingQualityConfig, METH_VARARGS },
	 { (char *)"iSprite3DState_SetLodLevelConfig", _wrap_iSprite3DState_SetLodLevelConfig, METH_VARARGS },
	 { (char *)"iSprite3DState_GetLodLevelConfig", _wrap_iSprite3DState_GetLodLevelConfig, METH_VARARGS },
	 { (char *)"iSprite3DState_IsLodEnabled", _wrap_iSprite3DState_IsLodEnabled, METH_VARARGS },
	 { (char *)"iSprite3DState_SetBaseColor", _wrap_iSprite3DState_SetBaseColor, METH_VARARGS },
	 { (char *)"iSprite3DState_GetBaseColor", _wrap_iSprite3DState_GetBaseColor, METH_VARARGS },
	 { (char *)"iSprite3DState_FindSocket", _wrap_iSprite3DState_FindSocket, METH_VARARGS },
	 { (char *)"delete_iSprite3DState", _wrap_delete_iSprite3DState, METH_VARARGS },
	 { (char *)"iSprite3DState_swigregister", iSprite3DState_swigregister, METH_VARARGS },
	 { (char *)"iThingFactoryState_scfGetID", _wrap_iThingFactoryState_scfGetID, METH_VARARGS },
	 { (char *)"iThingFactoryState_GetPrivateObject", _wrap_iThingFactoryState_GetPrivateObject, METH_VARARGS },
	 { (char *)"iThingFactoryState_CompressVertices", _wrap_iThingFactoryState_CompressVertices, METH_VARARGS },
	 { (char *)"iThingFactoryState_GetPolygonCount", _wrap_iThingFactoryState_GetPolygonCount, METH_VARARGS },
	 { (char *)"iThingFactoryState_GetPolygon", _wrap_iThingFactoryState_GetPolygon, METH_VARARGS },
	 { (char *)"iThingFactoryState_CreatePolygon", _wrap_iThingFactoryState_CreatePolygon, METH_VARARGS },
	 { (char *)"iThingFactoryState_FindPolygonIndex", _wrap_iThingFactoryState_FindPolygonIndex, METH_VARARGS },
	 { (char *)"iThingFactoryState_RemovePolygon", _wrap_iThingFactoryState_RemovePolygon, METH_VARARGS },
	 { (char *)"iThingFactoryState_RemovePolygons", _wrap_iThingFactoryState_RemovePolygons, METH_VARARGS },
	 { (char *)"iThingFactoryState_GetPortalCount", _wrap_iThingFactoryState_GetPortalCount, METH_VARARGS },
	 { (char *)"iThingFactoryState_GetPortal", _wrap_iThingFactoryState_GetPortal, METH_VARARGS },
	 { (char *)"iThingFactoryState_GetPortalPolygon", _wrap_iThingFactoryState_GetPortalPolygon, METH_VARARGS },
	 { (char *)"iThingFactoryState_GetVertexCount", _wrap_iThingFactoryState_GetVertexCount, METH_VARARGS },
	 { (char *)"iThingFactoryState_GetVertex", _wrap_iThingFactoryState_GetVertex, METH_VARARGS },
	 { (char *)"iThingFactoryState_GetVertices", _wrap_iThingFactoryState_GetVertices, METH_VARARGS },
	 { (char *)"iThingFactoryState_CreateVertex", _wrap_iThingFactoryState_CreateVertex, METH_VARARGS },
	 { (char *)"iThingFactoryState_SetVertex", _wrap_iThingFactoryState_SetVertex, METH_VARARGS },
	 { (char *)"iThingFactoryState_DeleteVertex", _wrap_iThingFactoryState_DeleteVertex, METH_VARARGS },
	 { (char *)"iThingFactoryState_DeleteVertices", _wrap_iThingFactoryState_DeleteVertices, METH_VARARGS },
	 { (char *)"iThingFactoryState_GetFlags", _wrap_iThingFactoryState_GetFlags, METH_VARARGS },
	 { (char *)"iThingFactoryState_IntersectSegment", _wrap_iThingFactoryState_IntersectSegment, METH_VARARGS },
	 { (char *)"iThingFactoryState_SetSmoothingFlag", _wrap_iThingFactoryState_SetSmoothingFlag, METH_VARARGS },
	 { (char *)"iThingFactoryState_GetSmoothingFlag", _wrap_iThingFactoryState_GetSmoothingFlag, METH_VARARGS },
	 { (char *)"iThingFactoryState_GetNormals", _wrap_iThingFactoryState_GetNormals, METH_VARARGS },
	 { (char *)"iThingFactoryState_GetCosinusFactor", _wrap_iThingFactoryState_GetCosinusFactor, METH_VARARGS },
	 { (char *)"iThingFactoryState_SetCosinusFactor", _wrap_iThingFactoryState_SetCosinusFactor, METH_VARARGS },
	 { (char *)"delete_iThingFactoryState", _wrap_delete_iThingFactoryState, METH_VARARGS },
	 { (char *)"iThingFactoryState_swigregister", iThingFactoryState_swigregister, METH_VARARGS },
	 { (char *)"iThingState_GetPrivateObject", _wrap_iThingState_GetPrivateObject, METH_VARARGS },
	 { (char *)"iThingState_GetFactory", _wrap_iThingState_GetFactory, METH_VARARGS },
	 { (char *)"iThingState_GetPolygon", _wrap_iThingState_GetPolygon, METH_VARARGS },
	 { (char *)"iThingState_FindPolygonIndex", _wrap_iThingState_FindPolygonIndex, METH_VARARGS },
	 { (char *)"iThingState_GetPortalPolygon", _wrap_iThingState_GetPortalPolygon, METH_VARARGS },
	 { (char *)"iThingState_GetVertexW", _wrap_iThingState_GetVertexW, METH_VARARGS },
	 { (char *)"iThingState_GetVerticesW", _wrap_iThingState_GetVerticesW, METH_VARARGS },
	 { (char *)"iThingState_GetVertexC", _wrap_iThingState_GetVertexC, METH_VARARGS },
	 { (char *)"iThingState_GetVerticesC", _wrap_iThingState_GetVerticesC, METH_VARARGS },
	 { (char *)"iThingState_GetMovingOption", _wrap_iThingState_GetMovingOption, METH_VARARGS },
	 { (char *)"iThingState_SetMovingOption", _wrap_iThingState_SetMovingOption, METH_VARARGS },
	 { (char *)"iThingState_IntersectSegment", _wrap_iThingState_IntersectSegment, METH_VARARGS },
	 { (char *)"iThingState_Prepare", _wrap_iThingState_Prepare, METH_VARARGS },
	 { (char *)"iThingState_Unprepare", _wrap_iThingState_Unprepare, METH_VARARGS },
	 { (char *)"iThingState_ReplaceMaterial", _wrap_iThingState_ReplaceMaterial, METH_VARARGS },
	 { (char *)"iThingState_ClearReplacedMaterials", _wrap_iThingState_ClearReplacedMaterials, METH_VARARGS },
	 { (char *)"delete_iThingState", _wrap_delete_iThingState, METH_VARARGS },
	 { (char *)"iThingState_swigregister", iThingState_swigregister, METH_VARARGS },
	 { (char *)"iThingEnvironment_scfGetID", _wrap_iThingEnvironment_scfGetID, METH_VARARGS },
	 { (char *)"iThingEnvironment_Clear", _wrap_iThingEnvironment_Clear, METH_VARARGS },
	 { (char *)"iThingEnvironment_GetLightmapCellSize", _wrap_iThingEnvironment_GetLightmapCellSize, METH_VARARGS },
	 { (char *)"iThingEnvironment_SetLightmapCellSize", _wrap_iThingEnvironment_SetLightmapCellSize, METH_VARARGS },
	 { (char *)"iThingEnvironment_GetDefaultLightmapCellSize", _wrap_iThingEnvironment_GetDefaultLightmapCellSize, METH_VARARGS },
	 { (char *)"delete_iThingEnvironment", _wrap_delete_iThingEnvironment, METH_VARARGS },
	 { (char *)"iThingEnvironment_swigregister", iThingEnvironment_swigregister, METH_VARARGS },
	 { (char *)"iLightMap_scfGetID", _wrap_iLightMap_scfGetID, METH_VARARGS },
	 { (char *)"iLightMap_GetMapData", _wrap_iLightMap_GetMapData, METH_VARARGS },
	 { (char *)"iLightMap_GetWidth", _wrap_iLightMap_GetWidth, METH_VARARGS },
	 { (char *)"iLightMap_GetHeight", _wrap_iLightMap_GetHeight, METH_VARARGS },
	 { (char *)"iLightMap_GetRealWidth", _wrap_iLightMap_GetRealWidth, METH_VARARGS },
	 { (char *)"iLightMap_GetRealHeight", _wrap_iLightMap_GetRealHeight, METH_VARARGS },
	 { (char *)"iLightMap_GetCacheData", _wrap_iLightMap_GetCacheData, METH_VARARGS },
	 { (char *)"iLightMap_SetCacheData", _wrap_iLightMap_SetCacheData, METH_VARARGS },
	 { (char *)"iLightMap_GetMeanLighting", _wrap_iLightMap_GetMeanLighting, METH_VARARGS },
	 { (char *)"iLightMap_GetSize", _wrap_iLightMap_GetSize, METH_VARARGS },
	 { (char *)"delete_iLightMap", _wrap_delete_iLightMap, METH_VARARGS },
	 { (char *)"iLightMap_swigregister", iLightMap_swigregister, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_scfGetID", _wrap_iPolygon3DStatic_scfGetID, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_GetPrivateObject", _wrap_iPolygon3DStatic_GetPrivateObject, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_GetName", _wrap_iPolygon3DStatic_GetName, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_SetName", _wrap_iPolygon3DStatic_SetName, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_GetParent", _wrap_iPolygon3DStatic_GetParent, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_GetMaterialHandle", _wrap_iPolygon3DStatic_GetMaterialHandle, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_SetMaterial", _wrap_iPolygon3DStatic_SetMaterial, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_GetMaterial", _wrap_iPolygon3DStatic_GetMaterial, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_GetVertexCount", _wrap_iPolygon3DStatic_GetVertexCount, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_GetVertexIndices", _wrap_iPolygon3DStatic_GetVertexIndices, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_GetVertex", _wrap_iPolygon3DStatic_GetVertex, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_CreateVertex", _wrap_iPolygon3DStatic_CreateVertex, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_GetAlpha", _wrap_iPolygon3DStatic_GetAlpha, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_SetAlpha", _wrap_iPolygon3DStatic_SetAlpha, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_CreatePlane", _wrap_iPolygon3DStatic_CreatePlane, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_GetFlags", _wrap_iPolygon3DStatic_GetFlags, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_CreateNullPortal", _wrap_iPolygon3DStatic_CreateNullPortal, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_CreatePortal", _wrap_iPolygon3DStatic_CreatePortal, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_GetPortal", _wrap_iPolygon3DStatic_GetPortal, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_SetTextureSpace", _wrap_iPolygon3DStatic_SetTextureSpace, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_GetTextureSpace", _wrap_iPolygon3DStatic_GetTextureSpace, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_EnableTextureMapping", _wrap_iPolygon3DStatic_EnableTextureMapping, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_IsTextureMappingEnabled", _wrap_iPolygon3DStatic_IsTextureMappingEnabled, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_CopyTextureType", _wrap_iPolygon3DStatic_CopyTextureType, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_GetObjectPlane", _wrap_iPolygon3DStatic_GetObjectPlane, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_IsTransparent", _wrap_iPolygon3DStatic_IsTransparent, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_SetMixMode", _wrap_iPolygon3DStatic_SetMixMode, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_GetMixMode", _wrap_iPolygon3DStatic_GetMixMode, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_IntersectSegment", _wrap_iPolygon3DStatic_IntersectSegment, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_IntersectRay", _wrap_iPolygon3DStatic_IntersectRay, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_IntersectRayNoBackFace", _wrap_iPolygon3DStatic_IntersectRayNoBackFace, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_IntersectRayPlane", _wrap_iPolygon3DStatic_IntersectRayPlane, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_PointOnPolygon", _wrap_iPolygon3DStatic_PointOnPolygon, METH_VARARGS },
	 { (char *)"delete_iPolygon3DStatic", _wrap_delete_iPolygon3DStatic, METH_VARARGS },
	 { (char *)"iPolygon3DStatic_swigregister", iPolygon3DStatic_swigregister, METH_VARARGS },
	 { (char *)"iPolygon3D_GetPrivateObject", _wrap_iPolygon3D_GetPrivateObject, METH_VARARGS },
	 { (char *)"iPolygon3D_GetParent", _wrap_iPolygon3D_GetParent, METH_VARARGS },
	 { (char *)"iPolygon3D_GetLightMap", _wrap_iPolygon3D_GetLightMap, METH_VARARGS },
	 { (char *)"iPolygon3D_GetTexture", _wrap_iPolygon3D_GetTexture, METH_VARARGS },
	 { (char *)"iPolygon3D_GetStaticData", _wrap_iPolygon3D_GetStaticData, METH_VARARGS },
	 { (char *)"iPolygon3D_GetVertexW", _wrap_iPolygon3D_GetVertexW, METH_VARARGS },
	 { (char *)"iPolygon3D_GetVertexC", _wrap_iPolygon3D_GetVertexC, METH_VARARGS },
	 { (char *)"iPolygon3D_GetWorldPlane", _wrap_iPolygon3D_GetWorldPlane, METH_VARARGS },
	 { (char *)"iPolygon3D_ComputeCameraPlane", _wrap_iPolygon3D_ComputeCameraPlane, METH_VARARGS },
	 { (char *)"iPolygon3D_SetMaterial", _wrap_iPolygon3D_SetMaterial, METH_VARARGS },
	 { (char *)"iPolygon3D_GetMaterial", _wrap_iPolygon3D_GetMaterial, METH_VARARGS },
	 { (char *)"delete_iPolygon3D", _wrap_delete_iPolygon3D, METH_VARARGS },
	 { (char *)"iPolygon3D_swigregister", iPolygon3D_swigregister, METH_VARARGS },
	 { (char *)"csLightMapMapping_m_obj2tex_set", _wrap_csLightMapMapping_m_obj2tex_set, METH_VARARGS },
	 { (char *)"csLightMapMapping_m_obj2tex_get", _wrap_csLightMapMapping_m_obj2tex_get, METH_VARARGS },
	 { (char *)"csLightMapMapping_v_obj2tex_set", _wrap_csLightMapMapping_v_obj2tex_set, METH_VARARGS },
	 { (char *)"csLightMapMapping_v_obj2tex_get", _wrap_csLightMapMapping_v_obj2tex_get, METH_VARARGS },
	 { (char *)"csLightMapMapping_fdu_set", _wrap_csLightMapMapping_fdu_set, METH_VARARGS },
	 { (char *)"csLightMapMapping_fdu_get", _wrap_csLightMapMapping_fdu_get, METH_VARARGS },
	 { (char *)"csLightMapMapping_fdv_set", _wrap_csLightMapMapping_fdv_set, METH_VARARGS },
	 { (char *)"csLightMapMapping_fdv_get", _wrap_csLightMapMapping_fdv_get, METH_VARARGS },
	 { (char *)"csLightMapMapping_Imin_u_set", _wrap_csLightMapMapping_Imin_u_set, METH_VARARGS },
	 { (char *)"csLightMapMapping_Imin_u_get", _wrap_csLightMapMapping_Imin_u_get, METH_VARARGS },
	 { (char *)"csLightMapMapping_Imin_v_set", _wrap_csLightMapMapping_Imin_v_set, METH_VARARGS },
	 { (char *)"csLightMapMapping_Imin_v_get", _wrap_csLightMapMapping_Imin_v_get, METH_VARARGS },
	 { (char *)"csLightMapMapping_Fmin_u_set", _wrap_csLightMapMapping_Fmin_u_set, METH_VARARGS },
	 { (char *)"csLightMapMapping_Fmin_u_get", _wrap_csLightMapMapping_Fmin_u_get, METH_VARARGS },
	 { (char *)"csLightMapMapping_Fmin_v_set", _wrap_csLightMapMapping_Fmin_v_set, METH_VARARGS },
	 { (char *)"csLightMapMapping_Fmin_v_get", _wrap_csLightMapMapping_Fmin_v_get, METH_VARARGS },
	 { (char *)"csLightMapMapping_Fmax_u_set", _wrap_csLightMapMapping_Fmax_u_set, METH_VARARGS },
	 { (char *)"csLightMapMapping_Fmax_u_get", _wrap_csLightMapMapping_Fmax_u_get, METH_VARARGS },
	 { (char *)"csLightMapMapping_Fmax_v_set", _wrap_csLightMapMapping_Fmax_v_set, METH_VARARGS },
	 { (char *)"csLightMapMapping_Fmax_v_get", _wrap_csLightMapMapping_Fmax_v_get, METH_VARARGS },
	 { (char *)"csLightMapMapping_shf_u_set", _wrap_csLightMapMapping_shf_u_set, METH_VARARGS },
	 { (char *)"csLightMapMapping_shf_u_get", _wrap_csLightMapMapping_shf_u_get, METH_VARARGS },
	 { (char *)"csLightMapMapping_w_set", _wrap_csLightMapMapping_w_set, METH_VARARGS },
	 { (char *)"csLightMapMapping_w_get", _wrap_csLightMapMapping_w_get, METH_VARARGS },
	 { (char *)"csLightMapMapping_h_set", _wrap_csLightMapMapping_h_set, METH_VARARGS },
	 { (char *)"csLightMapMapping_h_get", _wrap_csLightMapMapping_h_get, METH_VARARGS },
	 { (char *)"csLightMapMapping_w_orig_set", _wrap_csLightMapMapping_w_orig_set, METH_VARARGS },
	 { (char *)"csLightMapMapping_w_orig_get", _wrap_csLightMapMapping_w_orig_get, METH_VARARGS },
	 { (char *)"csLightMapMapping_GetFDU", _wrap_csLightMapMapping_GetFDU, METH_VARARGS },
	 { (char *)"csLightMapMapping_GetFDV", _wrap_csLightMapMapping_GetFDV, METH_VARARGS },
	 { (char *)"csLightMapMapping_GetWidth", _wrap_csLightMapMapping_GetWidth, METH_VARARGS },
	 { (char *)"csLightMapMapping_GetHeight", _wrap_csLightMapMapping_GetHeight, METH_VARARGS },
	 { (char *)"csLightMapMapping_GetShiftU", _wrap_csLightMapMapping_GetShiftU, METH_VARARGS },
	 { (char *)"csLightMapMapping_GetIMinU", _wrap_csLightMapMapping_GetIMinU, METH_VARARGS },
	 { (char *)"csLightMapMapping_GetIMinV", _wrap_csLightMapMapping_GetIMinV, METH_VARARGS },
	 { (char *)"csLightMapMapping_GetTextureBox", _wrap_csLightMapMapping_GetTextureBox, METH_VARARGS },
	 { (char *)"csLightMapMapping_GetOriginalWidth", _wrap_csLightMapMapping_GetOriginalWidth, METH_VARARGS },
	 { (char *)"new_csLightMapMapping", _wrap_new_csLightMapMapping, METH_VARARGS },
	 { (char *)"delete_csLightMapMapping", _wrap_delete_csLightMapMapping, METH_VARARGS },
	 { (char *)"csLightMapMapping_swigregister", csLightMapMapping_swigregister, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetMaterialHandle", _wrap_iPolygonTexture_GetMaterialHandle, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetMapping", _wrap_iPolygonTexture_GetMapping, METH_VARARGS },
	 { (char *)"iPolygonTexture_DynamicLightsDirty", _wrap_iPolygonTexture_DynamicLightsDirty, METH_VARARGS },
	 { (char *)"iPolygonTexture_RecalculateDynamicLights", _wrap_iPolygonTexture_RecalculateDynamicLights, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetLightMap", _wrap_iPolygonTexture_GetLightMap, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetLightCellSize", _wrap_iPolygonTexture_GetLightCellSize, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetLightCellShift", _wrap_iPolygonTexture_GetLightCellShift, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetCacheData", _wrap_iPolygonTexture_GetCacheData, METH_VARARGS },
	 { (char *)"iPolygonTexture_SetCacheData", _wrap_iPolygonTexture_SetCacheData, METH_VARARGS },
	 { (char *)"delete_iPolygonTexture", _wrap_delete_iPolygonTexture, METH_VARARGS },
	 { (char *)"iPolygonTexture_swigregister", iPolygonTexture_swigregister, METH_VARARGS },
	 { (char *)"iLoaderStatus_scfGetID", _wrap_iLoaderStatus_scfGetID, METH_VARARGS },
	 { (char *)"iLoaderStatus_IsReady", _wrap_iLoaderStatus_IsReady, METH_VARARGS },
	 { (char *)"iLoaderStatus_IsError", _wrap_iLoaderStatus_IsError, METH_VARARGS },
	 { (char *)"delete_iLoaderStatus", _wrap_delete_iLoaderStatus, METH_VARARGS },
	 { (char *)"iLoaderStatus_swigregister", iLoaderStatus_swigregister, METH_VARARGS },
	 { (char *)"iLoader_LoadImage", _wrap_iLoader_LoadImage, METH_VARARGS },
	 { (char *)"iLoader_LoadTexture", _wrap_iLoader_LoadTexture, METH_VARARGS },
	 { (char *)"iLoader_LoadSoundData", _wrap_iLoader_LoadSoundData, METH_VARARGS },
	 { (char *)"iLoader_LoadSound", _wrap_iLoader_LoadSound, METH_VARARGS },
	 { (char *)"iLoader_ThreadedLoadMapFile", _wrap_iLoader_ThreadedLoadMapFile, METH_VARARGS },
	 { (char *)"iLoader_LoadMapFile", _wrap_iLoader_LoadMapFile, METH_VARARGS },
	 { (char *)"iLoader_LoadLibraryFile", _wrap_iLoader_LoadLibraryFile, METH_VARARGS },
	 { (char *)"iLoader_LoadMeshObjectFactory", _wrap_iLoader_LoadMeshObjectFactory, METH_VARARGS },
	 { (char *)"iLoader_LoadMeshObject", _wrap_iLoader_LoadMeshObject, METH_VARARGS },
	 { (char *)"iLoader_LoadEffectFile", _wrap_iLoader_LoadEffectFile, METH_VARARGS },
	 { (char *)"delete_iLoader", _wrap_delete_iLoader, METH_VARARGS },
	 { (char *)"iLoader_swigregister", iLoader_swigregister, METH_VARARGS },
	 { (char *)"iLoaderPlugin_Parse", _wrap_iLoaderPlugin_Parse, METH_VARARGS },
	 { (char *)"delete_iLoaderPlugin", _wrap_delete_iLoaderPlugin, METH_VARARGS },
	 { (char *)"iLoaderPlugin_swigregister", iLoaderPlugin_swigregister, METH_VARARGS },
	 { (char *)"iBinaryLoaderPlugin_Parse", _wrap_iBinaryLoaderPlugin_Parse, METH_VARARGS },
	 { (char *)"delete_iBinaryLoaderPlugin", _wrap_delete_iBinaryLoaderPlugin, METH_VARARGS },
	 { (char *)"iBinaryLoaderPlugin_swigregister", iBinaryLoaderPlugin_swigregister, METH_VARARGS },
	 { (char *)"iSaver_scfGetID", _wrap_iSaver_scfGetID, METH_VARARGS },
	 { (char *)"iSaver_SaveMapFile", _wrap_iSaver_SaveMapFile, METH_VARARGS },
	 { (char *)"delete_iSaver", _wrap_delete_iSaver, METH_VARARGS },
	 { (char *)"iSaver_swigregister", iSaver_swigregister, METH_VARARGS },
	 { (char *)"iSoundHandle_IsStatic", _wrap_iSoundHandle_IsStatic, METH_VARARGS },
	 { (char *)"iSoundHandle_Play", _wrap_iSoundHandle_Play, METH_VARARGS },
	 { (char *)"iSoundHandle_CreateSource", _wrap_iSoundHandle_CreateSource, METH_VARARGS },
	 { (char *)"iSoundHandle_StartStream", _wrap_iSoundHandle_StartStream, METH_VARARGS },
	 { (char *)"iSoundHandle_StopStream", _wrap_iSoundHandle_StopStream, METH_VARARGS },
	 { (char *)"iSoundHandle_ResetStream", _wrap_iSoundHandle_ResetStream, METH_VARARGS },
	 { (char *)"delete_iSoundHandle", _wrap_delete_iSoundHandle, METH_VARARGS },
	 { (char *)"iSoundHandle_swigregister", iSoundHandle_swigregister, METH_VARARGS },
	 { (char *)"iSoundLoader_LoadSound", _wrap_iSoundLoader_LoadSound, METH_VARARGS },
	 { (char *)"delete_iSoundLoader", _wrap_delete_iSoundLoader, METH_VARARGS },
	 { (char *)"iSoundLoader_swigregister", iSoundLoader_swigregister, METH_VARARGS },
	 { (char *)"iSoundRender_SetVolume", _wrap_iSoundRender_SetVolume, METH_VARARGS },
	 { (char *)"iSoundRender_GetVolume", _wrap_iSoundRender_GetVolume, METH_VARARGS },
	 { (char *)"iSoundRender_RegisterSound", _wrap_iSoundRender_RegisterSound, METH_VARARGS },
	 { (char *)"iSoundRender_UnregisterSound", _wrap_iSoundRender_UnregisterSound, METH_VARARGS },
	 { (char *)"iSoundRender_GetListener", _wrap_iSoundRender_GetListener, METH_VARARGS },
	 { (char *)"iSoundRender_MixingFunction", _wrap_iSoundRender_MixingFunction, METH_VARARGS },
	 { (char *)"delete_iSoundRender", _wrap_delete_iSoundRender, METH_VARARGS },
	 { (char *)"iSoundRender_swigregister", iSoundRender_swigregister, METH_VARARGS },
	 { (char *)"iSoundWrapper_GetSound", _wrap_iSoundWrapper_GetSound, METH_VARARGS },
	 { (char *)"iSoundWrapper_QueryObject", _wrap_iSoundWrapper_QueryObject, METH_VARARGS },
	 { (char *)"delete_iSoundWrapper", _wrap_delete_iSoundWrapper, METH_VARARGS },
	 { (char *)"iSoundWrapper_swigregister", iSoundWrapper_swigregister, METH_VARARGS },
	 { (char *)"iSoundDriver_Open", _wrap_iSoundDriver_Open, METH_VARARGS },
	 { (char *)"iSoundDriver_Close", _wrap_iSoundDriver_Close, METH_VARARGS },
	 { (char *)"iSoundDriver_LockMemory", _wrap_iSoundDriver_LockMemory, METH_VARARGS },
	 { (char *)"iSoundDriver_UnlockMemory", _wrap_iSoundDriver_UnlockMemory, METH_VARARGS },
	 { (char *)"iSoundDriver_IsBackground", _wrap_iSoundDriver_IsBackground, METH_VARARGS },
	 { (char *)"iSoundDriver_Is16Bits", _wrap_iSoundDriver_Is16Bits, METH_VARARGS },
	 { (char *)"iSoundDriver_IsStereo", _wrap_iSoundDriver_IsStereo, METH_VARARGS },
	 { (char *)"iSoundDriver_GetFrequency", _wrap_iSoundDriver_GetFrequency, METH_VARARGS },
	 { (char *)"iSoundDriver_IsHandleVoidSound", _wrap_iSoundDriver_IsHandleVoidSound, METH_VARARGS },
	 { (char *)"iSoundDriver_ThreadAware", _wrap_iSoundDriver_ThreadAware, METH_VARARGS },
	 { (char *)"delete_iSoundDriver", _wrap_delete_iSoundDriver, METH_VARARGS },
	 { (char *)"iSoundDriver_swigregister", iSoundDriver_swigregister, METH_VARARGS },
	 { (char *)"iSoundSource_Play", _wrap_iSoundSource_Play, METH_VARARGS },
	 { (char *)"iSoundSource_Stop", _wrap_iSoundSource_Stop, METH_VARARGS },
	 { (char *)"iSoundSource_SetVolume", _wrap_iSoundSource_SetVolume, METH_VARARGS },
	 { (char *)"iSoundSource_GetVolume", _wrap_iSoundSource_GetVolume, METH_VARARGS },
	 { (char *)"iSoundSource_SetFrequencyFactor", _wrap_iSoundSource_SetFrequencyFactor, METH_VARARGS },
	 { (char *)"iSoundSource_GetFrequencyFactor", _wrap_iSoundSource_GetFrequencyFactor, METH_VARARGS },
	 { (char *)"iSoundSource_GetMode3D", _wrap_iSoundSource_GetMode3D, METH_VARARGS },
	 { (char *)"iSoundSource_SetMode3D", _wrap_iSoundSource_SetMode3D, METH_VARARGS },
	 { (char *)"iSoundSource_SetPosition", _wrap_iSoundSource_SetPosition, METH_VARARGS },
	 { (char *)"iSoundSource_GetPosition", _wrap_iSoundSource_GetPosition, METH_VARARGS },
	 { (char *)"iSoundSource_SetVelocity", _wrap_iSoundSource_SetVelocity, METH_VARARGS },
	 { (char *)"iSoundSource_GetVelocity", _wrap_iSoundSource_GetVelocity, METH_VARARGS },
	 { (char *)"delete_iSoundSource", _wrap_delete_iSoundSource, METH_VARARGS },
	 { (char *)"iSoundSource_swigregister", iSoundSource_swigregister, METH_VARARGS },
	 { (char *)"iComponent_Initialize", _wrap_iComponent_Initialize, METH_VARARGS },
	 { (char *)"delete_iComponent", _wrap_delete_iComponent, METH_VARARGS },
	 { (char *)"iComponent_swigregister", iComponent_swigregister, METH_VARARGS },
	 { (char *)"iCacheManager_SetCurrentType", _wrap_iCacheManager_SetCurrentType, METH_VARARGS },
	 { (char *)"iCacheManager_GetCurrentType", _wrap_iCacheManager_GetCurrentType, METH_VARARGS },
	 { (char *)"iCacheManager_SetCurrentScope", _wrap_iCacheManager_SetCurrentScope, METH_VARARGS },
	 { (char *)"iCacheManager_GetCurrentScope", _wrap_iCacheManager_GetCurrentScope, METH_VARARGS },
	 { (char *)"iCacheManager_CacheData", _wrap_iCacheManager_CacheData, METH_VARARGS },
	 { (char *)"iCacheManager_ReadCache", _wrap_iCacheManager_ReadCache, METH_VARARGS },
	 { (char *)"iCacheManager_ClearCache", _wrap_iCacheManager_ClearCache, METH_VARARGS },
	 { (char *)"delete_iCacheManager", _wrap_delete_iCacheManager, METH_VARARGS },
	 { (char *)"iCacheManager_swigregister", iCacheManager_swigregister, METH_VARARGS },
	 { (char *)"csFileTime_sec_set", _wrap_csFileTime_sec_set, METH_VARARGS },
	 { (char *)"csFileTime_sec_get", _wrap_csFileTime_sec_get, METH_VARARGS },
	 { (char *)"csFileTime_min_set", _wrap_csFileTime_min_set, METH_VARARGS },
	 { (char *)"csFileTime_min_get", _wrap_csFileTime_min_get, METH_VARARGS },
	 { (char *)"csFileTime_hour_set", _wrap_csFileTime_hour_set, METH_VARARGS },
	 { (char *)"csFileTime_hour_get", _wrap_csFileTime_hour_get, METH_VARARGS },
	 { (char *)"csFileTime_day_set", _wrap_csFileTime_day_set, METH_VARARGS },
	 { (char *)"csFileTime_day_get", _wrap_csFileTime_day_get, METH_VARARGS },
	 { (char *)"csFileTime_mon_set", _wrap_csFileTime_mon_set, METH_VARARGS },
	 { (char *)"csFileTime_mon_get", _wrap_csFileTime_mon_get, METH_VARARGS },
	 { (char *)"csFileTime_year_set", _wrap_csFileTime_year_set, METH_VARARGS },
	 { (char *)"csFileTime_year_get", _wrap_csFileTime_year_get, METH_VARARGS },
	 { (char *)"new_csFileTime", _wrap_new_csFileTime, METH_VARARGS },
	 { (char *)"delete_csFileTime", _wrap_delete_csFileTime, METH_VARARGS },
	 { (char *)"csFileTime_swigregister", csFileTime_swigregister, METH_VARARGS },
	 { (char *)"iFile_GetName", _wrap_iFile_GetName, METH_VARARGS },
	 { (char *)"iFile_GetSize", _wrap_iFile_GetSize, METH_VARARGS },
	 { (char *)"iFile_GetStatus", _wrap_iFile_GetStatus, METH_VARARGS },
	 { (char *)"iFile_Read", _wrap_iFile_Read, METH_VARARGS },
	 { (char *)"iFile_Write", _wrap_iFile_Write, METH_VARARGS },
	 { (char *)"iFile_Flush", _wrap_iFile_Flush, METH_VARARGS },
	 { (char *)"iFile_AtEOF", _wrap_iFile_AtEOF, METH_VARARGS },
	 { (char *)"iFile_GetPos", _wrap_iFile_GetPos, METH_VARARGS },
	 { (char *)"iFile_GetAllData", _wrap_iFile_GetAllData, METH_VARARGS },
	 { (char *)"iFile_SetPos", _wrap_iFile_SetPos, METH_VARARGS },
	 { (char *)"delete_iFile", _wrap_delete_iFile, METH_VARARGS },
	 { (char *)"iFile_swigregister", iFile_swigregister, METH_VARARGS },
	 { (char *)"iVFS_ChDir", _wrap_iVFS_ChDir, METH_VARARGS },
	 { (char *)"iVFS_GetCwd", _wrap_iVFS_GetCwd, METH_VARARGS },
	 { (char *)"iVFS_PushDir", _wrap_iVFS_PushDir, METH_VARARGS },
	 { (char *)"iVFS_PopDir", _wrap_iVFS_PopDir, METH_VARARGS },
	 { (char *)"iVFS_ExpandPath", _wrap_iVFS_ExpandPath, METH_VARARGS },
	 { (char *)"iVFS_Exists", _wrap_iVFS_Exists, METH_VARARGS },
	 { (char *)"iVFS_FindFiles", _wrap_iVFS_FindFiles, METH_VARARGS },
	 { (char *)"iVFS_Open", _wrap_iVFS_Open, METH_VARARGS },
	 { (char *)"iVFS_ReadFile", _wrap_iVFS_ReadFile, METH_VARARGS },
	 { (char *)"iVFS_WriteFile", _wrap_iVFS_WriteFile, METH_VARARGS },
	 { (char *)"iVFS_DeleteFile", _wrap_iVFS_DeleteFile, METH_VARARGS },
	 { (char *)"iVFS_Sync", _wrap_iVFS_Sync, METH_VARARGS },
	 { (char *)"iVFS_Mount", _wrap_iVFS_Mount, METH_VARARGS },
	 { (char *)"iVFS_Unmount", _wrap_iVFS_Unmount, METH_VARARGS },
	 { (char *)"iVFS_MountRoot", _wrap_iVFS_MountRoot, METH_VARARGS },
	 { (char *)"iVFS_SaveMounts", _wrap_iVFS_SaveMounts, METH_VARARGS },
	 { (char *)"iVFS_GetFileTime", _wrap_iVFS_GetFileTime, METH_VARARGS },
	 { (char *)"iVFS_SetFileTime", _wrap_iVFS_SetFileTime, METH_VARARGS },
	 { (char *)"iVFS_GetFileSize", _wrap_iVFS_GetFileSize, METH_VARARGS },
	 { (char *)"iVFS_GetRealPath", _wrap_iVFS_GetRealPath, METH_VARARGS },
	 { (char *)"delete_iVFS", _wrap_delete_iVFS, METH_VARARGS },
	 { (char *)"iVFS_swigregister", iVFS_swigregister, METH_VARARGS },
	 { (char *)"iObject_SetName", _wrap_iObject_SetName, METH_VARARGS },
	 { (char *)"iObject_GetName", _wrap_iObject_GetName, METH_VARARGS },
	 { (char *)"iObject_GetID", _wrap_iObject_GetID, METH_VARARGS },
	 { (char *)"iObject_SetObjectParent", _wrap_iObject_SetObjectParent, METH_VARARGS },
	 { (char *)"iObject_GetObjectParent", _wrap_iObject_GetObjectParent, METH_VARARGS },
	 { (char *)"iObject_ObjAdd", _wrap_iObject_ObjAdd, METH_VARARGS },
	 { (char *)"iObject_ObjRemove", _wrap_iObject_ObjRemove, METH_VARARGS },
	 { (char *)"iObject_ObjRemoveAll", _wrap_iObject_ObjRemoveAll, METH_VARARGS },
	 { (char *)"iObject_ObjAddChildren", _wrap_iObject_ObjAddChildren, METH_VARARGS },
	 { (char *)"iObject_GetChild", _wrap_iObject_GetChild, METH_VARARGS },
	 { (char *)"iObject_GetIterator", _wrap_iObject_GetIterator, METH_VARARGS },
	 { (char *)"iObject_ObjReleaseOld", _wrap_iObject_ObjReleaseOld, METH_VARARGS },
	 { (char *)"delete_iObject", _wrap_delete_iObject, METH_VARARGS },
	 { (char *)"iObject_swigregister", iObject_swigregister, METH_VARARGS },
	 { (char *)"iObjectIterator_scfGetID", _wrap_iObjectIterator_scfGetID, METH_VARARGS },
	 { (char *)"iObjectIterator_Next", _wrap_iObjectIterator_Next, METH_VARARGS },
	 { (char *)"iObjectIterator_Reset", _wrap_iObjectIterator_Reset, METH_VARARGS },
	 { (char *)"iObjectIterator_GetParentObj", _wrap_iObjectIterator_GetParentObj, METH_VARARGS },
	 { (char *)"iObjectIterator_HasNext", _wrap_iObjectIterator_HasNext, METH_VARARGS },
	 { (char *)"iObjectIterator_FindName", _wrap_iObjectIterator_FindName, METH_VARARGS },
	 { (char *)"delete_iObjectIterator", _wrap_delete_iObjectIterator, METH_VARARGS },
	 { (char *)"iObjectIterator_swigregister", iObjectIterator_swigregister, METH_VARARGS },
	 { (char *)"iDataObject_scfGetID", _wrap_iDataObject_scfGetID, METH_VARARGS },
	 { (char *)"iDataObject_QueryObject", _wrap_iDataObject_QueryObject, METH_VARARGS },
	 { (char *)"iDataObject_GetData", _wrap_iDataObject_GetData, METH_VARARGS },
	 { (char *)"delete_iDataObject", _wrap_delete_iDataObject, METH_VARARGS },
	 { (char *)"iDataObject_swigregister", iDataObject_swigregister, METH_VARARGS },
	 { (char *)"iObjectRegistry_Clear", _wrap_iObjectRegistry_Clear, METH_VARARGS },
	 { (char *)"iObjectRegistry_Register", _wrap_iObjectRegistry_Register, METH_VARARGS },
	 { (char *)"iObjectRegistry_Unregister", _wrap_iObjectRegistry_Unregister, METH_VARARGS },
	 { (char *)"iObjectRegistry_Get", _wrap_iObjectRegistry_Get, METH_VARARGS },
	 { (char *)"delete_iObjectRegistry", _wrap_delete_iObjectRegistry, METH_VARARGS },
	 { (char *)"iObjectRegistry_swigregister", iObjectRegistry_swigregister, METH_VARARGS },
	 { (char *)"iObjectRegistryIterator_scfGetID", _wrap_iObjectRegistryIterator_scfGetID, METH_VARARGS },
	 { (char *)"iObjectRegistryIterator_Reset", _wrap_iObjectRegistryIterator_Reset, METH_VARARGS },
	 { (char *)"iObjectRegistryIterator_GetCurrentTag", _wrap_iObjectRegistryIterator_GetCurrentTag, METH_VARARGS },
	 { (char *)"iObjectRegistryIterator_HasNext", _wrap_iObjectRegistryIterator_HasNext, METH_VARARGS },
	 { (char *)"iObjectRegistryIterator_Next", _wrap_iObjectRegistryIterator_Next, METH_VARARGS },
	 { (char *)"delete_iObjectRegistryIterator", _wrap_delete_iObjectRegistryIterator, METH_VARARGS },
	 { (char *)"iObjectRegistryIterator_swigregister", iObjectRegistryIterator_swigregister, METH_VARARGS },
	 { (char *)"iVirtualClock_Advance", _wrap_iVirtualClock_Advance, METH_VARARGS },
	 { (char *)"iVirtualClock_Suspend", _wrap_iVirtualClock_Suspend, METH_VARARGS },
	 { (char *)"iVirtualClock_Resume", _wrap_iVirtualClock_Resume, METH_VARARGS },
	 { (char *)"iVirtualClock_GetElapsedTicks", _wrap_iVirtualClock_GetElapsedTicks, METH_VARARGS },
	 { (char *)"iVirtualClock_GetCurrentTicks", _wrap_iVirtualClock_GetCurrentTicks, METH_VARARGS },
	 { (char *)"delete_iVirtualClock", _wrap_delete_iVirtualClock, METH_VARARGS },
	 { (char *)"iVirtualClock_swigregister", iVirtualClock_swigregister, METH_VARARGS },
	 { (char *)"csEventKeyData_Code_set", _wrap_csEventKeyData_Code_set, METH_VARARGS },
	 { (char *)"csEventKeyData_Code_get", _wrap_csEventKeyData_Code_get, METH_VARARGS },
	 { (char *)"csEventKeyData_Char_set", _wrap_csEventKeyData_Char_set, METH_VARARGS },
	 { (char *)"csEventKeyData_Char_get", _wrap_csEventKeyData_Char_get, METH_VARARGS },
	 { (char *)"csEventKeyData_Modifiers_set", _wrap_csEventKeyData_Modifiers_set, METH_VARARGS },
	 { (char *)"csEventKeyData_Modifiers_get", _wrap_csEventKeyData_Modifiers_get, METH_VARARGS },
	 { (char *)"new_csEventKeyData", _wrap_new_csEventKeyData, METH_VARARGS },
	 { (char *)"delete_csEventKeyData", _wrap_delete_csEventKeyData, METH_VARARGS },
	 { (char *)"csEventKeyData_swigregister", csEventKeyData_swigregister, METH_VARARGS },
	 { (char *)"csEventMouseData_x_set", _wrap_csEventMouseData_x_set, METH_VARARGS },
	 { (char *)"csEventMouseData_x_get", _wrap_csEventMouseData_x_get, METH_VARARGS },
	 { (char *)"csEventMouseData_y_set", _wrap_csEventMouseData_y_set, METH_VARARGS },
	 { (char *)"csEventMouseData_y_get", _wrap_csEventMouseData_y_get, METH_VARARGS },
	 { (char *)"csEventMouseData_Button_set", _wrap_csEventMouseData_Button_set, METH_VARARGS },
	 { (char *)"csEventMouseData_Button_get", _wrap_csEventMouseData_Button_get, METH_VARARGS },
	 { (char *)"csEventMouseData_Modifiers_set", _wrap_csEventMouseData_Modifiers_set, METH_VARARGS },
	 { (char *)"csEventMouseData_Modifiers_get", _wrap_csEventMouseData_Modifiers_get, METH_VARARGS },
	 { (char *)"new_csEventMouseData", _wrap_new_csEventMouseData, METH_VARARGS },
	 { (char *)"delete_csEventMouseData", _wrap_delete_csEventMouseData, METH_VARARGS },
	 { (char *)"csEventMouseData_swigregister", csEventMouseData_swigregister, METH_VARARGS },
	 { (char *)"csEventJoystickData_number_set", _wrap_csEventJoystickData_number_set, METH_VARARGS },
	 { (char *)"csEventJoystickData_number_get", _wrap_csEventJoystickData_number_get, METH_VARARGS },
	 { (char *)"csEventJoystickData_x_set", _wrap_csEventJoystickData_x_set, METH_VARARGS },
	 { (char *)"csEventJoystickData_x_get", _wrap_csEventJoystickData_x_get, METH_VARARGS },
	 { (char *)"csEventJoystickData_y_set", _wrap_csEventJoystickData_y_set, METH_VARARGS },
	 { (char *)"csEventJoystickData_y_get", _wrap_csEventJoystickData_y_get, METH_VARARGS },
	 { (char *)"csEventJoystickData_Button_set", _wrap_csEventJoystickData_Button_set, METH_VARARGS },
	 { (char *)"csEventJoystickData_Button_get", _wrap_csEventJoystickData_Button_get, METH_VARARGS },
	 { (char *)"csEventJoystickData_Modifiers_set", _wrap_csEventJoystickData_Modifiers_set, METH_VARARGS },
	 { (char *)"csEventJoystickData_Modifiers_get", _wrap_csEventJoystickData_Modifiers_get, METH_VARARGS },
	 { (char *)"new_csEventJoystickData", _wrap_new_csEventJoystickData, METH_VARARGS },
	 { (char *)"delete_csEventJoystickData", _wrap_delete_csEventJoystickData, METH_VARARGS },
	 { (char *)"csEventJoystickData_swigregister", csEventJoystickData_swigregister, METH_VARARGS },
	 { (char *)"csEventCommandData_Code_set", _wrap_csEventCommandData_Code_set, METH_VARARGS },
	 { (char *)"csEventCommandData_Code_get", _wrap_csEventCommandData_Code_get, METH_VARARGS },
	 { (char *)"csEventCommandData_Info_set", _wrap_csEventCommandData_Info_set, METH_VARARGS },
	 { (char *)"csEventCommandData_Info_get", _wrap_csEventCommandData_Info_get, METH_VARARGS },
	 { (char *)"new_csEventCommandData", _wrap_new_csEventCommandData, METH_VARARGS },
	 { (char *)"delete_csEventCommandData", _wrap_delete_csEventCommandData, METH_VARARGS },
	 { (char *)"csEventCommandData_swigregister", csEventCommandData_swigregister, METH_VARARGS },
	 { (char *)"new_csEventNetworkData", _wrap_new_csEventNetworkData, METH_VARARGS },
	 { (char *)"delete_csEventNetworkData", _wrap_delete_csEventNetworkData, METH_VARARGS },
	 { (char *)"csEventNetworkData_swigregister", csEventNetworkData_swigregister, METH_VARARGS },
	 { (char *)"iEvent_Type_set", _wrap_iEvent_Type_set, METH_VARARGS },
	 { (char *)"iEvent_Type_get", _wrap_iEvent_Type_get, METH_VARARGS },
	 { (char *)"iEvent_Category_set", _wrap_iEvent_Category_set, METH_VARARGS },
	 { (char *)"iEvent_Category_get", _wrap_iEvent_Category_get, METH_VARARGS },
	 { (char *)"iEvent_SubCategory_set", _wrap_iEvent_SubCategory_set, METH_VARARGS },
	 { (char *)"iEvent_SubCategory_get", _wrap_iEvent_SubCategory_get, METH_VARARGS },
	 { (char *)"iEvent_Flags_set", _wrap_iEvent_Flags_set, METH_VARARGS },
	 { (char *)"iEvent_Flags_get", _wrap_iEvent_Flags_get, METH_VARARGS },
	 { (char *)"iEvent_Time_set", _wrap_iEvent_Time_set, METH_VARARGS },
	 { (char *)"iEvent_Time_get", _wrap_iEvent_Time_get, METH_VARARGS },
	 { (char *)"iEvent_AddInt8", _wrap_iEvent_AddInt8, METH_VARARGS },
	 { (char *)"iEvent_AddUInt8", _wrap_iEvent_AddUInt8, METH_VARARGS },
	 { (char *)"iEvent_AddInt16", _wrap_iEvent_AddInt16, METH_VARARGS },
	 { (char *)"iEvent_AddUInt16", _wrap_iEvent_AddUInt16, METH_VARARGS },
	 { (char *)"iEvent_AddInt32", _wrap_iEvent_AddInt32, METH_VARARGS },
	 { (char *)"iEvent_AddUInt32", _wrap_iEvent_AddUInt32, METH_VARARGS },
	 { (char *)"iEvent_AddFloat", _wrap_iEvent_AddFloat, METH_VARARGS },
	 { (char *)"iEvent_AddDouble", _wrap_iEvent_AddDouble, METH_VARARGS },
	 { (char *)"iEvent_AddString", _wrap_iEvent_AddString, METH_VARARGS },
	 { (char *)"iEvent_AddVoidPtr", _wrap_iEvent_AddVoidPtr, METH_VARARGS },
	 { (char *)"iEvent_AddBool", _wrap_iEvent_AddBool, METH_VARARGS },
	 { (char *)"iEvent_Add", _wrap_iEvent_Add, METH_VARARGS },
	 { (char *)"iEvent_FindInt8", _wrap_iEvent_FindInt8, METH_VARARGS },
	 { (char *)"iEvent_FindUInt8", _wrap_iEvent_FindUInt8, METH_VARARGS },
	 { (char *)"iEvent_FindInt16", _wrap_iEvent_FindInt16, METH_VARARGS },
	 { (char *)"iEvent_FindUInt16", _wrap_iEvent_FindUInt16, METH_VARARGS },
	 { (char *)"iEvent_FindUInt32", _wrap_iEvent_FindUInt32, METH_VARARGS },
	 { (char *)"iEvent_FindFloat", _wrap_iEvent_FindFloat, METH_VARARGS },
	 { (char *)"iEvent_FindDouble", _wrap_iEvent_FindDouble, METH_VARARGS },
	 { (char *)"iEvent_FindString", _wrap_iEvent_FindString, METH_VARARGS },
	 { (char *)"iEvent_FindVoidPtr", _wrap_iEvent_FindVoidPtr, METH_VARARGS },
	 { (char *)"iEvent_FindBool", _wrap_iEvent_FindBool, METH_VARARGS },
	 { (char *)"iEvent_Find", _wrap_iEvent_Find, METH_VARARGS },
	 { (char *)"iEvent_Remove", _wrap_iEvent_Remove, METH_VARARGS },
	 { (char *)"iEvent_RemoveAll", _wrap_iEvent_RemoveAll, METH_VARARGS },
	 { (char *)"iEvent_Print", _wrap_iEvent_Print, METH_VARARGS },
	 { (char *)"iEvent_FlattenSize", _wrap_iEvent_FlattenSize, METH_VARARGS },
	 { (char *)"iEvent_Flatten", _wrap_iEvent_Flatten, METH_VARARGS },
	 { (char *)"iEvent_Unflatten", _wrap_iEvent_Unflatten, METH_VARARGS },
	 { (char *)"iEvent_IncRefIfPooled", _wrap_iEvent_IncRefIfPooled, METH_VARARGS },
	 { (char *)"iEvent_DecRefUnlessPooled", _wrap_iEvent_DecRefUnlessPooled, METH_VARARGS },
	 { (char *)"delete_iEvent", _wrap_delete_iEvent, METH_VARARGS },
	 { (char *)"iEvent_Key_get", _wrap_iEvent_Key_get, METH_VARARGS },
	 { (char *)"iEvent_Mouse_get", _wrap_iEvent_Mouse_get, METH_VARARGS },
	 { (char *)"iEvent_Joystick_get", _wrap_iEvent_Joystick_get, METH_VARARGS },
	 { (char *)"iEvent_Command_get", _wrap_iEvent_Command_get, METH_VARARGS },
	 { (char *)"iEvent_Network_get", _wrap_iEvent_Network_get, METH_VARARGS },
	 { (char *)"iEvent_swigregister", iEvent_swigregister, METH_VARARGS },
	 { (char *)"iEventPlug_scfGetID", _wrap_iEventPlug_scfGetID, METH_VARARGS },
	 { (char *)"iEventPlug_GetPotentiallyConflictingEvents", _wrap_iEventPlug_GetPotentiallyConflictingEvents, METH_VARARGS },
	 { (char *)"iEventPlug_QueryEventPriority", _wrap_iEventPlug_QueryEventPriority, METH_VARARGS },
	 { (char *)"iEventPlug_EnableEvents", _wrap_iEventPlug_EnableEvents, METH_VARARGS },
	 { (char *)"delete_iEventPlug", _wrap_delete_iEventPlug, METH_VARARGS },
	 { (char *)"iEventPlug_swigregister", iEventPlug_swigregister, METH_VARARGS },
	 { (char *)"iEventOutlet_scfGetID", _wrap_iEventOutlet_scfGetID, METH_VARARGS },
	 { (char *)"iEventOutlet_CreateEvent", _wrap_iEventOutlet_CreateEvent, METH_VARARGS },
	 { (char *)"iEventOutlet_Post", _wrap_iEventOutlet_Post, METH_VARARGS },
	 { (char *)"iEventOutlet_Key", _wrap_iEventOutlet_Key, METH_VARARGS },
	 { (char *)"iEventOutlet_Mouse", _wrap_iEventOutlet_Mouse, METH_VARARGS },
	 { (char *)"iEventOutlet_Joystick", _wrap_iEventOutlet_Joystick, METH_VARARGS },
	 { (char *)"iEventOutlet_Broadcast", _wrap_iEventOutlet_Broadcast, METH_VARARGS },
	 { (char *)"iEventOutlet_ImmediateBroadcast", _wrap_iEventOutlet_ImmediateBroadcast, METH_VARARGS },
	 { (char *)"delete_iEventOutlet", _wrap_delete_iEventOutlet, METH_VARARGS },
	 { (char *)"iEventOutlet_swigregister", iEventOutlet_swigregister, METH_VARARGS },
	 { (char *)"iEventCord_scfGetID", _wrap_iEventCord_scfGetID, METH_VARARGS },
	 { (char *)"iEventCord_Insert", _wrap_iEventCord_Insert, METH_VARARGS },
	 { (char *)"iEventCord_Remove", _wrap_iEventCord_Remove, METH_VARARGS },
	 { (char *)"iEventCord_GetPass", _wrap_iEventCord_GetPass, METH_VARARGS },
	 { (char *)"iEventCord_SetPass", _wrap_iEventCord_SetPass, METH_VARARGS },
	 { (char *)"iEventCord_GetCategory", _wrap_iEventCord_GetCategory, METH_VARARGS },
	 { (char *)"iEventCord_GetSubcategory", _wrap_iEventCord_GetSubcategory, METH_VARARGS },
	 { (char *)"delete_iEventCord", _wrap_delete_iEventCord, METH_VARARGS },
	 { (char *)"iEventCord_swigregister", iEventCord_swigregister, METH_VARARGS },
	 { (char *)"iEventQueue_Process", _wrap_iEventQueue_Process, METH_VARARGS },
	 { (char *)"iEventQueue_Dispatch", _wrap_iEventQueue_Dispatch, METH_VARARGS },
	 { (char *)"iEventQueue_RegisterListener", _wrap_iEventQueue_RegisterListener, METH_VARARGS },
	 { (char *)"iEventQueue_RemoveListener", _wrap_iEventQueue_RemoveListener, METH_VARARGS },
	 { (char *)"iEventQueue_ChangeListenerTrigger", _wrap_iEventQueue_ChangeListenerTrigger, METH_VARARGS },
	 { (char *)"iEventQueue_CreateEventOutlet", _wrap_iEventQueue_CreateEventOutlet, METH_VARARGS },
	 { (char *)"iEventQueue_GetEventOutlet", _wrap_iEventQueue_GetEventOutlet, METH_VARARGS },
	 { (char *)"iEventQueue_GetEventCord", _wrap_iEventQueue_GetEventCord, METH_VARARGS },
	 { (char *)"iEventQueue_CreateEvent", _wrap_iEventQueue_CreateEvent, METH_VARARGS },
	 { (char *)"iEventQueue_Post", _wrap_iEventQueue_Post, METH_VARARGS },
	 { (char *)"iEventQueue_Get", _wrap_iEventQueue_Get, METH_VARARGS },
	 { (char *)"iEventQueue_Clear", _wrap_iEventQueue_Clear, METH_VARARGS },
	 { (char *)"iEventQueue_IsEmpty", _wrap_iEventQueue_IsEmpty, METH_VARARGS },
	 { (char *)"iEventQueue_RemoveAllListeners", _wrap_iEventQueue_RemoveAllListeners, METH_VARARGS },
	 { (char *)"delete_iEventQueue", _wrap_delete_iEventQueue, METH_VARARGS },
	 { (char *)"iEventQueue_swigregister", iEventQueue_swigregister, METH_VARARGS },
	 { (char *)"iEventHandler_HandleEvent", _wrap_iEventHandler_HandleEvent, METH_VARARGS },
	 { (char *)"delete_iEventHandler", _wrap_delete_iEventHandler, METH_VARARGS },
	 { (char *)"iEventHandler_swigregister", iEventHandler_swigregister, METH_VARARGS },
	 { (char *)"iPluginIterator_scfGetID", _wrap_iPluginIterator_scfGetID, METH_VARARGS },
	 { (char *)"iPluginIterator_HasNext", _wrap_iPluginIterator_HasNext, METH_VARARGS },
	 { (char *)"iPluginIterator_Next", _wrap_iPluginIterator_Next, METH_VARARGS },
	 { (char *)"delete_iPluginIterator", _wrap_delete_iPluginIterator, METH_VARARGS },
	 { (char *)"iPluginIterator_swigregister", iPluginIterator_swigregister, METH_VARARGS },
	 { (char *)"iPluginManager_LoadPlugin", _wrap_iPluginManager_LoadPlugin, METH_VARARGS },
	 { (char *)"iPluginManager_QueryPlugin", _wrap_iPluginManager_QueryPlugin, METH_VARARGS },
	 { (char *)"iPluginManager_UnloadPlugin", _wrap_iPluginManager_UnloadPlugin, METH_VARARGS },
	 { (char *)"iPluginManager_RegisterPlugin", _wrap_iPluginManager_RegisterPlugin, METH_VARARGS },
	 { (char *)"iPluginManager_GetPlugins", _wrap_iPluginManager_GetPlugins, METH_VARARGS },
	 { (char *)"iPluginManager_Clear", _wrap_iPluginManager_Clear, METH_VARARGS },
	 { (char *)"iPluginManager_QueryOptions", _wrap_iPluginManager_QueryOptions, METH_VARARGS },
	 { (char *)"delete_iPluginManager", _wrap_delete_iPluginManager, METH_VARARGS },
	 { (char *)"iPluginManager_swigregister", iPluginManager_swigregister, METH_VARARGS },
	 { (char *)"iKeyboardDriver_Reset", _wrap_iKeyboardDriver_Reset, METH_VARARGS },
	 { (char *)"iKeyboardDriver_DoKey", _wrap_iKeyboardDriver_DoKey, METH_VARARGS },
	 { (char *)"iKeyboardDriver_GetKeyState", _wrap_iKeyboardDriver_GetKeyState, METH_VARARGS },
	 { (char *)"delete_iKeyboardDriver", _wrap_delete_iKeyboardDriver, METH_VARARGS },
	 { (char *)"iKeyboardDriver_swigregister", iKeyboardDriver_swigregister, METH_VARARGS },
	 { (char *)"iMouseDriver_scfGetID", _wrap_iMouseDriver_scfGetID, METH_VARARGS },
	 { (char *)"iMouseDriver_SetDoubleClickTime", _wrap_iMouseDriver_SetDoubleClickTime, METH_VARARGS },
	 { (char *)"iMouseDriver_Reset", _wrap_iMouseDriver_Reset, METH_VARARGS },
	 { (char *)"iMouseDriver_GetLastX", _wrap_iMouseDriver_GetLastX, METH_VARARGS },
	 { (char *)"iMouseDriver_GetLastY", _wrap_iMouseDriver_GetLastY, METH_VARARGS },
	 { (char *)"iMouseDriver_GetLastButton", _wrap_iMouseDriver_GetLastButton, METH_VARARGS },
	 { (char *)"iMouseDriver_DoButton", _wrap_iMouseDriver_DoButton, METH_VARARGS },
	 { (char *)"iMouseDriver_DoMotion", _wrap_iMouseDriver_DoMotion, METH_VARARGS },
	 { (char *)"delete_iMouseDriver", _wrap_delete_iMouseDriver, METH_VARARGS },
	 { (char *)"iMouseDriver_swigregister", iMouseDriver_swigregister, METH_VARARGS },
	 { (char *)"iJoystickDriver_scfGetID", _wrap_iJoystickDriver_scfGetID, METH_VARARGS },
	 { (char *)"iJoystickDriver_Reset", _wrap_iJoystickDriver_Reset, METH_VARARGS },
	 { (char *)"iJoystickDriver_GetLastX", _wrap_iJoystickDriver_GetLastX, METH_VARARGS },
	 { (char *)"iJoystickDriver_GetLastY", _wrap_iJoystickDriver_GetLastY, METH_VARARGS },
	 { (char *)"iJoystickDriver_GetLastButton", _wrap_iJoystickDriver_GetLastButton, METH_VARARGS },
	 { (char *)"iJoystickDriver_DoButton", _wrap_iJoystickDriver_DoButton, METH_VARARGS },
	 { (char *)"iJoystickDriver_DoMotion", _wrap_iJoystickDriver_DoMotion, METH_VARARGS },
	 { (char *)"delete_iJoystickDriver", _wrap_delete_iJoystickDriver, METH_VARARGS },
	 { (char *)"iJoystickDriver_swigregister", iJoystickDriver_swigregister, METH_VARARGS },
	 { (char *)"iConfigFile_GetFileName", _wrap_iConfigFile_GetFileName, METH_VARARGS },
	 { (char *)"iConfigFile_GetVFS", _wrap_iConfigFile_GetVFS, METH_VARARGS },
	 { (char *)"iConfigFile_SetFileName", _wrap_iConfigFile_SetFileName, METH_VARARGS },
	 { (char *)"iConfigFile_Load", _wrap_iConfigFile_Load, METH_VARARGS },
	 { (char *)"iConfigFile_Save", _wrap_iConfigFile_Save, METH_VARARGS },
	 { (char *)"iConfigFile_Clear", _wrap_iConfigFile_Clear, METH_VARARGS },
	 { (char *)"iConfigFile_Enumerate", _wrap_iConfigFile_Enumerate, METH_VARARGS },
	 { (char *)"iConfigFile_KeyExists", _wrap_iConfigFile_KeyExists, METH_VARARGS },
	 { (char *)"iConfigFile_SubsectionExists", _wrap_iConfigFile_SubsectionExists, METH_VARARGS },
	 { (char *)"iConfigFile_GetInt", _wrap_iConfigFile_GetInt, METH_VARARGS },
	 { (char *)"iConfigFile_GetFloat", _wrap_iConfigFile_GetFloat, METH_VARARGS },
	 { (char *)"iConfigFile_GetStr", _wrap_iConfigFile_GetStr, METH_VARARGS },
	 { (char *)"iConfigFile_GetBool", _wrap_iConfigFile_GetBool, METH_VARARGS },
	 { (char *)"iConfigFile_GetComment", _wrap_iConfigFile_GetComment, METH_VARARGS },
	 { (char *)"iConfigFile_SetStr", _wrap_iConfigFile_SetStr, METH_VARARGS },
	 { (char *)"iConfigFile_SetInt", _wrap_iConfigFile_SetInt, METH_VARARGS },
	 { (char *)"iConfigFile_SetFloat", _wrap_iConfigFile_SetFloat, METH_VARARGS },
	 { (char *)"iConfigFile_SetBool", _wrap_iConfigFile_SetBool, METH_VARARGS },
	 { (char *)"iConfigFile_SetComment", _wrap_iConfigFile_SetComment, METH_VARARGS },
	 { (char *)"iConfigFile_DeleteKey", _wrap_iConfigFile_DeleteKey, METH_VARARGS },
	 { (char *)"iConfigFile_GetEOFComment", _wrap_iConfigFile_GetEOFComment, METH_VARARGS },
	 { (char *)"iConfigFile_SetEOFComment", _wrap_iConfigFile_SetEOFComment, METH_VARARGS },
	 { (char *)"delete_iConfigFile", _wrap_delete_iConfigFile, METH_VARARGS },
	 { (char *)"iConfigFile_swigregister", iConfigFile_swigregister, METH_VARARGS },
	 { (char *)"iConfigIterator_GetConfigFile", _wrap_iConfigIterator_GetConfigFile, METH_VARARGS },
	 { (char *)"iConfigIterator_GetSubsection", _wrap_iConfigIterator_GetSubsection, METH_VARARGS },
	 { (char *)"iConfigIterator_Rewind", _wrap_iConfigIterator_Rewind, METH_VARARGS },
	 { (char *)"iConfigIterator_Next", _wrap_iConfigIterator_Next, METH_VARARGS },
	 { (char *)"iConfigIterator_GetKey", _wrap_iConfigIterator_GetKey, METH_VARARGS },
	 { (char *)"iConfigIterator_GetInt", _wrap_iConfigIterator_GetInt, METH_VARARGS },
	 { (char *)"iConfigIterator_GetFloat", _wrap_iConfigIterator_GetFloat, METH_VARARGS },
	 { (char *)"iConfigIterator_GetStr", _wrap_iConfigIterator_GetStr, METH_VARARGS },
	 { (char *)"iConfigIterator_GetBool", _wrap_iConfigIterator_GetBool, METH_VARARGS },
	 { (char *)"iConfigIterator_GetComment", _wrap_iConfigIterator_GetComment, METH_VARARGS },
	 { (char *)"delete_iConfigIterator", _wrap_delete_iConfigIterator, METH_VARARGS },
	 { (char *)"iConfigIterator_swigregister", iConfigIterator_swigregister, METH_VARARGS },
	 { (char *)"iConfigManager_AddDomain", _wrap_iConfigManager_AddDomain, METH_VARARGS },
	 { (char *)"iConfigManager_RemoveDomain", _wrap_iConfigManager_RemoveDomain, METH_VARARGS },
	 { (char *)"iConfigManager_LookupDomain", _wrap_iConfigManager_LookupDomain, METH_VARARGS },
	 { (char *)"iConfigManager_SetDomainPriority", _wrap_iConfigManager_SetDomainPriority, METH_VARARGS },
	 { (char *)"iConfigManager_GetDomainPriority", _wrap_iConfigManager_GetDomainPriority, METH_VARARGS },
	 { (char *)"iConfigManager_SetDynamicDomain", _wrap_iConfigManager_SetDynamicDomain, METH_VARARGS },
	 { (char *)"iConfigManager_GetDynamicDomain", _wrap_iConfigManager_GetDynamicDomain, METH_VARARGS },
	 { (char *)"iConfigManager_SetDynamicDomainPriority", _wrap_iConfigManager_SetDynamicDomainPriority, METH_VARARGS },
	 { (char *)"iConfigManager_GetDynamicDomainPriority", _wrap_iConfigManager_GetDynamicDomainPriority, METH_VARARGS },
	 { (char *)"iConfigManager_FlushRemoved", _wrap_iConfigManager_FlushRemoved, METH_VARARGS },
	 { (char *)"delete_iConfigManager", _wrap_delete_iConfigManager, METH_VARARGS },
	 { (char *)"iConfigManager_swigregister", iConfigManager_swigregister, METH_VARARGS },
	 { (char *)"iStrVector_Length", _wrap_iStrVector_Length, METH_VARARGS },
	 { (char *)"iStrVector_Push", _wrap_iStrVector_Push, METH_VARARGS },
	 { (char *)"iStrVector_Pop", _wrap_iStrVector_Pop, METH_VARARGS },
	 { (char *)"iStrVector_Get", _wrap_iStrVector_Get, METH_VARARGS },
	 { (char *)"iStrVector_Find", _wrap_iStrVector_Find, METH_VARARGS },
	 { (char *)"iStrVector_FindSorted", _wrap_iStrVector_FindSorted, METH_VARARGS },
	 { (char *)"iStrVector_QuickSort", _wrap_iStrVector_QuickSort, METH_VARARGS },
	 { (char *)"iStrVector_Delete", _wrap_iStrVector_Delete, METH_VARARGS },
	 { (char *)"iStrVector_Insert", _wrap_iStrVector_Insert, METH_VARARGS },
	 { (char *)"iStrVector_DeleteAll", _wrap_iStrVector_DeleteAll, METH_VARARGS },
	 { (char *)"delete_iStrVector", _wrap_delete_iStrVector, METH_VARARGS },
	 { (char *)"iStrVector_swigregister", iStrVector_swigregister, METH_VARARGS },
	 { (char *)"iDocumentAttributeIterator_scfGetID", _wrap_iDocumentAttributeIterator_scfGetID, METH_VARARGS },
	 { (char *)"iDocumentAttributeIterator_HasNext", _wrap_iDocumentAttributeIterator_HasNext, METH_VARARGS },
	 { (char *)"iDocumentAttributeIterator_Next", _wrap_iDocumentAttributeIterator_Next, METH_VARARGS },
	 { (char *)"delete_iDocumentAttributeIterator", _wrap_delete_iDocumentAttributeIterator, METH_VARARGS },
	 { (char *)"iDocumentAttributeIterator_swigregister", iDocumentAttributeIterator_swigregister, METH_VARARGS },
	 { (char *)"iDocumentAttribute_scfGetID", _wrap_iDocumentAttribute_scfGetID, METH_VARARGS },
	 { (char *)"iDocumentAttribute_GetName", _wrap_iDocumentAttribute_GetName, METH_VARARGS },
	 { (char *)"iDocumentAttribute_GetValue", _wrap_iDocumentAttribute_GetValue, METH_VARARGS },
	 { (char *)"iDocumentAttribute_GetValueAsInt", _wrap_iDocumentAttribute_GetValueAsInt, METH_VARARGS },
	 { (char *)"iDocumentAttribute_GetValueAsFloat", _wrap_iDocumentAttribute_GetValueAsFloat, METH_VARARGS },
	 { (char *)"iDocumentAttribute_SetName", _wrap_iDocumentAttribute_SetName, METH_VARARGS },
	 { (char *)"iDocumentAttribute_SetValue", _wrap_iDocumentAttribute_SetValue, METH_VARARGS },
	 { (char *)"iDocumentAttribute_SetValueAsInt", _wrap_iDocumentAttribute_SetValueAsInt, METH_VARARGS },
	 { (char *)"iDocumentAttribute_SetValueAsFloat", _wrap_iDocumentAttribute_SetValueAsFloat, METH_VARARGS },
	 { (char *)"delete_iDocumentAttribute", _wrap_delete_iDocumentAttribute, METH_VARARGS },
	 { (char *)"iDocumentAttribute_swigregister", iDocumentAttribute_swigregister, METH_VARARGS },
	 { (char *)"iDocumentNodeIterator_scfGetID", _wrap_iDocumentNodeIterator_scfGetID, METH_VARARGS },
	 { (char *)"iDocumentNodeIterator_HasNext", _wrap_iDocumentNodeIterator_HasNext, METH_VARARGS },
	 { (char *)"iDocumentNodeIterator_Next", _wrap_iDocumentNodeIterator_Next, METH_VARARGS },
	 { (char *)"delete_iDocumentNodeIterator", _wrap_delete_iDocumentNodeIterator, METH_VARARGS },
	 { (char *)"iDocumentNodeIterator_swigregister", iDocumentNodeIterator_swigregister, METH_VARARGS },
	 { (char *)"iDocumentNode_scfGetID", _wrap_iDocumentNode_scfGetID, METH_VARARGS },
	 { (char *)"iDocumentNode_GetType", _wrap_iDocumentNode_GetType, METH_VARARGS },
	 { (char *)"iDocumentNode_Equals", _wrap_iDocumentNode_Equals, METH_VARARGS },
	 { (char *)"iDocumentNode_GetValue", _wrap_iDocumentNode_GetValue, METH_VARARGS },
	 { (char *)"iDocumentNode_SetValue", _wrap_iDocumentNode_SetValue, METH_VARARGS },
	 { (char *)"iDocumentNode_SetValueAsInt", _wrap_iDocumentNode_SetValueAsInt, METH_VARARGS },
	 { (char *)"iDocumentNode_SetValueAsFloat", _wrap_iDocumentNode_SetValueAsFloat, METH_VARARGS },
	 { (char *)"iDocumentNode_GetParent", _wrap_iDocumentNode_GetParent, METH_VARARGS },
	 { (char *)"iDocumentNode_GetNodes", _wrap_iDocumentNode_GetNodes, METH_VARARGS },
	 { (char *)"iDocumentNode_GetNode", _wrap_iDocumentNode_GetNode, METH_VARARGS },
	 { (char *)"iDocumentNode_RemoveNode", _wrap_iDocumentNode_RemoveNode, METH_VARARGS },
	 { (char *)"iDocumentNode_RemoveNodes", _wrap_iDocumentNode_RemoveNodes, METH_VARARGS },
	 { (char *)"iDocumentNode_CreateNodeBefore", _wrap_iDocumentNode_CreateNodeBefore, METH_VARARGS },
	 { (char *)"iDocumentNode_GetContentsValue", _wrap_iDocumentNode_GetContentsValue, METH_VARARGS },
	 { (char *)"iDocumentNode_GetContentsValueAsInt", _wrap_iDocumentNode_GetContentsValueAsInt, METH_VARARGS },
	 { (char *)"iDocumentNode_GetContentsValueAsFloat", _wrap_iDocumentNode_GetContentsValueAsFloat, METH_VARARGS },
	 { (char *)"iDocumentNode_GetAttributes", _wrap_iDocumentNode_GetAttributes, METH_VARARGS },
	 { (char *)"iDocumentNode_GetAttribute", _wrap_iDocumentNode_GetAttribute, METH_VARARGS },
	 { (char *)"iDocumentNode_GetAttributeValue", _wrap_iDocumentNode_GetAttributeValue, METH_VARARGS },
	 { (char *)"iDocumentNode_GetAttributeValueAsInt", _wrap_iDocumentNode_GetAttributeValueAsInt, METH_VARARGS },
	 { (char *)"iDocumentNode_GetAttributeValueAsFloat", _wrap_iDocumentNode_GetAttributeValueAsFloat, METH_VARARGS },
	 { (char *)"iDocumentNode_RemoveAttribute", _wrap_iDocumentNode_RemoveAttribute, METH_VARARGS },
	 { (char *)"iDocumentNode_RemoveAttributes", _wrap_iDocumentNode_RemoveAttributes, METH_VARARGS },
	 { (char *)"iDocumentNode_SetAttribute", _wrap_iDocumentNode_SetAttribute, METH_VARARGS },
	 { (char *)"iDocumentNode_SetAttributeAsInt", _wrap_iDocumentNode_SetAttributeAsInt, METH_VARARGS },
	 { (char *)"iDocumentNode_SetAttributeAsFloat", _wrap_iDocumentNode_SetAttributeAsFloat, METH_VARARGS },
	 { (char *)"delete_iDocumentNode", _wrap_delete_iDocumentNode, METH_VARARGS },
	 { (char *)"iDocumentNode_swigregister", iDocumentNode_swigregister, METH_VARARGS },
	 { (char *)"iDocument_Clear", _wrap_iDocument_Clear, METH_VARARGS },
	 { (char *)"iDocument_CreateRoot", _wrap_iDocument_CreateRoot, METH_VARARGS },
	 { (char *)"iDocument_GetRoot", _wrap_iDocument_GetRoot, METH_VARARGS },
	 { (char *)"iDocument_Parse", _wrap_iDocument_Parse, METH_VARARGS },
	 { (char *)"iDocument_Write", _wrap_iDocument_Write, METH_VARARGS },
	 { (char *)"iDocument_Changeable", _wrap_iDocument_Changeable, METH_VARARGS },
	 { (char *)"delete_iDocument", _wrap_delete_iDocument, METH_VARARGS },
	 { (char *)"iDocument_swigregister", iDocument_swigregister, METH_VARARGS },
	 { (char *)"iDocumentSystem_CreateDocument", _wrap_iDocumentSystem_CreateDocument, METH_VARARGS },
	 { (char *)"delete_iDocumentSystem", _wrap_delete_iDocumentSystem, METH_VARARGS },
	 { (char *)"iDocumentSystem_swigregister", iDocumentSystem_swigregister, METH_VARARGS },
	 { (char *)"new_csTinyDocumentSystem", _wrap_new_csTinyDocumentSystem, METH_VARARGS },
	 { (char *)"delete_csTinyDocumentSystem", _wrap_delete_csTinyDocumentSystem, METH_VARARGS },
	 { (char *)"csTinyDocumentSystem_scfRefCount_set", _wrap_csTinyDocumentSystem_scfRefCount_set, METH_VARARGS },
	 { (char *)"csTinyDocumentSystem_scfRefCount_get", _wrap_csTinyDocumentSystem_scfRefCount_get, METH_VARARGS },
	 { (char *)"csTinyDocumentSystem_scfParent_set", _wrap_csTinyDocumentSystem_scfParent_set, METH_VARARGS },
	 { (char *)"csTinyDocumentSystem_scfParent_get", _wrap_csTinyDocumentSystem_scfParent_get, METH_VARARGS },
	 { (char *)"csTinyDocumentSystem_IncRef", _wrap_csTinyDocumentSystem_IncRef, METH_VARARGS },
	 { (char *)"csTinyDocumentSystem_DecRef", _wrap_csTinyDocumentSystem_DecRef, METH_VARARGS },
	 { (char *)"csTinyDocumentSystem_GetRefCount", _wrap_csTinyDocumentSystem_GetRefCount, METH_VARARGS },
	 { (char *)"csTinyDocumentSystem_QueryInterface", _wrap_csTinyDocumentSystem_QueryInterface, METH_VARARGS },
	 { (char *)"csTinyDocumentSystem_CreateDocument", _wrap_csTinyDocumentSystem_CreateDocument, METH_VARARGS },
	 { (char *)"csTinyDocumentSystem_swigregister", csTinyDocumentSystem_swigregister, METH_VARARGS },
	 { (char *)"iDataBuffer_GetSize", _wrap_iDataBuffer_GetSize, METH_VARARGS },
	 { (char *)"iDataBuffer_GetData", _wrap_iDataBuffer_GetData, METH_VARARGS },
	 { (char *)"iDataBuffer_asString", _wrap_iDataBuffer_asString, METH_VARARGS },
	 { (char *)"iDataBuffer_GetUint8", _wrap_iDataBuffer_GetUint8, METH_VARARGS },
	 { (char *)"delete_iDataBuffer", _wrap_delete_iDataBuffer, METH_VARARGS },
	 { (char *)"iDataBuffer_swigregister", iDataBuffer_swigregister, METH_VARARGS },
	 { (char *)"G3DFogInfo_r_set", _wrap_G3DFogInfo_r_set, METH_VARARGS },
	 { (char *)"G3DFogInfo_r_get", _wrap_G3DFogInfo_r_get, METH_VARARGS },
	 { (char *)"G3DFogInfo_g_set", _wrap_G3DFogInfo_g_set, METH_VARARGS },
	 { (char *)"G3DFogInfo_g_get", _wrap_G3DFogInfo_g_get, METH_VARARGS },
	 { (char *)"G3DFogInfo_b_set", _wrap_G3DFogInfo_b_set, METH_VARARGS },
	 { (char *)"G3DFogInfo_b_get", _wrap_G3DFogInfo_b_get, METH_VARARGS },
	 { (char *)"G3DFogInfo_intensity_set", _wrap_G3DFogInfo_intensity_set, METH_VARARGS },
	 { (char *)"G3DFogInfo_intensity_get", _wrap_G3DFogInfo_intensity_get, METH_VARARGS },
	 { (char *)"G3DFogInfo_intensity2_set", _wrap_G3DFogInfo_intensity2_set, METH_VARARGS },
	 { (char *)"G3DFogInfo_intensity2_get", _wrap_G3DFogInfo_intensity2_get, METH_VARARGS },
	 { (char *)"new_G3DFogInfo", _wrap_new_G3DFogInfo, METH_VARARGS },
	 { (char *)"delete_G3DFogInfo", _wrap_delete_G3DFogInfo, METH_VARARGS },
	 { (char *)"G3DFogInfo_swigregister", G3DFogInfo_swigregister, METH_VARARGS },
	 { (char *)"G3DTexturePlane_m_cam2tex_set", _wrap_G3DTexturePlane_m_cam2tex_set, METH_VARARGS },
	 { (char *)"G3DTexturePlane_m_cam2tex_get", _wrap_G3DTexturePlane_m_cam2tex_get, METH_VARARGS },
	 { (char *)"G3DTexturePlane_v_cam2tex_set", _wrap_G3DTexturePlane_v_cam2tex_set, METH_VARARGS },
	 { (char *)"G3DTexturePlane_v_cam2tex_get", _wrap_G3DTexturePlane_v_cam2tex_get, METH_VARARGS },
	 { (char *)"new_G3DTexturePlane", _wrap_new_G3DTexturePlane, METH_VARARGS },
	 { (char *)"delete_G3DTexturePlane", _wrap_delete_G3DTexturePlane, METH_VARARGS },
	 { (char *)"G3DTexturePlane_swigregister", G3DTexturePlane_swigregister, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_num_set", _wrap_G3DPolygonDPFX_num_set, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_num_get", _wrap_G3DPolygonDPFX_num_get, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_vertices_set", _wrap_G3DPolygonDPFX_vertices_set, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_vertices_get", _wrap_G3DPolygonDPFX_vertices_get, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_z_set", _wrap_G3DPolygonDPFX_z_set, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_z_get", _wrap_G3DPolygonDPFX_z_get, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_texels_set", _wrap_G3DPolygonDPFX_texels_set, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_texels_get", _wrap_G3DPolygonDPFX_texels_get, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_colors_set", _wrap_G3DPolygonDPFX_colors_set, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_colors_get", _wrap_G3DPolygonDPFX_colors_get, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_fog_info_set", _wrap_G3DPolygonDPFX_fog_info_set, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_fog_info_get", _wrap_G3DPolygonDPFX_fog_info_get, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_use_fog_set", _wrap_G3DPolygonDPFX_use_fog_set, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_use_fog_get", _wrap_G3DPolygonDPFX_use_fog_get, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_mat_handle_set", _wrap_G3DPolygonDPFX_mat_handle_set, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_mat_handle_get", _wrap_G3DPolygonDPFX_mat_handle_get, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_mixmode_set", _wrap_G3DPolygonDPFX_mixmode_set, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_mixmode_get", _wrap_G3DPolygonDPFX_mixmode_get, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_flat_color_r_set", _wrap_G3DPolygonDPFX_flat_color_r_set, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_flat_color_r_get", _wrap_G3DPolygonDPFX_flat_color_r_get, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_flat_color_g_set", _wrap_G3DPolygonDPFX_flat_color_g_set, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_flat_color_g_get", _wrap_G3DPolygonDPFX_flat_color_g_get, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_flat_color_b_set", _wrap_G3DPolygonDPFX_flat_color_b_set, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_flat_color_b_get", _wrap_G3DPolygonDPFX_flat_color_b_get, METH_VARARGS },
	 { (char *)"new_G3DPolygonDPFX", _wrap_new_G3DPolygonDPFX, METH_VARARGS },
	 { (char *)"delete_G3DPolygonDPFX", _wrap_delete_G3DPolygonDPFX, METH_VARARGS },
	 { (char *)"G3DPolygonDPFX_swigregister", G3DPolygonDPFX_swigregister, METH_VARARGS },
	 { (char *)"G3DPolygonDFP_num_set", _wrap_G3DPolygonDFP_num_set, METH_VARARGS },
	 { (char *)"G3DPolygonDFP_num_get", _wrap_G3DPolygonDFP_num_get, METH_VARARGS },
	 { (char *)"G3DPolygonDFP_vertices_set", _wrap_G3DPolygonDFP_vertices_set, METH_VARARGS },
	 { (char *)"G3DPolygonDFP_vertices_get", _wrap_G3DPolygonDFP_vertices_get, METH_VARARGS },
	 { (char *)"G3DPolygonDFP_normal_set", _wrap_G3DPolygonDFP_normal_set, METH_VARARGS },
	 { (char *)"G3DPolygonDFP_normal_get", _wrap_G3DPolygonDFP_normal_get, METH_VARARGS },
	 { (char *)"new_G3DPolygonDFP", _wrap_new_G3DPolygonDFP, METH_VARARGS },
	 { (char *)"delete_G3DPolygonDFP", _wrap_delete_G3DPolygonDFP, METH_VARARGS },
	 { (char *)"G3DPolygonDFP_swigregister", G3DPolygonDFP_swigregister, METH_VARARGS },
	 { (char *)"G3DPolygonDP_fog_info_set", _wrap_G3DPolygonDP_fog_info_set, METH_VARARGS },
	 { (char *)"G3DPolygonDP_fog_info_get", _wrap_G3DPolygonDP_fog_info_get, METH_VARARGS },
	 { (char *)"G3DPolygonDP_use_fog_set", _wrap_G3DPolygonDP_use_fog_set, METH_VARARGS },
	 { (char *)"G3DPolygonDP_use_fog_get", _wrap_G3DPolygonDP_use_fog_get, METH_VARARGS },
	 { (char *)"G3DPolygonDP_mat_handle_set", _wrap_G3DPolygonDP_mat_handle_set, METH_VARARGS },
	 { (char *)"G3DPolygonDP_mat_handle_get", _wrap_G3DPolygonDP_mat_handle_get, METH_VARARGS },
	 { (char *)"G3DPolygonDP_plane_set", _wrap_G3DPolygonDP_plane_set, METH_VARARGS },
	 { (char *)"G3DPolygonDP_plane_get", _wrap_G3DPolygonDP_plane_get, METH_VARARGS },
	 { (char *)"G3DPolygonDP_poly_texture_set", _wrap_G3DPolygonDP_poly_texture_set, METH_VARARGS },
	 { (char *)"G3DPolygonDP_poly_texture_get", _wrap_G3DPolygonDP_poly_texture_get, METH_VARARGS },
	 { (char *)"G3DPolygonDP_do_fullbright_set", _wrap_G3DPolygonDP_do_fullbright_set, METH_VARARGS },
	 { (char *)"G3DPolygonDP_do_fullbright_get", _wrap_G3DPolygonDP_do_fullbright_get, METH_VARARGS },
	 { (char *)"G3DPolygonDP_mixmode_set", _wrap_G3DPolygonDP_mixmode_set, METH_VARARGS },
	 { (char *)"G3DPolygonDP_mixmode_get", _wrap_G3DPolygonDP_mixmode_get, METH_VARARGS },
	 { (char *)"G3DPolygonDP_z_value_set", _wrap_G3DPolygonDP_z_value_set, METH_VARARGS },
	 { (char *)"G3DPolygonDP_z_value_get", _wrap_G3DPolygonDP_z_value_get, METH_VARARGS },
	 { (char *)"new_G3DPolygonDP", _wrap_new_G3DPolygonDP, METH_VARARGS },
	 { (char *)"delete_G3DPolygonDP", _wrap_delete_G3DPolygonDP, METH_VARARGS },
	 { (char *)"G3DPolygonDP_swigregister", G3DPolygonDP_swigregister, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_CanClip_set", _wrap_csGraphics3DCaps_CanClip_set, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_CanClip_get", _wrap_csGraphics3DCaps_CanClip_get, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_minTexHeight_set", _wrap_csGraphics3DCaps_minTexHeight_set, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_minTexHeight_get", _wrap_csGraphics3DCaps_minTexHeight_get, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_minTexWidth_set", _wrap_csGraphics3DCaps_minTexWidth_set, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_minTexWidth_get", _wrap_csGraphics3DCaps_minTexWidth_get, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_maxTexHeight_set", _wrap_csGraphics3DCaps_maxTexHeight_set, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_maxTexHeight_get", _wrap_csGraphics3DCaps_maxTexHeight_get, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_maxTexWidth_set", _wrap_csGraphics3DCaps_maxTexWidth_set, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_maxTexWidth_get", _wrap_csGraphics3DCaps_maxTexWidth_get, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_fog_set", _wrap_csGraphics3DCaps_fog_set, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_fog_get", _wrap_csGraphics3DCaps_fog_get, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_NeedsPO2Maps_set", _wrap_csGraphics3DCaps_NeedsPO2Maps_set, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_NeedsPO2Maps_get", _wrap_csGraphics3DCaps_NeedsPO2Maps_get, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_MaxAspectRatio_set", _wrap_csGraphics3DCaps_MaxAspectRatio_set, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_MaxAspectRatio_get", _wrap_csGraphics3DCaps_MaxAspectRatio_get, METH_VARARGS },
	 { (char *)"new_csGraphics3DCaps", _wrap_new_csGraphics3DCaps, METH_VARARGS },
	 { (char *)"delete_csGraphics3DCaps", _wrap_delete_csGraphics3DCaps, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_swigregister", csGraphics3DCaps_swigregister, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_num_vertices_pool_set", _wrap_G3DTriangleMesh_num_vertices_pool_set, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_num_vertices_pool_get", _wrap_G3DTriangleMesh_num_vertices_pool_get, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_num_triangles_set", _wrap_G3DTriangleMesh_num_triangles_set, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_num_triangles_get", _wrap_G3DTriangleMesh_num_triangles_get, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_triangles_set", _wrap_G3DTriangleMesh_triangles_set, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_triangles_get", _wrap_G3DTriangleMesh_triangles_get, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_clip_portal_set", _wrap_G3DTriangleMesh_clip_portal_set, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_clip_portal_get", _wrap_G3DTriangleMesh_clip_portal_get, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_clip_plane_set", _wrap_G3DTriangleMesh_clip_plane_set, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_clip_plane_get", _wrap_G3DTriangleMesh_clip_plane_get, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_clip_z_plane_set", _wrap_G3DTriangleMesh_clip_z_plane_set, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_clip_z_plane_get", _wrap_G3DTriangleMesh_clip_z_plane_get, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_use_vertex_color_set", _wrap_G3DTriangleMesh_use_vertex_color_set, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_use_vertex_color_get", _wrap_G3DTriangleMesh_use_vertex_color_get, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_do_fog_set", _wrap_G3DTriangleMesh_do_fog_set, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_do_fog_get", _wrap_G3DTriangleMesh_do_fog_get, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_do_mirror_set", _wrap_G3DTriangleMesh_do_mirror_set, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_do_mirror_get", _wrap_G3DTriangleMesh_do_mirror_get, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_do_morph_texels_set", _wrap_G3DTriangleMesh_do_morph_texels_set, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_do_morph_texels_get", _wrap_G3DTriangleMesh_do_morph_texels_get, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_do_morph_colors_set", _wrap_G3DTriangleMesh_do_morph_colors_set, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_do_morph_colors_get", _wrap_G3DTriangleMesh_do_morph_colors_get, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_vertex_mode_set", _wrap_G3DTriangleMesh_vertex_mode_set, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_vertex_mode_get", _wrap_G3DTriangleMesh_vertex_mode_get, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_mixmode_set", _wrap_G3DTriangleMesh_mixmode_set, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_mixmode_get", _wrap_G3DTriangleMesh_mixmode_get, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_morph_factor_set", _wrap_G3DTriangleMesh_morph_factor_set, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_morph_factor_get", _wrap_G3DTriangleMesh_morph_factor_get, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_buffers_set", _wrap_G3DTriangleMesh_buffers_set, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_buffers_get", _wrap_G3DTriangleMesh_buffers_get, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_mat_handle_set", _wrap_G3DTriangleMesh_mat_handle_set, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_mat_handle_get", _wrap_G3DTriangleMesh_mat_handle_get, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_vertex_fog_set", _wrap_G3DTriangleMesh_vertex_fog_set, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_vertex_fog_get", _wrap_G3DTriangleMesh_vertex_fog_get, METH_VARARGS },
	 { (char *)"new_G3DTriangleMesh", _wrap_new_G3DTriangleMesh, METH_VARARGS },
	 { (char *)"delete_G3DTriangleMesh", _wrap_delete_G3DTriangleMesh, METH_VARARGS },
	 { (char *)"G3DTriangleMesh_swigregister", G3DTriangleMesh_swigregister, METH_VARARGS },
	 { (char *)"G3DPolygonMesh_polybuf_set", _wrap_G3DPolygonMesh_polybuf_set, METH_VARARGS },
	 { (char *)"G3DPolygonMesh_polybuf_get", _wrap_G3DPolygonMesh_polybuf_get, METH_VARARGS },
	 { (char *)"G3DPolygonMesh_do_fog_set", _wrap_G3DPolygonMesh_do_fog_set, METH_VARARGS },
	 { (char *)"G3DPolygonMesh_do_fog_get", _wrap_G3DPolygonMesh_do_fog_get, METH_VARARGS },
	 { (char *)"G3DPolygonMesh_mixmode_set", _wrap_G3DPolygonMesh_mixmode_set, METH_VARARGS },
	 { (char *)"G3DPolygonMesh_mixmode_get", _wrap_G3DPolygonMesh_mixmode_get, METH_VARARGS },
	 { (char *)"G3DPolygonMesh_clip_portal_set", _wrap_G3DPolygonMesh_clip_portal_set, METH_VARARGS },
	 { (char *)"G3DPolygonMesh_clip_portal_get", _wrap_G3DPolygonMesh_clip_portal_get, METH_VARARGS },
	 { (char *)"G3DPolygonMesh_clip_plane_set", _wrap_G3DPolygonMesh_clip_plane_set, METH_VARARGS },
	 { (char *)"G3DPolygonMesh_clip_plane_get", _wrap_G3DPolygonMesh_clip_plane_get, METH_VARARGS },
	 { (char *)"G3DPolygonMesh_clip_z_plane_set", _wrap_G3DPolygonMesh_clip_z_plane_set, METH_VARARGS },
	 { (char *)"G3DPolygonMesh_clip_z_plane_get", _wrap_G3DPolygonMesh_clip_z_plane_get, METH_VARARGS },
	 { (char *)"G3DPolygonMesh_do_mirror_set", _wrap_G3DPolygonMesh_do_mirror_set, METH_VARARGS },
	 { (char *)"G3DPolygonMesh_do_mirror_get", _wrap_G3DPolygonMesh_do_mirror_get, METH_VARARGS },
	 { (char *)"G3DPolygonMesh_vertex_mode_set", _wrap_G3DPolygonMesh_vertex_mode_set, METH_VARARGS },
	 { (char *)"G3DPolygonMesh_vertex_mode_get", _wrap_G3DPolygonMesh_vertex_mode_get, METH_VARARGS },
	 { (char *)"G3DPolygonMesh_vertex_fog_set", _wrap_G3DPolygonMesh_vertex_fog_set, METH_VARARGS },
	 { (char *)"G3DPolygonMesh_vertex_fog_get", _wrap_G3DPolygonMesh_vertex_fog_get, METH_VARARGS },
	 { (char *)"new_G3DPolygonMesh", _wrap_new_G3DPolygonMesh, METH_VARARGS },
	 { (char *)"delete_G3DPolygonMesh", _wrap_delete_G3DPolygonMesh, METH_VARARGS },
	 { (char *)"G3DPolygonMesh_swigregister", G3DPolygonMesh_swigregister, METH_VARARGS },
	 { (char *)"csFog_enabled_set", _wrap_csFog_enabled_set, METH_VARARGS },
	 { (char *)"csFog_enabled_get", _wrap_csFog_enabled_get, METH_VARARGS },
	 { (char *)"csFog_density_set", _wrap_csFog_density_set, METH_VARARGS },
	 { (char *)"csFog_density_get", _wrap_csFog_density_get, METH_VARARGS },
	 { (char *)"csFog_red_set", _wrap_csFog_red_set, METH_VARARGS },
	 { (char *)"csFog_red_get", _wrap_csFog_red_get, METH_VARARGS },
	 { (char *)"csFog_green_set", _wrap_csFog_green_set, METH_VARARGS },
	 { (char *)"csFog_green_get", _wrap_csFog_green_get, METH_VARARGS },
	 { (char *)"csFog_blue_set", _wrap_csFog_blue_set, METH_VARARGS },
	 { (char *)"csFog_blue_get", _wrap_csFog_blue_get, METH_VARARGS },
	 { (char *)"new_csFog", _wrap_new_csFog, METH_VARARGS },
	 { (char *)"delete_csFog", _wrap_delete_csFog, METH_VARARGS },
	 { (char *)"csFog_swigregister", csFog_swigregister, METH_VARARGS },
	 { (char *)"iGraphics3D_Open", _wrap_iGraphics3D_Open, METH_VARARGS },
	 { (char *)"iGraphics3D_Close", _wrap_iGraphics3D_Close, METH_VARARGS },
	 { (char *)"iGraphics3D_GetDriver2D", _wrap_iGraphics3D_GetDriver2D, METH_VARARGS },
	 { (char *)"iGraphics3D_SetDimensions", _wrap_iGraphics3D_SetDimensions, METH_VARARGS },
	 { (char *)"iGraphics3D_GetWidth", _wrap_iGraphics3D_GetWidth, METH_VARARGS },
	 { (char *)"iGraphics3D_GetHeight", _wrap_iGraphics3D_GetHeight, METH_VARARGS },
	 { (char *)"iGraphics3D_GetCaps", _wrap_iGraphics3D_GetCaps, METH_VARARGS },
	 { (char *)"iGraphics3D_SetPerspectiveCenter", _wrap_iGraphics3D_SetPerspectiveCenter, METH_VARARGS },
	 { (char *)"iGraphics3D_GetPerspectiveCenter", _wrap_iGraphics3D_GetPerspectiveCenter, METH_VARARGS },
	 { (char *)"iGraphics3D_SetPerspectiveAspect", _wrap_iGraphics3D_SetPerspectiveAspect, METH_VARARGS },
	 { (char *)"iGraphics3D_GetPerspectiveAspect", _wrap_iGraphics3D_GetPerspectiveAspect, METH_VARARGS },
	 { (char *)"iGraphics3D_SetObjectToCamera", _wrap_iGraphics3D_SetObjectToCamera, METH_VARARGS },
	 { (char *)"iGraphics3D_GetObjectToCamera", _wrap_iGraphics3D_GetObjectToCamera, METH_VARARGS },
	 { (char *)"iGraphics3D_SetClipper", _wrap_iGraphics3D_SetClipper, METH_VARARGS },
	 { (char *)"iGraphics3D_GetClipper", _wrap_iGraphics3D_GetClipper, METH_VARARGS },
	 { (char *)"iGraphics3D_GetClipType", _wrap_iGraphics3D_GetClipType, METH_VARARGS },
	 { (char *)"iGraphics3D_SetNearPlane", _wrap_iGraphics3D_SetNearPlane, METH_VARARGS },
	 { (char *)"iGraphics3D_ResetNearPlane", _wrap_iGraphics3D_ResetNearPlane, METH_VARARGS },
	 { (char *)"iGraphics3D_GetNearPlane", _wrap_iGraphics3D_GetNearPlane, METH_VARARGS },
	 { (char *)"iGraphics3D_HasNearPlane", _wrap_iGraphics3D_HasNearPlane, METH_VARARGS },
	 { (char *)"iGraphics3D_GetZBuffAt", _wrap_iGraphics3D_GetZBuffAt, METH_VARARGS },
	 { (char *)"iGraphics3D_GetZBuffValue", _wrap_iGraphics3D_GetZBuffValue, METH_VARARGS },
	 { (char *)"iGraphics3D_BeginDraw", _wrap_iGraphics3D_BeginDraw, METH_VARARGS },
	 { (char *)"iGraphics3D_FinishDraw", _wrap_iGraphics3D_FinishDraw, METH_VARARGS },
	 { (char *)"iGraphics3D_Print", _wrap_iGraphics3D_Print, METH_VARARGS },
	 { (char *)"iGraphics3D_SetRenderState", _wrap_iGraphics3D_SetRenderState, METH_VARARGS },
	 { (char *)"iGraphics3D_GetRenderState", _wrap_iGraphics3D_GetRenderState, METH_VARARGS },
	 { (char *)"iGraphics3D_DrawPolygon", _wrap_iGraphics3D_DrawPolygon, METH_VARARGS },
	 { (char *)"iGraphics3D_DrawPolygonDebug", _wrap_iGraphics3D_DrawPolygonDebug, METH_VARARGS },
	 { (char *)"iGraphics3D_DrawPolygonFX", _wrap_iGraphics3D_DrawPolygonFX, METH_VARARGS },
	 { (char *)"iGraphics3D_DrawTriangleMesh", _wrap_iGraphics3D_DrawTriangleMesh, METH_VARARGS },
	 { (char *)"iGraphics3D_DrawPolygonMesh", _wrap_iGraphics3D_DrawPolygonMesh, METH_VARARGS },
	 { (char *)"iGraphics3D_OpenFogObject", _wrap_iGraphics3D_OpenFogObject, METH_VARARGS },
	 { (char *)"iGraphics3D_DrawFogPolygon", _wrap_iGraphics3D_DrawFogPolygon, METH_VARARGS },
	 { (char *)"iGraphics3D_CloseFogObject", _wrap_iGraphics3D_CloseFogObject, METH_VARARGS },
	 { (char *)"iGraphics3D_OpenPortal", _wrap_iGraphics3D_OpenPortal, METH_VARARGS },
	 { (char *)"iGraphics3D_ClosePortal", _wrap_iGraphics3D_ClosePortal, METH_VARARGS },
	 { (char *)"iGraphics3D_DrawLine", _wrap_iGraphics3D_DrawLine, METH_VARARGS },
	 { (char *)"iGraphics3D_CreateHalo", _wrap_iGraphics3D_CreateHalo, METH_VARARGS },
	 { (char *)"iGraphics3D_DrawPixmap", _wrap_iGraphics3D_DrawPixmap, METH_VARARGS },
	 { (char *)"iGraphics3D_GetTextureManager", _wrap_iGraphics3D_GetTextureManager, METH_VARARGS },
	 { (char *)"iGraphics3D_DumpCache", _wrap_iGraphics3D_DumpCache, METH_VARARGS },
	 { (char *)"iGraphics3D_ClearCache", _wrap_iGraphics3D_ClearCache, METH_VARARGS },
	 { (char *)"iGraphics3D_RemoveFromCache", _wrap_iGraphics3D_RemoveFromCache, METH_VARARGS },
	 { (char *)"iGraphics3D_GetVertexBufferManager", _wrap_iGraphics3D_GetVertexBufferManager, METH_VARARGS },
	 { (char *)"iGraphics3D_IsLightmapOK", _wrap_iGraphics3D_IsLightmapOK, METH_VARARGS },
	 { (char *)"iGraphics3D_SetRenderTarget", _wrap_iGraphics3D_SetRenderTarget, METH_VARARGS },
	 { (char *)"iGraphics3D_GetRenderTarget", _wrap_iGraphics3D_GetRenderTarget, METH_VARARGS },
	 { (char *)"delete_iGraphics3D", _wrap_delete_iGraphics3D, METH_VARARGS },
	 { (char *)"iGraphics3D_swigregister", iGraphics3D_swigregister, METH_VARARGS },
	 { (char *)"csPixelCoord_x_set", _wrap_csPixelCoord_x_set, METH_VARARGS },
	 { (char *)"csPixelCoord_x_get", _wrap_csPixelCoord_x_get, METH_VARARGS },
	 { (char *)"csPixelCoord_y_set", _wrap_csPixelCoord_y_set, METH_VARARGS },
	 { (char *)"csPixelCoord_y_get", _wrap_csPixelCoord_y_get, METH_VARARGS },
	 { (char *)"new_csPixelCoord", _wrap_new_csPixelCoord, METH_VARARGS },
	 { (char *)"delete_csPixelCoord", _wrap_delete_csPixelCoord, METH_VARARGS },
	 { (char *)"csPixelCoord_swigregister", csPixelCoord_swigregister, METH_VARARGS },
	 { (char *)"csPixelFormat_RedMask_set", _wrap_csPixelFormat_RedMask_set, METH_VARARGS },
	 { (char *)"csPixelFormat_RedMask_get", _wrap_csPixelFormat_RedMask_get, METH_VARARGS },
	 { (char *)"csPixelFormat_GreenMask_set", _wrap_csPixelFormat_GreenMask_set, METH_VARARGS },
	 { (char *)"csPixelFormat_GreenMask_get", _wrap_csPixelFormat_GreenMask_get, METH_VARARGS },
	 { (char *)"csPixelFormat_BlueMask_set", _wrap_csPixelFormat_BlueMask_set, METH_VARARGS },
	 { (char *)"csPixelFormat_BlueMask_get", _wrap_csPixelFormat_BlueMask_get, METH_VARARGS },
	 { (char *)"csPixelFormat_RedShift_set", _wrap_csPixelFormat_RedShift_set, METH_VARARGS },
	 { (char *)"csPixelFormat_RedShift_get", _wrap_csPixelFormat_RedShift_get, METH_VARARGS },
	 { (char *)"csPixelFormat_GreenShift_set", _wrap_csPixelFormat_GreenShift_set, METH_VARARGS },
	 { (char *)"csPixelFormat_GreenShift_get", _wrap_csPixelFormat_GreenShift_get, METH_VARARGS },
	 { (char *)"csPixelFormat_BlueShift_set", _wrap_csPixelFormat_BlueShift_set, METH_VARARGS },
	 { (char *)"csPixelFormat_BlueShift_get", _wrap_csPixelFormat_BlueShift_get, METH_VARARGS },
	 { (char *)"csPixelFormat_RedBits_set", _wrap_csPixelFormat_RedBits_set, METH_VARARGS },
	 { (char *)"csPixelFormat_RedBits_get", _wrap_csPixelFormat_RedBits_get, METH_VARARGS },
	 { (char *)"csPixelFormat_GreenBits_set", _wrap_csPixelFormat_GreenBits_set, METH_VARARGS },
	 { (char *)"csPixelFormat_GreenBits_get", _wrap_csPixelFormat_GreenBits_get, METH_VARARGS },
	 { (char *)"csPixelFormat_BlueBits_set", _wrap_csPixelFormat_BlueBits_set, METH_VARARGS },
	 { (char *)"csPixelFormat_BlueBits_get", _wrap_csPixelFormat_BlueBits_get, METH_VARARGS },
	 { (char *)"csPixelFormat_PalEntries_set", _wrap_csPixelFormat_PalEntries_set, METH_VARARGS },
	 { (char *)"csPixelFormat_PalEntries_get", _wrap_csPixelFormat_PalEntries_get, METH_VARARGS },
	 { (char *)"csPixelFormat_PixelBytes_set", _wrap_csPixelFormat_PixelBytes_set, METH_VARARGS },
	 { (char *)"csPixelFormat_PixelBytes_get", _wrap_csPixelFormat_PixelBytes_get, METH_VARARGS },
	 { (char *)"csPixelFormat_complete", _wrap_csPixelFormat_complete, METH_VARARGS },
	 { (char *)"new_csPixelFormat", _wrap_new_csPixelFormat, METH_VARARGS },
	 { (char *)"delete_csPixelFormat", _wrap_delete_csPixelFormat, METH_VARARGS },
	 { (char *)"csPixelFormat_swigregister", csPixelFormat_swigregister, METH_VARARGS },
	 { (char *)"csImageArea_x_set", _wrap_csImageArea_x_set, METH_VARARGS },
	 { (char *)"csImageArea_x_get", _wrap_csImageArea_x_get, METH_VARARGS },
	 { (char *)"csImageArea_y_set", _wrap_csImageArea_y_set, METH_VARARGS },
	 { (char *)"csImageArea_y_get", _wrap_csImageArea_y_get, METH_VARARGS },
	 { (char *)"csImageArea_w_set", _wrap_csImageArea_w_set, METH_VARARGS },
	 { (char *)"csImageArea_w_get", _wrap_csImageArea_w_get, METH_VARARGS },
	 { (char *)"csImageArea_h_set", _wrap_csImageArea_h_set, METH_VARARGS },
	 { (char *)"csImageArea_h_get", _wrap_csImageArea_h_get, METH_VARARGS },
	 { (char *)"csImageArea_data_set", _wrap_csImageArea_data_set, METH_VARARGS },
	 { (char *)"csImageArea_data_get", _wrap_csImageArea_data_get, METH_VARARGS },
	 { (char *)"new_csImageArea", _wrap_new_csImageArea, METH_VARARGS },
	 { (char *)"delete_csImageArea", _wrap_delete_csImageArea, METH_VARARGS },
	 { (char *)"csImageArea_swigregister", csImageArea_swigregister, METH_VARARGS },
	 { (char *)"iOffscreenCanvasCallback_scfGetID", _wrap_iOffscreenCanvasCallback_scfGetID, METH_VARARGS },
	 { (char *)"iOffscreenCanvasCallback_FinishDraw", _wrap_iOffscreenCanvasCallback_FinishDraw, METH_VARARGS },
	 { (char *)"iOffscreenCanvasCallback_SetRGB", _wrap_iOffscreenCanvasCallback_SetRGB, METH_VARARGS },
	 { (char *)"delete_iOffscreenCanvasCallback", _wrap_delete_iOffscreenCanvasCallback, METH_VARARGS },
	 { (char *)"iOffscreenCanvasCallback_swigregister", iOffscreenCanvasCallback_swigregister, METH_VARARGS },
	 { (char *)"iGraphics2D_Open", _wrap_iGraphics2D_Open, METH_VARARGS },
	 { (char *)"iGraphics2D_Close", _wrap_iGraphics2D_Close, METH_VARARGS },
	 { (char *)"iGraphics2D_GetWidth", _wrap_iGraphics2D_GetWidth, METH_VARARGS },
	 { (char *)"iGraphics2D_GetHeight", _wrap_iGraphics2D_GetHeight, METH_VARARGS },
	 { (char *)"iGraphics2D_GetPage", _wrap_iGraphics2D_GetPage, METH_VARARGS },
	 { (char *)"iGraphics2D_DoubleBuffer", _wrap_iGraphics2D_DoubleBuffer, METH_VARARGS },
	 { (char *)"iGraphics2D_GetDoubleBufferState", _wrap_iGraphics2D_GetDoubleBufferState, METH_VARARGS },
	 { (char *)"iGraphics2D_GetPixelFormat", _wrap_iGraphics2D_GetPixelFormat, METH_VARARGS },
	 { (char *)"iGraphics2D_GetPixelBytes", _wrap_iGraphics2D_GetPixelBytes, METH_VARARGS },
	 { (char *)"iGraphics2D_GetPalEntryCount", _wrap_iGraphics2D_GetPalEntryCount, METH_VARARGS },
	 { (char *)"iGraphics2D_GetPalette", _wrap_iGraphics2D_GetPalette, METH_VARARGS },
	 { (char *)"iGraphics2D_SetRGB", _wrap_iGraphics2D_SetRGB, METH_VARARGS },
	 { (char *)"iGraphics2D_FindRGB", _wrap_iGraphics2D_FindRGB, METH_VARARGS },
	 { (char *)"iGraphics2D_SetClipRect", _wrap_iGraphics2D_SetClipRect, METH_VARARGS },
	 { (char *)"iGraphics2D_GetClipRect", _wrap_iGraphics2D_GetClipRect, METH_VARARGS },
	 { (char *)"iGraphics2D_BeginDraw", _wrap_iGraphics2D_BeginDraw, METH_VARARGS },
	 { (char *)"iGraphics2D_FinishDraw", _wrap_iGraphics2D_FinishDraw, METH_VARARGS },
	 { (char *)"iGraphics2D_Print", _wrap_iGraphics2D_Print, METH_VARARGS },
	 { (char *)"iGraphics2D_Clear", _wrap_iGraphics2D_Clear, METH_VARARGS },
	 { (char *)"iGraphics2D_ClearAll", _wrap_iGraphics2D_ClearAll, METH_VARARGS },
	 { (char *)"iGraphics2D_DrawLine", _wrap_iGraphics2D_DrawLine, METH_VARARGS },
	 { (char *)"iGraphics2D_DrawBox", _wrap_iGraphics2D_DrawBox, METH_VARARGS },
	 { (char *)"iGraphics2D_ClipLine", _wrap_iGraphics2D_ClipLine, METH_VARARGS },
	 { (char *)"iGraphics2D_DrawPixel", _wrap_iGraphics2D_DrawPixel, METH_VARARGS },
	 { (char *)"iGraphics2D_DrawPixels", _wrap_iGraphics2D_DrawPixels, METH_VARARGS },
	 { (char *)"iGraphics2D_Blit", _wrap_iGraphics2D_Blit, METH_VARARGS },
	 { (char *)"iGraphics2D_GetPixelAt", _wrap_iGraphics2D_GetPixelAt, METH_VARARGS },
	 { (char *)"iGraphics2D_GetPixel", _wrap_iGraphics2D_GetPixel, METH_VARARGS },
	 { (char *)"iGraphics2D_SaveArea", _wrap_iGraphics2D_SaveArea, METH_VARARGS },
	 { (char *)"iGraphics2D_RestoreArea", _wrap_iGraphics2D_RestoreArea, METH_VARARGS },
	 { (char *)"iGraphics2D_FreeArea", _wrap_iGraphics2D_FreeArea, METH_VARARGS },
	 { (char *)"iGraphics2D_Write", _wrap_iGraphics2D_Write, METH_VARARGS },
	 { (char *)"iGraphics2D_WriteBaseline", _wrap_iGraphics2D_WriteBaseline, METH_VARARGS },
	 { (char *)"iGraphics2D_AllowResize", _wrap_iGraphics2D_AllowResize, METH_VARARGS },
	 { (char *)"iGraphics2D_Resize", _wrap_iGraphics2D_Resize, METH_VARARGS },
	 { (char *)"iGraphics2D_GetFontServer", _wrap_iGraphics2D_GetFontServer, METH_VARARGS },
	 { (char *)"iGraphics2D_PerformExtension", _wrap_iGraphics2D_PerformExtension, METH_VARARGS },
	 { (char *)"iGraphics2D_PerformExtensionV", _wrap_iGraphics2D_PerformExtensionV, METH_VARARGS },
	 { (char *)"iGraphics2D_ScreenShot", _wrap_iGraphics2D_ScreenShot, METH_VARARGS },
	 { (char *)"iGraphics2D_GetNativeWindow", _wrap_iGraphics2D_GetNativeWindow, METH_VARARGS },
	 { (char *)"iGraphics2D_GetFullScreen", _wrap_iGraphics2D_GetFullScreen, METH_VARARGS },
	 { (char *)"iGraphics2D_SetFullScreen", _wrap_iGraphics2D_SetFullScreen, METH_VARARGS },
	 { (char *)"iGraphics2D_SetMousePosition", _wrap_iGraphics2D_SetMousePosition, METH_VARARGS },
	 { (char *)"iGraphics2D_SetMouseCursor", _wrap_iGraphics2D_SetMouseCursor, METH_VARARGS },
	 { (char *)"iGraphics2D_SetGamma", _wrap_iGraphics2D_SetGamma, METH_VARARGS },
	 { (char *)"iGraphics2D_GetGamma", _wrap_iGraphics2D_GetGamma, METH_VARARGS },
	 { (char *)"iGraphics2D_CreateOffscreenCanvas", _wrap_iGraphics2D_CreateOffscreenCanvas, METH_VARARGS },
	 { (char *)"delete_iGraphics2D", _wrap_delete_iGraphics2D, METH_VARARGS },
	 { (char *)"iGraphics2D_swigregister", iGraphics2D_swigregister, METH_VARARGS },
	 { (char *)"iFontDeleteNotify_scfGetID", _wrap_iFontDeleteNotify_scfGetID, METH_VARARGS },
	 { (char *)"iFontDeleteNotify_BeforeDelete", _wrap_iFontDeleteNotify_BeforeDelete, METH_VARARGS },
	 { (char *)"delete_iFontDeleteNotify", _wrap_delete_iFontDeleteNotify, METH_VARARGS },
	 { (char *)"iFontDeleteNotify_swigregister", iFontDeleteNotify_swigregister, METH_VARARGS },
	 { (char *)"iFont_AddDeleteCallback", _wrap_iFont_AddDeleteCallback, METH_VARARGS },
	 { (char *)"iFont_RemoveDeleteCallback", _wrap_iFont_RemoveDeleteCallback, METH_VARARGS },
	 { (char *)"iFont_SetSize", _wrap_iFont_SetSize, METH_VARARGS },
	 { (char *)"iFont_GetSize", _wrap_iFont_GetSize, METH_VARARGS },
	 { (char *)"iFont_GetMaxSize", _wrap_iFont_GetMaxSize, METH_VARARGS },
	 { (char *)"iFont_GetGlyphSize", _wrap_iFont_GetGlyphSize, METH_VARARGS },
	 { (char *)"iFont_GetGlyphBitmap", _wrap_iFont_GetGlyphBitmap, METH_VARARGS },
	 { (char *)"iFont_GetGlyphAlphaBitmap", _wrap_iFont_GetGlyphAlphaBitmap, METH_VARARGS },
	 { (char *)"iFont_GetDimensions", _wrap_iFont_GetDimensions, METH_VARARGS },
	 { (char *)"iFont_GetLength", _wrap_iFont_GetLength, METH_VARARGS },
	 { (char *)"iFont_GetDescent", _wrap_iFont_GetDescent, METH_VARARGS },
	 { (char *)"iFont_GetAscent", _wrap_iFont_GetAscent, METH_VARARGS },
	 { (char *)"delete_iFont", _wrap_delete_iFont, METH_VARARGS },
	 { (char *)"iFont_swigregister", iFont_swigregister, METH_VARARGS },
	 { (char *)"iFontServer_LoadFont", _wrap_iFontServer_LoadFont, METH_VARARGS },
	 { (char *)"iFontServer_GetFontCount", _wrap_iFontServer_GetFontCount, METH_VARARGS },
	 { (char *)"iFontServer_GetFont", _wrap_iFontServer_GetFont, METH_VARARGS },
	 { (char *)"delete_iFontServer", _wrap_delete_iFontServer, METH_VARARGS },
	 { (char *)"iFontServer_swigregister", iFontServer_swigregister, METH_VARARGS },
	 { (char *)"iHalo_GetWidth", _wrap_iHalo_GetWidth, METH_VARARGS },
	 { (char *)"iHalo_GetHeight", _wrap_iHalo_GetHeight, METH_VARARGS },
	 { (char *)"iHalo_SetColor", _wrap_iHalo_SetColor, METH_VARARGS },
	 { (char *)"iHalo_GetColor", _wrap_iHalo_GetColor, METH_VARARGS },
	 { (char *)"iHalo_Draw", _wrap_iHalo_Draw, METH_VARARGS },
	 { (char *)"delete_iHalo", _wrap_delete_iHalo, METH_VARARGS },
	 { (char *)"iHalo_swigregister", iHalo_swigregister, METH_VARARGS },
	 { (char *)"iTextureHandle_GetFlags", _wrap_iTextureHandle_GetFlags, METH_VARARGS },
	 { (char *)"iTextureHandle_SetKeyColor", _wrap_iTextureHandle_SetKeyColor, METH_VARARGS },
	 { (char *)"iTextureHandle_GetKeyColorStatus", _wrap_iTextureHandle_GetKeyColorStatus, METH_VARARGS },
	 { (char *)"iTextureHandle_GetKeyColor", _wrap_iTextureHandle_GetKeyColor, METH_VARARGS },
	 { (char *)"iTextureHandle_GetMipMapDimensions", _wrap_iTextureHandle_GetMipMapDimensions, METH_VARARGS },
	 { (char *)"iTextureHandle_GetOriginalDimensions", _wrap_iTextureHandle_GetOriginalDimensions, METH_VARARGS },
	 { (char *)"iTextureHandle_GetMeanColor", _wrap_iTextureHandle_GetMeanColor, METH_VARARGS },
	 { (char *)"iTextureHandle_GetCacheData", _wrap_iTextureHandle_GetCacheData, METH_VARARGS },
	 { (char *)"iTextureHandle_SetCacheData", _wrap_iTextureHandle_SetCacheData, METH_VARARGS },
	 { (char *)"iTextureHandle_GetPrivateObject", _wrap_iTextureHandle_GetPrivateObject, METH_VARARGS },
	 { (char *)"iTextureHandle_GetAlphaMap", _wrap_iTextureHandle_GetAlphaMap, METH_VARARGS },
	 { (char *)"iTextureHandle_Prepare", _wrap_iTextureHandle_Prepare, METH_VARARGS },
	 { (char *)"iTextureHandle_GetCanvas", _wrap_iTextureHandle_GetCanvas, METH_VARARGS },
	 { (char *)"delete_iTextureHandle", _wrap_delete_iTextureHandle, METH_VARARGS },
	 { (char *)"iTextureHandle_swigregister", iTextureHandle_swigregister, METH_VARARGS },
	 { (char *)"iTextureManager_RegisterTexture", _wrap_iTextureManager_RegisterTexture, METH_VARARGS },
	 { (char *)"iTextureManager_PrepareTextures", _wrap_iTextureManager_PrepareTextures, METH_VARARGS },
	 { (char *)"iTextureManager_FreeImages", _wrap_iTextureManager_FreeImages, METH_VARARGS },
	 { (char *)"iTextureManager_RegisterMaterial", _wrap_iTextureManager_RegisterMaterial, METH_VARARGS },
	 { (char *)"iTextureManager_PrepareMaterials", _wrap_iTextureManager_PrepareMaterials, METH_VARARGS },
	 { (char *)"iTextureManager_FreeMaterials", _wrap_iTextureManager_FreeMaterials, METH_VARARGS },
	 { (char *)"iTextureManager_SetVerbose", _wrap_iTextureManager_SetVerbose, METH_VARARGS },
	 { (char *)"iTextureManager_GetTextureFormat", _wrap_iTextureManager_GetTextureFormat, METH_VARARGS },
	 { (char *)"delete_iTextureManager", _wrap_delete_iTextureManager, METH_VARARGS },
	 { (char *)"iTextureManager_swigregister", iTextureManager_swigregister, METH_VARARGS },
	 { (char *)"iVertexBuffer_scfGetID", _wrap_iVertexBuffer_scfGetID, METH_VARARGS },
	 { (char *)"iVertexBuffer_GetPriority", _wrap_iVertexBuffer_GetPriority, METH_VARARGS },
	 { (char *)"iVertexBuffer_IsLocked", _wrap_iVertexBuffer_IsLocked, METH_VARARGS },
	 { (char *)"iVertexBuffer_GetVertices", _wrap_iVertexBuffer_GetVertices, METH_VARARGS },
	 { (char *)"iVertexBuffer_GetTexels", _wrap_iVertexBuffer_GetTexels, METH_VARARGS },
	 { (char *)"iVertexBuffer_GetColors", _wrap_iVertexBuffer_GetColors, METH_VARARGS },
	 { (char *)"iVertexBuffer_GetUserArray", _wrap_iVertexBuffer_GetUserArray, METH_VARARGS },
	 { (char *)"iVertexBuffer_GetUserArrayComponentCount", _wrap_iVertexBuffer_GetUserArrayComponentCount, METH_VARARGS },
	 { (char *)"iVertexBuffer_GetVertexCount", _wrap_iVertexBuffer_GetVertexCount, METH_VARARGS },
	 { (char *)"iVertexBuffer_GetBoundingBox", _wrap_iVertexBuffer_GetBoundingBox, METH_VARARGS },
	 { (char *)"delete_iVertexBuffer", _wrap_delete_iVertexBuffer, METH_VARARGS },
	 { (char *)"iVertexBuffer_swigregister", iVertexBuffer_swigregister, METH_VARARGS },
	 { (char *)"iPolygonBuffer_scfGetID", _wrap_iPolygonBuffer_scfGetID, METH_VARARGS },
	 { (char *)"iPolygonBuffer_AddPolygon", _wrap_iPolygonBuffer_AddPolygon, METH_VARARGS },
	 { (char *)"iPolygonBuffer_SetVertexArray", _wrap_iPolygonBuffer_SetVertexArray, METH_VARARGS },
	 { (char *)"iPolygonBuffer_AddMaterial", _wrap_iPolygonBuffer_AddMaterial, METH_VARARGS },
	 { (char *)"iPolygonBuffer_GetMaterialCount", _wrap_iPolygonBuffer_GetMaterialCount, METH_VARARGS },
	 { (char *)"iPolygonBuffer_GetMaterial", _wrap_iPolygonBuffer_GetMaterial, METH_VARARGS },
	 { (char *)"iPolygonBuffer_GetVertexCount", _wrap_iPolygonBuffer_GetVertexCount, METH_VARARGS },
	 { (char *)"iPolygonBuffer_GetVertices", _wrap_iPolygonBuffer_GetVertices, METH_VARARGS },
	 { (char *)"iPolygonBuffer_SetMaterial", _wrap_iPolygonBuffer_SetMaterial, METH_VARARGS },
	 { (char *)"iPolygonBuffer_Clear", _wrap_iPolygonBuffer_Clear, METH_VARARGS },
	 { (char *)"iPolygonBuffer_Prepare", _wrap_iPolygonBuffer_Prepare, METH_VARARGS },
	 { (char *)"iPolygonBuffer_MarkLightmapsDirty", _wrap_iPolygonBuffer_MarkLightmapsDirty, METH_VARARGS },
	 { (char *)"iPolygonBuffer_GetBoundingBox", _wrap_iPolygonBuffer_GetBoundingBox, METH_VARARGS },
	 { (char *)"delete_iPolygonBuffer", _wrap_delete_iPolygonBuffer, METH_VARARGS },
	 { (char *)"iPolygonBuffer_swigregister", iPolygonBuffer_swigregister, METH_VARARGS },
	 { (char *)"iVertexBufferManagerClient_scfGetID", _wrap_iVertexBufferManagerClient_scfGetID, METH_VARARGS },
	 { (char *)"iVertexBufferManagerClient_ManagerClosing", _wrap_iVertexBufferManagerClient_ManagerClosing, METH_VARARGS },
	 { (char *)"delete_iVertexBufferManagerClient", _wrap_delete_iVertexBufferManagerClient, METH_VARARGS },
	 { (char *)"iVertexBufferManagerClient_swigregister", iVertexBufferManagerClient_swigregister, METH_VARARGS },
	 { (char *)"iVertexBufferManager_scfGetID", _wrap_iVertexBufferManager_scfGetID, METH_VARARGS },
	 { (char *)"iVertexBufferManager_CreateBuffer", _wrap_iVertexBufferManager_CreateBuffer, METH_VARARGS },
	 { (char *)"iVertexBufferManager_ChangePriority", _wrap_iVertexBufferManager_ChangePriority, METH_VARARGS },
	 { (char *)"iVertexBufferManager_LockBuffer", _wrap_iVertexBufferManager_LockBuffer, METH_VARARGS },
	 { (char *)"iVertexBufferManager_LockUserArray", _wrap_iVertexBufferManager_LockUserArray, METH_VARARGS },
	 { (char *)"iVertexBufferManager_UnlockBuffer", _wrap_iVertexBufferManager_UnlockBuffer, METH_VARARGS },
	 { (char *)"iVertexBufferManager_CreatePolygonBuffer", _wrap_iVertexBufferManager_CreatePolygonBuffer, METH_VARARGS },
	 { (char *)"iVertexBufferManager_AddClient", _wrap_iVertexBufferManager_AddClient, METH_VARARGS },
	 { (char *)"iVertexBufferManager_RemoveClient", _wrap_iVertexBufferManager_RemoveClient, METH_VARARGS },
	 { (char *)"delete_iVertexBufferManager", _wrap_delete_iVertexBufferManager, METH_VARARGS },
	 { (char *)"iVertexBufferManager_swigregister", iVertexBufferManager_swigregister, METH_VARARGS },
	 { (char *)"csTextureLayer_txt_handle_set", _wrap_csTextureLayer_txt_handle_set, METH_VARARGS },
	 { (char *)"csTextureLayer_txt_handle_get", _wrap_csTextureLayer_txt_handle_get, METH_VARARGS },
	 { (char *)"csTextureLayer_mode_set", _wrap_csTextureLayer_mode_set, METH_VARARGS },
	 { (char *)"csTextureLayer_mode_get", _wrap_csTextureLayer_mode_get, METH_VARARGS },
	 { (char *)"csTextureLayer_uscale_set", _wrap_csTextureLayer_uscale_set, METH_VARARGS },
	 { (char *)"csTextureLayer_uscale_get", _wrap_csTextureLayer_uscale_get, METH_VARARGS },
	 { (char *)"csTextureLayer_vscale_set", _wrap_csTextureLayer_vscale_set, METH_VARARGS },
	 { (char *)"csTextureLayer_vscale_get", _wrap_csTextureLayer_vscale_get, METH_VARARGS },
	 { (char *)"csTextureLayer_ushift_set", _wrap_csTextureLayer_ushift_set, METH_VARARGS },
	 { (char *)"csTextureLayer_ushift_get", _wrap_csTextureLayer_ushift_get, METH_VARARGS },
	 { (char *)"csTextureLayer_vshift_set", _wrap_csTextureLayer_vshift_set, METH_VARARGS },
	 { (char *)"csTextureLayer_vshift_get", _wrap_csTextureLayer_vshift_get, METH_VARARGS },
	 { (char *)"new_csTextureLayer", _wrap_new_csTextureLayer, METH_VARARGS },
	 { (char *)"delete_csTextureLayer", _wrap_delete_csTextureLayer, METH_VARARGS },
	 { (char *)"csTextureLayer_swigregister", csTextureLayer_swigregister, METH_VARARGS },
	 { (char *)"iMaterial_SetEffect", _wrap_iMaterial_SetEffect, METH_VARARGS },
	 { (char *)"iMaterial_GetEffect", _wrap_iMaterial_GetEffect, METH_VARARGS },
	 { (char *)"iMaterial_GetTexture", _wrap_iMaterial_GetTexture, METH_VARARGS },
	 { (char *)"iMaterial_GetTextureLayerCount", _wrap_iMaterial_GetTextureLayerCount, METH_VARARGS },
	 { (char *)"iMaterial_GetTextureLayer", _wrap_iMaterial_GetTextureLayer, METH_VARARGS },
	 { (char *)"iMaterial_GetFlatColor", _wrap_iMaterial_GetFlatColor, METH_VARARGS },
	 { (char *)"iMaterial_SetFlatColor", _wrap_iMaterial_SetFlatColor, METH_VARARGS },
	 { (char *)"iMaterial_GetReflection", _wrap_iMaterial_GetReflection, METH_VARARGS },
	 { (char *)"iMaterial_SetReflection", _wrap_iMaterial_SetReflection, METH_VARARGS },
	 { (char *)"delete_iMaterial", _wrap_delete_iMaterial, METH_VARARGS },
	 { (char *)"iMaterial_swigregister", iMaterial_swigregister, METH_VARARGS },
	 { (char *)"iMaterialHandle_scfGetID", _wrap_iMaterialHandle_scfGetID, METH_VARARGS },
	 { (char *)"iMaterialHandle_GetTexture", _wrap_iMaterialHandle_GetTexture, METH_VARARGS },
	 { (char *)"iMaterialHandle_GetFlatColor", _wrap_iMaterialHandle_GetFlatColor, METH_VARARGS },
	 { (char *)"iMaterialHandle_GetReflection", _wrap_iMaterialHandle_GetReflection, METH_VARARGS },
	 { (char *)"iMaterialHandle_Prepare", _wrap_iMaterialHandle_Prepare, METH_VARARGS },
	 { (char *)"delete_iMaterialHandle", _wrap_delete_iMaterialHandle, METH_VARARGS },
	 { (char *)"iMaterialHandle_swigregister", iMaterialHandle_swigregister, METH_VARARGS },
	 { (char *)"iNativeWindowManager_scfGetID", _wrap_iNativeWindowManager_scfGetID, METH_VARARGS },
	 { (char *)"iNativeWindowManager_Alert", _wrap_iNativeWindowManager_Alert, METH_VARARGS },
	 { (char *)"iNativeWindowManager_AlertV", _wrap_iNativeWindowManager_AlertV, METH_VARARGS },
	 { (char *)"delete_iNativeWindowManager", _wrap_delete_iNativeWindowManager, METH_VARARGS },
	 { (char *)"iNativeWindowManager_swigregister", iNativeWindowManager_swigregister, METH_VARARGS },
	 { (char *)"iNativeWindow_scfGetID", _wrap_iNativeWindow_scfGetID, METH_VARARGS },
	 { (char *)"iNativeWindow_SetTitle", _wrap_iNativeWindow_SetTitle, METH_VARARGS },
	 { (char *)"delete_iNativeWindow", _wrap_delete_iNativeWindow, METH_VARARGS },
	 { (char *)"iNativeWindow_swigregister", iNativeWindow_swigregister, METH_VARARGS },
	 { (char *)"csStreamDescription_type_set", _wrap_csStreamDescription_type_set, METH_VARARGS },
	 { (char *)"csStreamDescription_type_get", _wrap_csStreamDescription_type_get, METH_VARARGS },
	 { (char *)"csStreamDescription_codec_set", _wrap_csStreamDescription_codec_set, METH_VARARGS },
	 { (char *)"csStreamDescription_codec_get", _wrap_csStreamDescription_codec_get, METH_VARARGS },
	 { (char *)"csStreamDescription_name_get", _wrap_csStreamDescription_name_get, METH_VARARGS },
	 { (char *)"new_csStreamDescription", _wrap_new_csStreamDescription, METH_VARARGS },
	 { (char *)"delete_csStreamDescription", _wrap_delete_csStreamDescription, METH_VARARGS },
	 { (char *)"csStreamDescription_swigregister", csStreamDescription_swigregister, METH_VARARGS },
	 { (char *)"csVideoStreamDescription_colordepth_set", _wrap_csVideoStreamDescription_colordepth_set, METH_VARARGS },
	 { (char *)"csVideoStreamDescription_colordepth_get", _wrap_csVideoStreamDescription_colordepth_get, METH_VARARGS },
	 { (char *)"csVideoStreamDescription_framecount_set", _wrap_csVideoStreamDescription_framecount_set, METH_VARARGS },
	 { (char *)"csVideoStreamDescription_framecount_get", _wrap_csVideoStreamDescription_framecount_get, METH_VARARGS },
	 { (char *)"csVideoStreamDescription_width_set", _wrap_csVideoStreamDescription_width_set, METH_VARARGS },
	 { (char *)"csVideoStreamDescription_width_get", _wrap_csVideoStreamDescription_width_get, METH_VARARGS },
	 { (char *)"csVideoStreamDescription_height_set", _wrap_csVideoStreamDescription_height_set, METH_VARARGS },
	 { (char *)"csVideoStreamDescription_height_get", _wrap_csVideoStreamDescription_height_get, METH_VARARGS },
	 { (char *)"csVideoStreamDescription_framerate_set", _wrap_csVideoStreamDescription_framerate_set, METH_VARARGS },
	 { (char *)"csVideoStreamDescription_framerate_get", _wrap_csVideoStreamDescription_framerate_get, METH_VARARGS },
	 { (char *)"csVideoStreamDescription_duration_set", _wrap_csVideoStreamDescription_duration_set, METH_VARARGS },
	 { (char *)"csVideoStreamDescription_duration_get", _wrap_csVideoStreamDescription_duration_get, METH_VARARGS },
	 { (char *)"new_csVideoStreamDescription", _wrap_new_csVideoStreamDescription, METH_VARARGS },
	 { (char *)"delete_csVideoStreamDescription", _wrap_delete_csVideoStreamDescription, METH_VARARGS },
	 { (char *)"csVideoStreamDescription_swigregister", csVideoStreamDescription_swigregister, METH_VARARGS },
	 { (char *)"csAudioStreamDescription_formattag_set", _wrap_csAudioStreamDescription_formattag_set, METH_VARARGS },
	 { (char *)"csAudioStreamDescription_formattag_get", _wrap_csAudioStreamDescription_formattag_get, METH_VARARGS },
	 { (char *)"csAudioStreamDescription_channels_set", _wrap_csAudioStreamDescription_channels_set, METH_VARARGS },
	 { (char *)"csAudioStreamDescription_channels_get", _wrap_csAudioStreamDescription_channels_get, METH_VARARGS },
	 { (char *)"csAudioStreamDescription_samplespersecond_set", _wrap_csAudioStreamDescription_samplespersecond_set, METH_VARARGS },
	 { (char *)"csAudioStreamDescription_samplespersecond_get", _wrap_csAudioStreamDescription_samplespersecond_get, METH_VARARGS },
	 { (char *)"csAudioStreamDescription_bitspersample_set", _wrap_csAudioStreamDescription_bitspersample_set, METH_VARARGS },
	 { (char *)"csAudioStreamDescription_bitspersample_get", _wrap_csAudioStreamDescription_bitspersample_get, METH_VARARGS },
	 { (char *)"csAudioStreamDescription_duration_set", _wrap_csAudioStreamDescription_duration_set, METH_VARARGS },
	 { (char *)"csAudioStreamDescription_duration_get", _wrap_csAudioStreamDescription_duration_get, METH_VARARGS },
	 { (char *)"new_csAudioStreamDescription", _wrap_new_csAudioStreamDescription, METH_VARARGS },
	 { (char *)"delete_csAudioStreamDescription", _wrap_delete_csAudioStreamDescription, METH_VARARGS },
	 { (char *)"csAudioStreamDescription_swigregister", csAudioStreamDescription_swigregister, METH_VARARGS },
	 { (char *)"iStreamIterator_HasNext", _wrap_iStreamIterator_HasNext, METH_VARARGS },
	 { (char *)"iStreamIterator_Next", _wrap_iStreamIterator_Next, METH_VARARGS },
	 { (char *)"delete_iStreamIterator", _wrap_delete_iStreamIterator, METH_VARARGS },
	 { (char *)"iStreamIterator_swigregister", iStreamIterator_swigregister, METH_VARARGS },
	 { (char *)"iStreamFormat_GetCaps", _wrap_iStreamFormat_GetCaps, METH_VARARGS },
	 { (char *)"iStreamFormat_GetStreamIterator", _wrap_iStreamFormat_GetStreamIterator, METH_VARARGS },
	 { (char *)"iStreamFormat_Select", _wrap_iStreamFormat_Select, METH_VARARGS },
	 { (char *)"iStreamFormat_NextFrame", _wrap_iStreamFormat_NextFrame, METH_VARARGS },
	 { (char *)"iStreamFormat_Load", _wrap_iStreamFormat_Load, METH_VARARGS },
	 { (char *)"iStreamFormat_Unload", _wrap_iStreamFormat_Unload, METH_VARARGS },
	 { (char *)"delete_iStreamFormat", _wrap_delete_iStreamFormat, METH_VARARGS },
	 { (char *)"iStreamFormat_swigregister", iStreamFormat_swigregister, METH_VARARGS },
	 { (char *)"iStream_GetStreamDescription", _wrap_iStream_GetStreamDescription, METH_VARARGS },
	 { (char *)"iStream_GotoFrame", _wrap_iStream_GotoFrame, METH_VARARGS },
	 { (char *)"iStream_GotoTime", _wrap_iStream_GotoTime, METH_VARARGS },
	 { (char *)"iStream_SetPlayMethod", _wrap_iStream_SetPlayMethod, METH_VARARGS },
	 { (char *)"iStream_NextFrame", _wrap_iStream_NextFrame, METH_VARARGS },
	 { (char *)"delete_iStream", _wrap_delete_iStream, METH_VARARGS },
	 { (char *)"iStream_swigregister", iStream_swigregister, METH_VARARGS },
	 { (char *)"iVideoStream_GetStreamDescription", _wrap_iVideoStream_GetStreamDescription, METH_VARARGS },
	 { (char *)"iVideoStream_SetRect", _wrap_iVideoStream_SetRect, METH_VARARGS },
	 { (char *)"iVideoStream_SetFXMode", _wrap_iVideoStream_SetFXMode, METH_VARARGS },
	 { (char *)"iVideoStream_NextFrameGetMaterial", _wrap_iVideoStream_NextFrameGetMaterial, METH_VARARGS },
	 { (char *)"delete_iVideoStream", _wrap_delete_iVideoStream, METH_VARARGS },
	 { (char *)"iVideoStream_swigregister", iVideoStream_swigregister, METH_VARARGS },
	 { (char *)"iAudioStream_GetStreamDescription", _wrap_iAudioStream_GetStreamDescription, METH_VARARGS },
	 { (char *)"delete_iAudioStream", _wrap_delete_iAudioStream, METH_VARARGS },
	 { (char *)"iAudioStream_swigregister", iAudioStream_swigregister, METH_VARARGS },
	 { (char *)"csCodecDescription_codec_set", _wrap_csCodecDescription_codec_set, METH_VARARGS },
	 { (char *)"csCodecDescription_codec_get", _wrap_csCodecDescription_codec_get, METH_VARARGS },
	 { (char *)"csCodecDescription_bEncode_set", _wrap_csCodecDescription_bEncode_set, METH_VARARGS },
	 { (char *)"csCodecDescription_bEncode_get", _wrap_csCodecDescription_bEncode_get, METH_VARARGS },
	 { (char *)"csCodecDescription_bDecode_set", _wrap_csCodecDescription_bDecode_set, METH_VARARGS },
	 { (char *)"csCodecDescription_bDecode_get", _wrap_csCodecDescription_bDecode_get, METH_VARARGS },
	 { (char *)"csCodecDescription_decodeoutput_set", _wrap_csCodecDescription_decodeoutput_set, METH_VARARGS },
	 { (char *)"csCodecDescription_decodeoutput_get", _wrap_csCodecDescription_decodeoutput_get, METH_VARARGS },
	 { (char *)"csCodecDescription_encodeinput_set", _wrap_csCodecDescription_encodeinput_set, METH_VARARGS },
	 { (char *)"csCodecDescription_encodeinput_get", _wrap_csCodecDescription_encodeinput_get, METH_VARARGS },
	 { (char *)"new_csCodecDescription", _wrap_new_csCodecDescription, METH_VARARGS },
	 { (char *)"delete_csCodecDescription", _wrap_delete_csCodecDescription, METH_VARARGS },
	 { (char *)"csCodecDescription_swigregister", csCodecDescription_swigregister, METH_VARARGS },
	 { (char *)"iImage_GetImageData", _wrap_iImage_GetImageData, METH_VARARGS },
	 { (char *)"iImage_GetWidth", _wrap_iImage_GetWidth, METH_VARARGS },
	 { (char *)"iImage_GetHeight", _wrap_iImage_GetHeight, METH_VARARGS },
	 { (char *)"iImage_GetSize", _wrap_iImage_GetSize, METH_VARARGS },
	 { (char *)"iImage_Rescale", _wrap_iImage_Rescale, METH_VARARGS },
	 { (char *)"iImage_MipMap", _wrap_iImage_MipMap, METH_VARARGS },
	 { (char *)"iImage_SetName", _wrap_iImage_SetName, METH_VARARGS },
	 { (char *)"iImage_GetName", _wrap_iImage_GetName, METH_VARARGS },
	 { (char *)"iImage_GetFormat", _wrap_iImage_GetFormat, METH_VARARGS },
	 { (char *)"iImage_GetPalette", _wrap_iImage_GetPalette, METH_VARARGS },
	 { (char *)"iImage_GetAlpha", _wrap_iImage_GetAlpha, METH_VARARGS },
	 { (char *)"iImage_SetFormat", _wrap_iImage_SetFormat, METH_VARARGS },
	 { (char *)"iImage_Clone", _wrap_iImage_Clone, METH_VARARGS },
	 { (char *)"iImage_Crop", _wrap_iImage_Crop, METH_VARARGS },
	 { (char *)"iImage_CheckAlpha", _wrap_iImage_CheckAlpha, METH_VARARGS },
	 { (char *)"iImage_HasKeycolor", _wrap_iImage_HasKeycolor, METH_VARARGS },
	 { (char *)"iImage_GetKeycolor", _wrap_iImage_GetKeycolor, METH_VARARGS },
	 { (char *)"iImage_Sharpen", _wrap_iImage_Sharpen, METH_VARARGS },
	 { (char *)"iImage_HasMipmaps", _wrap_iImage_HasMipmaps, METH_VARARGS },
	 { (char *)"delete_iImage", _wrap_delete_iImage, METH_VARARGS },
	 { (char *)"iImage_swigregister", iImage_swigregister, METH_VARARGS },
	 { (char *)"csImageIOFileFormatDescription_mime_get", _wrap_csImageIOFileFormatDescription_mime_get, METH_VARARGS },
	 { (char *)"csImageIOFileFormatDescription_subtype_get", _wrap_csImageIOFileFormatDescription_subtype_get, METH_VARARGS },
	 { (char *)"csImageIOFileFormatDescription_cap_set", _wrap_csImageIOFileFormatDescription_cap_set, METH_VARARGS },
	 { (char *)"csImageIOFileFormatDescription_cap_get", _wrap_csImageIOFileFormatDescription_cap_get, METH_VARARGS },
	 { (char *)"new_csImageIOFileFormatDescription", _wrap_new_csImageIOFileFormatDescription, METH_VARARGS },
	 { (char *)"delete_csImageIOFileFormatDescription", _wrap_delete_csImageIOFileFormatDescription, METH_VARARGS },
	 { (char *)"csImageIOFileFormatDescription_swigregister", csImageIOFileFormatDescription_swigregister, METH_VARARGS },
	 { (char *)"iImageIO_GetDescription", _wrap_iImageIO_GetDescription, METH_VARARGS },
	 { (char *)"iImageIO_Load", _wrap_iImageIO_Load, METH_VARARGS },
	 { (char *)"iImageIO_SetDithering", _wrap_iImageIO_SetDithering, METH_VARARGS },
	 { (char *)"iImageIO_Save", _wrap_iImageIO_Save, METH_VARARGS },
	 { (char *)"delete_iImageIO", _wrap_delete_iImageIO, METH_VARARGS },
	 { (char *)"iImageIO_swigregister", iImageIO_swigregister, METH_VARARGS },
	 { (char *)"iReporterListener_scfGetID", _wrap_iReporterListener_scfGetID, METH_VARARGS },
	 { (char *)"iReporterListener_Report", _wrap_iReporterListener_Report, METH_VARARGS },
	 { (char *)"delete_iReporterListener", _wrap_delete_iReporterListener, METH_VARARGS },
	 { (char *)"iReporterListener_swigregister", iReporterListener_swigregister, METH_VARARGS },
	 { (char *)"iReporterIterator_scfGetID", _wrap_iReporterIterator_scfGetID, METH_VARARGS },
	 { (char *)"iReporterIterator_HasNext", _wrap_iReporterIterator_HasNext, METH_VARARGS },
	 { (char *)"iReporterIterator_Next", _wrap_iReporterIterator_Next, METH_VARARGS },
	 { (char *)"iReporterIterator_GetMessageSeverity", _wrap_iReporterIterator_GetMessageSeverity, METH_VARARGS },
	 { (char *)"iReporterIterator_GetMessageId", _wrap_iReporterIterator_GetMessageId, METH_VARARGS },
	 { (char *)"iReporterIterator_GetMessageDescription", _wrap_iReporterIterator_GetMessageDescription, METH_VARARGS },
	 { (char *)"delete_iReporterIterator", _wrap_delete_iReporterIterator, METH_VARARGS },
	 { (char *)"iReporterIterator_swigregister", iReporterIterator_swigregister, METH_VARARGS },
	 { (char *)"iReporter_scfGetID", _wrap_iReporter_scfGetID, METH_VARARGS },
	 { (char *)"iReporter_Report", _wrap_iReporter_Report, METH_VARARGS },
	 { (char *)"iReporter_Clear", _wrap_iReporter_Clear, METH_VARARGS },
	 { (char *)"iReporter_GetMessageIterator", _wrap_iReporter_GetMessageIterator, METH_VARARGS },
	 { (char *)"iReporter_AddReporterListener", _wrap_iReporter_AddReporterListener, METH_VARARGS },
	 { (char *)"iReporter_RemoveReporterListener", _wrap_iReporter_RemoveReporterListener, METH_VARARGS },
	 { (char *)"iReporter_FindReporterListener", _wrap_iReporter_FindReporterListener, METH_VARARGS },
	 { (char *)"iReporter_ReportError", _wrap_iReporter_ReportError, METH_VARARGS },
	 { (char *)"iReporter_ReportWarning", _wrap_iReporter_ReportWarning, METH_VARARGS },
	 { (char *)"iReporter_ReportNotify", _wrap_iReporter_ReportNotify, METH_VARARGS },
	 { (char *)"iReporter_ReportBug", _wrap_iReporter_ReportBug, METH_VARARGS },
	 { (char *)"iReporter_ReportDebug", _wrap_iReporter_ReportDebug, METH_VARARGS },
	 { (char *)"delete_iReporter", _wrap_delete_iReporter, METH_VARARGS },
	 { (char *)"iReporter_swigregister", iReporter_swigregister, METH_VARARGS },
	 { (char *)"csReporterHelper_Report", _wrap_csReporterHelper_Report, METH_VARARGS },
	 { (char *)"new_csReporterHelper", _wrap_new_csReporterHelper, METH_VARARGS },
	 { (char *)"delete_csReporterHelper", _wrap_delete_csReporterHelper, METH_VARARGS },
	 { (char *)"csReporterHelper_swigregister", csReporterHelper_swigregister, METH_VARARGS },
	 { (char *)"iStandardReporterListener_scfGetID", _wrap_iStandardReporterListener_scfGetID, METH_VARARGS },
	 { (char *)"iStandardReporterListener_SetOutputConsole", _wrap_iStandardReporterListener_SetOutputConsole, METH_VARARGS },
	 { (char *)"iStandardReporterListener_SetNativeWindowManager", _wrap_iStandardReporterListener_SetNativeWindowManager, METH_VARARGS },
	 { (char *)"iStandardReporterListener_SetReporter", _wrap_iStandardReporterListener_SetReporter, METH_VARARGS },
	 { (char *)"iStandardReporterListener_SetDebugFile", _wrap_iStandardReporterListener_SetDebugFile, METH_VARARGS },
	 { (char *)"iStandardReporterListener_SetDefaults", _wrap_iStandardReporterListener_SetDefaults, METH_VARARGS },
	 { (char *)"iStandardReporterListener_SetMessageDestination", _wrap_iStandardReporterListener_SetMessageDestination, METH_VARARGS },
	 { (char *)"iStandardReporterListener_RemoveMessages", _wrap_iStandardReporterListener_RemoveMessages, METH_VARARGS },
	 { (char *)"iStandardReporterListener_ShowMessageID", _wrap_iStandardReporterListener_ShowMessageID, METH_VARARGS },
	 { (char *)"delete_iStandardReporterListener", _wrap_delete_iStandardReporterListener, METH_VARARGS },
	 { (char *)"iStandardReporterListener_swigregister", iStandardReporterListener_swigregister, METH_VARARGS },
	 { (char *)"iView_GetEngine", _wrap_iView_GetEngine, METH_VARARGS },
	 { (char *)"iView_SetEngine", _wrap_iView_SetEngine, METH_VARARGS },
	 { (char *)"iView_GetCamera", _wrap_iView_GetCamera, METH_VARARGS },
	 { (char *)"iView_SetCamera", _wrap_iView_SetCamera, METH_VARARGS },
	 { (char *)"iView_GetContext", _wrap_iView_GetContext, METH_VARARGS },
	 { (char *)"iView_SetContext", _wrap_iView_SetContext, METH_VARARGS },
	 { (char *)"iView_SetRectangle", _wrap_iView_SetRectangle, METH_VARARGS },
	 { (char *)"iView_ClearView", _wrap_iView_ClearView, METH_VARARGS },
	 { (char *)"iView_AddViewVertex", _wrap_iView_AddViewVertex, METH_VARARGS },
	 { (char *)"iView_RestrictClipperToScreen", _wrap_iView_RestrictClipperToScreen, METH_VARARGS },
	 { (char *)"iView_UpdateClipper", _wrap_iView_UpdateClipper, METH_VARARGS },
	 { (char *)"iView_GetClipper", _wrap_iView_GetClipper, METH_VARARGS },
	 { (char *)"iView_Draw", _wrap_iView_Draw, METH_VARARGS },
	 { (char *)"delete_iView", _wrap_delete_iView, METH_VARARGS },
	 { (char *)"iView_swigregister", iView_swigregister, METH_VARARGS },
	 { (char *)"csCollisionPair_a1_set", _wrap_csCollisionPair_a1_set, METH_VARARGS },
	 { (char *)"csCollisionPair_a1_get", _wrap_csCollisionPair_a1_get, METH_VARARGS },
	 { (char *)"csCollisionPair_b1_set", _wrap_csCollisionPair_b1_set, METH_VARARGS },
	 { (char *)"csCollisionPair_b1_get", _wrap_csCollisionPair_b1_get, METH_VARARGS },
	 { (char *)"csCollisionPair_c1_set", _wrap_csCollisionPair_c1_set, METH_VARARGS },
	 { (char *)"csCollisionPair_c1_get", _wrap_csCollisionPair_c1_get, METH_VARARGS },
	 { (char *)"csCollisionPair_a2_set", _wrap_csCollisionPair_a2_set, METH_VARARGS },
	 { (char *)"csCollisionPair_a2_get", _wrap_csCollisionPair_a2_get, METH_VARARGS },
	 { (char *)"csCollisionPair_b2_set", _wrap_csCollisionPair_b2_set, METH_VARARGS },
	 { (char *)"csCollisionPair_b2_get", _wrap_csCollisionPair_b2_get, METH_VARARGS },
	 { (char *)"csCollisionPair_c2_set", _wrap_csCollisionPair_c2_set, METH_VARARGS },
	 { (char *)"csCollisionPair_c2_get", _wrap_csCollisionPair_c2_get, METH_VARARGS },
	 { (char *)"new_csCollisionPair", _wrap_new_csCollisionPair, METH_VARARGS },
	 { (char *)"delete_csCollisionPair", _wrap_delete_csCollisionPair, METH_VARARGS },
	 { (char *)"csCollisionPair_swigregister", csCollisionPair_swigregister, METH_VARARGS },
	 { (char *)"delete_iCollider", _wrap_delete_iCollider, METH_VARARGS },
	 { (char *)"iCollider_swigregister", iCollider_swigregister, METH_VARARGS },
	 { (char *)"iCollideSystem_CreateCollider", _wrap_iCollideSystem_CreateCollider, METH_VARARGS },
	 { (char *)"iCollideSystem_CreateSphereCollider", _wrap_iCollideSystem_CreateSphereCollider, METH_VARARGS },
	 { (char *)"iCollideSystem_CreateBoxCollider", _wrap_iCollideSystem_CreateBoxCollider, METH_VARARGS },
	 { (char *)"iCollideSystem_Collide", _wrap_iCollideSystem_Collide, METH_VARARGS },
	 { (char *)"iCollideSystem_GetCollisionPairs", _wrap_iCollideSystem_GetCollisionPairs, METH_VARARGS },
	 { (char *)"iCollideSystem_GetCollisionPairCount", _wrap_iCollideSystem_GetCollisionPairCount, METH_VARARGS },
	 { (char *)"iCollideSystem_ResetCollisionPairs", _wrap_iCollideSystem_ResetCollisionPairs, METH_VARARGS },
	 { (char *)"iCollideSystem_SetOneHitOnly", _wrap_iCollideSystem_SetOneHitOnly, METH_VARARGS },
	 { (char *)"iCollideSystem_GetOneHitOnly", _wrap_iCollideSystem_GetOneHitOnly, METH_VARARGS },
	 { (char *)"iCollideSystem_CollidePath", _wrap_iCollideSystem_CollidePath, METH_VARARGS },
	 { (char *)"delete_iCollideSystem", _wrap_delete_iCollideSystem, METH_VARARGS },
	 { (char *)"iCollideSystem_GetCollisionPairByIndex", _wrap_iCollideSystem_GetCollisionPairByIndex, METH_VARARGS },
	 { (char *)"iCollideSystem_swigregister", iCollideSystem_swigregister, METH_VARARGS },
	 { (char *)"iDynamics_CreateSystem", _wrap_iDynamics_CreateSystem, METH_VARARGS },
	 { (char *)"iDynamics_RemoveSystem", _wrap_iDynamics_RemoveSystem, METH_VARARGS },
	 { (char *)"iDynamics_FindSystem", _wrap_iDynamics_FindSystem, METH_VARARGS },
	 { (char *)"iDynamics_Step", _wrap_iDynamics_Step, METH_VARARGS },
	 { (char *)"delete_iDynamics", _wrap_delete_iDynamics, METH_VARARGS },
	 { (char *)"iDynamics_swigregister", iDynamics_swigregister, METH_VARARGS },
	 { (char *)"iDynamicSystem_QueryObject", _wrap_iDynamicSystem_QueryObject, METH_VARARGS },
	 { (char *)"iDynamicSystem_SetGravity", _wrap_iDynamicSystem_SetGravity, METH_VARARGS },
	 { (char *)"iDynamicSystem_GetGravity", _wrap_iDynamicSystem_GetGravity, METH_VARARGS },
	 { (char *)"iDynamicSystem_SetLinearDampener", _wrap_iDynamicSystem_SetLinearDampener, METH_VARARGS },
	 { (char *)"iDynamicSystem_GetLinearDampener", _wrap_iDynamicSystem_GetLinearDampener, METH_VARARGS },
	 { (char *)"iDynamicSystem_SetRollingDampener", _wrap_iDynamicSystem_SetRollingDampener, METH_VARARGS },
	 { (char *)"iDynamicSystem_GetRollingDampener", _wrap_iDynamicSystem_GetRollingDampener, METH_VARARGS },
	 { (char *)"iDynamicSystem_Step", _wrap_iDynamicSystem_Step, METH_VARARGS },
	 { (char *)"iDynamicSystem_CreateBody", _wrap_iDynamicSystem_CreateBody, METH_VARARGS },
	 { (char *)"iDynamicSystem_RemoveBody", _wrap_iDynamicSystem_RemoveBody, METH_VARARGS },
	 { (char *)"iDynamicSystem_FindBody", _wrap_iDynamicSystem_FindBody, METH_VARARGS },
	 { (char *)"iDynamicSystem_CreateGroup", _wrap_iDynamicSystem_CreateGroup, METH_VARARGS },
	 { (char *)"iDynamicSystem_RemoveGroup", _wrap_iDynamicSystem_RemoveGroup, METH_VARARGS },
	 { (char *)"iDynamicSystem_CreateJoint", _wrap_iDynamicSystem_CreateJoint, METH_VARARGS },
	 { (char *)"iDynamicSystem_RemoveJoint", _wrap_iDynamicSystem_RemoveJoint, METH_VARARGS },
	 { (char *)"iDynamicSystem_GetDefaultMoveCallback", _wrap_iDynamicSystem_GetDefaultMoveCallback, METH_VARARGS },
	 { (char *)"iDynamicSystem_AttachColliderMesh", _wrap_iDynamicSystem_AttachColliderMesh, METH_VARARGS },
	 { (char *)"iDynamicSystem_AttachColliderCylinder", _wrap_iDynamicSystem_AttachColliderCylinder, METH_VARARGS },
	 { (char *)"iDynamicSystem_AttachColliderBox", _wrap_iDynamicSystem_AttachColliderBox, METH_VARARGS },
	 { (char *)"iDynamicSystem_AttachColliderSphere", _wrap_iDynamicSystem_AttachColliderSphere, METH_VARARGS },
	 { (char *)"iDynamicSystem_AttachColliderPlane", _wrap_iDynamicSystem_AttachColliderPlane, METH_VARARGS },
	 { (char *)"delete_iDynamicSystem", _wrap_delete_iDynamicSystem, METH_VARARGS },
	 { (char *)"iDynamicSystem_swigregister", iDynamicSystem_swigregister, METH_VARARGS },
	 { (char *)"iDynamicsMoveCallback_scfGetID", _wrap_iDynamicsMoveCallback_scfGetID, METH_VARARGS },
	 { (char *)"iDynamicsMoveCallback_Execute", _wrap_iDynamicsMoveCallback_Execute, METH_VARARGS },
	 { (char *)"delete_iDynamicsMoveCallback", _wrap_delete_iDynamicsMoveCallback, METH_VARARGS },
	 { (char *)"iDynamicsMoveCallback_swigregister", iDynamicsMoveCallback_swigregister, METH_VARARGS },
	 { (char *)"iDynamicsCollisionCallback_scfGetID", _wrap_iDynamicsCollisionCallback_scfGetID, METH_VARARGS },
	 { (char *)"iDynamicsCollisionCallback_Execute", _wrap_iDynamicsCollisionCallback_Execute, METH_VARARGS },
	 { (char *)"delete_iDynamicsCollisionCallback", _wrap_delete_iDynamicsCollisionCallback, METH_VARARGS },
	 { (char *)"iDynamicsCollisionCallback_swigregister", iDynamicsCollisionCallback_swigregister, METH_VARARGS },
	 { (char *)"iBodyGroup_AddBody", _wrap_iBodyGroup_AddBody, METH_VARARGS },
	 { (char *)"iBodyGroup_RemoveBody", _wrap_iBodyGroup_RemoveBody, METH_VARARGS },
	 { (char *)"iBodyGroup_BodyInGroup", _wrap_iBodyGroup_BodyInGroup, METH_VARARGS },
	 { (char *)"delete_iBodyGroup", _wrap_delete_iBodyGroup, METH_VARARGS },
	 { (char *)"iBodyGroup_swigregister", iBodyGroup_swigregister, METH_VARARGS },
	 { (char *)"iRigidBody_scfGetID", _wrap_iRigidBody_scfGetID, METH_VARARGS },
	 { (char *)"iRigidBody_QueryObject", _wrap_iRigidBody_QueryObject, METH_VARARGS },
	 { (char *)"iRigidBody_MakeStatic", _wrap_iRigidBody_MakeStatic, METH_VARARGS },
	 { (char *)"iRigidBody_MakeDynamic", _wrap_iRigidBody_MakeDynamic, METH_VARARGS },
	 { (char *)"iRigidBody_IsStatic", _wrap_iRigidBody_IsStatic, METH_VARARGS },
	 { (char *)"iRigidBody_GetGroup", _wrap_iRigidBody_GetGroup, METH_VARARGS },
	 { (char *)"iRigidBody_AttachColliderMesh", _wrap_iRigidBody_AttachColliderMesh, METH_VARARGS },
	 { (char *)"iRigidBody_AttachColliderCylinder", _wrap_iRigidBody_AttachColliderCylinder, METH_VARARGS },
	 { (char *)"iRigidBody_AttachColliderBox", _wrap_iRigidBody_AttachColliderBox, METH_VARARGS },
	 { (char *)"iRigidBody_AttachColliderSphere", _wrap_iRigidBody_AttachColliderSphere, METH_VARARGS },
	 { (char *)"iRigidBody_AttachColliderPlane", _wrap_iRigidBody_AttachColliderPlane, METH_VARARGS },
	 { (char *)"iRigidBody_SetPosition", _wrap_iRigidBody_SetPosition, METH_VARARGS },
	 { (char *)"iRigidBody_GetPosition", _wrap_iRigidBody_GetPosition, METH_VARARGS },
	 { (char *)"iRigidBody_SetOrientation", _wrap_iRigidBody_SetOrientation, METH_VARARGS },
	 { (char *)"iRigidBody_GetOrientation", _wrap_iRigidBody_GetOrientation, METH_VARARGS },
	 { (char *)"iRigidBody_SetTransform", _wrap_iRigidBody_SetTransform, METH_VARARGS },
	 { (char *)"iRigidBody_GetTransform", _wrap_iRigidBody_GetTransform, METH_VARARGS },
	 { (char *)"iRigidBody_SetLinearVelocity", _wrap_iRigidBody_SetLinearVelocity, METH_VARARGS },
	 { (char *)"iRigidBody_GetLinearVelocity", _wrap_iRigidBody_GetLinearVelocity, METH_VARARGS },
	 { (char *)"iRigidBody_SetAngularVelocity", _wrap_iRigidBody_SetAngularVelocity, METH_VARARGS },
	 { (char *)"iRigidBody_GetAngularVelocity", _wrap_iRigidBody_GetAngularVelocity, METH_VARARGS },
	 { (char *)"iRigidBody_SetProperties", _wrap_iRigidBody_SetProperties, METH_VARARGS },
	 { (char *)"iRigidBody_GetProperties", _wrap_iRigidBody_GetProperties, METH_VARARGS },
	 { (char *)"iRigidBody_AdjustTotalMass", _wrap_iRigidBody_AdjustTotalMass, METH_VARARGS },
	 { (char *)"iRigidBody_AddForce", _wrap_iRigidBody_AddForce, METH_VARARGS },
	 { (char *)"iRigidBody_AddTorque", _wrap_iRigidBody_AddTorque, METH_VARARGS },
	 { (char *)"iRigidBody_AddRelForce", _wrap_iRigidBody_AddRelForce, METH_VARARGS },
	 { (char *)"iRigidBody_AddRelTorque", _wrap_iRigidBody_AddRelTorque, METH_VARARGS },
	 { (char *)"iRigidBody_AddForceAtPos", _wrap_iRigidBody_AddForceAtPos, METH_VARARGS },
	 { (char *)"iRigidBody_AddForceAtRelPos", _wrap_iRigidBody_AddForceAtRelPos, METH_VARARGS },
	 { (char *)"iRigidBody_AddRelForceAtPos", _wrap_iRigidBody_AddRelForceAtPos, METH_VARARGS },
	 { (char *)"iRigidBody_AddRelForceAtRelPos", _wrap_iRigidBody_AddRelForceAtRelPos, METH_VARARGS },
	 { (char *)"iRigidBody_GetForce", _wrap_iRigidBody_GetForce, METH_VARARGS },
	 { (char *)"iRigidBody_GetTorque", _wrap_iRigidBody_GetTorque, METH_VARARGS },
	 { (char *)"iRigidBody_AttachMesh", _wrap_iRigidBody_AttachMesh, METH_VARARGS },
	 { (char *)"iRigidBody_GetAttachedMesh", _wrap_iRigidBody_GetAttachedMesh, METH_VARARGS },
	 { (char *)"iRigidBody_AttachBone", _wrap_iRigidBody_AttachBone, METH_VARARGS },
	 { (char *)"iRigidBody_GetAttachedBone", _wrap_iRigidBody_GetAttachedBone, METH_VARARGS },
	 { (char *)"iRigidBody_SetMoveCallback", _wrap_iRigidBody_SetMoveCallback, METH_VARARGS },
	 { (char *)"iRigidBody_SetCollisionCallback", _wrap_iRigidBody_SetCollisionCallback, METH_VARARGS },
	 { (char *)"iRigidBody_Collision", _wrap_iRigidBody_Collision, METH_VARARGS },
	 { (char *)"iRigidBody_Update", _wrap_iRigidBody_Update, METH_VARARGS },
	 { (char *)"delete_iRigidBody", _wrap_delete_iRigidBody, METH_VARARGS },
	 { (char *)"iRigidBody_swigregister", iRigidBody_swigregister, METH_VARARGS },
	 { (char *)"iJoint_Attach", _wrap_iJoint_Attach, METH_VARARGS },
	 { (char *)"iJoint_GetAttachedBody", _wrap_iJoint_GetAttachedBody, METH_VARARGS },
	 { (char *)"iJoint_SetTransform", _wrap_iJoint_SetTransform, METH_VARARGS },
	 { (char *)"iJoint_GetTransform", _wrap_iJoint_GetTransform, METH_VARARGS },
	 { (char *)"iJoint_SetTransConstraints", _wrap_iJoint_SetTransConstraints, METH_VARARGS },
	 { (char *)"iJoint_IsXTransConstrained", _wrap_iJoint_IsXTransConstrained, METH_VARARGS },
	 { (char *)"iJoint_IsYTransConstrained", _wrap_iJoint_IsYTransConstrained, METH_VARARGS },
	 { (char *)"iJoint_IsZTransConstrained", _wrap_iJoint_IsZTransConstrained, METH_VARARGS },
	 { (char *)"iJoint_SetMinimumDistance", _wrap_iJoint_SetMinimumDistance, METH_VARARGS },
	 { (char *)"iJoint_GetMinimumDistance", _wrap_iJoint_GetMinimumDistance, METH_VARARGS },
	 { (char *)"iJoint_SetMaximumDistance", _wrap_iJoint_SetMaximumDistance, METH_VARARGS },
	 { (char *)"iJoint_GetMaximumDistance", _wrap_iJoint_GetMaximumDistance, METH_VARARGS },
	 { (char *)"iJoint_SetRotConstraints", _wrap_iJoint_SetRotConstraints, METH_VARARGS },
	 { (char *)"iJoint_IsXRotConstrained", _wrap_iJoint_IsXRotConstrained, METH_VARARGS },
	 { (char *)"iJoint_IsYRotConstrained", _wrap_iJoint_IsYRotConstrained, METH_VARARGS },
	 { (char *)"iJoint_IsZRotConstrained", _wrap_iJoint_IsZRotConstrained, METH_VARARGS },
	 { (char *)"iJoint_SetMinimumAngle", _wrap_iJoint_SetMinimumAngle, METH_VARARGS },
	 { (char *)"iJoint_GetMinimumAngle", _wrap_iJoint_GetMinimumAngle, METH_VARARGS },
	 { (char *)"iJoint_SetMaximumAngle", _wrap_iJoint_SetMaximumAngle, METH_VARARGS },
	 { (char *)"iJoint_GetMaximumAngle", _wrap_iJoint_GetMaximumAngle, METH_VARARGS },
	 { (char *)"delete_iJoint", _wrap_delete_iJoint, METH_VARARGS },
	 { (char *)"iJoint_swigregister", iJoint_swigregister, METH_VARARGS },
	 { (char *)"iConsoleWatcher_scfGetID", _wrap_iConsoleWatcher_scfGetID, METH_VARARGS },
	 { (char *)"iConsoleWatcher_ConsoleVisibilityChanged", _wrap_iConsoleWatcher_ConsoleVisibilityChanged, METH_VARARGS },
	 { (char *)"delete_iConsoleWatcher", _wrap_delete_iConsoleWatcher, METH_VARARGS },
	 { (char *)"iConsoleWatcher_swigregister", iConsoleWatcher_swigregister, METH_VARARGS },
	 { (char *)"iConsoleOutput_scfGetID", _wrap_iConsoleOutput_scfGetID, METH_VARARGS },
	 { (char *)"iConsoleOutput_PutText", _wrap_iConsoleOutput_PutText, METH_VARARGS },
	 { (char *)"iConsoleOutput_PutTextV", _wrap_iConsoleOutput_PutTextV, METH_VARARGS },
	 { (char *)"iConsoleOutput_GetLine", _wrap_iConsoleOutput_GetLine, METH_VARARGS },
	 { (char *)"iConsoleOutput_Draw2D", _wrap_iConsoleOutput_Draw2D, METH_VARARGS },
	 { (char *)"iConsoleOutput_Draw3D", _wrap_iConsoleOutput_Draw3D, METH_VARARGS },
	 { (char *)"iConsoleOutput_Clear", _wrap_iConsoleOutput_Clear, METH_VARARGS },
	 { (char *)"iConsoleOutput_SetBufferSize", _wrap_iConsoleOutput_SetBufferSize, METH_VARARGS },
	 { (char *)"iConsoleOutput_GetTransparency", _wrap_iConsoleOutput_GetTransparency, METH_VARARGS },
	 { (char *)"iConsoleOutput_SetTransparency", _wrap_iConsoleOutput_SetTransparency, METH_VARARGS },
	 { (char *)"iConsoleOutput_GetFont", _wrap_iConsoleOutput_GetFont, METH_VARARGS },
	 { (char *)"iConsoleOutput_SetFont", _wrap_iConsoleOutput_SetFont, METH_VARARGS },
	 { (char *)"iConsoleOutput_GetTopLine", _wrap_iConsoleOutput_GetTopLine, METH_VARARGS },
	 { (char *)"iConsoleOutput_ScrollTo", _wrap_iConsoleOutput_ScrollTo, METH_VARARGS },
	 { (char *)"iConsoleOutput_GetCursorStyle", _wrap_iConsoleOutput_GetCursorStyle, METH_VARARGS },
	 { (char *)"iConsoleOutput_SetCursorStyle", _wrap_iConsoleOutput_SetCursorStyle, METH_VARARGS },
	 { (char *)"iConsoleOutput_SetVisible", _wrap_iConsoleOutput_SetVisible, METH_VARARGS },
	 { (char *)"iConsoleOutput_GetVisible", _wrap_iConsoleOutput_GetVisible, METH_VARARGS },
	 { (char *)"iConsoleOutput_AutoUpdate", _wrap_iConsoleOutput_AutoUpdate, METH_VARARGS },
	 { (char *)"iConsoleOutput_SetCursorPos", _wrap_iConsoleOutput_SetCursorPos, METH_VARARGS },
	 { (char *)"iConsoleOutput_GetMaxLineWidth", _wrap_iConsoleOutput_GetMaxLineWidth, METH_VARARGS },
	 { (char *)"iConsoleOutput_RegisterWatcher", _wrap_iConsoleOutput_RegisterWatcher, METH_VARARGS },
	 { (char *)"iConsoleOutput_PerformExtension", _wrap_iConsoleOutput_PerformExtension, METH_VARARGS },
	 { (char *)"iConsoleOutput_PerformExtensionV", _wrap_iConsoleOutput_PerformExtensionV, METH_VARARGS },
	 { (char *)"delete_iConsoleOutput", _wrap_delete_iConsoleOutput, METH_VARARGS },
	 { (char *)"iConsoleOutput_swigregister", iConsoleOutput_swigregister, METH_VARARGS },
	 { (char *)"iParameterESM_scfGetID", _wrap_iParameterESM_scfGetID, METH_VARARGS },
	 { (char *)"iParameterESM_GetValue", _wrap_iParameterESM_GetValue, METH_VARARGS },
	 { (char *)"iParameterESM_IsConstant", _wrap_iParameterESM_IsConstant, METH_VARARGS },
	 { (char *)"delete_iParameterESM", _wrap_delete_iParameterESM, METH_VARARGS },
	 { (char *)"iParameterESM_swigregister", iParameterESM_swigregister, METH_VARARGS },
	 { (char *)"iEngineSequenceParameters_scfGetID", _wrap_iEngineSequenceParameters_scfGetID, METH_VARARGS },
	 { (char *)"iEngineSequenceParameters_GetParameterCount", _wrap_iEngineSequenceParameters_GetParameterCount, METH_VARARGS },
	 { (char *)"iEngineSequenceParameters_GetParameter", _wrap_iEngineSequenceParameters_GetParameter, METH_VARARGS },
	 { (char *)"iEngineSequenceParameters_GetParameterIdx", _wrap_iEngineSequenceParameters_GetParameterIdx, METH_VARARGS },
	 { (char *)"iEngineSequenceParameters_GetParameterName", _wrap_iEngineSequenceParameters_GetParameterName, METH_VARARGS },
	 { (char *)"iEngineSequenceParameters_AddParameter", _wrap_iEngineSequenceParameters_AddParameter, METH_VARARGS },
	 { (char *)"iEngineSequenceParameters_SetParameter", _wrap_iEngineSequenceParameters_SetParameter, METH_VARARGS },
	 { (char *)"iEngineSequenceParameters_CreateParameterESM", _wrap_iEngineSequenceParameters_CreateParameterESM, METH_VARARGS },
	 { (char *)"delete_iEngineSequenceParameters", _wrap_delete_iEngineSequenceParameters, METH_VARARGS },
	 { (char *)"iEngineSequenceParameters_swigregister", iEngineSequenceParameters_swigregister, METH_VARARGS },
	 { (char *)"iSequenceWrapper_scfGetID", _wrap_iSequenceWrapper_scfGetID, METH_VARARGS },
	 { (char *)"iSequenceWrapper_QueryObject", _wrap_iSequenceWrapper_QueryObject, METH_VARARGS },
	 { (char *)"iSequenceWrapper_GetSequence", _wrap_iSequenceWrapper_GetSequence, METH_VARARGS },
	 { (char *)"iSequenceWrapper_CreateBaseParameterBlock", _wrap_iSequenceWrapper_CreateBaseParameterBlock, METH_VARARGS },
	 { (char *)"iSequenceWrapper_GetBaseParameterBlock", _wrap_iSequenceWrapper_GetBaseParameterBlock, METH_VARARGS },
	 { (char *)"iSequenceWrapper_CreateParameterBlock", _wrap_iSequenceWrapper_CreateParameterBlock, METH_VARARGS },
	 { (char *)"iSequenceWrapper_AddOperationSetVariable", _wrap_iSequenceWrapper_AddOperationSetVariable, METH_VARARGS },
	 { (char *)"iSequenceWrapper_AddOperationSetMaterial", _wrap_iSequenceWrapper_AddOperationSetMaterial, METH_VARARGS },
	 { (char *)"iSequenceWrapper_AddOperationSetPolygonMaterial", _wrap_iSequenceWrapper_AddOperationSetPolygonMaterial, METH_VARARGS },
	 { (char *)"iSequenceWrapper_AddOperationSetLight", _wrap_iSequenceWrapper_AddOperationSetLight, METH_VARARGS },
	 { (char *)"iSequenceWrapper_AddOperationFadeLight", _wrap_iSequenceWrapper_AddOperationFadeLight, METH_VARARGS },
	 { (char *)"iSequenceWrapper_AddOperationSetAmbient", _wrap_iSequenceWrapper_AddOperationSetAmbient, METH_VARARGS },
	 { (char *)"iSequenceWrapper_AddOperationFadeAmbient", _wrap_iSequenceWrapper_AddOperationFadeAmbient, METH_VARARGS },
	 { (char *)"iSequenceWrapper_AddOperationRandomDelay", _wrap_iSequenceWrapper_AddOperationRandomDelay, METH_VARARGS },
	 { (char *)"iSequenceWrapper_AddOperationSetMeshColor", _wrap_iSequenceWrapper_AddOperationSetMeshColor, METH_VARARGS },
	 { (char *)"iSequenceWrapper_AddOperationFadeMeshColor", _wrap_iSequenceWrapper_AddOperationFadeMeshColor, METH_VARARGS },
	 { (char *)"iSequenceWrapper_AddOperationSetFog", _wrap_iSequenceWrapper_AddOperationSetFog, METH_VARARGS },
	 { (char *)"iSequenceWrapper_AddOperationFadeFog", _wrap_iSequenceWrapper_AddOperationFadeFog, METH_VARARGS },
	 { (char *)"iSequenceWrapper_AddOperationRotateDuration", _wrap_iSequenceWrapper_AddOperationRotateDuration, METH_VARARGS },
	 { (char *)"iSequenceWrapper_AddOperationMoveDuration", _wrap_iSequenceWrapper_AddOperationMoveDuration, METH_VARARGS },
	 { (char *)"iSequenceWrapper_AddOperationTriggerState", _wrap_iSequenceWrapper_AddOperationTriggerState, METH_VARARGS },
	 { (char *)"iSequenceWrapper_AddOperationCheckTrigger", _wrap_iSequenceWrapper_AddOperationCheckTrigger, METH_VARARGS },
	 { (char *)"iSequenceWrapper_AddOperationTestTrigger", _wrap_iSequenceWrapper_AddOperationTestTrigger, METH_VARARGS },
	 { (char *)"delete_iSequenceWrapper", _wrap_delete_iSequenceWrapper, METH_VARARGS },
	 { (char *)"iSequenceWrapper_swigregister", iSequenceWrapper_swigregister, METH_VARARGS },
	 { (char *)"iSequenceTrigger_scfGetID", _wrap_iSequenceTrigger_scfGetID, METH_VARARGS },
	 { (char *)"iSequenceTrigger_QueryObject", _wrap_iSequenceTrigger_QueryObject, METH_VARARGS },
	 { (char *)"iSequenceTrigger_AddConditionInSector", _wrap_iSequenceTrigger_AddConditionInSector, METH_VARARGS },
	 { (char *)"iSequenceTrigger_AddConditionSectorVisible", _wrap_iSequenceTrigger_AddConditionSectorVisible, METH_VARARGS },
	 { (char *)"iSequenceTrigger_AddConditionMeshClick", _wrap_iSequenceTrigger_AddConditionMeshClick, METH_VARARGS },
	 { (char *)"iSequenceTrigger_AddConditionLightChange", _wrap_iSequenceTrigger_AddConditionLightChange, METH_VARARGS },
	 { (char *)"iSequenceTrigger_AddConditionManual", _wrap_iSequenceTrigger_AddConditionManual, METH_VARARGS },
	 { (char *)"iSequenceTrigger_SetEnabled", _wrap_iSequenceTrigger_SetEnabled, METH_VARARGS },
	 { (char *)"iSequenceTrigger_IsEnabled", _wrap_iSequenceTrigger_IsEnabled, METH_VARARGS },
	 { (char *)"iSequenceTrigger_ClearConditions", _wrap_iSequenceTrigger_ClearConditions, METH_VARARGS },
	 { (char *)"iSequenceTrigger_Trigger", _wrap_iSequenceTrigger_Trigger, METH_VARARGS },
	 { (char *)"iSequenceTrigger_SetParameters", _wrap_iSequenceTrigger_SetParameters, METH_VARARGS },
	 { (char *)"iSequenceTrigger_GetParameters", _wrap_iSequenceTrigger_GetParameters, METH_VARARGS },
	 { (char *)"iSequenceTrigger_FireSequence", _wrap_iSequenceTrigger_FireSequence, METH_VARARGS },
	 { (char *)"iSequenceTrigger_GetFiredSequence", _wrap_iSequenceTrigger_GetFiredSequence, METH_VARARGS },
	 { (char *)"iSequenceTrigger_TestConditions", _wrap_iSequenceTrigger_TestConditions, METH_VARARGS },
	 { (char *)"iSequenceTrigger_CheckState", _wrap_iSequenceTrigger_CheckState, METH_VARARGS },
	 { (char *)"iSequenceTrigger_ForceFire", _wrap_iSequenceTrigger_ForceFire, METH_VARARGS },
	 { (char *)"delete_iSequenceTrigger", _wrap_delete_iSequenceTrigger, METH_VARARGS },
	 { (char *)"iSequenceTrigger_swigregister", iSequenceTrigger_swigregister, METH_VARARGS },
	 { (char *)"iSequenceTimedOperation_scfGetID", _wrap_iSequenceTimedOperation_scfGetID, METH_VARARGS },
	 { (char *)"iSequenceTimedOperation_Do", _wrap_iSequenceTimedOperation_Do, METH_VARARGS },
	 { (char *)"delete_iSequenceTimedOperation", _wrap_delete_iSequenceTimedOperation, METH_VARARGS },
	 { (char *)"iSequenceTimedOperation_swigregister", iSequenceTimedOperation_swigregister, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_scfGetID", _wrap_iEngineSequenceManager_scfGetID, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_GetSequenceManager", _wrap_iEngineSequenceManager_GetSequenceManager, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_SetCamera", _wrap_iEngineSequenceManager_SetCamera, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_GetCamera", _wrap_iEngineSequenceManager_GetCamera, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_CreateParameterESM", _wrap_iEngineSequenceManager_CreateParameterESM, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_CreateTrigger", _wrap_iEngineSequenceManager_CreateTrigger, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_RemoveTrigger", _wrap_iEngineSequenceManager_RemoveTrigger, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_RemoveTriggers", _wrap_iEngineSequenceManager_RemoveTriggers, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_GetTriggerCount", _wrap_iEngineSequenceManager_GetTriggerCount, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_GetTrigger", _wrap_iEngineSequenceManager_GetTrigger, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_FindTriggerByName", _wrap_iEngineSequenceManager_FindTriggerByName, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_FireTriggerByName", _wrap_iEngineSequenceManager_FireTriggerByName, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_CreateSequence", _wrap_iEngineSequenceManager_CreateSequence, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_RemoveSequence", _wrap_iEngineSequenceManager_RemoveSequence, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_RemoveSequences", _wrap_iEngineSequenceManager_RemoveSequences, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_GetSequenceCount", _wrap_iEngineSequenceManager_GetSequenceCount, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_GetSequence", _wrap_iEngineSequenceManager_GetSequence, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_FindSequenceByName", _wrap_iEngineSequenceManager_FindSequenceByName, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_RunSequenceByName", _wrap_iEngineSequenceManager_RunSequenceByName, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_FireTimedOperation", _wrap_iEngineSequenceManager_FireTimedOperation, METH_VARARGS },
	 { (char *)"delete_iEngineSequenceManager", _wrap_delete_iEngineSequenceManager, METH_VARARGS },
	 { (char *)"iEngineSequenceManager_swigregister", iEngineSequenceManager_swigregister, METH_VARARGS },
	 { (char *)"iNetworkPacket_Read", _wrap_iNetworkPacket_Read, METH_VARARGS },
	 { (char *)"iNetworkPacket_Write", _wrap_iNetworkPacket_Write, METH_VARARGS },
	 { (char *)"iNetworkPacket_New", _wrap_iNetworkPacket_New, METH_VARARGS },
	 { (char *)"iNetworkPacket_FilterSocket", _wrap_iNetworkPacket_FilterSocket, METH_VARARGS },
	 { (char *)"delete_iNetworkPacket", _wrap_delete_iNetworkPacket, METH_VARARGS },
	 { (char *)"iNetworkPacket_swigregister", iNetworkPacket_swigregister, METH_VARARGS },
	 { (char *)"iNetworkPacket2_scfGetID", _wrap_iNetworkPacket2_scfGetID, METH_VARARGS },
	 { (char *)"iNetworkPacket2_Read", _wrap_iNetworkPacket2_Read, METH_VARARGS },
	 { (char *)"iNetworkPacket2_Write", _wrap_iNetworkPacket2_Write, METH_VARARGS },
	 { (char *)"iNetworkPacket2_New", _wrap_iNetworkPacket2_New, METH_VARARGS },
	 { (char *)"iNetworkPacket2_FilterSocket", _wrap_iNetworkPacket2_FilterSocket, METH_VARARGS },
	 { (char *)"delete_iNetworkPacket2", _wrap_delete_iNetworkPacket2, METH_VARARGS },
	 { (char *)"iNetworkPacket2_swigregister", iNetworkPacket2_swigregister, METH_VARARGS },
	 { (char *)"iNetworkManager_RegisterConnection", _wrap_iNetworkManager_RegisterConnection, METH_VARARGS },
	 { (char *)"iNetworkManager_RegisterListener", _wrap_iNetworkManager_RegisterListener, METH_VARARGS },
	 { (char *)"iNetworkManager_UnregisterEndPoint", _wrap_iNetworkManager_UnregisterEndPoint, METH_VARARGS },
	 { (char *)"iNetworkManager_RegisterConnectedSocket", _wrap_iNetworkManager_RegisterConnectedSocket, METH_VARARGS },
	 { (char *)"iNetworkManager_UnregisterConnectedSocket", _wrap_iNetworkManager_UnregisterConnectedSocket, METH_VARARGS },
	 { (char *)"iNetworkManager_RegisterListeningSocket", _wrap_iNetworkManager_RegisterListeningSocket, METH_VARARGS },
	 { (char *)"iNetworkManager_UnregisterListeningSocket", _wrap_iNetworkManager_UnregisterListeningSocket, METH_VARARGS },
	 { (char *)"iNetworkManager_Send", _wrap_iNetworkManager_Send, METH_VARARGS },
	 { (char *)"iNetworkManager_SendToAll", _wrap_iNetworkManager_SendToAll, METH_VARARGS },
	 { (char *)"delete_iNetworkManager", _wrap_delete_iNetworkManager, METH_VARARGS },
	 { (char *)"iNetworkManager_swigregister", iNetworkManager_swigregister, METH_VARARGS },
	 { (char *)"csNetworkDriverCapabilities_ConnectionReliable_set", _wrap_csNetworkDriverCapabilities_ConnectionReliable_set, METH_VARARGS },
	 { (char *)"csNetworkDriverCapabilities_ConnectionReliable_get", _wrap_csNetworkDriverCapabilities_ConnectionReliable_get, METH_VARARGS },
	 { (char *)"csNetworkDriverCapabilities_ConnectionUnreliable_set", _wrap_csNetworkDriverCapabilities_ConnectionUnreliable_set, METH_VARARGS },
	 { (char *)"csNetworkDriverCapabilities_ConnectionUnreliable_get", _wrap_csNetworkDriverCapabilities_ConnectionUnreliable_get, METH_VARARGS },
	 { (char *)"csNetworkDriverCapabilities_BehaviorBlocking_set", _wrap_csNetworkDriverCapabilities_BehaviorBlocking_set, METH_VARARGS },
	 { (char *)"csNetworkDriverCapabilities_BehaviorBlocking_get", _wrap_csNetworkDriverCapabilities_BehaviorBlocking_get, METH_VARARGS },
	 { (char *)"csNetworkDriverCapabilities_BehaviorNonBlocking_set", _wrap_csNetworkDriverCapabilities_BehaviorNonBlocking_set, METH_VARARGS },
	 { (char *)"csNetworkDriverCapabilities_BehaviorNonBlocking_get", _wrap_csNetworkDriverCapabilities_BehaviorNonBlocking_get, METH_VARARGS },
	 { (char *)"new_csNetworkDriverCapabilities", _wrap_new_csNetworkDriverCapabilities, METH_VARARGS },
	 { (char *)"delete_csNetworkDriverCapabilities", _wrap_delete_csNetworkDriverCapabilities, METH_VARARGS },
	 { (char *)"csNetworkDriverCapabilities_swigregister", csNetworkDriverCapabilities_swigregister, METH_VARARGS },
	 { (char *)"iNetworkEndPoint_Terminate", _wrap_iNetworkEndPoint_Terminate, METH_VARARGS },
	 { (char *)"iNetworkEndPoint_SetOption", _wrap_iNetworkEndPoint_SetOption, METH_VARARGS },
	 { (char *)"iNetworkEndPoint_GetLastError", _wrap_iNetworkEndPoint_GetLastError, METH_VARARGS },
	 { (char *)"delete_iNetworkEndPoint", _wrap_delete_iNetworkEndPoint, METH_VARARGS },
	 { (char *)"iNetworkEndPoint_swigregister", iNetworkEndPoint_swigregister, METH_VARARGS },
	 { (char *)"iNetworkConnection_Send", _wrap_iNetworkConnection_Send, METH_VARARGS },
	 { (char *)"iNetworkConnection_IsConnected", _wrap_iNetworkConnection_IsConnected, METH_VARARGS },
	 { (char *)"iNetworkConnection_Receive", _wrap_iNetworkConnection_Receive, METH_VARARGS },
	 { (char *)"iNetworkConnection_IsDataWaiting", _wrap_iNetworkConnection_IsDataWaiting, METH_VARARGS },
	 { (char *)"delete_iNetworkConnection", _wrap_delete_iNetworkConnection, METH_VARARGS },
	 { (char *)"iNetworkConnection_swigregister", iNetworkConnection_swigregister, METH_VARARGS },
	 { (char *)"iNetworkListener_Accept", _wrap_iNetworkListener_Accept, METH_VARARGS },
	 { (char *)"delete_iNetworkListener", _wrap_delete_iNetworkListener, METH_VARARGS },
	 { (char *)"iNetworkListener_swigregister", iNetworkListener_swigregister, METH_VARARGS },
	 { (char *)"iNetworkDriver_NewConnection", _wrap_iNetworkDriver_NewConnection, METH_VARARGS },
	 { (char *)"iNetworkDriver_NewListener", _wrap_iNetworkDriver_NewListener, METH_VARARGS },
	 { (char *)"iNetworkDriver_GetCapabilities", _wrap_iNetworkDriver_GetCapabilities, METH_VARARGS },
	 { (char *)"iNetworkDriver_GetLastError", _wrap_iNetworkDriver_GetLastError, METH_VARARGS },
	 { (char *)"delete_iNetworkDriver", _wrap_delete_iNetworkDriver, METH_VARARGS },
	 { (char *)"iNetworkDriver_swigregister", iNetworkDriver_swigregister, METH_VARARGS },
	 { (char *)"iNetworkSocket2_IsConnected", _wrap_iNetworkSocket2_IsConnected, METH_VARARGS },
	 { (char *)"iNetworkSocket2_LastError", _wrap_iNetworkSocket2_LastError, METH_VARARGS },
	 { (char *)"iNetworkSocket2_SetSocketBlock", _wrap_iNetworkSocket2_SetSocketBlock, METH_VARARGS },
	 { (char *)"iNetworkSocket2_SetSocketReuse", _wrap_iNetworkSocket2_SetSocketReuse, METH_VARARGS },
	 { (char *)"iNetworkSocket2_Connect", _wrap_iNetworkSocket2_Connect, METH_VARARGS },
	 { (char *)"iNetworkSocket2_Send", _wrap_iNetworkSocket2_Send, METH_VARARGS },
	 { (char *)"iNetworkSocket2_Recv", _wrap_iNetworkSocket2_Recv, METH_VARARGS },
	 { (char *)"iNetworkSocket2_Close", _wrap_iNetworkSocket2_Close, METH_VARARGS },
	 { (char *)"iNetworkSocket2_Disconnect", _wrap_iNetworkSocket2_Disconnect, METH_VARARGS },
	 { (char *)"iNetworkSocket2_WaitForConnection", _wrap_iNetworkSocket2_WaitForConnection, METH_VARARGS },
	 { (char *)"iNetworkSocket2_Accept", _wrap_iNetworkSocket2_Accept, METH_VARARGS },
	 { (char *)"iNetworkSocket2_ReadLine", _wrap_iNetworkSocket2_ReadLine, METH_VARARGS },
	 { (char *)"iNetworkSocket2_RemoteName", _wrap_iNetworkSocket2_RemoteName, METH_VARARGS },
	 { (char *)"delete_iNetworkSocket2", _wrap_delete_iNetworkSocket2, METH_VARARGS },
	 { (char *)"iNetworkSocket2_swigregister", iNetworkSocket2_swigregister, METH_VARARGS },
	 { (char *)"new_csObject", _wrap_new_csObject, METH_VARARGS },
	 { (char *)"delete_csObject", _wrap_delete_csObject, METH_VARARGS },
	 { (char *)"csObject_SetName", _wrap_csObject_SetName, METH_VARARGS },
	 { (char *)"csObject_GetName", _wrap_csObject_GetName, METH_VARARGS },
	 { (char *)"csObject_GetID", _wrap_csObject_GetID, METH_VARARGS },
	 { (char *)"csObject_SetObjectParent", _wrap_csObject_SetObjectParent, METH_VARARGS },
	 { (char *)"csObject_GetObjectParent", _wrap_csObject_GetObjectParent, METH_VARARGS },
	 { (char *)"csObject_ObjAdd", _wrap_csObject_ObjAdd, METH_VARARGS },
	 { (char *)"csObject_ObjRemove", _wrap_csObject_ObjRemove, METH_VARARGS },
	 { (char *)"csObject_ObjRemoveAll", _wrap_csObject_ObjRemoveAll, METH_VARARGS },
	 { (char *)"csObject_ObjAddChildren", _wrap_csObject_ObjAddChildren, METH_VARARGS },
	 { (char *)"csObject_GetChild", _wrap_csObject_GetChild, METH_VARARGS },
	 { (char *)"csObject_GetIterator", _wrap_csObject_GetIterator, METH_VARARGS },
	 { (char *)"csObject_scfRefCount_set", _wrap_csObject_scfRefCount_set, METH_VARARGS },
	 { (char *)"csObject_scfRefCount_get", _wrap_csObject_scfRefCount_get, METH_VARARGS },
	 { (char *)"csObject_scfParent_set", _wrap_csObject_scfParent_set, METH_VARARGS },
	 { (char *)"csObject_scfParent_get", _wrap_csObject_scfParent_get, METH_VARARGS },
	 { (char *)"csObject_IncRef", _wrap_csObject_IncRef, METH_VARARGS },
	 { (char *)"csObject_DecRef", _wrap_csObject_DecRef, METH_VARARGS },
	 { (char *)"csObject_GetRefCount", _wrap_csObject_GetRefCount, METH_VARARGS },
	 { (char *)"csObject_QueryInterface", _wrap_csObject_QueryInterface, METH_VARARGS },
	 { (char *)"csObject_ObjReleaseOld", _wrap_csObject_ObjReleaseOld, METH_VARARGS },
	 { (char *)"csObject_swigregister", csObject_swigregister, METH_VARARGS },
	 { (char *)"new_csView", _wrap_new_csView, METH_VARARGS },
	 { (char *)"delete_csView", _wrap_delete_csView, METH_VARARGS },
	 { (char *)"csView_GetEngine", _wrap_csView_GetEngine, METH_VARARGS },
	 { (char *)"csView_SetEngine", _wrap_csView_SetEngine, METH_VARARGS },
	 { (char *)"csView_GetCamera", _wrap_csView_GetCamera, METH_VARARGS },
	 { (char *)"csView_SetCamera", _wrap_csView_SetCamera, METH_VARARGS },
	 { (char *)"csView_GetContext", _wrap_csView_GetContext, METH_VARARGS },
	 { (char *)"csView_SetContext", _wrap_csView_SetContext, METH_VARARGS },
	 { (char *)"csView_SetRectangle", _wrap_csView_SetRectangle, METH_VARARGS },
	 { (char *)"csView_ClearView", _wrap_csView_ClearView, METH_VARARGS },
	 { (char *)"csView_AddViewVertex", _wrap_csView_AddViewVertex, METH_VARARGS },
	 { (char *)"csView_RestrictClipperToScreen", _wrap_csView_RestrictClipperToScreen, METH_VARARGS },
	 { (char *)"csView_UpdateClipper", _wrap_csView_UpdateClipper, METH_VARARGS },
	 { (char *)"csView_GetClipper", _wrap_csView_GetClipper, METH_VARARGS },
	 { (char *)"csView_Draw", _wrap_csView_Draw, METH_VARARGS },
	 { (char *)"csView_scfRefCount_set", _wrap_csView_scfRefCount_set, METH_VARARGS },
	 { (char *)"csView_scfRefCount_get", _wrap_csView_scfRefCount_get, METH_VARARGS },
	 { (char *)"csView_scfParent_set", _wrap_csView_scfParent_set, METH_VARARGS },
	 { (char *)"csView_scfParent_get", _wrap_csView_scfParent_get, METH_VARARGS },
	 { (char *)"csView_IncRef", _wrap_csView_IncRef, METH_VARARGS },
	 { (char *)"csView_DecRef", _wrap_csView_DecRef, METH_VARARGS },
	 { (char *)"csView_GetRefCount", _wrap_csView_GetRefCount, METH_VARARGS },
	 { (char *)"csView_QueryInterface", _wrap_csView_QueryInterface, METH_VARARGS },
	 { (char *)"csView_swigregister", csView_swigregister, METH_VARARGS },
	 { (char *)"csColliderWrapper_scfGetID", _wrap_csColliderWrapper_scfGetID, METH_VARARGS },
	 { (char *)"new_csColliderWrapper", _wrap_new_csColliderWrapper, METH_VARARGS },
	 { (char *)"delete_csColliderWrapper", _wrap_delete_csColliderWrapper, METH_VARARGS },
	 { (char *)"csColliderWrapper_GetCollider", _wrap_csColliderWrapper_GetCollider, METH_VARARGS },
	 { (char *)"csColliderWrapper_GetCollideSystem", _wrap_csColliderWrapper_GetCollideSystem, METH_VARARGS },
	 { (char *)"csColliderWrapper_Collide", _wrap_csColliderWrapper_Collide, METH_VARARGS },
	 { (char *)"csColliderWrapper_GetColliderWrapper", _wrap_csColliderWrapper_GetColliderWrapper, METH_VARARGS },
	 { (char *)"csColliderWrapper_IncRef", _wrap_csColliderWrapper_IncRef, METH_VARARGS },
	 { (char *)"csColliderWrapper_DecRef", _wrap_csColliderWrapper_DecRef, METH_VARARGS },
	 { (char *)"csColliderWrapper_GetRefCount", _wrap_csColliderWrapper_GetRefCount, METH_VARARGS },
	 { (char *)"csColliderWrapper_QueryInterface", _wrap_csColliderWrapper_QueryInterface, METH_VARARGS },
	 { (char *)"csColliderWrapper_swigregister", csColliderWrapper_swigregister, METH_VARARGS },
	 { (char *)"csColliderHelper_InitializeCollisionWrapper", _wrap_csColliderHelper_InitializeCollisionWrapper, METH_VARARGS },
	 { (char *)"csColliderHelper_InitializeCollisionWrappers", _wrap_csColliderHelper_InitializeCollisionWrappers, METH_VARARGS },
	 { (char *)"new_csColliderHelper", _wrap_new_csColliderHelper, METH_VARARGS },
	 { (char *)"delete_csColliderHelper", _wrap_delete_csColliderHelper, METH_VARARGS },
	 { (char *)"csColliderHelper_swigregister", csColliderHelper_swigregister, METH_VARARGS },
	 { (char *)"CS_IS_KEYBOARD_EVENT", _wrap_CS_IS_KEYBOARD_EVENT, METH_VARARGS },
	 { (char *)"CS_IS_MOUSE_EVENT", _wrap_CS_IS_MOUSE_EVENT, METH_VARARGS },
	 { (char *)"CS_IS_JOYSTICK_EVENT", _wrap_CS_IS_JOYSTICK_EVENT, METH_VARARGS },
	 { (char *)"CS_IS_INPUT_EVENT", _wrap_CS_IS_INPUT_EVENT, METH_VARARGS },
	 { (char *)"CS_IS_NETWORK_EVENT", _wrap_CS_IS_NETWORK_EVENT, METH_VARARGS },
	 { (char *)"CS_QUERY_REGISTRY_TAG", _wrap_CS_QUERY_REGISTRY_TAG, METH_VARARGS },
	 { (char *)"CS_LOAD_PLUGIN_ALWAYS", _wrap_CS_LOAD_PLUGIN_ALWAYS, METH_VARARGS },
	 { (char *)"CS_FX_SETALPHA", _wrap_CS_FX_SETALPHA, METH_VARARGS },
	 { (char *)"CS_FX_SETALPHA_INT", _wrap_CS_FX_SETALPHA_INT, METH_VARARGS },
	 { (char *)"_csPyEventHandler_scfRefCount_set", _wrap__csPyEventHandler_scfRefCount_set, METH_VARARGS },
	 { (char *)"_csPyEventHandler_scfRefCount_get", _wrap__csPyEventHandler_scfRefCount_get, METH_VARARGS },
	 { (char *)"_csPyEventHandler_scfParent_set", _wrap__csPyEventHandler_scfParent_set, METH_VARARGS },
	 { (char *)"_csPyEventHandler_scfParent_get", _wrap__csPyEventHandler_scfParent_get, METH_VARARGS },
	 { (char *)"_csPyEventHandler_IncRef", _wrap__csPyEventHandler_IncRef, METH_VARARGS },
	 { (char *)"_csPyEventHandler_DecRef", _wrap__csPyEventHandler_DecRef, METH_VARARGS },
	 { (char *)"_csPyEventHandler_GetRefCount", _wrap__csPyEventHandler_GetRefCount, METH_VARARGS },
	 { (char *)"_csPyEventHandler_QueryInterface", _wrap__csPyEventHandler_QueryInterface, METH_VARARGS },
	 { (char *)"new__csPyEventHandler", _wrap_new__csPyEventHandler, METH_VARARGS },
	 { (char *)"delete__csPyEventHandler", _wrap_delete__csPyEventHandler, METH_VARARGS },
	 { (char *)"_csPyEventHandler_HandleEvent", _wrap__csPyEventHandler_HandleEvent, METH_VARARGS },
	 { (char *)"_csPyEventHandler_swigregister", _csPyEventHandler_swigregister, METH_VARARGS },
	 { (char *)"_CS_QUERY_REGISTRY", _wrap__CS_QUERY_REGISTRY, METH_VARARGS },
	 { (char *)"_CS_QUERY_REGISTRY_TAG_INTERFACE", _wrap__CS_QUERY_REGISTRY_TAG_INTERFACE, METH_VARARGS },
	 { (char *)"_SCF_QUERY_INTERFACE", _wrap__SCF_QUERY_INTERFACE, METH_VARARGS },
	 { (char *)"_SCF_QUERY_INTERFACE_SAFE", _wrap__SCF_QUERY_INTERFACE_SAFE, METH_VARARGS },
	 { (char *)"_CS_QUERY_PLUGIN_CLASS", _wrap__CS_QUERY_PLUGIN_CLASS, METH_VARARGS },
	 { (char *)"_CS_LOAD_PLUGIN", _wrap__CS_LOAD_PLUGIN, METH_VARARGS },
	 { (char *)"_CS_GET_CHILD_OBJECT", _wrap__CS_GET_CHILD_OBJECT, METH_VARARGS },
	 { (char *)"_CS_GET_NAMED_CHILD_OBJECT", _wrap__CS_GET_NAMED_CHILD_OBJECT, METH_VARARGS },
	 { (char *)"_CS_GET_FIRST_NAMED_CHILD_OBJECT", _wrap__CS_GET_FIRST_NAMED_CHILD_OBJECT, METH_VARARGS },
	 { (char *)"iCelPlLayer_CreatePropertyClass", _wrap_iCelPlLayer_CreatePropertyClass, METH_VARARGS },
	 { (char *)"iCelPlLayer_FetchString", _wrap_iCelPlLayer_FetchString, METH_VARARGS },
	 { (char *)"iCelPlLayer_GetBehaviourLayerCount", _wrap_iCelPlLayer_GetBehaviourLayerCount, METH_VARARGS },
	 { (char *)"iCelPlLayer_GetBehaviourLayer", _wrap_iCelPlLayer_GetBehaviourLayer, METH_VARARGS },
	 { (char *)"iCelPlLayer_FindBehaviourLayer", _wrap_iCelPlLayer_FindBehaviourLayer, METH_VARARGS },
	 { (char *)"delete_iCelPlLayer", _wrap_delete_iCelPlLayer, METH_VARARGS },
	 { (char *)"iCelPlLayer_swigregister", iCelPlLayer_swigregister, METH_VARARGS },
	 { (char *)"csQueryRegistry_iCelPlLayer", _wrap_csQueryRegistry_iCelPlLayer, METH_VARARGS },
	 { (char *)"iCelEntity_GetName", _wrap_iCelEntity_GetName, METH_VARARGS },
	 { (char *)"iCelEntity_SetName", _wrap_iCelEntity_SetName, METH_VARARGS },
	 { (char *)"iCelEntity_SetBehaviour", _wrap_iCelEntity_SetBehaviour, METH_VARARGS },
	 { (char *)"iCelEntity_GetBehaviour", _wrap_iCelEntity_GetBehaviour, METH_VARARGS },
	 { (char *)"iCelEntity_GetID", _wrap_iCelEntity_GetID, METH_VARARGS },
	 { (char *)"iCelEntity_GetPropertyClassList", _wrap_iCelEntity_GetPropertyClassList, METH_VARARGS },
	 { (char *)"iCelEntity_CreateBehaviour", _wrap_iCelEntity_CreateBehaviour, METH_VARARGS },
	 { (char *)"delete_iCelEntity", _wrap_delete_iCelEntity, METH_VARARGS },
	 { (char *)"iCelEntity_swigregister", iCelEntity_swigregister, METH_VARARGS },
	 { (char *)"celRegisterPCFactory", _wrap_celRegisterPCFactory, METH_VARARGS },
	 { (char *)"celCreateEntity", _wrap_celCreateEntity, METH_VARARGS },
	 { (char *)"scfQueryInterface_iCelEntity", _wrap_scfQueryInterface_iCelEntity, METH_VARARGS },
	 { (char *)"iCelEntityList_GetCount", _wrap_iCelEntityList_GetCount, METH_VARARGS },
	 { (char *)"iCelEntityList_Get", _wrap_iCelEntityList_Get, METH_VARARGS },
	 { (char *)"iCelEntityList_Add", _wrap_iCelEntityList_Add, METH_VARARGS },
	 { (char *)"iCelEntityList_Remove", _wrap_iCelEntityList_Remove, METH_VARARGS },
	 { (char *)"iCelEntityList_RemoveAll", _wrap_iCelEntityList_RemoveAll, METH_VARARGS },
	 { (char *)"iCelEntityList_Find", _wrap_iCelEntityList_Find, METH_VARARGS },
	 { (char *)"iCelEntityList_FindByName", _wrap_iCelEntityList_FindByName, METH_VARARGS },
	 { (char *)"delete_iCelEntityList", _wrap_delete_iCelEntityList, METH_VARARGS },
	 { (char *)"iCelEntityList_swigregister", iCelEntityList_swigregister, METH_VARARGS },
	 { (char *)"celFindNearbyEntities", _wrap_celFindNearbyEntities, METH_VARARGS },
	 { (char *)"iCelBlLayer_GetName", _wrap_iCelBlLayer_GetName, METH_VARARGS },
	 { (char *)"iCelBlLayer_CreateBehaviour", _wrap_iCelBlLayer_CreateBehaviour, METH_VARARGS },
	 { (char *)"delete_iCelBlLayer", _wrap_delete_iCelBlLayer, METH_VARARGS },
	 { (char *)"iCelBlLayer_swigregister", iCelBlLayer_swigregister, METH_VARARGS },
	 { (char *)"csQueryRegistry_iCelBlLayer", _wrap_csQueryRegistry_iCelBlLayer, METH_VARARGS },
	 { (char *)"iCelBehaviour_GetName", _wrap_iCelBehaviour_GetName, METH_VARARGS },
	 { (char *)"iCelBehaviour_GetBehaviourLayer", _wrap_iCelBehaviour_GetBehaviourLayer, METH_VARARGS },
	 { (char *)"iCelBehaviour_SendMessage", _wrap_iCelBehaviour_SendMessage, METH_VARARGS },
	 { (char *)"iCelBehaviour_GetPythonObject", _wrap_iCelBehaviour_GetPythonObject, METH_VARARGS },
	 { (char *)"delete_iCelBehaviour", _wrap_delete_iCelBehaviour, METH_VARARGS },
	 { (char *)"iCelBehaviour_swigregister", iCelBehaviour_swigregister, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetName", _wrap_iCelPropertyClass_GetName, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetEntity", _wrap_iCelPropertyClass_GetEntity, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetEntity", _wrap_iCelPropertyClass_SetEntity, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyOrActionType", _wrap_iCelPropertyClass_GetPropertyOrActionType, METH_VARARGS },
	 { (char *)"iCelPropertyClass_IsPropertyReadOnly", _wrap_iCelPropertyClass_IsPropertyReadOnly, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyLong", _wrap_iCelPropertyClass_GetPropertyLong, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyFloat", _wrap_iCelPropertyClass_GetPropertyFloat, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyBool", _wrap_iCelPropertyClass_GetPropertyBool, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyString", _wrap_iCelPropertyClass_GetPropertyString, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyVector", _wrap_iCelPropertyClass_GetPropertyVector, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyAndActionCount", _wrap_iCelPropertyClass_GetPropertyAndActionCount, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyOrActionID", _wrap_iCelPropertyClass_GetPropertyOrActionID, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyOrActionDescription", _wrap_iCelPropertyClass_GetPropertyOrActionDescription, METH_VARARGS },
	 { (char *)"iCelPropertyClass_PerformAction", _wrap_iCelPropertyClass_PerformAction, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyLong", _wrap_iCelPropertyClass_SetPropertyLong, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyFloat", _wrap_iCelPropertyClass_SetPropertyFloat, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyBool", _wrap_iCelPropertyClass_SetPropertyBool, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyString", _wrap_iCelPropertyClass_SetPropertyString, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyVector3", _wrap_iCelPropertyClass_SetPropertyVector3, METH_VARARGS },
	 { (char *)"delete_iCelPropertyClass", _wrap_delete_iCelPropertyClass, METH_VARARGS },
	 { (char *)"iCelPropertyClass_swigregister", iCelPropertyClass_swigregister, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_GetCount", _wrap_iCelPropertyClassList_GetCount, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_Get", _wrap_iCelPropertyClassList_Get, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_Find", _wrap_iCelPropertyClassList_Find, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_FindByName", _wrap_iCelPropertyClassList_FindByName, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_FindByInterface", _wrap_iCelPropertyClassList_FindByInterface, METH_VARARGS },
	 { (char *)"delete_iCelPropertyClassList", _wrap_delete_iCelPropertyClassList, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_swigregister", iCelPropertyClassList_swigregister, METH_VARARGS },
	 { (char *)"iPcRegion_SetWorldFile", _wrap_iPcRegion_SetWorldFile, METH_VARARGS },
	 { (char *)"iPcRegion_GetWorldDir", _wrap_iPcRegion_GetWorldDir, METH_VARARGS },
	 { (char *)"iPcRegion_GetWorldFile", _wrap_iPcRegion_GetWorldFile, METH_VARARGS },
	 { (char *)"iPcRegion_SetRegionName", _wrap_iPcRegion_SetRegionName, METH_VARARGS },
	 { (char *)"iPcRegion_GetRegionName", _wrap_iPcRegion_GetRegionName, METH_VARARGS },
	 { (char *)"iPcRegion_Load", _wrap_iPcRegion_Load, METH_VARARGS },
	 { (char *)"iPcRegion_Unload", _wrap_iPcRegion_Unload, METH_VARARGS },
	 { (char *)"iPcRegion_FindSector", _wrap_iPcRegion_FindSector, METH_VARARGS },
	 { (char *)"iPcRegion_GetStartSector", _wrap_iPcRegion_GetStartSector, METH_VARARGS },
	 { (char *)"iPcRegion_GetStartPosition", _wrap_iPcRegion_GetStartPosition, METH_VARARGS },
	 { (char *)"iPcRegion_PointCamera", _wrap_iPcRegion_PointCamera, METH_VARARGS },
	 { (char *)"iPcRegion_LoadWorld", _wrap_iPcRegion_LoadWorld, METH_VARARGS },
	 { (char *)"delete_iPcRegion", _wrap_delete_iPcRegion, METH_VARARGS },
	 { (char *)"iPcRegion_swigregister", iPcRegion_swigregister, METH_VARARGS },
	 { (char *)"celCreateRegion", _wrap_celCreateRegion, METH_VARARGS },
	 { (char *)"scfQuery_iPcRegion", _wrap_scfQuery_iPcRegion, METH_VARARGS },
	 { (char *)"celQueryPC_iPcRegion", _wrap_celQueryPC_iPcRegion, METH_VARARGS },
	 { (char *)"iPcCommandInput_Activate", _wrap_iPcCommandInput_Activate, METH_VARARGS },
	 { (char *)"iPcCommandInput_LoadConfig", _wrap_iPcCommandInput_LoadConfig, METH_VARARGS },
	 { (char *)"iPcCommandInput_Bind", _wrap_iPcCommandInput_Bind, METH_VARARGS },
	 { (char *)"iPcCommandInput_GetBind", _wrap_iPcCommandInput_GetBind, METH_VARARGS },
	 { (char *)"iPcCommandInput_RemoveBind", _wrap_iPcCommandInput_RemoveBind, METH_VARARGS },
	 { (char *)"delete_iPcCommandInput", _wrap_delete_iPcCommandInput, METH_VARARGS },
	 { (char *)"iPcCommandInput_swigregister", iPcCommandInput_swigregister, METH_VARARGS },
	 { (char *)"celCreateCommandInput", _wrap_celCreateCommandInput, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetRotation", _wrap_iPcLinearMovement_SetRotation, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetSpeed", _wrap_iPcLinearMovement_SetSpeed, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetCameraPitchSpeed", _wrap_iPcLinearMovement_SetCameraPitchSpeed, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetVelocity", _wrap_iPcLinearMovement_SetVelocity, METH_VARARGS },
	 { (char *)"iPcLinearMovement_GetVelocity", _wrap_iPcLinearMovement_GetVelocity, METH_VARARGS },
	 { (char *)"iPcLinearMovement_InitCD", _wrap_iPcLinearMovement_InitCD, METH_VARARGS },
	 { (char *)"iPcLinearMovement_GetDRData", _wrap_iPcLinearMovement_GetDRData, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetDRData", _wrap_iPcLinearMovement_SetDRData, METH_VARARGS },
	 { (char *)"iPcLinearMovement_NeedDRData", _wrap_iPcLinearMovement_NeedDRData, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetPosition", _wrap_iPcLinearMovement_SetPosition, METH_VARARGS },
	 { (char *)"iPcLinearMovement_GetLastPosition", _wrap_iPcLinearMovement_GetLastPosition, METH_VARARGS },
	 { (char *)"iPcLinearMovement_GetSector", _wrap_iPcLinearMovement_GetSector, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetReady", _wrap_iPcLinearMovement_SetReady, METH_VARARGS },
	 { (char *)"iPcLinearMovement_IsReady", _wrap_iPcLinearMovement_IsReady, METH_VARARGS },
	 { (char *)"iPcLinearMovement_IsOnGround", _wrap_iPcLinearMovement_IsOnGround, METH_VARARGS },
	 { (char *)"iPcLinearMovement_ExtrapolatePosition", _wrap_iPcLinearMovement_ExtrapolatePosition, METH_VARARGS },
	 { (char *)"delete_iPcLinearMovement", _wrap_delete_iPcLinearMovement, METH_VARARGS },
	 { (char *)"iPcLinearMovement_swigregister", iPcLinearMovement_swigregister, METH_VARARGS },
	 { (char *)"celCreateLinearMovement", _wrap_celCreateLinearMovement, METH_VARARGS },
	 { (char *)"iPcCamera_SetRegion", _wrap_iPcCamera_SetRegion, METH_VARARGS },
	 { (char *)"iPcCamera_SetMode", _wrap_iPcCamera_SetMode, METH_VARARGS },
	 { (char *)"iPcCamera_GetMode", _wrap_iPcCamera_GetMode, METH_VARARGS },
	 { (char *)"iPcCamera_SetFollowPos", _wrap_iPcCamera_SetFollowPos, METH_VARARGS },
	 { (char *)"iPcCamera_GetFollowPos", _wrap_iPcCamera_GetFollowPos, METH_VARARGS },
	 { (char *)"iPcCamera_SetPitch", _wrap_iPcCamera_SetPitch, METH_VARARGS },
	 { (char *)"iPcCamera_GetPitch", _wrap_iPcCamera_GetPitch, METH_VARARGS },
	 { (char *)"iPcCamera_SetRoll", _wrap_iPcCamera_SetRoll, METH_VARARGS },
	 { (char *)"iPcCamera_GetRoll", _wrap_iPcCamera_GetRoll, METH_VARARGS },
	 { (char *)"iPcCamera_SetRectangle", _wrap_iPcCamera_SetRectangle, METH_VARARGS },
	 { (char *)"iPcCamera_GetCamera", _wrap_iPcCamera_GetCamera, METH_VARARGS },
	 { (char *)"iPcCamera_GetView", _wrap_iPcCamera_GetView, METH_VARARGS },
	 { (char *)"delete_iPcCamera", _wrap_delete_iPcCamera, METH_VARARGS },
	 { (char *)"iPcCamera_swigregister", iPcCamera_swigregister, METH_VARARGS },
	 { (char *)"celCreateCamera", _wrap_celCreateCamera, METH_VARARGS },
	 { (char *)"scfQuery_iPcCamera", _wrap_scfQuery_iPcCamera, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetCamera", _wrap_iPcMeshSelect_SetCamera, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetMouseButtons", _wrap_iPcMeshSelect_SetMouseButtons, METH_VARARGS },
	 { (char *)"iPcMeshSelect_GetMouseButtons", _wrap_iPcMeshSelect_GetMouseButtons, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetGlobalSelection", _wrap_iPcMeshSelect_SetGlobalSelection, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasGlobalSelection", _wrap_iPcMeshSelect_HasGlobalSelection, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetFollowMode", _wrap_iPcMeshSelect_SetFollowMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasFollowMode", _wrap_iPcMeshSelect_HasFollowMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetFollowAlwaysMode", _wrap_iPcMeshSelect_SetFollowAlwaysMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasFollowAlwaysMode", _wrap_iPcMeshSelect_HasFollowAlwaysMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetDragMode", _wrap_iPcMeshSelect_SetDragMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasDragMode", _wrap_iPcMeshSelect_HasDragMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetDragPlaneNormal", _wrap_iPcMeshSelect_SetDragPlaneNormal, METH_VARARGS },
	 { (char *)"iPcMeshSelect_GetDragPlaneNormal", _wrap_iPcMeshSelect_GetDragPlaneNormal, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetSendmoveEvent", _wrap_iPcMeshSelect_SetSendmoveEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasSendmoveEvent", _wrap_iPcMeshSelect_HasSendmoveEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetSendupEvent", _wrap_iPcMeshSelect_SetSendupEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasSendupEvent", _wrap_iPcMeshSelect_HasSendupEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetSenddownEvent", _wrap_iPcMeshSelect_SetSenddownEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasSenddownEvent", _wrap_iPcMeshSelect_HasSenddownEvent, METH_VARARGS },
	 { (char *)"delete_iPcMeshSelect", _wrap_delete_iPcMeshSelect, METH_VARARGS },
	 { (char *)"iPcMeshSelect_swigregister", iPcMeshSelect_swigregister, METH_VARARGS },
	 { (char *)"celCreateMeshSelect", _wrap_celCreateMeshSelect, METH_VARARGS },
	 { (char *)"iPcMesh_LoadMesh", _wrap_iPcMesh_LoadMesh, METH_VARARGS },
	 { (char *)"iPcMesh_SetMesh", _wrap_iPcMesh_SetMesh, METH_VARARGS },
	 { (char *)"iPcMesh_CreateEmptyThing", _wrap_iPcMesh_CreateEmptyThing, METH_VARARGS },
	 { (char *)"iPcMesh_GetMesh", _wrap_iPcMesh_GetMesh, METH_VARARGS },
	 { (char *)"iPcMesh_MoveMesh", _wrap_iPcMesh_MoveMesh, METH_VARARGS },
	 { (char *)"iPcMesh_SetAction", _wrap_iPcMesh_SetAction, METH_VARARGS },
	 { (char *)"iPcMesh_GetAction", _wrap_iPcMesh_GetAction, METH_VARARGS },
	 { (char *)"iPcMesh_Hide", _wrap_iPcMesh_Hide, METH_VARARGS },
	 { (char *)"iPcMesh_Show", _wrap_iPcMesh_Show, METH_VARARGS },
	 { (char *)"iPcMesh_IsVisible", _wrap_iPcMesh_IsVisible, METH_VARARGS },
	 { (char *)"delete_iPcMesh", _wrap_delete_iPcMesh, METH_VARARGS },
	 { (char *)"iPcMesh_swigregister", iPcMesh_swigregister, METH_VARARGS },
	 { (char *)"celCreateMesh", _wrap_celCreateMesh, METH_VARARGS },
	 { (char *)"scfQuery_iPcMesh", _wrap_scfQuery_iPcMesh, METH_VARARGS },
	 { (char *)"iPcTimer_WakeUp", _wrap_iPcTimer_WakeUp, METH_VARARGS },
	 { (char *)"iPcTimer_Clear", _wrap_iPcTimer_Clear, METH_VARARGS },
	 { (char *)"delete_iPcTimer", _wrap_delete_iPcTimer, METH_VARARGS },
	 { (char *)"iPcTimer_swigregister", iPcTimer_swigregister, METH_VARARGS },
	 { (char *)"celCreateTimer", _wrap_celCreateTimer, METH_VARARGS },
	 { (char *)"scfQuery_iPcTimer", _wrap_scfQuery_iPcTimer, METH_VARARGS },
	 { (char *)"iPcSolid_SetMesh", _wrap_iPcSolid_SetMesh, METH_VARARGS },
	 { (char *)"iPcSolid_GetMesh", _wrap_iPcSolid_GetMesh, METH_VARARGS },
	 { (char *)"iPcSolid_GetCollider", _wrap_iPcSolid_GetCollider, METH_VARARGS },
	 { (char *)"delete_iPcSolid", _wrap_delete_iPcSolid, METH_VARARGS },
	 { (char *)"iPcSolid_swigregister", iPcSolid_swigregister, METH_VARARGS },
	 { (char *)"celCreateSolid", _wrap_celCreateSolid, METH_VARARGS },
	 { (char *)"iPcGravity_CreateGravityColliderFromMesh", _wrap_iPcGravity_CreateGravityColliderFromMesh, METH_VARARGS },
	 { (char *)"iPcGravity_CreateGravityCollider", _wrap_iPcGravity_CreateGravityCollider, METH_VARARGS },
	 { (char *)"iPcGravity_GetGravityCollider", _wrap_iPcGravity_GetGravityCollider, METH_VARARGS },
	 { (char *)"iPcGravity_SetMovable", _wrap_iPcGravity_SetMovable, METH_VARARGS },
	 { (char *)"iPcGravity_GetMovable", _wrap_iPcGravity_GetMovable, METH_VARARGS },
	 { (char *)"iPcGravity_SetSolid", _wrap_iPcGravity_SetSolid, METH_VARARGS },
	 { (char *)"iPcGravity_GetSolid", _wrap_iPcGravity_GetSolid, METH_VARARGS },
	 { (char *)"iPcGravity_SetWeight", _wrap_iPcGravity_SetWeight, METH_VARARGS },
	 { (char *)"iPcGravity_GetWeight", _wrap_iPcGravity_GetWeight, METH_VARARGS },
	 { (char *)"iPcGravity_ClearForces", _wrap_iPcGravity_ClearForces, METH_VARARGS },
	 { (char *)"iPcGravity_ClearPermanentForces", _wrap_iPcGravity_ClearPermanentForces, METH_VARARGS },
	 { (char *)"iPcGravity_ResetSpeed", _wrap_iPcGravity_ResetSpeed, METH_VARARGS },
	 { (char *)"iPcGravity_ApplyForce", _wrap_iPcGravity_ApplyForce, METH_VARARGS },
	 { (char *)"iPcGravity_ApplyPermanentForce", _wrap_iPcGravity_ApplyPermanentForce, METH_VARARGS },
	 { (char *)"iPcGravity_IsResting", _wrap_iPcGravity_IsResting, METH_VARARGS },
	 { (char *)"iPcGravity_SetActive", _wrap_iPcGravity_SetActive, METH_VARARGS },
	 { (char *)"iPcGravity_IsActive", _wrap_iPcGravity_IsActive, METH_VARARGS },
	 { (char *)"delete_iPcGravity", _wrap_delete_iPcGravity, METH_VARARGS },
	 { (char *)"iPcGravity_swigregister", iPcGravity_swigregister, METH_VARARGS },
	 { (char *)"celCreateGravity", _wrap_celCreateGravity, METH_VARARGS },
	 { (char *)"iPcMovable_SetMesh", _wrap_iPcMovable_SetMesh, METH_VARARGS },
	 { (char *)"iPcMovable_GetMesh", _wrap_iPcMovable_GetMesh, METH_VARARGS },
	 { (char *)"iPcMovable_SetPos", _wrap_iPcMovable_SetPos, METH_VARARGS },
	 { (char *)"iPcMovable_Move", _wrap_iPcMovable_Move, METH_VARARGS },
	 { (char *)"iPcMovable_AddConstraint", _wrap_iPcMovable_AddConstraint, METH_VARARGS },
	 { (char *)"iPcMovable_RemoveConstraint", _wrap_iPcMovable_RemoveConstraint, METH_VARARGS },
	 { (char *)"iPcMovable_RemoveAllConstraints", _wrap_iPcMovable_RemoveAllConstraints, METH_VARARGS },
	 { (char *)"delete_iPcMovable", _wrap_delete_iPcMovable, METH_VARARGS },
	 { (char *)"iPcMovable_swigregister", iPcMovable_swigregister, METH_VARARGS },
	 { (char *)"celCreateMovable", _wrap_celCreateMovable, METH_VARARGS },
	 { (char *)"iPcInventory_AddEntity", _wrap_iPcInventory_AddEntity, METH_VARARGS },
	 { (char *)"iPcInventory_RemoveEntity", _wrap_iPcInventory_RemoveEntity, METH_VARARGS },
	 { (char *)"iPcInventory_RemoveAll", _wrap_iPcInventory_RemoveAll, METH_VARARGS },
	 { (char *)"iPcInventory_GetEntityCount", _wrap_iPcInventory_GetEntityCount, METH_VARARGS },
	 { (char *)"iPcInventory_GetEntity", _wrap_iPcInventory_GetEntity, METH_VARARGS },
	 { (char *)"iPcInventory_SetStrictCharacteristics", _wrap_iPcInventory_SetStrictCharacteristics, METH_VARARGS },
	 { (char *)"iPcInventory_HasStrictCharacteristics", _wrap_iPcInventory_HasStrictCharacteristics, METH_VARARGS },
	 { (char *)"iPcInventory_SetConstraints", _wrap_iPcInventory_SetConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_GetConstraints", _wrap_iPcInventory_GetConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_RemoveConstraints", _wrap_iPcInventory_RemoveConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_RemoveAllConstraints", _wrap_iPcInventory_RemoveAllConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_GetCurrentCharacteristic", _wrap_iPcInventory_GetCurrentCharacteristic, METH_VARARGS },
	 { (char *)"iPcInventory_MarkDirty", _wrap_iPcInventory_MarkDirty, METH_VARARGS },
	 { (char *)"iPcInventory_TestConstraints", _wrap_iPcInventory_TestConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_Dump", _wrap_iPcInventory_Dump, METH_VARARGS },
	 { (char *)"delete_iPcInventory", _wrap_delete_iPcInventory, METH_VARARGS },
	 { (char *)"iPcInventory_swigregister", iPcInventory_swigregister, METH_VARARGS },
	 { (char *)"celCreateInventory", _wrap_celCreateInventory, METH_VARARGS },
	 { (char *)"scfQuery_iPcInventory", _wrap_scfQuery_iPcInventory, METH_VARARGS },
	 { (char *)"iPcCharacteristics_SetCharacteristic", _wrap_iPcCharacteristics_SetCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_SetInheritedCharacteristic", _wrap_iPcCharacteristics_SetInheritedCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_GetCharacteristic", _wrap_iPcCharacteristics_GetCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_GetLocalCharacteristic", _wrap_iPcCharacteristics_GetLocalCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_GetInheritedCharacteristic", _wrap_iPcCharacteristics_GetInheritedCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_ClearCharacteristic", _wrap_iPcCharacteristics_ClearCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_HasCharacteristic", _wrap_iPcCharacteristics_HasCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_ClearAll", _wrap_iPcCharacteristics_ClearAll, METH_VARARGS },
	 { (char *)"iPcCharacteristics_AddToInventory", _wrap_iPcCharacteristics_AddToInventory, METH_VARARGS },
	 { (char *)"iPcCharacteristics_RemoveFromInventory", _wrap_iPcCharacteristics_RemoveFromInventory, METH_VARARGS },
	 { (char *)"iPcCharacteristics_MarkDirty", _wrap_iPcCharacteristics_MarkDirty, METH_VARARGS },
	 { (char *)"iPcCharacteristics_TestConstraints", _wrap_iPcCharacteristics_TestConstraints, METH_VARARGS },
	 { (char *)"iPcCharacteristics_Dump", _wrap_iPcCharacteristics_Dump, METH_VARARGS },
	 { (char *)"delete_iPcCharacteristics", _wrap_delete_iPcCharacteristics, METH_VARARGS },
	 { (char *)"iPcCharacteristics_swigregister", iPcCharacteristics_swigregister, METH_VARARGS },
	 { (char *)"celCreateCharacteristics", _wrap_celCreateCharacteristics, METH_VARARGS },
	 { NULL, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_csOrthoTransformTo_p_csReversibleTransform(void *x) {
    return (void *)((csReversibleTransform *)  ((csOrthoTransform *) x));
}
static void *_p_csReversibleTransformTo_p_csTransform(void *x) {
    return (void *)((csTransform *)  ((csReversibleTransform *) x));
}
static void *_p_csOrthoTransformTo_p_csTransform(void *x) {
    return (void *)((csTransform *) (csReversibleTransform *) ((csOrthoTransform *) x));
}
static void *_p_p_csOrthoTransformTo_p_p_csReversibleTransform(void *x) {
    return (void *)((csReversibleTransform **)  ((csOrthoTransform **) x));
}
static void *_p_csTinyDocumentSystemTo_p_iDocumentSystem(void *x) {
    return (void *)((iDocumentSystem *)  ((csTinyDocumentSystem *) x));
}
static void *_p_csObjectTo_p_iObject(void *x) {
    return (void *)((iObject *)  ((csObject *) x));
}
static void *_p_csColliderWrapperTo_p_iObject(void *x) {
    return (void *)((iObject *) (csObject *) ((csColliderWrapper *) x));
}
static void *_p_csColliderWrapperTo_p_csObject(void *x) {
    return (void *)((csObject *)  ((csColliderWrapper *) x));
}
static void *_p__csPyEventHandlerTo_p_iEventHandler(void *x) {
    return (void *)((iEventHandler *)  ((_csPyEventHandler *) x));
}
static void *_p_csViewTo_p_iView(void *x) {
    return (void *)((iView *)  ((csView *) x));
}
static void *_p_iNetworkListenerTo_p_iNetworkEndPoint(void *x) {
    return (void *)((iNetworkEndPoint *)  ((iNetworkListener *) x));
}
static void *_p_iNetworkConnectionTo_p_iNetworkEndPoint(void *x) {
    return (void *)((iNetworkEndPoint *)  ((iNetworkConnection *) x));
}
static void *_p_iConfigManagerTo_p_iConfigFile(void *x) {
    return (void *)((iConfigFile *)  ((iConfigManager *) x));
}
static void *_p_G3DPolygonDPTo_p_G3DPolygonDFP(void *x) {
    return (void *)((G3DPolygonDFP *)  ((G3DPolygonDP *) x));
}
static void *_p_csGeomDebugHelperTo_p_iDebugHelper(void *x) {
    return (void *)((iDebugHelper *)  ((csGeomDebugHelper *) x));
}
static void *_p_iLightingProcessInfoTo_p_iFrustumViewUserdata(void *x) {
    return (void *)((iFrustumViewUserdata *)  ((iLightingProcessInfo *) x));
}
static void *_p_iVideoStreamTo_p_iStream(void *x) {
    return (void *)((iStream *)  ((iVideoStream *) x));
}
static void *_p_iAudioStreamTo_p_iStream(void *x) {
    return (void *)((iStream *)  ((iAudioStream *) x));
}
static void *_p_csCatmullRomSplineTo_p_csBSpline(void *x) {
    return (void *)((csBSpline *)  ((csCatmullRomSpline *) x));
}
static void *_p_csBSplineTo_p_csSpline(void *x) {
    return (void *)((csSpline *)  ((csBSpline *) x));
}
static void *_p_csCubicSplineTo_p_csSpline(void *x) {
    return (void *)((csSpline *)  ((csCubicSpline *) x));
}
static void *_p_csCatmullRomSplineTo_p_csSpline(void *x) {
    return (void *)((csSpline *) (csBSpline *) ((csCatmullRomSpline *) x));
}
static void *_p_iConsoleOutputTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iConsoleOutput *) x));
}
static void *_p_iEventTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEvent *) x));
}
static void *_p_iClipper2DTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iClipper2D *) x));
}
static void *_p_iDebugHelperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDebugHelper *) x));
}
static void *_p_csGeomDebugHelperTo_p_iBase(void *x) {
    return (void *)((iBase *) (iDebugHelper *) ((csGeomDebugHelper *) x));
}
static void *_p_iDocumentAttributeTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDocumentAttribute *) x));
}
static void *_p_iMaterialEngineTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMaterialEngine *) x));
}
static void *_p_iImageIOTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iImageIO *) x));
}
static void *_p_iNetworkConnectionTo_p_iBase(void *x) {
    return (void *)((iBase *) (iNetworkEndPoint *) ((iNetworkConnection *) x));
}
static void *_p_iLoaderStatusTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLoaderStatus *) x));
}
static void *_p_iImageTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iImage *) x));
}
static void *_p_iPcCharacteristicsTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcCharacteristics *) x));
}
static void *_p_iTextureHandleTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTextureHandle *) x));
}
static void *_p_iDynamicsTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDynamics *) x));
}
static void *_p_iParameterESMTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iParameterESM *) x));
}
static void *_p_iModelConverterTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iModelConverter *) x));
}
static void *_p_csViewTo_p_iBase(void *x) {
    return (void *)((iBase *) (iView *) ((csView *) x));
}
static void *_p_iPolygonBufferTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPolygonBuffer *) x));
}
static void *_p_iVertexBufferTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVertexBuffer *) x));
}
static void *_p_iPcCommandInputTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcCommandInput *) x));
}
static void *_p_iSaverTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSaver *) x));
}
static void *_p_iMeshListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshList *) x));
}
static void *_p_iEventPlugTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEventPlug *) x));
}
static void *_p_iCelPropertyClassTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelPropertyClass *) x));
}
static void *_p_iSequenceWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSequenceWrapper *) x));
}
static void *_p_iMeshWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshWrapper *) x));
}
static void *_p_iMaterialWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMaterialWrapper *) x));
}
static void *_p_iTextureWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTextureWrapper *) x));
}
static void *_p_iMeshFactoryWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshFactoryWrapper *) x));
}
static void *_p_iSoundWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSoundWrapper *) x));
}
static void *_p_iStringTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iString *) x));
}
static void *_p_csColliderWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *) (iObject *)(csObject *) ((csColliderWrapper *) x));
}
static void *_p_iConsoleWatcherTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iConsoleWatcher *) x));
}
static void *_p_iEngineTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEngine *) x));
}
static void *_p_iPcInventoryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcInventory *) x));
}
static void *_p_iMaterialTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMaterial *) x));
}
static void *_p_iNetworkSocket2To_p_iBase(void *x) {
    return (void *)((iBase *)  ((iNetworkSocket2 *) x));
}
static void *_p_iSprite2DUVAnimationTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSprite2DUVAnimation *) x));
}
static void *_p_iPolygonMeshTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPolygonMesh *) x));
}
static void *_p_iSprite2DFactoryStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSprite2DFactoryState *) x));
}
static void *_p_iSprite3DFactoryStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSprite3DFactoryState *) x));
}
static void *_p_iThingFactoryStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iThingFactoryState *) x));
}
static void *_p_iSCFTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSCF *) x));
}
static void *_p_iGraphics2DTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iGraphics2D *) x));
}
static void *_p_iDocumentTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDocument *) x));
}
static void *_p_iStatLightTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iStatLight *) x));
}
static void *_p_iCelEntityListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelEntityList *) x));
}
static void *_p_iDataBufferTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDataBuffer *) x));
}
static void *_p_iMeshObjectTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshObject *) x));
}
static void *_p_iSequenceTimedOperationTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSequenceTimedOperation *) x));
}
static void *_p_iVertexBufferManagerClientTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVertexBufferManagerClient *) x));
}
static void *_p_iFontServerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFontServer *) x));
}
static void *_p_iReporterTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iReporter *) x));
}
static void *_p_iReporterIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iReporterIterator *) x));
}
static void *_p_iStreamIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iStreamIterator *) x));
}
static void *_p_iDocumentNodeIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDocumentNodeIterator *) x));
}
static void *_p_iDocumentAttributeIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDocumentAttributeIterator *) x));
}
static void *_p_iConfigIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iConfigIterator *) x));
}
static void *_p_iPluginIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPluginIterator *) x));
}
static void *_p_iObjectRegistryIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iObjectRegistryIterator *) x));
}
static void *_p_iObjectIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iObjectIterator *) x));
}
static void *_p_iSectorIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSectorIterator *) x));
}
static void *_p_iLightIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLightIterator *) x));
}
static void *_p_iMeshWrapperIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshWrapperIterator *) x));
}
static void *_p_iVisibilityObjectIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVisibilityObjectIterator *) x));
}
static void *_p_iObjectRegistryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iObjectRegistry *) x));
}
static void *_p_iCelPlLayerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelPlLayer *) x));
}
static void *_p_iCelBlLayerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelBlLayer *) x));
}
static void *_p_iPcLinearMovementTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcLinearMovement *) x));
}
static void *_p_iStandardReporterListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iStandardReporterListener *) x));
}
static void *_p_iReporterListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iReporterListener *) x));
}
static void *_p_iObjectModelListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iObjectModelListener *) x));
}
static void *_p_iMovableListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMovableListener *) x));
}
static void *_p_csTinyDocumentSystemTo_p_iBase(void *x) {
    return (void *)((iBase *) (iDocumentSystem *) ((csTinyDocumentSystem *) x));
}
static void *_p_iDocumentSystemTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDocumentSystem *) x));
}
static void *_p_iNetworkListenerTo_p_iBase(void *x) {
    return (void *)((iBase *) (iNetworkEndPoint *) ((iNetworkListener *) x));
}
static void *_p_iPcTimerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcTimer *) x));
}
static void *_p_iSprite2DUVAnimationFrameTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSprite2DUVAnimationFrame *) x));
}
static void *_p_iSectorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSector *) x));
}
static void *_p_iSequenceTriggerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSequenceTrigger *) x));
}
static void *_p_iPcGravityTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcGravity *) x));
}
static void *_p_iCameraPositionListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCameraPositionList *) x));
}
static void *_p_iSpriteActionTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSpriteAction *) x));
}
static void *_p_iLightListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLightList *) x));
}
static void *_p_iPolygon3DTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPolygon3D *) x));
}
static void *_p_iDynamicsCollisionCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDynamicsCollisionCallback *) x));
}
static void *_p_iDynamicsMoveCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDynamicsMoveCallback *) x));
}
static void *_p_iOffscreenCanvasCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iOffscreenCanvasCallback *) x));
}
static void *_p_iMeshDrawCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshDrawCallback *) x));
}
static void *_p_iTextureCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTextureCallback *) x));
}
static void *_p_iSectorCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSectorCallback *) x));
}
static void *_p_iLightCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLightCallback *) x));
}
static void *_p_iMeshObjectDrawCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshObjectDrawCallback *) x));
}
static void *_p_iDataObjectTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDataObject *) x));
}
static void *_p_iObjectTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iObject *) x));
}
static void *_p_iVisibilityObjectTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVisibilityObject *) x));
}
static void *_p_csObjectTo_p_iBase(void *x) {
    return (void *)((iBase *) (iObject *) ((csObject *) x));
}
static void *_p_iCameraTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCamera *) x));
}
static void *_p_iMeshFactoryListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshFactoryList *) x));
}
static void *_p_iPcCameraTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcCamera *) x));
}
static void *_p_iGraphics3DTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iGraphics3D *) x));
}
static void *_p_iVirtualClockTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVirtualClock *) x));
}
static void *_p_iMeshObjectTypeTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshObjectType *) x));
}
static void *_p_iSprite2DStateTo_p_iBase(void *x) {
    return (void *)((iBase *) (iSprite2DFactoryState *) ((iSprite2DState *) x));
}
static void *_p_iThingEnvironmentTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iThingEnvironment *) x));
}
static void *_p_iMovableTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMovable *) x));
}
static void *_p_iStrVectorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iStrVector *) x));
}
static void *_p_iPcMovableTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcMovable *) x));
}
static void *_p_iSectorListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSectorList *) x));
}
static void *_p_iDynamicSystemTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDynamicSystem *) x));
}
static void *_p_iCollideSystemTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCollideSystem *) x));
}
static void *_p_iLightingProcessDataTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLightingProcessData *) x));
}
static void *_p_iHaloTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iHalo *) x));
}
static void *_p_iCameraPositionTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCameraPosition *) x));
}
static void *_p_iLoaderPluginTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLoaderPlugin *) x));
}
static void *_p_iBinaryLoaderPluginTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iBinaryLoaderPlugin *) x));
}
static void *_p_iAudioStreamTo_p_iBase(void *x) {
    return (void *)((iBase *) (iStream *) ((iAudioStream *) x));
}
static void *_p_iVideoStreamTo_p_iBase(void *x) {
    return (void *)((iBase *) (iStream *) ((iVideoStream *) x));
}
static void *_p_iStreamTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iStream *) x));
}
static void *_p_iVisibilityCullerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVisibilityCuller *) x));
}
static void *_p_iConfigFileTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iConfigFile *) x));
}
static void *_p_iEventQueueTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEventQueue *) x));
}
static void *_p_iPolygonTextureTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPolygonTexture *) x));
}
static void *_p_iRigidBodyTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iRigidBody *) x));
}
static void *_p_iSoundSourceTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSoundSource *) x));
}
static void *_p_iEventOutletTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEventOutlet *) x));
}
static void *_p_iStreamFormatTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iStreamFormat *) x));
}
static void *_p_iDocumentNodeTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDocumentNode *) x));
}
static void *_p_iKeyboardDriverTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iKeyboardDriver *) x));
}
static void *_p_iSoundDriverTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSoundDriver *) x));
}
static void *_p_iSprite3DStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSprite3DState *) x));
}
static void *_p_iBodyGroupTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iBodyGroup *) x));
}
static void *_p_iPolygon3DStaticTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPolygon3DStatic *) x));
}
static void *_p_iFrustumViewTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFrustumView *) x));
}
static void *_p_iNetworkPacket2To_p_iBase(void *x) {
    return (void *)((iBase *)  ((iNetworkPacket2 *) x));
}
static void *_p_iCelBehaviourTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelBehaviour *) x));
}
static void *_p_iEventHandlerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEventHandler *) x));
}
static void *_p_iSoundLoaderTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSoundLoader *) x));
}
static void *_p__csPyEventHandlerTo_p_iBase(void *x) {
    return (void *)((iBase *) (iEventHandler *) ((_csPyEventHandler *) x));
}
static void *_p_iEngineSequenceParametersTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEngineSequenceParameters *) x));
}
static void *_p_iSoundRenderTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSoundRender *) x));
}
static void *_p_iFileTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFile *) x));
}
static void *_p_iNetworkEndPointTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iNetworkEndPoint *) x));
}
static void *_p_iMaterialListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMaterialList *) x));
}
static void *_p_iLightingProcessInfoTo_p_iBase(void *x) {
    return (void *)((iBase *) (iFrustumViewUserdata *) ((iLightingProcessInfo *) x));
}
static void *_p_iSpriteSocketTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSpriteSocket *) x));
}
static void *_p_iComponentTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iComponent *) x));
}
static void *_p_iNetworkPacketTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iNetworkPacket *) x));
}
static void *_p_iCelEntityTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelEntity *) x));
}
static void *_p_iVFSTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVFS *) x));
}
static void *_p_iJoystickDriverTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iJoystickDriver *) x));
}
static void *_p_iMouseDriverTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMouseDriver *) x));
}
static void *_p_iFactoryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFactory *) x));
}
static void *_p_iMeshObjectFactoryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshObjectFactory *) x));
}
static void *_p_iNetworkDriverTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iNetworkDriver *) x));
}
static void *_p_iLoaderTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLoader *) x));
}
static void *_p_iFrustumViewUserdataTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFrustumViewUserdata *) x));
}
static void *_p_iTextureListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTextureList *) x));
}
static void *_p_iNativeWindowTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iNativeWindow *) x));
}
static void *_p_iSpriteFrameTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSpriteFrame *) x));
}
static void *_p_iFontDeleteNotifyTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFontDeleteNotify *) x));
}
static void *_p_iThingStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iThingState *) x));
}
static void *_p_iJointTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iJoint *) x));
}
static void *_p_iFontTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFont *) x));
}
static void *_p_iLightTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLight *) x));
}
static void *_p_iViewTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iView *) x));
}
static void *_p_iColliderTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCollider *) x));
}
static void *_p_iPcMeshSelectTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcMeshSelect *) x));
}
static void *_p_iMaterialHandleTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMaterialHandle *) x));
}
static void *_p_iSoundHandleTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSoundHandle *) x));
}
static void *_p_iObjectModelTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iObjectModel *) x));
}
static void *_p_iCelPropertyClassListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelPropertyClassList *) x));
}
static void *_p_iPcRegionTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcRegion *) x));
}
static void *_p_iNetworkManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iNetworkManager *) x));
}
static void *_p_iEngineSequenceManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEngineSequenceManager *) x));
}
static void *_p_iNativeWindowManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iNativeWindowManager *) x));
}
static void *_p_iVertexBufferManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVertexBufferManager *) x));
}
static void *_p_iTextureManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTextureManager *) x));
}
static void *_p_iConfigManagerTo_p_iBase(void *x) {
    return (void *)((iBase *) (iConfigFile *) ((iConfigManager *) x));
}
static void *_p_iPluginManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPluginManager *) x));
}
static void *_p_iCacheManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCacheManager *) x));
}
static void *_p_iPcSolidTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcSolid *) x));
}
static void *_p_iLightMapTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLightMap *) x));
}
static void *_p_iPcMeshTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcMesh *) x));
}
static void *_p_iEventCordTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEventCord *) x));
}
static void *_p_csVideoStreamDescriptionTo_p_csStreamDescription(void *x) {
    return (void *)((csStreamDescription *)  ((csVideoStreamDescription *) x));
}
static void *_p_csAudioStreamDescriptionTo_p_csStreamDescription(void *x) {
    return (void *)((csStreamDescription *)  ((csAudioStreamDescription *) x));
}
static void *_p_iSprite2DStateTo_p_iSprite2DFactoryState(void *x) {
    return (void *)((iSprite2DFactoryState *)  ((iSprite2DState *) x));
}
static void *_p_csVector3ArrayTo_p_csPoly3D(void *x) {
    return (void *)((csPoly3D *)  ((csVector3Array *) x));
}
static void *_p_csXRotMatrix3To_p_csMatrix3(void *x) {
    return (void *)((csMatrix3 *)  ((csXRotMatrix3 *) x));
}
static void *_p_csYRotMatrix3To_p_csMatrix3(void *x) {
    return (void *)((csMatrix3 *)  ((csYRotMatrix3 *) x));
}
static void *_p_csZRotMatrix3To_p_csMatrix3(void *x) {
    return (void *)((csMatrix3 *)  ((csZRotMatrix3 *) x));
}
static void *_p_csXScaleMatrix3To_p_csMatrix3(void *x) {
    return (void *)((csMatrix3 *)  ((csXScaleMatrix3 *) x));
}
static void *_p_csYScaleMatrix3To_p_csMatrix3(void *x) {
    return (void *)((csMatrix3 *)  ((csYScaleMatrix3 *) x));
}
static void *_p_csZScaleMatrix3To_p_csMatrix3(void *x) {
    return (void *)((csMatrix3 *)  ((csZScaleMatrix3 *) x));
}
static swig_type_info _swigt__p_iSaver[] = {{"_p_iSaver", 0, "iSaver *", 0},{"_p_iSaver"},{0}};
static swig_type_info _swigt__p_csRGBpixel[] = {{"_p_csRGBpixel", 0, "csRGBpixel *", 0},{"_p_csRGBpixel"},{0}};
static swig_type_info _swigt__p_iLightingInfo[] = {{"_p_iLightingInfo", 0, "iLightingInfo *", 0},{"_p_iLightingInfo"},{0}};
static swig_type_info _swigt__p_p_csReversibleTransform[] = {{"_p_p_csReversibleTransform", 0, "csReversibleTransform **", 0},{"_p_p_csReversibleTransform"},{"_p_p_csOrthoTransform", _p_p_csOrthoTransformTo_p_p_csReversibleTransform},{0}};
static swig_type_info _swigt__p_csOrthoTransform[] = {{"_p_csOrthoTransform", 0, "csOrthoTransform *", 0},{"_p_csOrthoTransform"},{0}};
static swig_type_info _swigt__p_csReversibleTransform[] = {{"_p_csReversibleTransform", 0, "csReversibleTransform *", 0},{"_p_csReversibleTransform"},{"_p_csOrthoTransform", _p_csOrthoTransformTo_p_csReversibleTransform},{0}};
static swig_type_info _swigt__p_csTransform[] = {{"_p_csTransform", 0, "csTransform *", 0},{"_p_csTransform"},{"_p_csReversibleTransform", _p_csReversibleTransformTo_p_csTransform},{"_p_csOrthoTransform", _p_csOrthoTransformTo_p_csTransform},{0}};
static swig_type_info _swigt__p_csVector3Array[] = {{"_p_csVector3Array", 0, "csVector3Array *", 0},{"_p_csVector3Array"},{0}};
static swig_type_info _swigt__p_iEventQueue[] = {{"_p_iEventQueue", 0, "iEventQueue *", 0},{"_p_iEventQueue"},{0}};
static swig_type_info _swigt__p_iLoaderContext[] = {{"_p_iLoaderContext", 0, "iLoaderContext *", 0},{"_p_iLoaderContext"},{0}};
static swig_type_info _swigt__p_csFrustumContext[] = {{"_p_csFrustumContext", 0, "csFrustumContext *", 0},{"_p_csFrustumContext"},{0}};
static swig_type_info _swigt__p_csPolygon3DStatic[] = {{"_p_csPolygon3DStatic", 0, "csPolygon3DStatic *", 0},{"_p_csPolygon3DStatic"},{0}};
static swig_type_info _swigt__p_iPolygon3DStatic[] = {{"_p_iPolygon3DStatic", 0, "iPolygon3DStatic *", 0},{"_p_iPolygon3DStatic"},{0}};
static swig_type_info _swigt__p_iCollectionList[] = {{"_p_iCollectionList", 0, "iCollectionList *", 0},{"_p_iCollectionList"},{0}};
static swig_type_info _swigt__p_iCameraPositionList[] = {{"_p_iCameraPositionList", 0, "iCameraPositionList *", 0},{"_p_iCameraPositionList"},{0}};
static swig_type_info _swigt__p_iRegionList[] = {{"_p_iRegionList", 0, "iRegionList *", 0},{"_p_iRegionList"},{0}};
static swig_type_info _swigt__p_float[] = {{"_p_float", 0, "float *", 0},{"_p_float"},{0}};
static swig_type_info _swigt__p_csStreamFormatCap[] = {{"_p_csStreamFormatCap", 0, "csStreamFormatCap &", 0},{"_p_csStreamFormatCap"},{0}};
static swig_type_info _swigt__p_iVFS[] = {{"_p_iVFS", 0, "iVFS *", 0},{"_p_iVFS"},{0}};
static swig_type_info _swigt__p_csPtrTiNetworkPacket2_t[] = {{"_p_csPtrTiNetworkPacket2_t", 0, "csPtr<iNetworkPacket2 > *", 0},{"_p_csPtrTiNetworkPacket2_t"},{0}};
static swig_type_info _swigt__p_iDynLight[] = {{"_p_iDynLight", 0, "iDynLight *", 0},{"_p_iDynLight"},{0}};
static swig_type_info _swigt__p_csQuaternion[] = {{"_p_csQuaternion", 0, "csQuaternion *", 0},{"_p_csQuaternion"},{0}};
static swig_type_info _swigt__p_iThingEnvironment[] = {{"_p_iThingEnvironment", 0, "iThingEnvironment *", 0},{"_p_iThingEnvironment"},{0}};
static swig_type_info _swigt__p_csRefTiBase_t[] = {{"_p_csRefTiBase_t", 0, "csRef<iBase > *", 0},{"_p_csRefTiBase_t"},{0}};
static swig_type_info _swigt__p_csPtrTiBase_t[] = {{"_p_csPtrTiBase_t", 0, "csPtr<iBase > *", 0},{"_p_csPtrTiBase_t"},{0}};
static swig_type_info _swigt__p_iEffectDefinition[] = {{"_p_iEffectDefinition", 0, "iEffectDefinition *", 0},{"_p_iEffectDefinition"},{0}};
static swig_type_info _swigt__p_iClipper2D[] = {{"_p_iClipper2D", 0, "iClipper2D *", 0},{"_p_iClipper2D"},{0}};
static swig_type_info _swigt__p_iConsoleOutput[] = {{"_p_iConsoleOutput", 0, "iConsoleOutput *", 0},{"_p_iConsoleOutput"},{0}};
static swig_type_info _swigt__p_iObjectRegistry[] = {{"_p_iObjectRegistry", 0, "iObjectRegistry *", 0},{"_p_iObjectRegistry"},{0}};
static swig_type_info _swigt__p_csRGBcolor[] = {{"_p_csRGBcolor", 0, "csRGBcolor *", 0},{"_p_csRGBcolor"},{0}};
static swig_type_info _swigt__p_iSector[] = {{"_p_iSector", 0, "iSector *", 0},{"_p_iSector"},{0}};
static swig_type_info _swigt__p_csSector[] = {{"_p_csSector", 0, "csSector *", 0},{"_p_csSector"},{0}};
static swig_type_info _swigt__p_iSkeletonBone[] = {{"_p_iSkeletonBone", 0, "iSkeletonBone *", 0},{"_p_iSkeletonBone"},{0}};
static swig_type_info _swigt__p_p_iSector[] = {{"_p_p_iSector", 0, "iSector **", 0},{"_p_p_iSector"},{0}};
static swig_type_info _swigt__p_csStringSet[] = {{"_p_csStringSet", 0, "csStringSet *", 0},{"_p_csStringSet"},{0}};
static swig_type_info _swigt__p_iLightList[] = {{"_p_iLightList", 0, "iLightList *", 0},{"_p_iLightList"},{0}};
static swig_type_info _swigt__p_iStandardReporterListener[] = {{"_p_iStandardReporterListener", 0, "iStandardReporterListener *", 0},{"_p_iStandardReporterListener"},{0}};
static swig_type_info _swigt__p_iReporterListener[] = {{"_p_iReporterListener", 0, "iReporterListener *", 0},{"_p_iReporterListener"},{0}};
static swig_type_info _swigt__p_iSoundListener[] = {{"_p_iSoundListener", 0, "iSoundListener *", 0},{"_p_iSoundListener"},{0}};
static swig_type_info _swigt__p_iMovableListener[] = {{"_p_iMovableListener", 0, "iMovableListener *", 0},{"_p_iMovableListener"},{0}};
static swig_type_info _swigt__p_iObjectModelListener[] = {{"_p_iObjectModelListener", 0, "iObjectModelListener *", 0},{"_p_iObjectModelListener"},{0}};
static swig_type_info _swigt__p_iNetworkListener[] = {{"_p_iNetworkListener", 0, "iNetworkListener *", 0},{"_p_iNetworkListener"},{0}};
static swig_type_info _swigt__p_iFont[] = {{"_p_iFont", 0, "iFont *", 0},{"_p_iFont"},{0}};
static swig_type_info _swigt__p_p_iImage[] = {{"_p_p_iImage", 0, "iImage **", 0},{"_p_p_iImage"},{0}};
static swig_type_info _swigt__p_iImage[] = {{"_p_iImage", 0, "iImage *", 0},{"_p_iImage"},{0}};
static swig_type_info _swigt__p_csImageArea[] = {{"_p_csImageArea", 0, "csImageArea *", 0},{"_p_csImageArea"},{0}};
static swig_type_info _swigt__p_iOffscreenCanvasCallback[] = {{"_p_iOffscreenCanvasCallback", 0, "iOffscreenCanvasCallback *", 0},{"_p_iOffscreenCanvasCallback"},{0}};
static swig_type_info _swigt__p_iMeshObjectDrawCallback[] = {{"_p_iMeshObjectDrawCallback", 0, "iMeshObjectDrawCallback *", 0},{"_p_iMeshObjectDrawCallback"},{0}};
static swig_type_info _swigt__p_iMeshDrawCallback[] = {{"_p_iMeshDrawCallback", 0, "iMeshDrawCallback *", 0},{"_p_iMeshDrawCallback"},{0}};
static swig_type_info _swigt__p_iTextureCallback[] = {{"_p_iTextureCallback", 0, "iTextureCallback *", 0},{"_p_iTextureCallback"},{0}};
static swig_type_info _swigt__p_iLightCallback[] = {{"_p_iLightCallback", 0, "iLightCallback *", 0},{"_p_iLightCallback"},{0}};
static swig_type_info _swigt__p_iSectorCallback[] = {{"_p_iSectorCallback", 0, "iSectorCallback *", 0},{"_p_iSectorCallback"},{0}};
static swig_type_info _swigt__p_iDynamicsMoveCallback[] = {{"_p_iDynamicsMoveCallback", 0, "iDynamicsMoveCallback *", 0},{"_p_iDynamicsMoveCallback"},{0}};
static swig_type_info _swigt__p_iDynamicsCollisionCallback[] = {{"_p_iDynamicsCollisionCallback", 0, "iDynamicsCollisionCallback *", 0},{"_p_iDynamicsCollisionCallback"},{0}};
static swig_type_info _swigt__p_csTinyDocumentSystem[] = {{"_p_csTinyDocumentSystem", 0, "csTinyDocumentSystem *", 0},{"_p_csTinyDocumentSystem"},{0}};
static swig_type_info _swigt__p_iDocumentSystem[] = {{"_p_iDocumentSystem", 0, "iDocumentSystem *", 0},{"_p_iDocumentSystem"},{"_p_csTinyDocumentSystem", _p_csTinyDocumentSystemTo_p_iDocumentSystem},{0}};
static swig_type_info _swigt__p_csRectRegion[] = {{"_p_csRectRegion", 0, "csRectRegion *", 0},{"_p_csRectRegion"},{0}};
static swig_type_info _swigt__p_iDynamicSystem[] = {{"_p_iDynamicSystem", 0, "iDynamicSystem *", 0},{"_p_iDynamicSystem"},{0}};
static swig_type_info _swigt__p_iCollideSystem[] = {{"_p_iCollideSystem", 0, "iCollideSystem *", 0},{"_p_iCollideSystem"},{0}};
static swig_type_info _swigt__p_iRegion[] = {{"_p_iRegion", 0, "iRegion *", 0},{"_p_iRegion"},{0}};
static swig_type_info _swigt__p_csPtrTiParameterESM_t[] = {{"_p_csPtrTiParameterESM_t", 0, "csPtr<iParameterESM > *", 0},{"_p_csPtrTiParameterESM_t"},{0}};
static swig_type_info _swigt__p_iPcRegion[] = {{"_p_iPcRegion", 0, "iPcRegion *", 0},{"_p_iPcRegion"},{0}};
static swig_type_info _swigt__p_csRefTiDocumentAttribute_t[] = {{"_p_csRefTiDocumentAttribute_t", 0, "csRef<iDocumentAttribute > *", 0},{"_p_csRefTiDocumentAttribute_t"},{0}};
static swig_type_info _swigt__p_uint8[] = {{"_p_uint8", 0, "uint8 &", 0},{"_p_unsigned_char"},{"_p_uint8"},{0}};
static swig_type_info _swigt__p_iReporterIterator[] = {{"_p_iReporterIterator", 0, "iReporterIterator *", 0},{"_p_iReporterIterator"},{0}};
static swig_type_info _swigt__p_iStreamIterator[] = {{"_p_iStreamIterator", 0, "iStreamIterator *", 0},{"_p_iStreamIterator"},{0}};
static swig_type_info _swigt__p_iDocumentNodeIterator[] = {{"_p_iDocumentNodeIterator", 0, "iDocumentNodeIterator *", 0},{"_p_iDocumentNodeIterator"},{0}};
static swig_type_info _swigt__p_iDocumentAttributeIterator[] = {{"_p_iDocumentAttributeIterator", 0, "iDocumentAttributeIterator *", 0},{"_p_iDocumentAttributeIterator"},{0}};
static swig_type_info _swigt__p_iConfigIterator[] = {{"_p_iConfigIterator", 0, "iConfigIterator *", 0},{"_p_iConfigIterator"},{0}};
static swig_type_info _swigt__p_iPluginIterator[] = {{"_p_iPluginIterator", 0, "iPluginIterator *", 0},{"_p_iPluginIterator"},{0}};
static swig_type_info _swigt__p_iObjectRegistryIterator[] = {{"_p_iObjectRegistryIterator", 0, "iObjectRegistryIterator *", 0},{"_p_iObjectRegistryIterator"},{0}};
static swig_type_info _swigt__p_iObjectIterator[] = {{"_p_iObjectIterator", 0, "iObjectIterator *", 0},{"_p_iObjectIterator"},{0}};
static swig_type_info _swigt__p_iVisibilityObjectIterator[] = {{"_p_iVisibilityObjectIterator", 0, "iVisibilityObjectIterator *", 0},{"_p_iVisibilityObjectIterator"},{0}};
static swig_type_info _swigt__p_iMeshWrapperIterator[] = {{"_p_iMeshWrapperIterator", 0, "iMeshWrapperIterator *", 0},{"_p_iMeshWrapperIterator"},{0}};
static swig_type_info _swigt__p_csStringSetIterator[] = {{"_p_csStringSetIterator", 0, "csStringSetIterator *", 0},{"_p_csStringSetIterator"},{0}};
static swig_type_info _swigt__p_iLightIterator[] = {{"_p_iLightIterator", 0, "iLightIterator *", 0},{"_p_iLightIterator"},{0}};
static swig_type_info _swigt__p_iSectorIterator[] = {{"_p_iSectorIterator", 0, "iSectorIterator *", 0},{"_p_iSectorIterator"},{0}};
static swig_type_info _swigt__p_iEventOutlet[] = {{"_p_iEventOutlet", 0, "iEventOutlet *", 0},{"_p_iEventOutlet"},{0}};
static swig_type_info _swigt__p_csFrustum[] = {{"_p_csFrustum", 0, "csFrustum *", 0},{"_p_csFrustum"},{0}};
static swig_type_info _swigt__p_csColoredVertices[] = {{"_p_csColoredVertices", 0, "csColoredVertices &", 0},{"_p_csColoredVertices"},{0}};
static swig_type_info _swigt__p_csSegment2[] = {{"_p_csSegment2", 0, "csSegment2 *", 0},{"_p_csSegment2"},{0}};
static swig_type_info _swigt__p_csSegment3[] = {{"_p_csSegment3", 0, "csSegment3 *", 0},{"_p_csSegment3"},{0}};
static swig_type_info _swigt__p_iCelPropertyClassList[] = {{"_p_iCelPropertyClassList", 0, "iCelPropertyClassList *", 0},{"_p_iCelPropertyClassList"},{0}};
static swig_type_info _swigt__p_csVector2[] = {{"_p_csVector2", 0, "csVector2 *", 0},{"_p_csVector2"},{0}};
static swig_type_info _swigt__p_iMeshObject[] = {{"_p_iMeshObject", 0, "iMeshObject *", 0},{"_p_iMeshObject"},{0}};
static swig_type_info _swigt__p_p_csVector3[] = {{"_p_p_csVector3", 0, "csVector3 **", 0},{"_p_p_csVector3"},{0}};
static swig_type_info _swigt__p_csDVector3[] = {{"_p_csDVector3", 0, "csDVector3 *", 0},{"_p_csDVector3"},{0}};
static swig_type_info _swigt__p_csVector3[] = {{"_p_csVector3", 0, "csVector3 *", 0},{"_p_csVector3"},{0}};
static swig_type_info _swigt__p_csFrustumViewObjectFunc[] = {{"_p_csFrustumViewObjectFunc", 0, "csFrustumViewObjectFunc *", 0},{"_p_csFrustumViewObjectFunc"},{0}};
static swig_type_info _swigt__p_iDataObject[] = {{"_p_iDataObject", 0, "iDataObject *", 0},{"_p_iDataObject"},{0}};
static swig_type_info _swigt__p_iVisibilityObject[] = {{"_p_iVisibilityObject", 0, "iVisibilityObject *", 0},{"_p_iVisibilityObject"},{0}};
static swig_type_info _swigt__p_iObject[] = {{"_p_iObject", 0, "iObject *", 0},{"_p_iObject"},{"_p_csObject", _p_csObjectTo_p_iObject},{"_p_csColliderWrapper", _p_csColliderWrapperTo_p_iObject},{0}};
static swig_type_info _swigt__p_csObject[] = {{"_p_csObject", 0, "csObject *", 0},{"_p_csObject"},{"_p_csColliderWrapper", _p_csColliderWrapperTo_p_csObject},{0}};
static swig_type_info _swigt__p_iSharedVariableList[] = {{"_p_iSharedVariableList", 0, "iSharedVariableList *", 0},{"_p_iSharedVariableList"},{0}};
static swig_type_info _swigt__csEventHandlerFunc[] = {{"_csEventHandlerFunc", 0, "csEventHandlerFunc", 0},{"_csEventHandlerFunc"},{0}};
static swig_type_info _swigt__p_iFlareHalo[] = {{"_p_iFlareHalo", 0, "iFlareHalo *", 0},{"_p_iFlareHalo"},{0}};
static swig_type_info _swigt__p_iEventHandler[] = {{"_p_iEventHandler", 0, "iEventHandler *", 0},{"_p_iEventHandler"},{"_p__csPyEventHandler", _p__csPyEventHandlerTo_p_iEventHandler},{0}};
static swig_type_info _swigt__p_iFrustumView[] = {{"_p_iFrustumView", 0, "iFrustumView *", 0},{"_p_iFrustumView"},{0}};
static swig_type_info _swigt__p_iSoundWrapper[] = {{"_p_iSoundWrapper", 0, "iSoundWrapper *", 0},{"_p_iSoundWrapper"},{0}};
static swig_type_info _swigt__p_p_iMeshWrapper[] = {{"_p_p_iMeshWrapper", 0, "iMeshWrapper **", 0},{"_p_p_iMeshWrapper"},{0}};
static swig_type_info _swigt__p_iMeshWrapper[] = {{"_p_iMeshWrapper", 0, "iMeshWrapper *", 0},{"_p_iMeshWrapper"},{0}};
static swig_type_info _swigt__p_iTextureWrapper[] = {{"_p_iTextureWrapper", 0, "iTextureWrapper *", 0},{"_p_iTextureWrapper"},{0}};
static swig_type_info _swigt__p_p_iTextureWrapper[] = {{"_p_p_iTextureWrapper", 0, "iTextureWrapper **", 0},{"_p_p_iTextureWrapper"},{0}};
static swig_type_info _swigt__p_iMaterialWrapper[] = {{"_p_iMaterialWrapper", 0, "iMaterialWrapper *", 0},{"_p_iMaterialWrapper"},{0}};
static swig_type_info _swigt__p_iMeshFactoryWrapper[] = {{"_p_iMeshFactoryWrapper", 0, "iMeshFactoryWrapper *", 0},{"_p_iMeshFactoryWrapper"},{0}};
static swig_type_info _swigt__p_iSequenceWrapper[] = {{"_p_iSequenceWrapper", 0, "iSequenceWrapper *", 0},{"_p_iSequenceWrapper"},{0}};
static swig_type_info _swigt__p_csColliderWrapper[] = {{"_p_csColliderWrapper", 0, "csColliderWrapper *", 0},{"_p_csColliderWrapper"},{0}};
static swig_type_info _swigt__p__csPyEventHandler[] = {{"_p__csPyEventHandler", 0, "_csPyEventHandler *", 0},{"_p__csPyEventHandler"},{0}};
static swig_type_info _swigt__p_iNovaHalo[] = {{"_p_iNovaHalo", 0, "iNovaHalo *", 0},{"_p_iNovaHalo"},{0}};
static swig_type_info _swigt__p_iRenderView[] = {{"_p_iRenderView", 0, "iRenderView *", 0},{"_p_iRenderView"},{0}};
static swig_type_info _swigt__p_csEventKeyData[] = {{"_p_csEventKeyData", 0, "csEventKeyData *", 0},{"_p_csEventKeyData"},{0}};
static swig_type_info _swigt__p_iLoaderStatus[] = {{"_p_iLoaderStatus", 0, "iLoaderStatus *", 0},{"_p_iLoaderStatus"},{0}};
static swig_type_info _swigt__p_csVertexStatus[] = {{"_p_csVertexStatus", 0, "csVertexStatus *", 0},{"_p_csVertexStatus"},{0}};
static swig_type_info _swigt__p_iCelBehaviour[] = {{"_p_iCelBehaviour", 0, "iCelBehaviour *", 0},{"_p_iCelBehaviour"},{0}};
static swig_type_info _swigt__p_iMeshList[] = {{"_p_iMeshList", 0, "iMeshList *", 0},{"_p_iMeshList"},{0}};
static swig_type_info _swigt__p_iConsoleWatcher[] = {{"_p_iConsoleWatcher", 0, "iConsoleWatcher *", 0},{"_p_iConsoleWatcher"},{0}};
static swig_type_info _swigt__p_iBase[] = {{"_p_iBase", 0, "iBase *", 0},{"_p_iConsoleOutput", _p_iConsoleOutputTo_p_iBase},{"_p_iClipper2D", _p_iClipper2DTo_p_iBase},{"_p_iDebugHelper", _p_iDebugHelperTo_p_iBase},{"_p_csGeomDebugHelper", _p_csGeomDebugHelperTo_p_iBase},{"_p_iDocumentAttribute", _p_iDocumentAttributeTo_p_iBase},{"_p_iMaterialEngine", _p_iMaterialEngineTo_p_iBase},{"_p_iImageIO", _p_iImageIOTo_p_iBase},{"_p_iNetworkConnection", _p_iNetworkConnectionTo_p_iBase},{"_p_iSCF", _p_iSCFTo_p_iBase},{"_p_iLoaderStatus", _p_iLoaderStatusTo_p_iBase},{"_p_iPcCharacteristics", _p_iPcCharacteristicsTo_p_iBase},{"_p_iTextureHandle", _p_iTextureHandleTo_p_iBase},{"_p_iDynamics", _p_iDynamicsTo_p_iBase},{"_p_iParameterESM", _p_iParameterESMTo_p_iBase},{"_p_iModelConverter", _p_iModelConverterTo_p_iBase},{"_p_iPolygonBuffer", _p_iPolygonBufferTo_p_iBase},{"_p_iVertexBuffer", _p_iVertexBufferTo_p_iBase},{"_p_iPcCommandInput", _p_iPcCommandInputTo_p_iBase},{"_p_iMeshList", _p_iMeshListTo_p_iBase},{"_p_iEventPlug", _p_iEventPlugTo_p_iBase},{"_p_iCelPropertyClass", _p_iCelPropertyClassTo_p_iBase},{"_p_iSequenceWrapper", _p_iSequenceWrapperTo_p_iBase},{"_p_iMeshWrapper", _p_iMeshWrapperTo_p_iBase},{"_p_iMaterialWrapper", _p_iMaterialWrapperTo_p_iBase},{"_p_iTextureWrapper", _p_iTextureWrapperTo_p_iBase},{"_p_iMeshFactoryWrapper", _p_iMeshFactoryWrapperTo_p_iBase},{"_p_iSoundWrapper", _p_iSoundWrapperTo_p_iBase},{"_p_csColliderWrapper", _p_csColliderWrapperTo_p_iBase},{"_p_iString", _p_iStringTo_p_iBase},{"_p_iConsoleWatcher", _p_iConsoleWatcherTo_p_iBase},{"_p_iPcInventory", _p_iPcInventoryTo_p_iBase},{"_p_iEngine", _p_iEngineTo_p_iBase},{"_p_iMaterial", _p_iMaterialTo_p_iBase},{"_p_iNetworkSocket2", _p_iNetworkSocket2To_p_iBase},{"_p_iSprite2DUVAnimation", _p_iSprite2DUVAnimationTo_p_iBase},{"_p_iPolygonMesh", _p_iPolygonMeshTo_p_iBase},{"_p_iSprite2DFactoryState", _p_iSprite2DFactoryStateTo_p_iBase},{"_p_iSprite3DFactoryState", _p_iSprite3DFactoryStateTo_p_iBase},{"_p_iThingFactoryState", _p_iThingFactoryStateTo_p_iBase},{"_p_iGraphics2D", _p_iGraphics2DTo_p_iBase},{"_p_iDocument", _p_iDocumentTo_p_iBase},{"_p_iStatLight", _p_iStatLightTo_p_iBase},{"_p_iCelEntityList", _p_iCelEntityListTo_p_iBase},{"_p_iDataBuffer", _p_iDataBufferTo_p_iBase},{"_p_iMeshObject", _p_iMeshObjectTo_p_iBase},{"_p_iSequenceTimedOperation", _p_iSequenceTimedOperationTo_p_iBase},{"_p_iHalo", _p_iHaloTo_p_iBase},{"_p_iVertexBufferManagerClient", _p_iVertexBufferManagerClientTo_p_iBase},{"_p_iFontServer", _p_iFontServerTo_p_iBase},{"_p_iReporter", _p_iReporterTo_p_iBase},{"_p_iReporterIterator", _p_iReporterIteratorTo_p_iBase},{"_p_iStreamIterator", _p_iStreamIteratorTo_p_iBase},{"_p_iDocumentNodeIterator", _p_iDocumentNodeIteratorTo_p_iBase},{"_p_iDocumentAttributeIterator", _p_iDocumentAttributeIteratorTo_p_iBase},{"_p_iConfigIterator", _p_iConfigIteratorTo_p_iBase},{"_p_iPluginIterator", _p_iPluginIteratorTo_p_iBase},{"_p_iObjectRegistryIterator", _p_iObjectRegistryIteratorTo_p_iBase},{"_p_iObjectIterator", _p_iObjectIteratorTo_p_iBase},{"_p_iSectorIterator", _p_iSectorIteratorTo_p_iBase},{"_p_iLightIterator", _p_iLightIteratorTo_p_iBase},{"_p_iMeshWrapperIterator", _p_iMeshWrapperIteratorTo_p_iBase},{"_p_iVisibilityObjectIterator", _p_iVisibilityObjectIteratorTo_p_iBase},{"_p_iObjectRegistry", _p_iObjectRegistryTo_p_iBase},{"_p_iCelPlLayer", _p_iCelPlLayerTo_p_iBase},{"_p_iCelBlLayer", _p_iCelBlLayerTo_p_iBase},{"_p_iPcLinearMovement", _p_iPcLinearMovementTo_p_iBase},{"_p_iNetworkListener", _p_iNetworkListenerTo_p_iBase},{"_p_iStandardReporterListener", _p_iStandardReporterListenerTo_p_iBase},{"_p_iReporterListener", _p_iReporterListenerTo_p_iBase},{"_p_iObjectModelListener", _p_iObjectModelListenerTo_p_iBase},{"_p_iMovableListener", _p_iMovableListenerTo_p_iBase},{"_p_csTinyDocumentSystem", _p_csTinyDocumentSystemTo_p_iBase},{"_p_iDocumentSystem", _p_iDocumentSystemTo_p_iBase},{"_p_iPcTimer", _p_iPcTimerTo_p_iBase},{"_p_iSprite2DUVAnimationFrame", _p_iSprite2DUVAnimationFrameTo_p_iBase},{"_p_iSector", _p_iSectorTo_p_iBase},{"_p_iSequenceTrigger", _p_iSequenceTriggerTo_p_iBase},{"_p_iPcGravity", _p_iPcGravityTo_p_iBase},{"_p_iCameraPositionList", _p_iCameraPositionListTo_p_iBase},{"_p_iSpriteAction", _p_iSpriteActionTo_p_iBase},{"_p_iBase"},{"_p_iLightList", _p_iLightListTo_p_iBase},{"_p_iPolygon3D", _p_iPolygon3DTo_p_iBase},{"_p_iFile", _p_iFileTo_p_iBase},{"_p_iDynamicsCollisionCallback", _p_iDynamicsCollisionCallbackTo_p_iBase},{"_p_iDynamicsMoveCallback", _p_iDynamicsMoveCallbackTo_p_iBase},{"_p_iOffscreenCanvasCallback", _p_iOffscreenCanvasCallbackTo_p_iBase},{"_p_iMeshDrawCallback", _p_iMeshDrawCallbackTo_p_iBase},{"_p_iTextureCallback", _p_iTextureCallbackTo_p_iBase},{"_p_iSectorCallback", _p_iSectorCallbackTo_p_iBase},{"_p_iLightCallback", _p_iLightCallbackTo_p_iBase},{"_p_iMeshObjectDrawCallback", _p_iMeshObjectDrawCallbackTo_p_iBase},{"_p_iDataObject", _p_iDataObjectTo_p_iBase},{"_p_iObject", _p_iObjectTo_p_iBase},{"_p_iVisibilityObject", _p_iVisibilityObjectTo_p_iBase},{"_p_csObject", _p_csObjectTo_p_iBase},{"_p_iCamera", _p_iCameraTo_p_iBase},{"_p_iPcCamera", _p_iPcCameraTo_p_iBase},{"_p_iMeshFactoryList", _p_iMeshFactoryListTo_p_iBase},{"_p_iGraphics3D", _p_iGraphics3DTo_p_iBase},{"_p_iVirtualClock", _p_iVirtualClockTo_p_iBase},{"_p_iMeshObjectType", _p_iMeshObjectTypeTo_p_iBase},{"_p_iSprite2DState", _p_iSprite2DStateTo_p_iBase},{"_p_iThingEnvironment", _p_iThingEnvironmentTo_p_iBase},{"_p_iMovable", _p_iMovableTo_p_iBase},{"_p_iPcMovable", _p_iPcMovableTo_p_iBase},{"_p_iStrVector", _p_iStrVectorTo_p_iBase},{"_p_iSectorList", _p_iSectorListTo_p_iBase},{"_p_iDynamicSystem", _p_iDynamicSystemTo_p_iBase},{"_p_iCollideSystem", _p_iCollideSystemTo_p_iBase},{"_p_iLightingProcessData", _p_iLightingProcessDataTo_p_iBase},{"_p_iCameraPosition", _p_iCameraPositionTo_p_iBase},{"_p_iLoaderPlugin", _p_iLoaderPluginTo_p_iBase},{"_p_iBinaryLoaderPlugin", _p_iBinaryLoaderPluginTo_p_iBase},{"_p_iAudioStream", _p_iAudioStreamTo_p_iBase},{"_p_iVideoStream", _p_iVideoStreamTo_p_iBase},{"_p_iStream", _p_iStreamTo_p_iBase},{"_p_iVisibilityCuller", _p_iVisibilityCullerTo_p_iBase},{"_p_iConfigFile", _p_iConfigFileTo_p_iBase},{"_p_iEventQueue", _p_iEventQueueTo_p_iBase},{"_p_iVFS", _p_iVFSTo_p_iBase},{"_p_iPolygonTexture", _p_iPolygonTextureTo_p_iBase},{"_p_iRigidBody", _p_iRigidBodyTo_p_iBase},{"_p_iSoundSource", _p_iSoundSourceTo_p_iBase},{"_p_iFont", _p_iFontTo_p_iBase},{"_p_iEventOutlet", _p_iEventOutletTo_p_iBase},{"_p_iStreamFormat", _p_iStreamFormatTo_p_iBase},{"_p_iDocumentNode", _p_iDocumentNodeTo_p_iBase},{"_p_iKeyboardDriver", _p_iKeyboardDriverTo_p_iBase},{"_p_iSoundDriver", _p_iSoundDriverTo_p_iBase},{"_p_iSprite3DState", _p_iSprite3DStateTo_p_iBase},{"_p_iBodyGroup", _p_iBodyGroupTo_p_iBase},{"_p_iPolygon3DStatic", _p_iPolygon3DStaticTo_p_iBase},{"_p_iCelBehaviour", _p_iCelBehaviourTo_p_iBase},{"_p_iFrustumView", _p_iFrustumViewTo_p_iBase},{"_p_iNetworkPacket2", _p_iNetworkPacket2To_p_iBase},{"_p_iEventHandler", _p_iEventHandlerTo_p_iBase},{"_p__csPyEventHandler", _p__csPyEventHandlerTo_p_iBase},{"_p_iSoundLoader", _p_iSoundLoaderTo_p_iBase},{"_p_iEngineSequenceParameters", _p_iEngineSequenceParametersTo_p_iBase},{"_p_iView", _p_iViewTo_p_iBase},{"_p_iSoundRender", _p_iSoundRenderTo_p_iBase},{"_p_iNetworkEndPoint", _p_iNetworkEndPointTo_p_iBase},{"_p_iMaterialList", _p_iMaterialListTo_p_iBase},{"_p_iJoint", _p_iJointTo_p_iBase},{"_p_iLightingProcessInfo", _p_iLightingProcessInfoTo_p_iBase},{"_p_iSpriteSocket", _p_iSpriteSocketTo_p_iBase},{"_p_iLight", _p_iLightTo_p_iBase},{"_p_iComponent", _p_iComponentTo_p_iBase},{"_p_iNetworkPacket", _p_iNetworkPacketTo_p_iBase},{"_p_iCelEntity", _p_iCelEntityTo_p_iBase},{"_p_iJoystickDriver", _p_iJoystickDriverTo_p_iBase},{"_p_iMouseDriver", _p_iMouseDriverTo_p_iBase},{"_p_iNetworkDriver", _p_iNetworkDriverTo_p_iBase},{"_p_iFactory", _p_iFactoryTo_p_iBase},{"_p_iMeshObjectFactory", _p_iMeshObjectFactoryTo_p_iBase},{"_p_iLoader", _p_iLoaderTo_p_iBase},{"_p_iFrustumViewUserdata", _p_iFrustumViewUserdataTo_p_iBase},{"_p_iTextureList", _p_iTextureListTo_p_iBase},{"_p_iNativeWindow", _p_iNativeWindowTo_p_iBase},{"_p_iSpriteFrame", _p_iSpriteFrameTo_p_iBase},{"_p_iFontDeleteNotify", _p_iFontDeleteNotifyTo_p_iBase},{"_p_iThingState", _p_iThingStateTo_p_iBase},{"_p_iEvent", _p_iEventTo_p_iBase},{"_p_iImage", _p_iImageTo_p_iBase},{"_p_iCollider", _p_iColliderTo_p_iBase},{"_p_iPcMeshSelect", _p_iPcMeshSelectTo_p_iBase},{"_p_iMaterialHandle", _p_iMaterialHandleTo_p_iBase},{"_p_iSoundHandle", _p_iSoundHandleTo_p_iBase},{"_p_iObjectModel", _p_iObjectModelTo_p_iBase},{"_p_csView", _p_csViewTo_p_iBase},{"_p_iCelPropertyClassList", _p_iCelPropertyClassListTo_p_iBase},{"_p_iPcRegion", _p_iPcRegionTo_p_iBase},{"_p_iConfigManager", _p_iConfigManagerTo_p_iBase},{"_p_iNetworkManager", _p_iNetworkManagerTo_p_iBase},{"_p_iEngineSequenceManager", _p_iEngineSequenceManagerTo_p_iBase},{"_p_iNativeWindowManager", _p_iNativeWindowManagerTo_p_iBase},{"_p_iVertexBufferManager", _p_iVertexBufferManagerTo_p_iBase},{"_p_iTextureManager", _p_iTextureManagerTo_p_iBase},{"_p_iPluginManager", _p_iPluginManagerTo_p_iBase},{"_p_iCacheManager", _p_iCacheManagerTo_p_iBase},{"_p_iPcSolid", _p_iPcSolidTo_p_iBase},{"_p_iSaver", _p_iSaverTo_p_iBase},{"_p_iLightMap", _p_iLightMapTo_p_iBase},{"_p_iPcMesh", _p_iPcMeshTo_p_iBase},{"_p_iEventCord", _p_iEventCordTo_p_iBase},{0}};
static swig_type_info _swigt__p_iFontServer[] = {{"_p_iFontServer", 0, "iFontServer *", 0},{"_p_iFontServer"},{0}};
static swig_type_info _swigt__p_G3DPolygonDPFX[] = {{"_p_G3DPolygonDPFX", 0, "G3DPolygonDPFX *", 0},{"_p_G3DPolygonDPFX"},{0}};
static swig_type_info _swigt__p_csPtrTiDynLight_t[] = {{"_p_csPtrTiDynLight_t", 0, "csPtr<iDynLight > *", 0},{"_p_csPtrTiDynLight_t"},{0}};
static swig_type_info _swigt__p_iPcLinearMovement[] = {{"_p_iPcLinearMovement", 0, "iPcLinearMovement *", 0},{"_p_iPcLinearMovement"},{0}};
static swig_type_info _swigt__p_csPtrTiSequenceTrigger_t[] = {{"_p_csPtrTiSequenceTrigger_t", 0, "csPtr<iSequenceTrigger > *", 0},{"_p_csPtrTiSequenceTrigger_t"},{0}};
static swig_type_info _swigt__scfFactoryFunc[] = {{"_scfFactoryFunc", 0, "scfFactoryFunc", 0},{"_scfFactoryFunc"},{0}};
static swig_type_info _swigt__p_csPixelFormat[] = {{"_p_csPixelFormat", 0, "csPixelFormat *", 0},{"_p_csPixelFormat"},{0}};
static swig_type_info _swigt__p_csModelConverterFormat[] = {{"_p_csModelConverterFormat", 0, "csModelConverterFormat *", 0},{"_p_csModelConverterFormat"},{0}};
static swig_type_info _swigt__p_csCollisionPair[] = {{"_p_csCollisionPair", 0, "csCollisionPair *", 0},{"_p_csCollisionPair"},{0}};
static swig_type_info _swigt__p_csView[] = {{"_p_csView", 0, "csView *", 0},{"_p_csView"},{0}};
static swig_type_info _swigt__p_iStreamFormat[] = {{"_p_iStreamFormat", 0, "iStreamFormat *", 0},{"_p_iStreamFormat"},{0}};
static swig_type_info _swigt__p_iVisibilityCuller[] = {{"_p_iVisibilityCuller", 0, "iVisibilityCuller *", 0},{"_p_iVisibilityCuller"},{0}};
static swig_type_info _swigt__p_uint16[] = {{"_p_uint16", 0, "uint16 &", 0},{"_p_uint16"},{0}};
static swig_type_info _swigt__p_iFile[] = {{"_p_iFile", 0, "iFile *", 0},{"_p_iFile"},{0}};
static swig_type_info _swigt__p_csNetworkDriverCapabilities[] = {{"_p_csNetworkDriverCapabilities", 0, "csNetworkDriverCapabilities *", 0},{"_p_csNetworkDriverCapabilities"},{0}};
static swig_type_info _swigt__p_csPtrTiEngineSequenceParameters_t[] = {{"_p_csPtrTiEngineSequenceParameters_t", 0, "csPtr<iEngineSequenceParameters > *", 0},{"_p_csPtrTiEngineSequenceParameters_t"},{0}};
static swig_type_info _swigt__p_iSoundLoader[] = {{"_p_iSoundLoader", 0, "iSoundLoader *", 0},{"_p_iSoundLoader"},{0}};
static swig_type_info _swigt__p_iLoader[] = {{"_p_iLoader", 0, "iLoader *", 0},{"_p_iLoader"},{0}};
static swig_type_info _swigt__p_iSpriteSocket[] = {{"_p_iSpriteSocket", 0, "iSpriteSocket *", 0},{"_p_iSpriteSocket"},{0}};
static swig_type_info _swigt__p_iPcInventory[] = {{"_p_iPcInventory", 0, "iPcInventory *", 0},{"_p_iPcInventory"},{0}};
static swig_type_info _swigt__p_csTextureLayer[] = {{"_p_csTextureLayer", 0, "csTextureLayer *", 0},{"_p_csTextureLayer"},{0}};
static swig_type_info _swigt__p_iDocumentAttribute[] = {{"_p_iDocumentAttribute", 0, "iDocumentAttribute *", 0},{"_p_iDocumentAttribute"},{0}};
static swig_type_info _swigt__p_iSpriteFrame[] = {{"_p_iSpriteFrame", 0, "iSpriteFrame *", 0},{"_p_iSpriteFrame"},{0}};
static swig_type_info _swigt__p_csEventNetworkData[] = {{"_p_csEventNetworkData", 0, "csEventNetworkData *", 0},{"_p_csEventNetworkData"},{0}};
static swig_type_info _swigt__p_iMaterialEngine[] = {{"_p_iMaterialEngine", 0, "iMaterialEngine *", 0},{"_p_iMaterialEngine"},{0}};
static swig_type_info _swigt__p_iVirtualClock[] = {{"_p_iVirtualClock", 0, "iVirtualClock *", 0},{"_p_iVirtualClock"},{0}};
static swig_type_info _swigt__p_iEngine[] = {{"_p_iEngine", 0, "iEngine *", 0},{"_p_iEngine"},{0}};
static swig_type_info _swigt__p_int16[] = {{"_p_int16", 0, "int16 &", 0},{"_p_int16"},{0}};
static swig_type_info _swigt__p_iNetworkEndPoint[] = {{"_p_iNetworkEndPoint", 0, "iNetworkEndPoint *", 0},{"_p_iNetworkEndPoint"},{"_p_iNetworkListener", _p_iNetworkListenerTo_p_iNetworkEndPoint},{"_p_iNetworkConnection", _p_iNetworkConnectionTo_p_iNetworkEndPoint},{0}};
static swig_type_info _swigt__p_iLightingProcessInfo[] = {{"_p_iLightingProcessInfo", 0, "iLightingProcessInfo *", 0},{"_p_iLightingProcessInfo"},{0}};
static swig_type_info _swigt__p_iPcCommandInput[] = {{"_p_iPcCommandInput", 0, "iPcCommandInput *", 0},{"_p_iPcCommandInput"},{0}};
static swig_type_info _swigt__p_csPtrTcsFrustum_t[] = {{"_p_csPtrTcsFrustum_t", 0, "csPtr<csFrustum > *", 0},{"_p_csPtrTcsFrustum_t"},{0}};
static swig_type_info _swigt__p_iReporter[] = {{"_p_iReporter", 0, "iReporter *", 0},{"_p_iReporter"},{0}};
static swig_type_info _swigt__p_csPtrTiLoaderContext_t[] = {{"_p_csPtrTiLoaderContext_t", 0, "csPtr<iLoaderContext > *", 0},{"_p_csPtrTiLoaderContext_t"},{0}};
static swig_type_info _swigt__p_csPtrTiShadowBlock_t[] = {{"_p_csPtrTiShadowBlock_t", 0, "csPtr<iShadowBlock > *", 0},{"_p_csPtrTiShadowBlock_t"},{0}};
static swig_type_info _swigt__p_iVertexBufferManagerClient[] = {{"_p_iVertexBufferManagerClient", 0, "iVertexBufferManagerClient *", 0},{"_p_iVertexBufferManagerClient"},{0}};
static swig_type_info _swigt__p_csEventCommandData[] = {{"_p_csEventCommandData", 0, "csEventCommandData *", 0},{"_p_csEventCommandData"},{0}};
static swig_type_info _swigt__p_iSoundData[] = {{"_p_iSoundData", 0, "iSoundData *", 0},{"_p_iSoundData"},{0}};
static swig_type_info _swigt__p_iCelPropertyClass[] = {{"_p_iCelPropertyClass", 0, "iCelPropertyClass *", 0},{"_p_iCelPropertyClass"},{0}};
static swig_type_info _swigt__p_iProgressMeter[] = {{"_p_iProgressMeter", 0, "iProgressMeter *", 0},{"_p_iProgressMeter"},{0}};
static swig_type_info _swigt__p_csString[] = {{"_p_csString", 0, "csString *", 0},{"_p_csString"},{0}};
static swig_type_info _swigt__p_iString[] = {{"_p_iString", 0, "iString *", 0},{"_p_iString"},{0}};
static swig_type_info _swigt__p_iPcCharacteristics[] = {{"_p_iPcCharacteristics", 0, "iPcCharacteristics *", 0},{"_p_iPcCharacteristics"},{0}};
static swig_type_info _swigt__p_iKeyboardDriver[] = {{"_p_iKeyboardDriver", 0, "iKeyboardDriver *", 0},{"_p_iKeyboardDriver"},{0}};
static swig_type_info _swigt__p_iSoundDriver[] = {{"_p_iSoundDriver", 0, "iSoundDriver *", 0},{"_p_iSoundDriver"},{0}};
static swig_type_info _swigt__p_iShadowBlockList[] = {{"_p_iShadowBlockList", 0, "iShadowBlockList *", 0},{"_p_iShadowBlockList"},{0}};
static swig_type_info _swigt__p_iJoystickDriver[] = {{"_p_iJoystickDriver", 0, "iJoystickDriver *", 0},{"_p_iJoystickDriver"},{0}};
static swig_type_info _swigt__p_iMouseDriver[] = {{"_p_iMouseDriver", 0, "iMouseDriver *", 0},{"_p_iMouseDriver"},{0}};
static swig_type_info _swigt__p_iNetworkDriver[] = {{"_p_iNetworkDriver", 0, "iNetworkDriver *", 0},{"_p_iNetworkDriver"},{0}};
static swig_type_info _swigt__p_iSCF[] = {{"_p_iSCF", 0, "iSCF *", 0},{"_p_iSCF"},{0}};
static swig_type_info _swigt__p_double[] = {{"_p_double", 0, "double *", 0},{"_p_double"},{0}};
static swig_type_info _swigt__p_bool[] = {{"_p_bool", 0, "bool *", 0},{"_p_bool"},{0}};
static swig_type_info _swigt__p_char[] = {{"_p_char", 0, "char *", 0},{"_p_char"},{0}};
static swig_type_info _swigt__p_p_char[] = {{"_p_p_char", 0, "char **", 0},{"_p_p_char"},{0}};
static swig_type_info _swigt__p_iModelData[] = {{"_p_iModelData", 0, "iModelData *", 0},{"_p_iModelData"},{0}};
static swig_type_info _swigt__p_csPtrTiVertexBuffer_t[] = {{"_p_csPtrTiVertexBuffer_t", 0, "csPtr<iVertexBuffer > *", 0},{"_p_csPtrTiVertexBuffer_t"},{0}};
static swig_type_info _swigt__p_iSequenceTimedOperation[] = {{"_p_iSequenceTimedOperation", 0, "iSequenceTimedOperation *", 0},{"_p_iSequenceTimedOperation"},{0}};
static swig_type_info _swigt__p_G3DPolygonDP[] = {{"_p_G3DPolygonDP", 0, "G3DPolygonDP *", 0},{"_p_G3DPolygonDP"},{0}};
static swig_type_info _swigt__p_iJoint[] = {{"_p_iJoint", 0, "iJoint *", 0},{"_p_iJoint"},{0}};
static swig_type_info _swigt__p_iLightingProcessData[] = {{"_p_iLightingProcessData", 0, "iLightingProcessData *", 0},{"_p_iLightingProcessData"},{0}};
static swig_type_info _swigt__p_uint32[] = {{"_p_uint32", 0, "uint32 *", 0},{"_p_uint32"},{0}};
static swig_type_info _swigt__p_iEngineSequenceParameters[] = {{"_p_iEngineSequenceParameters", 0, "iEngineSequenceParameters *", 0},{"_p_iEngineSequenceParameters"},{0}};
static swig_type_info _swigt__p_G3DTexturePlane[] = {{"_p_G3DTexturePlane", 0, "G3DTexturePlane *", 0},{"_p_G3DTexturePlane"},{0}};
static swig_type_info _swigt__p_iBodyGroup[] = {{"_p_iBodyGroup", 0, "iBodyGroup *", 0},{"_p_iBodyGroup"},{0}};
static swig_type_info _swigt__p_csMeshedPolygon[] = {{"_p_csMeshedPolygon", 0, "csMeshedPolygon *", 0},{"_p_csMeshedPolygon"},{0}};
static swig_type_info _swigt__p_iCelEntityList[] = {{"_p_iCelEntityList", 0, "iCelEntityList *", 0},{"_p_iCelEntityList"},{0}};
static swig_type_info _swigt__p_iSprite2DUVAnimationFrame[] = {{"_p_iSprite2DUVAnimationFrame", 0, "iSprite2DUVAnimationFrame *", 0},{"_p_iSprite2DUVAnimationFrame"},{0}};
static swig_type_info _swigt__p_iCollection[] = {{"_p_iCollection", 0, "iCollection *", 0},{"_p_iCollection"},{0}};
static swig_type_info _swigt__p_iNetworkConnection[] = {{"_p_iNetworkConnection", 0, "iNetworkConnection *", 0},{"_p_iNetworkConnection"},{0}};
static swig_type_info _swigt__p_iPcMeshSelect[] = {{"_p_iPcMeshSelect", 0, "iPcMeshSelect *", 0},{"_p_iPcMeshSelect"},{0}};
static swig_type_info _swigt__p_iStatLight[] = {{"_p_iStatLight", 0, "iStatLight *", 0},{"_p_iStatLight"},{0}};
static swig_type_info _swigt__p_csStatLight[] = {{"_p_csStatLight", 0, "csStatLight *", 0},{"_p_csStatLight"},{0}};
static swig_type_info _swigt__p_csPtrTiSoundData_t[] = {{"_p_csPtrTiSoundData_t", 0, "csPtr<iSoundData > *", 0},{"_p_csPtrTiSoundData_t"},{0}};
static swig_type_info _swigt__p_csPtrTiModelData_t[] = {{"_p_csPtrTiModelData_t", 0, "csPtr<iModelData > *", 0},{"_p_csPtrTiModelData_t"},{0}};
static swig_type_info _swigt__p_csFlags[] = {{"_p_csFlags", 0, "csFlags *", 0},{"_p_csFlags"},{0}};
static swig_type_info _swigt__p_csLightMapMapping[] = {{"_p_csLightMapMapping", 0, "csLightMapMapping *", 0},{"_p_csLightMapMapping"},{0}};
static swig_type_info _swigt__p_csPtrTiLightingProcessData_t[] = {{"_p_csPtrTiLightingProcessData_t", 0, "csPtr<iLightingProcessData > *", 0},{"_p_csPtrTiLightingProcessData_t"},{0}};
static swig_type_info _swigt__p_iDocument[] = {{"_p_iDocument", 0, "iDocument *", 0},{"_p_iDocument"},{0}};
static swig_type_info _swigt__p_iNetworkSocket2[] = {{"_p_iNetworkSocket2", 0, "iNetworkSocket2 *", 0},{"_p_iNetworkSocket2"},{0}};
static swig_type_info _swigt__p_csIntersect2[] = {{"_p_csIntersect2", 0, "csIntersect2 *", 0},{"_p_csIntersect2"},{0}};
static swig_type_info _swigt__p_csIntersect3[] = {{"_p_csIntersect3", 0, "csIntersect3 *", 0},{"_p_csIntersect3"},{0}};
static swig_type_info _swigt__p_csFileTime[] = {{"_p_csFileTime", 0, "csFileTime *", 0},{"_p_csFileTime"},{0}};
static swig_type_info _swigt__p_iMaterialList[] = {{"_p_iMaterialList", 0, "iMaterialList *", 0},{"_p_iMaterialList"},{0}};
static swig_type_info _swigt__p_p_iLight[] = {{"_p_p_iLight", 0, "iLight **", 0},{"_p_p_iLight"},{0}};
static swig_type_info _swigt__p_iLight[] = {{"_p_iLight", 0, "iLight *", 0},{"_p_iLight"},{0}};
static swig_type_info _swigt__p_csBox2[] = {{"_p_csBox2", 0, "csBox2 *", 0},{"_p_csBox2"},{0}};
static swig_type_info _swigt__p_csMath2[] = {{"_p_csMath2", 0, "csMath2 *", 0},{"_p_csMath2"},{0}};
static swig_type_info _swigt__p_csBox3[] = {{"_p_csBox3", 0, "csBox3 *", 0},{"_p_csBox3"},{0}};
static swig_type_info _swigt__p_csMath3[] = {{"_p_csMath3", 0, "csMath3 *", 0},{"_p_csMath3"},{0}};
static swig_type_info _swigt__p_iMaterial[] = {{"_p_iMaterial", 0, "iMaterial *", 0},{"_p_iMaterial"},{0}};
static swig_type_info _swigt__p_int32[] = {{"_p_int32", 0, "int32 &", 0},{"_p_int32"},{"_p_int"},{0}};
static swig_type_info _swigt__p_iConfigFile[] = {{"_p_iConfigFile", 0, "iConfigFile *", 0},{"_p_iConfigManager", _p_iConfigManagerTo_p_iConfigFile},{"_p_iConfigFile"},{0}};
static swig_type_info _swigt__p_csPtrTiReporterIterator_t[] = {{"_p_csPtrTiReporterIterator_t", 0, "csPtr<iReporterIterator > *", 0},{"_p_csPtrTiReporterIterator_t"},{0}};
static swig_type_info _swigt__p_csRefTiDocumentAttributeIterator_t[] = {{"_p_csRefTiDocumentAttributeIterator_t", 0, "csRef<iDocumentAttributeIterator > *", 0},{"_p_csRefTiDocumentAttributeIterator_t"},{0}};
static swig_type_info _swigt__p_csRefTiDocumentNodeIterator_t[] = {{"_p_csRefTiDocumentNodeIterator_t", 0, "csRef<iDocumentNodeIterator > *", 0},{"_p_csRefTiDocumentNodeIterator_t"},{0}};
static swig_type_info _swigt__p_csPtrTiPluginIterator_t[] = {{"_p_csPtrTiPluginIterator_t", 0, "csPtr<iPluginIterator > *", 0},{"_p_csPtrTiPluginIterator_t"},{0}};
static swig_type_info _swigt__p_csPtrTiObjectRegistryIterator_t[] = {{"_p_csPtrTiObjectRegistryIterator_t", 0, "csPtr<iObjectRegistryIterator > *", 0},{"_p_csPtrTiObjectRegistryIterator_t"},{0}};
static swig_type_info _swigt__p_csPtrTiVisibilityObjectIterator_t[] = {{"_p_csPtrTiVisibilityObjectIterator_t", 0, "csPtr<iVisibilityObjectIterator > *", 0},{"_p_csPtrTiVisibilityObjectIterator_t"},{0}};
static swig_type_info _swigt__p_csPtrTiMeshWrapperIterator_t[] = {{"_p_csPtrTiMeshWrapperIterator_t", 0, "csPtr<iMeshWrapperIterator > *", 0},{"_p_csPtrTiMeshWrapperIterator_t"},{0}};
static swig_type_info _swigt__p_csPtrTiObjectIterator_t[] = {{"_p_csPtrTiObjectIterator_t", 0, "csPtr<iObjectIterator > *", 0},{"_p_csPtrTiObjectIterator_t"},{0}};
static swig_type_info _swigt__p_csPtrTiSectorIterator_t[] = {{"_p_csPtrTiSectorIterator_t", 0, "csPtr<iSectorIterator > *", 0},{"_p_csPtrTiSectorIterator_t"},{0}};
static swig_type_info _swigt__p_csPtrTiLightIterator_t[] = {{"_p_csPtrTiLightIterator_t", 0, "csPtr<iLightIterator > *", 0},{"_p_csPtrTiLightIterator_t"},{0}};
static swig_type_info _swigt__p__2_basetype[] = {{"_p__2_basetype", 0, "$2_basetype *", 0},{"_p__2_basetype"},{0}};
static swig_type_info _swigt__p__1_basetype[] = {{"_p__1_basetype", 0, "$1_basetype *", 0},{"_p__1_basetype"},{0}};
static swig_type_info _swigt__p_basetype[] = {{"_p_basetype", 0, "basetype *", 0},{"_p_basetype"},{0}};
static swig_type_info _swigt__p_p_iEvent[] = {{"_p_p_iEvent", 0, "iEvent **", 0},{"_p_p_iEvent"},{0}};
static swig_type_info _swigt__p_iEvent[] = {{"_p_iEvent", 0, "iEvent *", 0},{"_p_iEvent"},{0}};
static swig_type_info _swigt__p_csPtrTiObjectWatcher_t[] = {{"_p_csPtrTiObjectWatcher_t", 0, "csPtr<iObjectWatcher > *", 0},{"_p_csPtrTiObjectWatcher_t"},{0}};
static swig_type_info _swigt__p_iThingState[] = {{"_p_iThingState", 0, "iThingState *", 0},{"_p_iThingState"},{0}};
static swig_type_info _swigt__p_csPtrTiSequenceWrapper_t[] = {{"_p_csPtrTiSequenceWrapper_t", 0, "csPtr<iSequenceWrapper > *", 0},{"_p_csPtrTiSequenceWrapper_t"},{0}};
static swig_type_info _swigt__p_iHalo[] = {{"_p_iHalo", 0, "iHalo *", 0},{"_p_iHalo"},{0}};
static swig_type_info _swigt__p_p_iCollider[] = {{"_p_p_iCollider", 0, "iCollider **", 0},{"_p_p_iCollider"},{0}};
static swig_type_info _swigt__p_iCollider[] = {{"_p_iCollider", 0, "iCollider *", 0},{"_p_iCollider"},{0}};
static swig_type_info _swigt__p_iPcMesh[] = {{"_p_iPcMesh", 0, "iPcMesh *", 0},{"_p_iPcMesh"},{0}};
static swig_type_info _swigt__p_csColor[] = {{"_p_csColor", 0, "csColor *", 0},{"_p_csColor"},{0}};
static swig_type_info _swigt__p_iPcTimer[] = {{"_p_iPcTimer", 0, "iPcTimer *", 0},{"_p_iPcTimer"},{0}};
static swig_type_info _swigt__p_unsigned_char[] = {{"_p_unsigned_char", 0, "unsigned char *", 0},{"_p_unsigned_char"},{"_p_uint8"},{0}};
static swig_type_info _swigt__p_csLight[] = {{"_p_csLight", 0, "csLight *", 0},{"_p_csLight"},{0}};
static swig_type_info _swigt__p_iDocumentNode[] = {{"_p_iDocumentNode", 0, "iDocumentNode *", 0},{"_p_iDocumentNode"},{0}};
static swig_type_info _swigt__p_iSequenceTrigger[] = {{"_p_iSequenceTrigger", 0, "iSequenceTrigger *", 0},{"_p_iSequenceTrigger"},{0}};
static swig_type_info _swigt__p_iGraphics2D[] = {{"_p_iGraphics2D", 0, "iGraphics2D *", 0},{"_p_iGraphics2D"},{0}};
static swig_type_info _swigt__p_iCameraPosition[] = {{"_p_iCameraPosition", 0, "iCameraPosition *", 0},{"_p_iCameraPosition"},{0}};
static swig_type_info _swigt__p_G3DPolygonMesh[] = {{"_p_G3DPolygonMesh", 0, "G3DPolygonMesh *", 0},{"_p_G3DPolygonMesh"},{0}};
static swig_type_info _swigt__p_iPolygonMesh[] = {{"_p_iPolygonMesh", 0, "iPolygonMesh *", 0},{"_p_iPolygonMesh"},{0}};
static swig_type_info _swigt__p_iTextureList[] = {{"_p_iTextureList", 0, "iTextureList *", 0},{"_p_iTextureList"},{0}};
static swig_type_info _swigt__p_iPcMovableConstraint[] = {{"_p_iPcMovableConstraint", 0, "iPcMovableConstraint *", 0},{"_p_iPcMovableConstraint"},{0}};
static swig_type_info _swigt__p_iView[] = {{"_p_iView", 0, "iView *", 0},{"_p_csView", _p_csViewTo_p_iView},{"_p_iView"},{0}};
static swig_type_info _swigt__p_csPtrTiLoaderStatus_t[] = {{"_p_csPtrTiLoaderStatus_t", 0, "csPtr<iLoaderStatus > *", 0},{"_p_csPtrTiLoaderStatus_t"},{0}};
static swig_type_info _swigt__p_csPtrTiRigidBody_t[] = {{"_p_csPtrTiRigidBody_t", 0, "csPtr<iRigidBody > *", 0},{"_p_csPtrTiRigidBody_t"},{0}};
static swig_type_info _swigt__p_csRefTiRigidBody_t[] = {{"_p_csRefTiRigidBody_t", 0, "csRef<iRigidBody > *", 0},{"_p_csRefTiRigidBody_t"},{0}};
static swig_type_info _swigt__p_csRefTiDocumentNode_t[] = {{"_p_csRefTiDocumentNode_t", 0, "csRef<iDocumentNode > *", 0},{"_p_csRefTiDocumentNode_t"},{0}};
static swig_type_info _swigt__p_iSectorList[] = {{"_p_iSectorList", 0, "iSectorList *", 0},{"_p_iSectorList"},{0}};
static swig_type_info _swigt__p_csWrapPtr[] = {{"_p_csWrapPtr", 0, "csWrapPtr *", 0},{"_p_csWrapPtr"},{0}};
static swig_type_info _swigt__p_iSoundHandle[] = {{"_p_iSoundHandle", 0, "iSoundHandle *", 0},{"_p_iSoundHandle"},{0}};
static swig_type_info _swigt__p_iMaterialHandle[] = {{"_p_iMaterialHandle", 0, "iMaterialHandle *", 0},{"_p_iMaterialHandle"},{0}};
static swig_type_info _swigt__p_iTextureHandle[] = {{"_p_iTextureHandle", 0, "iTextureHandle *", 0},{"_p_iTextureHandle"},{0}};
static swig_type_info _swigt__p_G3DPolygonDFP[] = {{"_p_G3DPolygonDFP", 0, "G3DPolygonDFP *", 0},{"_p_G3DPolygonDFP"},{"_p_G3DPolygonDP", _p_G3DPolygonDPTo_p_G3DPolygonDFP},{0}};
static swig_type_info _swigt__p_iCommandLineParser[] = {{"_p_iCommandLineParser", 0, "iCommandLineParser *", 0},{"_p_iCommandLineParser"},{0}};
static swig_type_info _swigt__p_iFontDeleteNotify[] = {{"_p_iFontDeleteNotify", 0, "iFontDeleteNotify *", 0},{"_p_iFontDeleteNotify"},{0}};
static swig_type_info _swigt__p_iCelPlLayer[] = {{"_p_iCelPlLayer", 0, "iCelPlLayer *", 0},{"_p_iCelPlLayer"},{0}};
static swig_type_info _swigt__p_iCelBlLayer[] = {{"_p_iCelBlLayer", 0, "iCelBlLayer *", 0},{"_p_iCelBlLayer"},{0}};
static swig_type_info _swigt__p_csInitializer[] = {{"_p_csInitializer", 0, "csInitializer *", 0},{"_p_csInitializer"},{0}};
static swig_type_info _swigt__p_int8[] = {{"_p_int8", 0, "int8 &", 0},{"_p_int8"},{0}};
static swig_type_info _swigt__p_iSoundSource[] = {{"_p_iSoundSource", 0, "iSoundSource *", 0},{"_p_iSoundSource"},{0}};
static swig_type_info _swigt__p_iMeshFactoryList[] = {{"_p_iMeshFactoryList", 0, "iMeshFactoryList *", 0},{"_p_iMeshFactoryList"},{0}};
static swig_type_info _swigt__p_csRefTiTextureHandle_t[] = {{"_p_csRefTiTextureHandle_t", 0, "csRef<iTextureHandle > *", 0},{"_p_csRefTiTextureHandle_t"},{0}};
static swig_type_info _swigt__p_csPtrTiMaterialHandle_t[] = {{"_p_csPtrTiMaterialHandle_t", 0, "csPtr<iMaterialHandle > *", 0},{"_p_csPtrTiMaterialHandle_t"},{0}};
static swig_type_info _swigt__p_iSoundRender[] = {{"_p_iSoundRender", 0, "iSoundRender *", 0},{"_p_iSoundRender"},{0}};
static swig_type_info _swigt__p_size_t[] = {{"_p_size_t", 0, "size_t *", 0},{"_p_size_t"},{0}};
static swig_type_info _swigt__p_va_list[] = {{"_p_va_list", 0, "va_list *", 0},{"_p_va_list"},{0}};
static swig_type_info _swigt__p_csGraphics3DCaps[] = {{"_p_csGraphics3DCaps", 0, "csGraphics3DCaps *", 0},{"_p_csGraphics3DCaps"},{0}};
static swig_type_info _swigt__p_iGraphics3D[] = {{"_p_iGraphics3D", 0, "iGraphics3D *", 0},{"_p_iGraphics3D"},{0}};
static swig_type_info _swigt__p_iSkeleton[] = {{"_p_iSkeleton", 0, "iSkeleton *", 0},{"_p_iSkeleton"},{0}};
static swig_type_info _swigt__p_iMeshObjectType[] = {{"_p_iMeshObjectType", 0, "iMeshObjectType *", 0},{"_p_iMeshObjectType"},{0}};
static swig_type_info _swigt__p_iRigidBody[] = {{"_p_iRigidBody", 0, "iRigidBody *", 0},{"_p_iRigidBody"},{0}};
static swig_type_info _swigt__p_iNativeWindowManager[] = {{"_p_iNativeWindowManager", 0, "iNativeWindowManager *", 0},{"_p_iNativeWindowManager"},{0}};
static swig_type_info _swigt__p_iVertexBufferManager[] = {{"_p_iVertexBufferManager", 0, "iVertexBufferManager *", 0},{"_p_iVertexBufferManager"},{0}};
static swig_type_info _swigt__p_iTextureManager[] = {{"_p_iTextureManager", 0, "iTextureManager *", 0},{"_p_iTextureManager"},{0}};
static swig_type_info _swigt__p_iCacheManager[] = {{"_p_iCacheManager", 0, "iCacheManager *", 0},{"_p_iCacheManager"},{0}};
static swig_type_info _swigt__p_iPluginManager[] = {{"_p_iPluginManager", 0, "iPluginManager *", 0},{"_p_iPluginManager"},{0}};
static swig_type_info _swigt__p_iConfigManager[] = {{"_p_iConfigManager", 0, "iConfigManager *", 0},{"_p_iConfigManager"},{0}};
static swig_type_info _swigt__p_csRect[] = {{"_p_csRect", 0, "csRect *", 0},{"_p_csRect"},{0}};
static swig_type_info _swigt__p_iDynamics[] = {{"_p_iDynamics", 0, "iDynamics *", 0},{"_p_iDynamics"},{0}};
static swig_type_info _swigt__p_iEngineSequenceManager[] = {{"_p_iEngineSequenceManager", 0, "iEngineSequenceManager *", 0},{"_p_iEngineSequenceManager"},{0}};
static swig_type_info _swigt__p_iSequenceManager[] = {{"_p_iSequenceManager", 0, "iSequenceManager *", 0},{"_p_iSequenceManager"},{0}};
static swig_type_info _swigt__p_iNetworkManager[] = {{"_p_iNetworkManager", 0, "iNetworkManager *", 0},{"_p_iNetworkManager"},{0}};
static swig_type_info _swigt__p_iParameterESM[] = {{"_p_iParameterESM", 0, "iParameterESM *", 0},{"_p_iParameterESM"},{0}};
static swig_type_info _swigt__p_csStringID[] = {{"_p_csStringID", 0, "csStringID *", 0},{"_p_csStringID"},{0}};
static swig_type_info _swigt__p_csRefTiSkeletonBone_t[] = {{"_p_csRefTiSkeletonBone_t", 0, "csRef<iSkeletonBone > *", 0},{"_p_csRefTiSkeletonBone_t"},{0}};
static swig_type_info _swigt__p_iCrossHalo[] = {{"_p_iCrossHalo", 0, "iCrossHalo *", 0},{"_p_iCrossHalo"},{0}};
static swig_type_info _swigt__p_csReporterHelper[] = {{"_p_csReporterHelper", 0, "csReporterHelper *", 0},{"_p_csReporterHelper"},{0}};
static swig_type_info _swigt__p_csColliderHelper[] = {{"_p_csColliderHelper", 0, "csColliderHelper *", 0},{"_p_csColliderHelper"},{0}};
static swig_type_info _swigt__p_csEventJoystickData[] = {{"_p_csEventJoystickData", 0, "csEventJoystickData *", 0},{"_p_csEventJoystickData"},{0}};
static swig_type_info _swigt__p_csCommandLineHelper[] = {{"_p_csCommandLineHelper", 0, "csCommandLineHelper *", 0},{"_p_csCommandLineHelper"},{0}};
static swig_type_info _swigt__p_iDebugHelper[] = {{"_p_iDebugHelper", 0, "iDebugHelper *", 0},{"_p_iDebugHelper"},{"_p_csGeomDebugHelper", _p_csGeomDebugHelperTo_p_iDebugHelper},{0}};
static swig_type_info _swigt__p_csGeomDebugHelper[] = {{"_p_csGeomDebugHelper", 0, "csGeomDebugHelper *", 0},{"_p_csGeomDebugHelper"},{0}};
static swig_type_info _swigt__p_csPoly2DFactory[] = {{"_p_csPoly2DFactory", 0, "csPoly2DFactory *", 0},{"_p_csPoly2DFactory"},{0}};
static swig_type_info _swigt__p_iFactory[] = {{"_p_iFactory", 0, "iFactory *", 0},{"_p_iFactory"},{0}};
static swig_type_info _swigt__p_iMeshObjectFactory[] = {{"_p_iMeshObjectFactory", 0, "iMeshObjectFactory *", 0},{"_p_iMeshObjectFactory"},{0}};
static swig_type_info _swigt__p_G3DTriangleMesh[] = {{"_p_G3DTriangleMesh", 0, "G3DTriangleMesh *", 0},{"_p_G3DTriangleMesh"},{0}};
static swig_type_info _swigt__p_csFog[] = {{"_p_csFog", 0, "csFog *", 0},{"_p_csFog"},{0}};
static swig_type_info _swigt__p_csPtrTiShadowBlockList_t[] = {{"_p_csPtrTiShadowBlockList_t", 0, "csPtr<iShadowBlockList > *", 0},{"_p_csPtrTiShadowBlockList_t"},{0}};
static swig_type_info _swigt__p_csPtrTiEventOutlet_t[] = {{"_p_csPtrTiEventOutlet_t", 0, "csPtr<iEventOutlet > *", 0},{"_p_csPtrTiEventOutlet_t"},{0}};
static swig_type_info _swigt__p_csPixelCoord[] = {{"_p_csPixelCoord", 0, "csPixelCoord *", 0},{"_p_csPixelCoord"},{0}};
static swig_type_info _swigt__p_iCamera[] = {{"_p_iCamera", 0, "iCamera *", 0},{"_p_iCamera"},{0}};
static swig_type_info _swigt__p_iPcCamera[] = {{"_p_iPcCamera", 0, "iPcCamera *", 0},{"_p_iPcCamera"},{0}};
static swig_type_info _swigt__p_uint64[] = {{"_p_uint64", 0, "uint64 *", 0},{"_p_uint64"},{0}};
static swig_type_info _swigt__p_iSharedVariable[] = {{"_p_iSharedVariable", 0, "iSharedVariable *", 0},{"_p_iSharedVariable"},{0}};
static swig_type_info _swigt__p_iShadowReceiver[] = {{"_p_iShadowReceiver", 0, "iShadowReceiver *", 0},{"_p_iShadowReceiver"},{0}};
static swig_type_info _swigt__p_iFrustumViewUserdata[] = {{"_p_iFrustumViewUserdata", 0, "iFrustumViewUserdata *", 0},{"_p_iLightingProcessInfo", _p_iLightingProcessInfoTo_p_iFrustumViewUserdata},{"_p_iFrustumViewUserdata"},{0}};
static swig_type_info _swigt__p_csMouseCursorID[] = {{"_p_csMouseCursorID", 0, "csMouseCursorID *", 0},{"_p_csMouseCursorID"},{0}};
static swig_type_info _swigt__p_int[] = {{"_p_int", 0, "int *", 0},{"_p_int32"},{"_p_int"},{0}};
static swig_type_info _swigt__p_iObjectModel[] = {{"_p_iObjectModel", 0, "iObjectModel *", 0},{"_p_iObjectModel"},{0}};
static swig_type_info _swigt__p_csPolygon3D[] = {{"_p_csPolygon3D", 0, "csPolygon3D *", 0},{"_p_csPolygon3D"},{0}};
static swig_type_info _swigt__p_iPolygon3D[] = {{"_p_iPolygon3D", 0, "iPolygon3D *", 0},{"_p_iPolygon3D"},{0}};
static swig_type_info _swigt__p_p_iPolygon3D[] = {{"_p_p_iPolygon3D", 0, "iPolygon3D **", 0},{"_p_p_iPolygon3D"},{0}};
static swig_type_info _swigt__p_iModelConverter[] = {{"_p_iModelConverter", 0, "iModelConverter *", 0},{"_p_iModelConverter"},{0}};
static swig_type_info _swigt__p_p_void[] = {{"_p_p_void", 0, "void **", 0},{"_p_p_void"},{0}};
static swig_type_info _swigt__p_void[] = {{"_p_void", 0, "void *", 0},{"_p_void"},{0}};
static swig_type_info _swigt__p_iStrVector[] = {{"_p_iStrVector", 0, "iStrVector *", 0},{"_p_iStrVector"},{0}};
static swig_type_info _swigt__p_csVector[] = {{"_p_csVector", 0, "csVector *", 0},{"_p_csVector"},{0}};
static swig_type_info _swigt__p_iMovable[] = {{"_p_iMovable", 0, "iMovable *", 0},{"_p_iMovable"},{0}};
static swig_type_info _swigt__p_csPoly2D[] = {{"_p_csPoly2D", 0, "csPoly2D *", 0},{"_p_csPoly2D"},{0}};
static swig_type_info _swigt__p_iPcMovable[] = {{"_p_iPcMovable", 0, "iPcMovable *", 0},{"_p_iPcMovable"},{0}};
static swig_type_info _swigt__p_csSprite2DVertex[] = {{"_p_csSprite2DVertex", 0, "csSprite2DVertex *", 0},{"_p_csSprite2DVertex"},{0}};
static swig_type_info _swigt__p_iNativeWindow[] = {{"_p_iNativeWindow", 0, "iNativeWindow *", 0},{"_p_iNativeWindow"},{0}};
static swig_type_info _swigt__p_iVideoStream[] = {{"_p_iVideoStream", 0, "iVideoStream *", 0},{"_p_iVideoStream"},{0}};
static swig_type_info _swigt__p_iAudioStream[] = {{"_p_iAudioStream", 0, "iAudioStream *", 0},{"_p_iAudioStream"},{0}};
static swig_type_info _swigt__p_iStream[] = {{"_p_iStream", 0, "iStream *", 0},{"_p_iStream"},{"_p_iVideoStream", _p_iVideoStreamTo_p_iStream},{"_p_iAudioStream", _p_iAudioStreamTo_p_iStream},{0}};
static swig_type_info _swigt__p_csDataStream[] = {{"_p_csDataStream", 0, "csDataStream *", 0},{"_p_csDataStream"},{0}};
static swig_type_info _swigt__p_iBinaryLoaderPlugin[] = {{"_p_iBinaryLoaderPlugin", 0, "iBinaryLoaderPlugin *", 0},{"_p_iBinaryLoaderPlugin"},{0}};
static swig_type_info _swigt__p_iLoaderPlugin[] = {{"_p_iLoaderPlugin", 0, "iLoaderPlugin *", 0},{"_p_iLoaderPlugin"},{0}};
static swig_type_info _swigt__p_csBSpline[] = {{"_p_csBSpline", 0, "csBSpline *", 0},{"_p_csBSpline"},{"_p_csCatmullRomSpline", _p_csCatmullRomSplineTo_p_csBSpline},{0}};
static swig_type_info _swigt__p_iNetworkPacket2[] = {{"_p_iNetworkPacket2", 0, "iNetworkPacket2 *", 0},{"_p_iNetworkPacket2"},{0}};
static swig_type_info _swigt__p_csEventMouseData[] = {{"_p_csEventMouseData", 0, "csEventMouseData *", 0},{"_p_csEventMouseData"},{0}};
static swig_type_info _swigt__p_csTriangle[] = {{"_p_csTriangle", 0, "csTriangle *", 0},{"_p_csTriangle"},{0}};
static swig_type_info _swigt__p_csSpline[] = {{"_p_csSpline", 0, "csSpline *", 0},{"_p_csBSpline", _p_csBSplineTo_p_csSpline},{"_p_csSpline"},{"_p_csCatmullRomSpline", _p_csCatmullRomSplineTo_p_csSpline},{"_p_csCubicSpline", _p_csCubicSplineTo_p_csSpline},{0}};
static swig_type_info _swigt__p_csCubicSpline[] = {{"_p_csCubicSpline", 0, "csCubicSpline *", 0},{"_p_csCubicSpline"},{0}};
static swig_type_info _swigt__p_csCatmullRomSpline[] = {{"_p_csCatmullRomSpline", 0, "csCatmullRomSpline *", 0},{"_p_csCatmullRomSpline"},{0}};
static swig_type_info _swigt__p_iImageIO[] = {{"_p_iImageIO", 0, "iImageIO *", 0},{"_p_iImageIO"},{0}};
static swig_type_info _swigt__p_int64[] = {{"_p_int64", 0, "int64 *", 0},{"_p_int64"},{0}};
static swig_type_info _swigt__p_iSprite2DState[] = {{"_p_iSprite2DState", 0, "iSprite2DState *", 0},{"_p_iSprite2DState"},{0}};
static swig_type_info _swigt__p_iVertexBuffer[] = {{"_p_iVertexBuffer", 0, "iVertexBuffer *", 0},{"_p_iVertexBuffer"},{0}};
static swig_type_info _swigt__p_iPolygonBuffer[] = {{"_p_iPolygonBuffer", 0, "iPolygonBuffer *", 0},{"_p_iPolygonBuffer"},{0}};
static swig_type_info _swigt__p_p_iVertexBuffer[] = {{"_p_p_iVertexBuffer", 0, "iVertexBuffer **", 0},{"_p_p_iVertexBuffer"},{0}};
static swig_type_info _swigt__p_iSprite3DState[] = {{"_p_iSprite3DState", 0, "iSprite3DState *", 0},{"_p_iSprite3DState"},{0}};
static swig_type_info _swigt__p_iDataBuffer[] = {{"_p_iDataBuffer", 0, "iDataBuffer *", 0},{"_p_iDataBuffer"},{0}};
static swig_type_info _swigt__p_iLightMap[] = {{"_p_iLightMap", 0, "iLightMap *", 0},{"_p_iLightMap"},{0}};
static swig_type_info _swigt__p_csSphere[] = {{"_p_csSphere", 0, "csSphere *", 0},{"_p_csSphere"},{0}};
static swig_type_info _swigt__p_iPolygonTexture[] = {{"_p_iPolygonTexture", 0, "iPolygonTexture *", 0},{"_p_iPolygonTexture"},{0}};
static swig_type_info _swigt__p_iImageIO__FileFormatDescription[] = {{"_p_iImageIO__FileFormatDescription", 0, "iImageIO::FileFormatDescription *", 0},{"_p_iImageIO__FileFormatDescription"},{"_p_csImageIOFileFormatDescription"},{0}};
static swig_type_info _swigt__p_csImageIOFileFormatDescription[] = {{"_p_csImageIOFileFormatDescription", 0, "csImageIOFileFormatDescription *", 0},{"_p_csImageIOFileFormatDescription"},{"_p_iImageIO__FileFormatDescription"},{0}};
static swig_type_info _swigt__p_csCodecDescription[] = {{"_p_csCodecDescription", 0, "csCodecDescription *", 0},{"_p_csCodecDescription"},{0}};
static swig_type_info _swigt__p_csAudioStreamDescription[] = {{"_p_csAudioStreamDescription", 0, "csAudioStreamDescription *", 0},{"_p_csAudioStreamDescription"},{0}};
static swig_type_info _swigt__p_csVideoStreamDescription[] = {{"_p_csVideoStreamDescription", 0, "csVideoStreamDescription *", 0},{"_p_csVideoStreamDescription"},{0}};
static swig_type_info _swigt__p_csStreamDescription[] = {{"_p_csStreamDescription", 0, "csStreamDescription *", 0},{"_p_csStreamDescription"},{"_p_csVideoStreamDescription", _p_csVideoStreamDescriptionTo_p_csStreamDescription},{"_p_csAudioStreamDescription", _p_csAudioStreamDescriptionTo_p_csStreamDescription},{0}};
static swig_type_info _swigt__p_iComponent[] = {{"_p_iComponent", 0, "iComponent *", 0},{"_p_iComponent"},{0}};
static swig_type_info _swigt__p_iSpriteAction[] = {{"_p_iSpriteAction", 0, "iSpriteAction *", 0},{"_p_iSpriteAction"},{0}};
static swig_type_info _swigt__p_iThingFactoryState[] = {{"_p_iThingFactoryState", 0, "iThingFactoryState *", 0},{"_p_iThingFactoryState"},{0}};
static swig_type_info _swigt__p_iSprite3DFactoryState[] = {{"_p_iSprite3DFactoryState", 0, "iSprite3DFactoryState *", 0},{"_p_iSprite3DFactoryState"},{0}};
static swig_type_info _swigt__p_iSprite2DFactoryState[] = {{"_p_iSprite2DFactoryState", 0, "iSprite2DFactoryState *", 0},{"_p_iSprite2DState", _p_iSprite2DStateTo_p_iSprite2DFactoryState},{"_p_iSprite2DFactoryState"},{0}};
static swig_type_info _swigt__p_csPoly3D[] = {{"_p_csPoly3D", 0, "csPoly3D *", 0},{"_p_csPoly3D"},{"_p_csVector3Array", _p_csVector3ArrayTo_p_csPoly3D},{0}};
static swig_type_info _swigt__p_iSkeletonState[] = {{"_p_iSkeletonState", 0, "iSkeletonState *", 0},{"_p_iSkeletonState"},{0}};
static swig_type_info _swigt__p_G3DFogInfo[] = {{"_p_G3DFogInfo", 0, "G3DFogInfo *", 0},{"_p_G3DFogInfo"},{0}};
static swig_type_info _swigt__p_csPluginPaths[] = {{"_p_csPluginPaths", 0, "csPluginPaths *", 0},{"_p_csPluginPaths"},{0}};
static swig_type_info _swigt__p_iPcSolid[] = {{"_p_iPcSolid", 0, "iPcSolid *", 0},{"_p_iPcSolid"},{0}};
static swig_type_info _swigt__p_csMatrix2[] = {{"_p_csMatrix2", 0, "csMatrix2 *", 0},{"_p_csMatrix2"},{0}};
static swig_type_info _swigt__p_csZScaleMatrix3[] = {{"_p_csZScaleMatrix3", 0, "csZScaleMatrix3 *", 0},{"_p_csZScaleMatrix3"},{0}};
static swig_type_info _swigt__p_csYScaleMatrix3[] = {{"_p_csYScaleMatrix3", 0, "csYScaleMatrix3 *", 0},{"_p_csYScaleMatrix3"},{0}};
static swig_type_info _swigt__p_csXScaleMatrix3[] = {{"_p_csXScaleMatrix3", 0, "csXScaleMatrix3 *", 0},{"_p_csXScaleMatrix3"},{0}};
static swig_type_info _swigt__p_csZRotMatrix3[] = {{"_p_csZRotMatrix3", 0, "csZRotMatrix3 *", 0},{"_p_csZRotMatrix3"},{0}};
static swig_type_info _swigt__p_csYRotMatrix3[] = {{"_p_csYRotMatrix3", 0, "csYRotMatrix3 *", 0},{"_p_csYRotMatrix3"},{0}};
static swig_type_info _swigt__p_csXRotMatrix3[] = {{"_p_csXRotMatrix3", 0, "csXRotMatrix3 *", 0},{"_p_csXRotMatrix3"},{0}};
static swig_type_info _swigt__p_csMatrix3[] = {{"_p_csMatrix3", 0, "csMatrix3 *", 0},{"_p_csMatrix3"},{"_p_csXRotMatrix3", _p_csXRotMatrix3To_p_csMatrix3},{"_p_csYRotMatrix3", _p_csYRotMatrix3To_p_csMatrix3},{"_p_csZRotMatrix3", _p_csZRotMatrix3To_p_csMatrix3},{"_p_csXScaleMatrix3", _p_csXScaleMatrix3To_p_csMatrix3},{"_p_csYScaleMatrix3", _p_csYScaleMatrix3To_p_csMatrix3},{"_p_csZScaleMatrix3", _p_csZScaleMatrix3To_p_csMatrix3},{0}};
static swig_type_info _swigt__p_iSprite2DUVAnimation[] = {{"_p_iSprite2DUVAnimation", 0, "iSprite2DUVAnimation *", 0},{"_p_iSprite2DUVAnimation"},{0}};
static swig_type_info _swigt__p_iCelEntity[] = {{"_p_iCelEntity", 0, "iCelEntity *", 0},{"_p_iCelEntity"},{0}};
static swig_type_info _swigt__p_csSquaredDist[] = {{"_p_csSquaredDist", 0, "csSquaredDist *", 0},{"_p_csSquaredDist"},{0}};
static swig_type_info _swigt__p_iNetworkPacket[] = {{"_p_iNetworkPacket", 0, "iNetworkPacket *", 0},{"_p_iNetworkPacket"},{0}};
static swig_type_info _swigt__p_csPoint[] = {{"_p_csPoint", 0, "csPoint *", 0},{"_p_csPoint"},{0}};
static swig_type_info _swigt__p_iEventPlug[] = {{"_p_iEventPlug", 0, "iEventPlug *", 0},{"_p_iEventPlug"},{0}};
static swig_type_info _swigt__p_iSequence[] = {{"_p_iSequence", 0, "iSequence *", 0},{"_p_iSequence"},{0}};
static swig_type_info _swigt__p_csPlane2[] = {{"_p_csPlane2", 0, "csPlane2 *", 0},{"_p_csPlane2"},{0}};
static swig_type_info _swigt__p_iEventCord[] = {{"_p_iEventCord", 0, "iEventCord *", 0},{"_p_iEventCord"},{0}};
static swig_type_info _swigt__p_csPlane3[] = {{"_p_csPlane3", 0, "csPlane3 *", 0},{"_p_csPlane3"},{0}};
static swig_type_info _swigt__p_iPcGravity[] = {{"_p_iPcGravity", 0, "iPcGravity *", 0},{"_p_iPcGravity"},{0}};
static swig_type_info _swigt__p_iPortal[] = {{"_p_iPortal", 0, "iPortal *", 0},{"_p_iPortal"},{0}};

static swig_type_info *swig_types_initial[] = {
_swigt__p_iSaver, 
_swigt__p_csRGBpixel, 
_swigt__p_iLightingInfo, 
_swigt__p_p_csReversibleTransform, 
_swigt__p_csOrthoTransform, 
_swigt__p_csReversibleTransform, 
_swigt__p_csTransform, 
_swigt__p_csVector3Array, 
_swigt__p_iEventQueue, 
_swigt__p_iLoaderContext, 
_swigt__p_csFrustumContext, 
_swigt__p_csPolygon3DStatic, 
_swigt__p_iPolygon3DStatic, 
_swigt__p_iCollectionList, 
_swigt__p_iCameraPositionList, 
_swigt__p_iRegionList, 
_swigt__p_float, 
_swigt__p_csStreamFormatCap, 
_swigt__p_iVFS, 
_swigt__p_csPtrTiNetworkPacket2_t, 
_swigt__p_iDynLight, 
_swigt__p_csQuaternion, 
_swigt__p_iThingEnvironment, 
_swigt__p_csRefTiBase_t, 
_swigt__p_csPtrTiBase_t, 
_swigt__p_iEffectDefinition, 
_swigt__p_iClipper2D, 
_swigt__p_iConsoleOutput, 
_swigt__p_iObjectRegistry, 
_swigt__p_csRGBcolor, 
_swigt__p_iSector, 
_swigt__p_csSector, 
_swigt__p_iSkeletonBone, 
_swigt__p_p_iSector, 
_swigt__p_csStringSet, 
_swigt__p_iLightList, 
_swigt__p_iStandardReporterListener, 
_swigt__p_iReporterListener, 
_swigt__p_iSoundListener, 
_swigt__p_iMovableListener, 
_swigt__p_iObjectModelListener, 
_swigt__p_iNetworkListener, 
_swigt__p_iFont, 
_swigt__p_p_iImage, 
_swigt__p_iImage, 
_swigt__p_csImageArea, 
_swigt__p_iOffscreenCanvasCallback, 
_swigt__p_iMeshObjectDrawCallback, 
_swigt__p_iMeshDrawCallback, 
_swigt__p_iTextureCallback, 
_swigt__p_iLightCallback, 
_swigt__p_iSectorCallback, 
_swigt__p_iDynamicsMoveCallback, 
_swigt__p_iDynamicsCollisionCallback, 
_swigt__p_csTinyDocumentSystem, 
_swigt__p_iDocumentSystem, 
_swigt__p_csRectRegion, 
_swigt__p_iDynamicSystem, 
_swigt__p_iCollideSystem, 
_swigt__p_iRegion, 
_swigt__p_csPtrTiParameterESM_t, 
_swigt__p_iPcRegion, 
_swigt__p_csRefTiDocumentAttribute_t, 
_swigt__p_uint8, 
_swigt__p_iReporterIterator, 
_swigt__p_iStreamIterator, 
_swigt__p_iDocumentNodeIterator, 
_swigt__p_iDocumentAttributeIterator, 
_swigt__p_iConfigIterator, 
_swigt__p_iPluginIterator, 
_swigt__p_iObjectRegistryIterator, 
_swigt__p_iObjectIterator, 
_swigt__p_iVisibilityObjectIterator, 
_swigt__p_iMeshWrapperIterator, 
_swigt__p_csStringSetIterator, 
_swigt__p_iLightIterator, 
_swigt__p_iSectorIterator, 
_swigt__p_iEventOutlet, 
_swigt__p_csFrustum, 
_swigt__p_csColoredVertices, 
_swigt__p_csSegment2, 
_swigt__p_csSegment3, 
_swigt__p_iCelPropertyClassList, 
_swigt__p_csVector2, 
_swigt__p_iMeshObject, 
_swigt__p_p_csVector3, 
_swigt__p_csDVector3, 
_swigt__p_csVector3, 
_swigt__p_csFrustumViewObjectFunc, 
_swigt__p_iDataObject, 
_swigt__p_iVisibilityObject, 
_swigt__p_iObject, 
_swigt__p_csObject, 
_swigt__p_iSharedVariableList, 
_swigt__csEventHandlerFunc, 
_swigt__p_iFlareHalo, 
_swigt__p_iEventHandler, 
_swigt__p_iFrustumView, 
_swigt__p_iSoundWrapper, 
_swigt__p_p_iMeshWrapper, 
_swigt__p_iMeshWrapper, 
_swigt__p_iTextureWrapper, 
_swigt__p_p_iTextureWrapper, 
_swigt__p_iMaterialWrapper, 
_swigt__p_iMeshFactoryWrapper, 
_swigt__p_iSequenceWrapper, 
_swigt__p_csColliderWrapper, 
_swigt__p__csPyEventHandler, 
_swigt__p_iNovaHalo, 
_swigt__p_iRenderView, 
_swigt__p_csEventKeyData, 
_swigt__p_iLoaderStatus, 
_swigt__p_csVertexStatus, 
_swigt__p_iCelBehaviour, 
_swigt__p_iMeshList, 
_swigt__p_iConsoleWatcher, 
_swigt__p_iBase, 
_swigt__p_iFontServer, 
_swigt__p_G3DPolygonDPFX, 
_swigt__p_csPtrTiDynLight_t, 
_swigt__p_iPcLinearMovement, 
_swigt__p_csPtrTiSequenceTrigger_t, 
_swigt__scfFactoryFunc, 
_swigt__p_csPixelFormat, 
_swigt__p_csModelConverterFormat, 
_swigt__p_csCollisionPair, 
_swigt__p_csView, 
_swigt__p_iStreamFormat, 
_swigt__p_iVisibilityCuller, 
_swigt__p_uint16, 
_swigt__p_iFile, 
_swigt__p_csNetworkDriverCapabilities, 
_swigt__p_csPtrTiEngineSequenceParameters_t, 
_swigt__p_iSoundLoader, 
_swigt__p_iLoader, 
_swigt__p_iSpriteSocket, 
_swigt__p_iPcInventory, 
_swigt__p_csTextureLayer, 
_swigt__p_iDocumentAttribute, 
_swigt__p_iSpriteFrame, 
_swigt__p_csEventNetworkData, 
_swigt__p_iMaterialEngine, 
_swigt__p_iVirtualClock, 
_swigt__p_iEngine, 
_swigt__p_int16, 
_swigt__p_iNetworkEndPoint, 
_swigt__p_iLightingProcessInfo, 
_swigt__p_iPcCommandInput, 
_swigt__p_csPtrTcsFrustum_t, 
_swigt__p_iReporter, 
_swigt__p_csPtrTiLoaderContext_t, 
_swigt__p_csPtrTiShadowBlock_t, 
_swigt__p_iVertexBufferManagerClient, 
_swigt__p_csEventCommandData, 
_swigt__p_iSoundData, 
_swigt__p_iCelPropertyClass, 
_swigt__p_iProgressMeter, 
_swigt__p_csString, 
_swigt__p_iString, 
_swigt__p_iPcCharacteristics, 
_swigt__p_iKeyboardDriver, 
_swigt__p_iSoundDriver, 
_swigt__p_iShadowBlockList, 
_swigt__p_iJoystickDriver, 
_swigt__p_iMouseDriver, 
_swigt__p_iNetworkDriver, 
_swigt__p_iSCF, 
_swigt__p_double, 
_swigt__p_bool, 
_swigt__p_char, 
_swigt__p_p_char, 
_swigt__p_iModelData, 
_swigt__p_csPtrTiVertexBuffer_t, 
_swigt__p_iSequenceTimedOperation, 
_swigt__p_G3DPolygonDP, 
_swigt__p_iJoint, 
_swigt__p_iLightingProcessData, 
_swigt__p_uint32, 
_swigt__p_iEngineSequenceParameters, 
_swigt__p_G3DTexturePlane, 
_swigt__p_iBodyGroup, 
_swigt__p_csMeshedPolygon, 
_swigt__p_iCelEntityList, 
_swigt__p_iSprite2DUVAnimationFrame, 
_swigt__p_iCollection, 
_swigt__p_iNetworkConnection, 
_swigt__p_iPcMeshSelect, 
_swigt__p_iStatLight, 
_swigt__p_csStatLight, 
_swigt__p_csPtrTiSoundData_t, 
_swigt__p_csPtrTiModelData_t, 
_swigt__p_csFlags, 
_swigt__p_csLightMapMapping, 
_swigt__p_csPtrTiLightingProcessData_t, 
_swigt__p_iDocument, 
_swigt__p_iNetworkSocket2, 
_swigt__p_csIntersect2, 
_swigt__p_csIntersect3, 
_swigt__p_csFileTime, 
_swigt__p_iMaterialList, 
_swigt__p_p_iLight, 
_swigt__p_iLight, 
_swigt__p_csBox2, 
_swigt__p_csMath2, 
_swigt__p_csBox3, 
_swigt__p_csMath3, 
_swigt__p_iMaterial, 
_swigt__p_int32, 
_swigt__p_iConfigFile, 
_swigt__p_csPtrTiReporterIterator_t, 
_swigt__p_csRefTiDocumentAttributeIterator_t, 
_swigt__p_csRefTiDocumentNodeIterator_t, 
_swigt__p_csPtrTiPluginIterator_t, 
_swigt__p_csPtrTiObjectRegistryIterator_t, 
_swigt__p_csPtrTiVisibilityObjectIterator_t, 
_swigt__p_csPtrTiMeshWrapperIterator_t, 
_swigt__p_csPtrTiObjectIterator_t, 
_swigt__p_csPtrTiSectorIterator_t, 
_swigt__p_csPtrTiLightIterator_t, 
_swigt__p__2_basetype, 
_swigt__p__1_basetype, 
_swigt__p_basetype, 
_swigt__p_p_iEvent, 
_swigt__p_iEvent, 
_swigt__p_csPtrTiObjectWatcher_t, 
_swigt__p_iThingState, 
_swigt__p_csPtrTiSequenceWrapper_t, 
_swigt__p_iHalo, 
_swigt__p_p_iCollider, 
_swigt__p_iCollider, 
_swigt__p_iPcMesh, 
_swigt__p_csColor, 
_swigt__p_iPcTimer, 
_swigt__p_unsigned_char, 
_swigt__p_csLight, 
_swigt__p_iDocumentNode, 
_swigt__p_iSequenceTrigger, 
_swigt__p_iGraphics2D, 
_swigt__p_iCameraPosition, 
_swigt__p_G3DPolygonMesh, 
_swigt__p_iPolygonMesh, 
_swigt__p_iTextureList, 
_swigt__p_iPcMovableConstraint, 
_swigt__p_iView, 
_swigt__p_csPtrTiLoaderStatus_t, 
_swigt__p_csPtrTiRigidBody_t, 
_swigt__p_csRefTiRigidBody_t, 
_swigt__p_csRefTiDocumentNode_t, 
_swigt__p_iSectorList, 
_swigt__p_csWrapPtr, 
_swigt__p_iSoundHandle, 
_swigt__p_iMaterialHandle, 
_swigt__p_iTextureHandle, 
_swigt__p_G3DPolygonDFP, 
_swigt__p_iCommandLineParser, 
_swigt__p_iFontDeleteNotify, 
_swigt__p_iCelPlLayer, 
_swigt__p_iCelBlLayer, 
_swigt__p_csInitializer, 
_swigt__p_int8, 
_swigt__p_iSoundSource, 
_swigt__p_iMeshFactoryList, 
_swigt__p_csRefTiTextureHandle_t, 
_swigt__p_csPtrTiMaterialHandle_t, 
_swigt__p_iSoundRender, 
_swigt__p_size_t, 
_swigt__p_va_list, 
_swigt__p_csGraphics3DCaps, 
_swigt__p_iGraphics3D, 
_swigt__p_iSkeleton, 
_swigt__p_iMeshObjectType, 
_swigt__p_iRigidBody, 
_swigt__p_iNativeWindowManager, 
_swigt__p_iVertexBufferManager, 
_swigt__p_iTextureManager, 
_swigt__p_iCacheManager, 
_swigt__p_iPluginManager, 
_swigt__p_iConfigManager, 
_swigt__p_csRect, 
_swigt__p_iDynamics, 
_swigt__p_iEngineSequenceManager, 
_swigt__p_iSequenceManager, 
_swigt__p_iNetworkManager, 
_swigt__p_iParameterESM, 
_swigt__p_csStringID, 
_swigt__p_csRefTiSkeletonBone_t, 
_swigt__p_iCrossHalo, 
_swigt__p_csReporterHelper, 
_swigt__p_csColliderHelper, 
_swigt__p_csEventJoystickData, 
_swigt__p_csCommandLineHelper, 
_swigt__p_iDebugHelper, 
_swigt__p_csGeomDebugHelper, 
_swigt__p_csPoly2DFactory, 
_swigt__p_iFactory, 
_swigt__p_iMeshObjectFactory, 
_swigt__p_G3DTriangleMesh, 
_swigt__p_csFog, 
_swigt__p_csPtrTiShadowBlockList_t, 
_swigt__p_csPtrTiEventOutlet_t, 
_swigt__p_csPixelCoord, 
_swigt__p_iCamera, 
_swigt__p_iPcCamera, 
_swigt__p_uint64, 
_swigt__p_iSharedVariable, 
_swigt__p_iShadowReceiver, 
_swigt__p_iFrustumViewUserdata, 
_swigt__p_csMouseCursorID, 
_swigt__p_int, 
_swigt__p_iObjectModel, 
_swigt__p_csPolygon3D, 
_swigt__p_iPolygon3D, 
_swigt__p_p_iPolygon3D, 
_swigt__p_iModelConverter, 
_swigt__p_p_void, 
_swigt__p_void, 
_swigt__p_iStrVector, 
_swigt__p_csVector, 
_swigt__p_iMovable, 
_swigt__p_csPoly2D, 
_swigt__p_iPcMovable, 
_swigt__p_csSprite2DVertex, 
_swigt__p_iNativeWindow, 
_swigt__p_iVideoStream, 
_swigt__p_iAudioStream, 
_swigt__p_iStream, 
_swigt__p_csDataStream, 
_swigt__p_iBinaryLoaderPlugin, 
_swigt__p_iLoaderPlugin, 
_swigt__p_csBSpline, 
_swigt__p_iNetworkPacket2, 
_swigt__p_csEventMouseData, 
_swigt__p_csTriangle, 
_swigt__p_csSpline, 
_swigt__p_csCubicSpline, 
_swigt__p_csCatmullRomSpline, 
_swigt__p_iImageIO, 
_swigt__p_int64, 
_swigt__p_iSprite2DState, 
_swigt__p_iVertexBuffer, 
_swigt__p_iPolygonBuffer, 
_swigt__p_p_iVertexBuffer, 
_swigt__p_iSprite3DState, 
_swigt__p_iDataBuffer, 
_swigt__p_iLightMap, 
_swigt__p_csSphere, 
_swigt__p_iPolygonTexture, 
_swigt__p_iImageIO__FileFormatDescription, 
_swigt__p_csImageIOFileFormatDescription, 
_swigt__p_csCodecDescription, 
_swigt__p_csAudioStreamDescription, 
_swigt__p_csVideoStreamDescription, 
_swigt__p_csStreamDescription, 
_swigt__p_iComponent, 
_swigt__p_iSpriteAction, 
_swigt__p_iThingFactoryState, 
_swigt__p_iSprite3DFactoryState, 
_swigt__p_iSprite2DFactoryState, 
_swigt__p_csPoly3D, 
_swigt__p_iSkeletonState, 
_swigt__p_G3DFogInfo, 
_swigt__p_csPluginPaths, 
_swigt__p_iPcSolid, 
_swigt__p_csMatrix2, 
_swigt__p_csZScaleMatrix3, 
_swigt__p_csYScaleMatrix3, 
_swigt__p_csXScaleMatrix3, 
_swigt__p_csZRotMatrix3, 
_swigt__p_csYRotMatrix3, 
_swigt__p_csXRotMatrix3, 
_swigt__p_csMatrix3, 
_swigt__p_iSprite2DUVAnimation, 
_swigt__p_iCelEntity, 
_swigt__p_csSquaredDist, 
_swigt__p_iNetworkPacket, 
_swigt__p_csPoint, 
_swigt__p_iEventPlug, 
_swigt__p_iSequence, 
_swigt__p_csPlane2, 
_swigt__p_iEventCord, 
_swigt__p_csPlane3, 
_swigt__p_iPcGravity, 
_swigt__p_iPortal, 
0
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{ SWIG_PY_INT,     (char *)"CS_VOIDED_PTR", (long) 0xffffffff, 0, 0, 0},
{ SWIG_PY_STRING,  (char*)"SCF_STATIC_CLASS_CONTEXT", 0, 0, (void *)"*static*", 0},
{ SWIG_PY_INT,     (char *)"CS_DBGHELP_UNITTEST", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_DBGHELP_BENCHMARK", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_DBGHELP_TXTDUMP", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_DBGHELP_GFXDUMP", (long) 8, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_DBGHELP_STATETEST", (long) 16, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_POLY_IN", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_POLY_ON", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_POLY_OUT", (long) -1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_POL_SAME_PLANE", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_POL_FRONT", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_POL_BACK", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_POL_SPLIT_NEEDED", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"RGB_MASK", (long) 0x00ffffff, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"R_COEF", (long) 173, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G_COEF", (long) 242, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"B_COEF", (long) 107, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"R_COEF_SQ", (long) 299, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G_COEF_SQ", (long) 587, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"B_COEF_SQ", (long) 114, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_REQUEST_END", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MAX_OUTPUT_VERTICES", (long) 64, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CLIP_OUTSIDE", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CLIP_INSIDE", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CLIP_CLIPPED", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_VERTEX_ORIGINAL", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_VERTEX_ONEDGE", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_VERTEX_INSIDE", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_BBOX_NORMAL", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_BBOX_ACCURATE", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_BBOX_MAX", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_LIGHT_THINGSHADOWS", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_LIGHT_ACTIVEHALO", (long) 0x80000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_DEFAULT_LIGHT_LEVEL", (long) 20, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NORMAL_LIGHT_LEVEL", (long) 128, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ATTN_NONE", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ATTN_LINEAR", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ATTN_INVERSE", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ATTN_REALISTIC", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NLIGHT_SHADOWS", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NLIGHT_STATIC", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NLIGHT_DYNAMIC", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NLIGHT_NEARBYSECTORS", (long) 8, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ENGINE_CACHE_READ", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ENGINE_CACHE_WRITE", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ENGINE_CACHE_NOUPDATE", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_RENDPRI_NONE", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_RENDPRI_BACK2FRONT", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_RENDPRI_FRONT2BACK", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ENTITY_CONVEX", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ENTITY_DETAIL", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ENTITY_CAMERA", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ENTITY_INVISIBLE", (long) 8, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ENTITY_NOSHADOWS", (long) 16, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ENTITY_NOLIGHTING", (long) 32, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CULLER_HINT_CONVEX", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CULLER_HINT_CLOSED", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CULLER_HINT_GOODOCCLUDER", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CULLER_HINT_BADOCCLUDER", (long) 8, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_SPR_LIGHTING_HQ", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_SPR_LIGHTING_LQ", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_SPR_LIGHTING_FAST", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_SPR_LIGHTING_RANDOM", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_SPR_LIGHT_GLOBAL", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_SPR_LIGHT_TEMPLATE", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_SPR_LIGHT_LOCAL", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_SPR_LOD_GLOBAL", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_SPR_LOD_TEMPLATE", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_SPR_LOD_LOCAL", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_THING_FASTMESH", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_THING_NOCOMPRESS", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_THING_MOVE_NEVER", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_THING_MOVE_OCCASIONAL", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_POLY_LIGHTING", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_POLY_COLLDET", (long) 0x00000002, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_POLY_VISCULL", (long) 0x00000004, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SOUND_RESTART", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SOUND_LOOP", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SOUND3D_DISABLE", (long) SOUND3D_DISABLE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SOUND3D_RELATIVE", (long) SOUND3D_RELATIVE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SOUND3D_ABSOLUTE", (long) SOUND3D_ABSOLUTE, 0, 0, 0},
{ SWIG_PY_STRING,  (char*)"VFS_PATH_DIVIDER", 0, 0, (void *)",", 0},
{ SWIG_PY_STRING,  (char*)"VFS_PATH_SEPARATOR", 0, 0, (void *)"/", 0},
{ SWIG_PY_INT,     (char *)"VFS_MAX_PATH_LEN", (long) 256, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"VFS_FILE_MODE", (long) 0x0000000f, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"VFS_FILE_READ", (long) 0x00000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"VFS_FILE_WRITE", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"VFS_FILE_UNCOMPRESSED", (long) 0x80000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"VFS_STATUS_OK", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"VFS_STATUS_OTHER", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"VFS_STATUS_NOSPACE", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"VFS_STATUS_RESOURCES", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"VFS_STATUS_ACCESSDENIED", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"VFS_STATUS_IOERROR", (long) 5, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CRYSTAL_PROTOCOL", (long) CS_CRYSTAL_PROTOCOL, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_MUSCLE_PROTOCOL", (long) CS_MUSCLE_PROTOCOL, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_XML_PROTOCOL", (long) CS_XML_PROTOCOL, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevNothing", (long) csevNothing, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevKeyDown", (long) csevKeyDown, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevKeyUp", (long) csevKeyUp, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevMouseMove", (long) csevMouseMove, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevMouseDown", (long) csevMouseDown, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevMouseUp", (long) csevMouseUp, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevMouseClick", (long) csevMouseClick, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevMouseDoubleClick", (long) csevMouseDoubleClick, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevJoystickMove", (long) csevJoystickMove, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevJoystickDown", (long) csevJoystickDown, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevJoystickUp", (long) csevJoystickUp, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevCommand", (long) csevCommand, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevBroadcast", (long) csevBroadcast, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevNetwork", (long) csevNetwork, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevMouseEnter", (long) csevMouseEnter, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevMouseExit", (long) csevMouseExit, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevLostFocus", (long) csevLostFocus, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevGainFocus", (long) csevGainFocus, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevGroupOff", (long) csevGroupOff, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csevFrameStart", (long) csevFrameStart, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSEF_BROADCAST", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSMASK_SHIFT", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSMASK_CTRL", (long) 0x00000002, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSMASK_ALT", (long) 0x00000004, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSMASK_ALLSHIFTS", (long) (0x00000001|0x00000002|0x00000004), 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSMASK_FIRST", (long) 0x80000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_ESC", (long) 27, 0, 0, 0},
{ SWIG_PY_STRING,  (char*)"CSKEY_ENTER", 0, 0, (void *)"\n", 0},
{ SWIG_PY_STRING,  (char*)"CSKEY_TAB", 0, 0, (void *)"\t", 0},
{ SWIG_PY_STRING,  (char*)"CSKEY_BACKSPACE", 0, 0, (void *)"\10", 0},
{ SWIG_PY_STRING,  (char*)"CSKEY_SPACE", 0, 0, (void *)" ", 0},
{ SWIG_PY_INT,     (char *)"CSKEY_UP", (long) 1000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_DOWN", (long) 1001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_LEFT", (long) 1002, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_RIGHT", (long) 1003, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_PGUP", (long) 1004, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_PGDN", (long) 1005, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_HOME", (long) 1006, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_END", (long) 1007, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_INS", (long) 1008, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_DEL", (long) 1009, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_CTRL", (long) 1010, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_ALT", (long) 1011, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_SHIFT", (long) 1012, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_F1", (long) 1013, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_F2", (long) 1014, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_F3", (long) 1015, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_F4", (long) 1016, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_F5", (long) 1017, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_F6", (long) 1018, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_F7", (long) 1019, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_F8", (long) 1020, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_F9", (long) 1021, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_F10", (long) 1022, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_F11", (long) 1023, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_F12", (long) 1024, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_CENTER", (long) 1025, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_PADPLUS", (long) 1026, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_PADMINUS", (long) 1027, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_PADMULT", (long) 1028, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_PADDIV", (long) 1029, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_FIRST", (long) 1000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSKEY_LAST", (long) 1029, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSEVTYPE_Keyboard", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSEVTYPE_Mouse", (long) 0x00000002, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSEVTYPE_Joystick", (long) 0x00000004, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"cscmdNothing", (long) cscmdNothing, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"cscmdQuit", (long) cscmdQuit, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"cscmdFocusChanged", (long) cscmdFocusChanged, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"cscmdSystemOpen", (long) cscmdSystemOpen, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"cscmdSystemClose", (long) cscmdSystemClose, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"cscmdContextResize", (long) cscmdContextResize, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"cscmdContextClose", (long) cscmdContextClose, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"cscmdCommandLineHelp", (long) cscmdCommandLineHelp, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"cscmdPreProcess", (long) cscmdPreProcess, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"cscmdProcess", (long) cscmdProcess, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"cscmdPostProcess", (long) cscmdPostProcess, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"cscmdFinalProcess", (long) cscmdFinalProcess, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"cscmdCanvasHidden", (long) cscmdCanvasHidden, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"cscmdCanvasExposed", (long) cscmdCanvasExposed, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_MAX_MOUSE_BUTTONS", (long) 10, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_MAX_JOYSTICK_COUNT", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_MAX_JOYSTICK_BUTTONS", (long) 10, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iConfigManager_PriorityMin", (long) iConfigManager::PriorityMin, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iConfigManager_PriorityVeryLow", (long) iConfigManager::PriorityVeryLow, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iConfigManager_PriorityLow", (long) iConfigManager::PriorityLow, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iConfigManager_PriorityMedium", (long) iConfigManager::PriorityMedium, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iConfigManager_PriorityHigh", (long) iConfigManager::PriorityHigh, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iConfigManager_PriorityVeryHigh", (long) iConfigManager::PriorityVeryHigh, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iConfigManager_PriorityMax", (long) iConfigManager::PriorityMax, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iConfigManager_ConfigPriorityPlugin", (long) iConfigManager::ConfigPriorityPlugin, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iConfigManager_ConfigPriorityApplication", (long) iConfigManager::ConfigPriorityApplication, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iConfigManager_ConfigPriorityUserGlobal", (long) iConfigManager::ConfigPriorityUserGlobal, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iConfigManager_ConfigPriorityUserApp", (long) iConfigManager::ConfigPriorityUserApp, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iConfigManager_ConfigPriorityCmdLine", (long) iConfigManager::ConfigPriorityCmdLine, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NODE_DOCUMENT", (long) CS_NODE_DOCUMENT, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NODE_ELEMENT", (long) CS_NODE_ELEMENT, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NODE_COMMENT", (long) CS_NODE_COMMENT, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NODE_UNKNOWN", (long) CS_NODE_UNKNOWN, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NODE_TEXT", (long) CS_NODE_TEXT, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NODE_DECLARATION", (long) CS_NODE_DECLARATION, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CHANGEABLE_NEVER", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CHANGEABLE_NEWROOT", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CHANGEABLE_YES", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_FOG_FRONT", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_FOG_BACK", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_FOG_VIEW", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_FOGTABLE_SIZE", (long) 64, 0, 0, 0},
{ SWIG_PY_FLOAT,   (char*)"CS_FOGTABLE_MEDIANDISTANCE", 0, (double) 10.0f, 0, 0},
{ SWIG_PY_FLOAT,   (char*)"CS_FOGTABLE_MAXDISTANCE", 0, (double) (10.0f*2.0f), 0, 0},
{ SWIG_PY_FLOAT,   (char*)"CS_FOGTABLE_DISTANCESCALE", 0, (double) (1.0f/(10.0f*2.0f)), 0, 0},
{ SWIG_PY_FLOAT,   (char*)"CS_FOGTABLE_CLAMPVALUE", 0, (double) 0.85f, 0, 0},
{ SWIG_PY_FLOAT,   (char*)"CS_FOG_MAXVALUE", 0, (double) ((10.0f*2.0f)*0.85f), 0, 0},
{ SWIG_PY_INT,     (char *)"CS_FX_MASK_MIXMODE", (long) 0xF0000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_FX_COPY", (long) 0x00000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_FX_MULTIPLY", (long) 0x10000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_FX_MULTIPLY2", (long) 0x20000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_FX_ADD", (long) 0x30000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_FX_ALPHA", (long) 0x40000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_FX_TRANSPARENT", (long) 0x50000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_FX_KEYCOLOR", (long) 0x08000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_FX_GOURAUD", (long) 0x04000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_FX_TILING", (long) 0x02000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_FX_MASK_ALPHA", (long) 0x000000FF, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ZBUF_NONE", (long) CS_ZBUF_NONE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ZBUF_FILL", (long) CS_ZBUF_FILL, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ZBUF_TEST", (long) CS_ZBUF_TEST, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ZBUF_USE", (long) CS_ZBUF_USE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ZBUF_FILLONLY", (long) CS_ZBUF_FILLONLY, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ZBUF_EQUAL", (long) CS_ZBUF_EQUAL, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ZBUF_SPECIAL", (long) CS_ZBUF_SPECIAL, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DRENDERSTATE_ZBUFFERMODE", (long) G3DRENDERSTATE_ZBUFFERMODE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DRENDERSTATE_DITHERENABLE", (long) G3DRENDERSTATE_DITHERENABLE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DRENDERSTATE_BILINEARMAPPINGENABLE", (long) G3DRENDERSTATE_BILINEARMAPPINGENABLE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DRENDERSTATE_TRILINEARMAPPINGENABLE", (long) G3DRENDERSTATE_TRILINEARMAPPINGENABLE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DRENDERSTATE_TRANSPARENCYENABLE", (long) G3DRENDERSTATE_TRANSPARENCYENABLE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DRENDERSTATE_MIPMAPENABLE", (long) G3DRENDERSTATE_MIPMAPENABLE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DRENDERSTATE_TEXTUREMAPPINGENABLE", (long) G3DRENDERSTATE_TEXTUREMAPPINGENABLE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DRENDERSTATE_LIGHTINGENABLE", (long) G3DRENDERSTATE_LIGHTINGENABLE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DRENDERSTATE_INTERLACINGENABLE", (long) G3DRENDERSTATE_INTERLACINGENABLE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DRENDERSTATE_MMXENABLE", (long) G3DRENDERSTATE_MMXENABLE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DRENDERSTATE_INTERPOLATIONSTEP", (long) G3DRENDERSTATE_INTERPOLATIONSTEP, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DRENDERSTATE_MAXPOLYGONSTODRAW", (long) G3DRENDERSTATE_MAXPOLYGONSTODRAW, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DRENDERSTATE_GOURAUDENABLE", (long) G3DRENDERSTATE_GOURAUDENABLE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DRENDERSTATE_EDGES", (long) G3DRENDERSTATE_EDGES, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSDRAW_2DGRAPHICS", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSDRAW_3DGRAPHICS", (long) 0x00000002, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSDRAW_CLEARZBUFFER", (long) 0x00000010, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CSDRAW_CLEARSCREEN", (long) 0x00000020, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DFOGMETHOD_NONE", (long) G3DFOGMETHOD_NONE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DFOGMETHOD_ZBUFFER", (long) G3DFOGMETHOD_ZBUFFER, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DFOGMETHOD_VERTEX", (long) G3DFOGMETHOD_VERTEX, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CLIPPER_NONE", (long) -1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CLIPPER_OPTIONAL", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CLIPPER_TOPLEVEL", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CLIPPER_REQUIRED", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CLIP_NOT", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CLIP_NEEDED", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CLIP_TOPLEVEL", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DTriangleMesh_MAX_VERTEXPOOL", (long) G3DTriangleMesh::MAX_VERTEXPOOL, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DTriangleMesh_VM_WORLDSPACE", (long) G3DTriangleMesh::VM_WORLDSPACE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DTriangleMesh_VM_VIEWSPACE", (long) G3DTriangleMesh::VM_VIEWSPACE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DPolygonMesh_VM_WORLDSPACE", (long) G3DPolygonMesh::VM_WORLDSPACE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"G3DPolygonMesh_VM_VIEWSPACE", (long) G3DPolygonMesh::VM_VIEWSPACE, 0, 0, 0},
{ SWIG_PY_STRING,  (char*)"CSFONT_LARGE", 0, 0, (void *)"*large", 0},
{ SWIG_PY_STRING,  (char*)"CSFONT_ITALIC", 0, 0, (void *)"*italic", 0},
{ SWIG_PY_STRING,  (char*)"CSFONT_COURIER", 0, 0, (void *)"*courier", 0},
{ SWIG_PY_STRING,  (char*)"CSFONT_SMALL", 0, 0, (void *)"*small", 0},
{ SWIG_PY_INT,     (char *)"CS_TEXTURE_2D", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_TEXTURE_3D", (long) 0x00000002, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_TEXTURE_DITHER", (long) 0x00000004, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_TEXTURE_NOMIPMAPS", (long) 0x00000008, 0, 0, 0},
{ SWIG_PY_FLOAT,   (char*)"CS_DEFMAT_DIFFUSE", 0, (double) 0.7f, 0, 0},
{ SWIG_PY_FLOAT,   (char*)"CS_DEFMAT_AMBIENT", 0, (double) 0.0f, 0, 0},
{ SWIG_PY_FLOAT,   (char*)"CS_DEFMAT_REFLECTION", 0, (double) 0.0f, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ALERT_ERROR", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ALERT_WARNING", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_ALERT_NOTE", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_POS_BY_FRAME", (long) CS_POS_BY_FRAME, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_POS_BY_TIME", (long) CS_POS_BY_TIME, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_DECODE_SPAN", (long) CS_DECODE_SPAN, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_DYNAMIC_FRAMESIZE", (long) CS_DYNAMIC_FRAMESIZE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_STREAMTYPE_AUDIO", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_STREAMTYPE_VIDEO", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_STREAMTYPE_MIDI", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_STREAMTYPE_TEXT", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CODECFORMAT_RGB_CHANNEL", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CODECFORMAT_RGBA_CHANNEL", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CODECFORMAT_YUV_CHANNEL", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CODECFORMAT_RGB_INTERLEAVED", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CODECFORMAT_RGBA_INTERLEAVED", (long) 5, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_CODECFORMAT_YUV_INTERLEAVED", (long) 6, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_IMGFMT_MASK", (long) 0x0000ffff, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_IMGFMT_NONE", (long) 0x00000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_IMGFMT_TRUECOLOR", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_IMGFMT_PALETTED8", (long) 0x00000002, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_IMGFMT_ANY", (long) 0x0000ffff, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_IMGFMT_ALPHA", (long) 0x00010000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_IMGFMT_INVALID", (long) 0x80000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_IMAGEIO_LOAD", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_IMAGEIO_SAVE", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_REPORTER_SEVERITY_BUG", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_REPORTER_SEVERITY_ERROR", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_REPORTER_SEVERITY_WARNING", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_REPORTER_SEVERITY_NOTIFY", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_REPORTER_SEVERITY_DEBUG", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csConPageUp", (long) csConPageUp, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csConPageDown", (long) csConPageDown, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csConVeryTop", (long) csConVeryTop, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csConVeryBottom", (long) csConVeryBottom, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csConNoCursor", (long) csConNoCursor, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csConNormalCursor", (long) csConNormalCursor, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"csConInsertCursor", (long) csConInsertCursor, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_SOCKET_TYPE_TCP", (long) CS_NET_SOCKET_TYPE_TCP, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_SOCKET_TYPE_UDP", (long) CS_NET_SOCKET_TYPE_UDP, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_SOCKET_NOERROR", (long) CS_NET_SOCKET_NOERROR, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_SOCKET_CANNOT_CREATE", (long) CS_NET_SOCKET_CANNOT_CREATE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_SOCKET_UNSUPPORTED_SOCKET_TYPE", (long) CS_NET_SOCKET_UNSUPPORTED_SOCKET_TYPE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_SOCKET_NOTCONNECTED", (long) CS_NET_SOCKET_NOTCONNECTED, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_SOCKET_CANNOT_SETBLOCK", (long) CS_NET_SOCKET_CANNOT_SETBLOCK, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_SOCKET_CANNOT_SETREUSE", (long) CS_NET_SOCKET_CANNOT_SETREUSE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_SOCKET_CANNOT_BIND", (long) CS_NET_SOCKET_CANNOT_BIND, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_SOCKET_CANNOT_LISTEN", (long) CS_NET_SOCKET_CANNOT_LISTEN, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_SOCKET_CANNOT_SELECT", (long) CS_NET_SOCKET_CANNOT_SELECT, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_SOCKET_CANNOT_IOCTL", (long) CS_NET_SOCKET_CANNOT_IOCTL, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_SOCKET_CANNOT_ACCEPT", (long) CS_NET_SOCKET_CANNOT_ACCEPT, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_SOCKET_WOULDBLOCK", (long) CS_NET_SOCKET_WOULDBLOCK, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_SOCKET_NODATA", (long) CS_NET_SOCKET_NODATA, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_SOCKET_CANNOT_RESOLVE", (long) CS_NET_SOCKET_CANNOT_RESOLVE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_SOCKET_CANNOT_CONNECT", (long) CS_NET_SOCKET_CANNOT_CONNECT, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_ERR_NO_ERROR", (long) CS_NET_ERR_NO_ERROR, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_ERR_CANNOT_RESOLVE_ADDRESS", (long) CS_NET_ERR_CANNOT_RESOLVE_ADDRESS, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_ERR_CANNOT_CONNECT", (long) CS_NET_ERR_CANNOT_CONNECT, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_ERR_CANNOT_SEND", (long) CS_NET_ERR_CANNOT_SEND, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_ERR_INVALID_SOCKET", (long) CS_NET_ERR_INVALID_SOCKET, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_ERR_CANNOT_BIND", (long) CS_NET_ERR_CANNOT_BIND, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_ERR_CANNOT_LISTEN", (long) CS_NET_ERR_CANNOT_LISTEN, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_ERR_CANNOT_CREATE", (long) CS_NET_ERR_CANNOT_CREATE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_ERR_CANNOT_ACCEPT", (long) CS_NET_ERR_CANNOT_ACCEPT, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_ERR_CANNOT_SET_BLOCKING_MODE", (long) CS_NET_ERR_CANNOT_SET_BLOCKING_MODE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_ERR_CANNOT_RECEIVE", (long) CS_NET_ERR_CANNOT_RECEIVE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_ERR_CANNOT_PARSE_ADDRESS", (long) CS_NET_ERR_CANNOT_PARSE_ADDRESS, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_ERR_CANNOT_GET_VERSION", (long) CS_NET_ERR_CANNOT_GET_VERSION, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_ERR_WRONG_VERSION", (long) CS_NET_ERR_WRONG_VERSION, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_ERR_CANNOT_CLEANUP", (long) CS_NET_ERR_CANNOT_CLEANUP, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_ERR_NO_SUCH_OPTION", (long) CS_NET_ERR_NO_SUCH_OPTION, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CS_NET_ERR_CANNOT_SET_OPTION", (long) CS_NET_ERR_CANNOT_SET_OPTION, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcCamera_freelook", (long) iPcCamera::freelook, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcCamera_follow", (long) iPcCamera::follow, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcCamera_rotational", (long) iPcCamera::rotational, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcCamera_firstperson", (long) iPcCamera::firstperson, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_MOUSE_BUTTON1", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_MOUSE_BUTTON2", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_MOUSE_BUTTON3", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_NONE", (long) CEL_DATA_NONE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_BOOL", (long) CEL_DATA_BOOL, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_BYTE", (long) CEL_DATA_BYTE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_WORD", (long) CEL_DATA_WORD, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_LONG", (long) CEL_DATA_LONG, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_UBYTE", (long) CEL_DATA_UBYTE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_UWORD", (long) CEL_DATA_UWORD, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_ULONG", (long) CEL_DATA_ULONG, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_FLOAT", (long) CEL_DATA_FLOAT, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_VECTOR3", (long) CEL_DATA_VECTOR3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_STRING", (long) CEL_DATA_STRING, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_PCLASS", (long) CEL_DATA_PCLASS, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_ENTITY", (long) CEL_DATA_ENTITY, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_BUFFER", (long) CEL_DATA_BUFFER, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_ACTION", (long) CEL_DATA_ACTION, 0, 0, 0},
{0}};

#ifdef __cplusplus
}
#endif

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT(void) SWIG_init(void) {
    static PyObject *SWIG_globals = 0; 
    static int       typeinit = 0;
    PyObject *m, *d;
    int       i;
    if (!SWIG_globals) SWIG_globals = SWIG_newvarlink();
    m = Py_InitModule((char *) SWIG_name, SwigMethods);
    d = PyModule_GetDict(m);
    
    if (!typeinit) {
        for (i = 0; swig_types_initial[i]; i++) {
            swig_types[i] = SWIG_TypeRegister(swig_types_initial[i]);
        }
        typeinit = 1;
    }
    SWIG_InstallConstants(d,swig_const_table);
    
    PyDict_SetItemString(d,(char*)"cvar", SWIG_globals);
    SWIG_addvarlink(SWIG_globals,(char*)"iSCF_SCF",_wrap_iSCF_SCF_get, _wrap_iSCF_SCF_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iFactory_VERSION",_wrap_iFactory_VERSION_get, _wrap_iFactory_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iBase_VERSION",_wrap_iBase_VERSION_get, _wrap_iBase_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSCF_VERSION",_wrap_iSCF_VERSION_get, _wrap_iSCF_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iDebugHelper_VERSION",_wrap_iDebugHelper_VERSION_get, _wrap_iDebugHelper_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iString_VERSION",_wrap_iString_VERSION_get, _wrap_iString_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"FRAGMENT_BUFFER_SIZE",_wrap_FRAGMENT_BUFFER_SIZE_get, _wrap_FRAGMENT_BUFFER_SIZE_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iPolygonMesh_VERSION",_wrap_iPolygonMesh_VERSION_get, _wrap_iPolygonMesh_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iClipper2D_VERSION",_wrap_iClipper2D_VERSION_get, _wrap_iClipper2D_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iObjectModelListener_VERSION",_wrap_iObjectModelListener_VERSION_get, _wrap_iObjectModelListener_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iObjectModel_VERSION",_wrap_iObjectModel_VERSION_get, _wrap_iObjectModel_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iFrustumViewUserdata_VERSION",_wrap_iFrustumViewUserdata_VERSION_get, _wrap_iFrustumViewUserdata_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iFrustumView_VERSION",_wrap_iFrustumView_VERSION_get, _wrap_iFrustumView_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iLightCallback_VERSION",_wrap_iLightCallback_VERSION_get, _wrap_iLightCallback_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iLight_VERSION",_wrap_iLight_VERSION_get, _wrap_iLight_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iLightList_VERSION",_wrap_iLightList_VERSION_get, _wrap_iLightList_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iLightingProcessData_VERSION",_wrap_iLightingProcessData_VERSION_get, _wrap_iLightingProcessData_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iLightingProcessInfo_VERSION",_wrap_iLightingProcessInfo_VERSION_get, _wrap_iLightingProcessInfo_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iLightIterator_VERSION",_wrap_iLightIterator_VERSION_get, _wrap_iLightIterator_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iStatLight_VERSION",_wrap_iStatLight_VERSION_get, _wrap_iStatLight_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSectorCallback_VERSION",_wrap_iSectorCallback_VERSION_get, _wrap_iSectorCallback_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSector_VERSION",_wrap_iSector_VERSION_get, _wrap_iSector_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSectorList_VERSION",_wrap_iSectorList_VERSION_get, _wrap_iSectorList_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSectorIterator_VERSION",_wrap_iSectorIterator_VERSION_get, _wrap_iSectorIterator_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iEngine_VERSION",_wrap_iEngine_VERSION_get, _wrap_iEngine_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iCamera_VERSION",_wrap_iCamera_VERSION_get, _wrap_iCamera_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iCameraPosition_VERSION",_wrap_iCameraPosition_VERSION_get, _wrap_iCameraPosition_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iCameraPositionList_VERSION",_wrap_iCameraPositionList_VERSION_get, _wrap_iCameraPositionList_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iTextureCallback_VERSION",_wrap_iTextureCallback_VERSION_get, _wrap_iTextureCallback_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iTextureWrapper_VERSION",_wrap_iTextureWrapper_VERSION_get, _wrap_iTextureWrapper_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iTextureList_VERSION",_wrap_iTextureList_VERSION_get, _wrap_iTextureList_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iMaterialWrapper_VERSION",_wrap_iMaterialWrapper_VERSION_get, _wrap_iMaterialWrapper_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iMaterialEngine_VERSION",_wrap_iMaterialEngine_VERSION_get, _wrap_iMaterialEngine_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iMaterialList_VERSION",_wrap_iMaterialList_VERSION_get, _wrap_iMaterialList_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iMeshDrawCallback_VERSION",_wrap_iMeshDrawCallback_VERSION_get, _wrap_iMeshDrawCallback_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iMeshWrapper_VERSION",_wrap_iMeshWrapper_VERSION_get, _wrap_iMeshWrapper_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iMeshFactoryWrapper_VERSION",_wrap_iMeshFactoryWrapper_VERSION_get, _wrap_iMeshFactoryWrapper_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iMeshList_VERSION",_wrap_iMeshList_VERSION_get, _wrap_iMeshList_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iMeshFactoryList_VERSION",_wrap_iMeshFactoryList_VERSION_get, _wrap_iMeshFactoryList_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iMeshWrapperIterator_VERSION",_wrap_iMeshWrapperIterator_VERSION_get, _wrap_iMeshWrapperIterator_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iMovableListener_VERSION",_wrap_iMovableListener_VERSION_get, _wrap_iMovableListener_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iMovable_VERSION",_wrap_iMovable_VERSION_get, _wrap_iMovable_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iVisibilityObjectIterator_VERSION",_wrap_iVisibilityObjectIterator_VERSION_get, _wrap_iVisibilityObjectIterator_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iVisibilityCuller_VERSION",_wrap_iVisibilityCuller_VERSION_get, _wrap_iVisibilityCuller_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iVisibilityObject_VERSION",_wrap_iVisibilityObject_VERSION_get, _wrap_iVisibilityObject_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iModelConverter_VERSION",_wrap_iModelConverter_VERSION_get, _wrap_iModelConverter_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iMeshObjectDrawCallback_VERSION",_wrap_iMeshObjectDrawCallback_VERSION_get, _wrap_iMeshObjectDrawCallback_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iMeshObject_VERSION",_wrap_iMeshObject_VERSION_get, _wrap_iMeshObject_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iMeshObjectFactory_VERSION",_wrap_iMeshObjectFactory_VERSION_get, _wrap_iMeshObjectFactory_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iMeshObjectType_VERSION",_wrap_iMeshObjectType_VERSION_get, _wrap_iMeshObjectType_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSprite2DUVAnimationFrame_VERSION",_wrap_iSprite2DUVAnimationFrame_VERSION_get, _wrap_iSprite2DUVAnimationFrame_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSprite2DUVAnimation_VERSION",_wrap_iSprite2DUVAnimation_VERSION_get, _wrap_iSprite2DUVAnimation_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSprite2DFactoryState_VERSION",_wrap_iSprite2DFactoryState_VERSION_get, _wrap_iSprite2DFactoryState_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSprite2DState_VERSION",_wrap_iSprite2DState_VERSION_get, _wrap_iSprite2DState_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSpriteFrame_VERSION",_wrap_iSpriteFrame_VERSION_get, _wrap_iSpriteFrame_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSpriteAction_VERSION",_wrap_iSpriteAction_VERSION_get, _wrap_iSpriteAction_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSpriteSocket_VERSION",_wrap_iSpriteSocket_VERSION_get, _wrap_iSpriteSocket_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSprite3DFactoryState_VERSION",_wrap_iSprite3DFactoryState_VERSION_get, _wrap_iSprite3DFactoryState_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSprite3DState_VERSION",_wrap_iSprite3DState_VERSION_get, _wrap_iSprite3DState_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iThingFactoryState_VERSION",_wrap_iThingFactoryState_VERSION_get, _wrap_iThingFactoryState_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iThingState_VERSION",_wrap_iThingState_VERSION_get, _wrap_iThingState_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iThingEnvironment_VERSION",_wrap_iThingEnvironment_VERSION_get, _wrap_iThingEnvironment_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iLightMap_VERSION",_wrap_iLightMap_VERSION_get, _wrap_iLightMap_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iPolygon3DStatic_VERSION",_wrap_iPolygon3DStatic_VERSION_get, _wrap_iPolygon3DStatic_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iPolygon3D_VERSION",_wrap_iPolygon3D_VERSION_get, _wrap_iPolygon3D_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iPolygonTexture_VERSION",_wrap_iPolygonTexture_VERSION_get, _wrap_iPolygonTexture_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iLoaderStatus_VERSION",_wrap_iLoaderStatus_VERSION_get, _wrap_iLoaderStatus_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iLoader_VERSION",_wrap_iLoader_VERSION_get, _wrap_iLoader_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iLoaderPlugin_VERSION",_wrap_iLoaderPlugin_VERSION_get, _wrap_iLoaderPlugin_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iBinaryLoaderPlugin_VERSION",_wrap_iBinaryLoaderPlugin_VERSION_get, _wrap_iBinaryLoaderPlugin_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSaver_VERSION",_wrap_iSaver_VERSION_get, _wrap_iSaver_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSoundHandle_VERSION",_wrap_iSoundHandle_VERSION_get, _wrap_iSoundHandle_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSoundLoader_VERSION",_wrap_iSoundLoader_VERSION_get, _wrap_iSoundLoader_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSoundRender_VERSION",_wrap_iSoundRender_VERSION_get, _wrap_iSoundRender_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSoundWrapper_VERSION",_wrap_iSoundWrapper_VERSION_get, _wrap_iSoundWrapper_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSoundDriver_VERSION",_wrap_iSoundDriver_VERSION_get, _wrap_iSoundDriver_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSoundSource_VERSION",_wrap_iSoundSource_VERSION_get, _wrap_iSoundSource_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iComponent_VERSION",_wrap_iComponent_VERSION_get, _wrap_iComponent_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iCacheManager_VERSION",_wrap_iCacheManager_VERSION_get, _wrap_iCacheManager_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iFile_VERSION",_wrap_iFile_VERSION_get, _wrap_iFile_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iVFS_VERSION",_wrap_iVFS_VERSION_get, _wrap_iVFS_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iObject_VERSION",_wrap_iObject_VERSION_get, _wrap_iObject_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iObjectIterator_VERSION",_wrap_iObjectIterator_VERSION_get, _wrap_iObjectIterator_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iDataObject_VERSION",_wrap_iDataObject_VERSION_get, _wrap_iDataObject_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iObjectRegistry_VERSION",_wrap_iObjectRegistry_VERSION_get, _wrap_iObjectRegistry_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iObjectRegistryIterator_VERSION",_wrap_iObjectRegistryIterator_VERSION_get, _wrap_iObjectRegistryIterator_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iVirtualClock_VERSION",_wrap_iVirtualClock_VERSION_get, _wrap_iVirtualClock_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iEvent_VERSION",_wrap_iEvent_VERSION_get, _wrap_iEvent_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iEventPlug_VERSION",_wrap_iEventPlug_VERSION_get, _wrap_iEventPlug_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iEventOutlet_VERSION",_wrap_iEventOutlet_VERSION_get, _wrap_iEventOutlet_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iEventCord_VERSION",_wrap_iEventCord_VERSION_get, _wrap_iEventCord_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iEventQueue_VERSION",_wrap_iEventQueue_VERSION_get, _wrap_iEventQueue_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iEventHandler_VERSION",_wrap_iEventHandler_VERSION_get, _wrap_iEventHandler_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iPluginIterator_VERSION",_wrap_iPluginIterator_VERSION_get, _wrap_iPluginIterator_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iPluginManager_VERSION",_wrap_iPluginManager_VERSION_get, _wrap_iPluginManager_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iKeyboardDriver_VERSION",_wrap_iKeyboardDriver_VERSION_get, _wrap_iKeyboardDriver_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iMouseDriver_VERSION",_wrap_iMouseDriver_VERSION_get, _wrap_iMouseDriver_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iJoystickDriver_VERSION",_wrap_iJoystickDriver_VERSION_get, _wrap_iJoystickDriver_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iConfigFile_VERSION",_wrap_iConfigFile_VERSION_get, _wrap_iConfigFile_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iConfigIterator_VERSION",_wrap_iConfigIterator_VERSION_get, _wrap_iConfigIterator_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iConfigManager_VERSION",_wrap_iConfigManager_VERSION_get, _wrap_iConfigManager_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iStrVector_VERSION",_wrap_iStrVector_VERSION_get, _wrap_iStrVector_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iDocumentAttributeIterator_VERSION",_wrap_iDocumentAttributeIterator_VERSION_get, _wrap_iDocumentAttributeIterator_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iDocumentAttribute_VERSION",_wrap_iDocumentAttribute_VERSION_get, _wrap_iDocumentAttribute_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iDocumentNodeIterator_VERSION",_wrap_iDocumentNodeIterator_VERSION_get, _wrap_iDocumentNodeIterator_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iDocumentNode_VERSION",_wrap_iDocumentNode_VERSION_get, _wrap_iDocumentNode_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iDocument_VERSION",_wrap_iDocument_VERSION_get, _wrap_iDocument_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iDocumentSystem_VERSION",_wrap_iDocumentSystem_VERSION_get, _wrap_iDocumentSystem_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iDataBuffer_VERSION",_wrap_iDataBuffer_VERSION_get, _wrap_iDataBuffer_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iGraphics3D_VERSION",_wrap_iGraphics3D_VERSION_get, _wrap_iGraphics3D_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iOffscreenCanvasCallback_VERSION",_wrap_iOffscreenCanvasCallback_VERSION_get, _wrap_iOffscreenCanvasCallback_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iGraphics2D_VERSION",_wrap_iGraphics2D_VERSION_get, _wrap_iGraphics2D_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iFontDeleteNotify_VERSION",_wrap_iFontDeleteNotify_VERSION_get, _wrap_iFontDeleteNotify_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iFont_VERSION",_wrap_iFont_VERSION_get, _wrap_iFont_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iFontServer_VERSION",_wrap_iFontServer_VERSION_get, _wrap_iFontServer_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iHalo_VERSION",_wrap_iHalo_VERSION_get, _wrap_iHalo_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iTextureHandle_VERSION",_wrap_iTextureHandle_VERSION_get, _wrap_iTextureHandle_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iTextureManager_VERSION",_wrap_iTextureManager_VERSION_get, _wrap_iTextureManager_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iVertexBuffer_VERSION",_wrap_iVertexBuffer_VERSION_get, _wrap_iVertexBuffer_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iPolygonBuffer_VERSION",_wrap_iPolygonBuffer_VERSION_get, _wrap_iPolygonBuffer_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iVertexBufferManagerClient_VERSION",_wrap_iVertexBufferManagerClient_VERSION_get, _wrap_iVertexBufferManagerClient_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iVertexBufferManager_VERSION",_wrap_iVertexBufferManager_VERSION_get, _wrap_iVertexBufferManager_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iMaterial_VERSION",_wrap_iMaterial_VERSION_get, _wrap_iMaterial_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iMaterialHandle_VERSION",_wrap_iMaterialHandle_VERSION_get, _wrap_iMaterialHandle_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iNativeWindowManager_VERSION",_wrap_iNativeWindowManager_VERSION_get, _wrap_iNativeWindowManager_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iNativeWindow_VERSION",_wrap_iNativeWindow_VERSION_get, _wrap_iNativeWindow_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iStreamIterator_VERSION",_wrap_iStreamIterator_VERSION_get, _wrap_iStreamIterator_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iStreamFormat_VERSION",_wrap_iStreamFormat_VERSION_get, _wrap_iStreamFormat_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iStream_VERSION",_wrap_iStream_VERSION_get, _wrap_iStream_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iVideoStream_VERSION",_wrap_iVideoStream_VERSION_get, _wrap_iVideoStream_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iAudioStream_VERSION",_wrap_iAudioStream_VERSION_get, _wrap_iAudioStream_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iImage_VERSION",_wrap_iImage_VERSION_get, _wrap_iImage_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iImageIO_VERSION",_wrap_iImageIO_VERSION_get, _wrap_iImageIO_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iReporterListener_VERSION",_wrap_iReporterListener_VERSION_get, _wrap_iReporterListener_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iReporterIterator_VERSION",_wrap_iReporterIterator_VERSION_get, _wrap_iReporterIterator_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iReporter_VERSION",_wrap_iReporter_VERSION_get, _wrap_iReporter_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iStandardReporterListener_VERSION",_wrap_iStandardReporterListener_VERSION_get, _wrap_iStandardReporterListener_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iView_VERSION",_wrap_iView_VERSION_get, _wrap_iView_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iCollider_VERSION",_wrap_iCollider_VERSION_get, _wrap_iCollider_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iCollideSystem_VERSION",_wrap_iCollideSystem_VERSION_get, _wrap_iCollideSystem_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iDynamics_VERSION",_wrap_iDynamics_VERSION_get, _wrap_iDynamics_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iDynamicSystem_VERSION",_wrap_iDynamicSystem_VERSION_get, _wrap_iDynamicSystem_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iDynamicsMoveCallback_VERSION",_wrap_iDynamicsMoveCallback_VERSION_get, _wrap_iDynamicsMoveCallback_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iDynamicsCollisionCallback_VERSION",_wrap_iDynamicsCollisionCallback_VERSION_get, _wrap_iDynamicsCollisionCallback_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iBodyGroup_VERSION",_wrap_iBodyGroup_VERSION_get, _wrap_iBodyGroup_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iRigidBody_VERSION",_wrap_iRigidBody_VERSION_get, _wrap_iRigidBody_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iJoint_VERSION",_wrap_iJoint_VERSION_get, _wrap_iJoint_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iConsoleWatcher_VERSION",_wrap_iConsoleWatcher_VERSION_get, _wrap_iConsoleWatcher_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iConsoleOutput_VERSION",_wrap_iConsoleOutput_VERSION_get, _wrap_iConsoleOutput_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iParameterESM_VERSION",_wrap_iParameterESM_VERSION_get, _wrap_iParameterESM_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iEngineSequenceParameters_VERSION",_wrap_iEngineSequenceParameters_VERSION_get, _wrap_iEngineSequenceParameters_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSequenceWrapper_VERSION",_wrap_iSequenceWrapper_VERSION_get, _wrap_iSequenceWrapper_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSequenceTrigger_VERSION",_wrap_iSequenceTrigger_VERSION_get, _wrap_iSequenceTrigger_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iSequenceTimedOperation_VERSION",_wrap_iSequenceTimedOperation_VERSION_get, _wrap_iSequenceTimedOperation_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iEngineSequenceManager_VERSION",_wrap_iEngineSequenceManager_VERSION_get, _wrap_iEngineSequenceManager_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iNetworkPacket_VERSION",_wrap_iNetworkPacket_VERSION_get, _wrap_iNetworkPacket_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iNetworkPacket2_VERSION",_wrap_iNetworkPacket2_VERSION_get, _wrap_iNetworkPacket2_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iNetworkManager_VERSION",_wrap_iNetworkManager_VERSION_get, _wrap_iNetworkManager_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iNetworkEndPoint_VERSION",_wrap_iNetworkEndPoint_VERSION_get, _wrap_iNetworkEndPoint_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iNetworkConnection_VERSION",_wrap_iNetworkConnection_VERSION_get, _wrap_iNetworkConnection_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iNetworkListener_VERSION",_wrap_iNetworkListener_VERSION_get, _wrap_iNetworkListener_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iNetworkDriver_VERSION",_wrap_iNetworkDriver_VERSION_get, _wrap_iNetworkDriver_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"iNetworkSocket2_VERSION",_wrap_iNetworkSocket2_VERSION_get, _wrap_iNetworkSocket2_VERSION_set);
    SWIG_addvarlink(SWIG_globals,(char*)"csColliderWrapper_VERSION",_wrap_csColliderWrapper_VERSION_get, _wrap_csColliderWrapper_VERSION_set);
}

