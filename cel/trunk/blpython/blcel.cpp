/*
 * FILE : blpython/blcel.cpp
 * 
 * This file was automatically generated by :
 * Simplified Wrapper and Interface Generator (SWIG)
 * Version 1.1 (Patch 5)
 * 
 * Portions Copyright (c) 1995-1998
 * The University of Utah and The Regents of the University of California.
 * Permission is granted to distribute this file in any manner provided
 * this notice remains intact.
 * 
 * Do not make changes to this file--changes will be lost!
 *
 */


#define SWIGCODE
/* Implementation : PYTHON */

#define SWIGPYTHON
#include <string.h>
#include <stdlib.h>
/***********************************************************************
 * $Header$
 * swig_lib/python/python.cfg
 *
 * This file contains coded needed to add variable linking to the
 * Python interpreter.   C variables are added as a new kind of Python
 * datatype.
 *
 * Also contains supporting code for building python under Windows
 * and things like that.
 *
 * $Log$
 * Revision 1.9  2003/03/28 07:12:29  jorrit
 * Fixed python plugin.
 *
 ************************************************************************/

#ifdef __cplusplus
extern "C" {
#endif
#include "Python.h"
#ifdef __cplusplus
}
#endif

/* Definitions for Windows/Unix exporting */
#if defined(__WIN32__)
#   if defined(_MSC_VER)
#	define SWIGEXPORT(a,b) __declspec(dllexport) a b
#   else
#	if defined(__BORLANDC__)
#	    define SWIGEXPORT(a,b) a _export b
#	else
#	    define SWIGEXPORT(a,b) a b
#	endif
#   endif
#else
#   define SWIGEXPORT(a,b) a b
#endif

#ifdef SWIG_GLOBAL
#ifdef __cplusplus
#define SWIGSTATIC extern "C"
#else
#define SWIGSTATIC
#endif
#endif

#ifndef SWIGSTATIC
#define SWIGSTATIC static
#endif

typedef struct {
  char  *name;
  PyObject *(*get_attr)(void);
  int (*set_attr)(PyObject *);
} swig_globalvar;

typedef struct swig_varlinkobject {
  PyObject_HEAD
  swig_globalvar **vars;
  int      nvars;
  int      maxvars;
} swig_varlinkobject;

/* ----------------------------------------------------------------------
   swig_varlink_repr()

   Function for python repr method
   ---------------------------------------------------------------------- */

static PyObject *
swig_varlink_repr(swig_varlinkobject *v)
{
  v = v;
  return PyString_FromString("<Global variables>");
}

/* ---------------------------------------------------------------------
   swig_varlink_print()

   Print out all of the global variable names
   --------------------------------------------------------------------- */

static int
swig_varlink_print(swig_varlinkobject *v, FILE *fp, int flags)
{

  int i = 0;
  flags = flags;
  fprintf(fp,"Global variables { ");
  while (v->vars[i]) {
    fprintf(fp,"%s", v->vars[i]->name);
    i++;
    if (v->vars[i]) fprintf(fp,", ");
  }
  fprintf(fp," }\n");
  return 0;
}

/* --------------------------------------------------------------------
   swig_varlink_getattr
 
   This function gets the value of a variable and returns it as a
   PyObject.   In our case, we'll be looking at the datatype and
   converting into a number or string
   -------------------------------------------------------------------- */

static PyObject *
swig_varlink_getattr(swig_varlinkobject *v, char *n)
{
  int i = 0;
  char temp[128];

  while (v->vars[i]) {
    if (strcmp(v->vars[i]->name,n) == 0) {
      return (*v->vars[i]->get_attr)();
    }
    i++;
  }
  sprintf(temp,"C global variable %s not found.", n);
  PyErr_SetString(PyExc_NameError,temp);
  return NULL;
}

/* -------------------------------------------------------------------
   swig_varlink_setattr()

   This function sets the value of a variable.
   ------------------------------------------------------------------- */

static int
swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p)
{
  char temp[128];
  int i = 0;
  while (v->vars[i]) {
    if (strcmp(v->vars[i]->name,n) == 0) {
      return (*v->vars[i]->set_attr)(p);
    }
    i++;
  }
  sprintf(temp,"C global variable %s not found.", n);
  PyErr_SetString(PyExc_NameError,temp);
  return 1;
}

statichere PyTypeObject varlinktype = {
/*  PyObject_HEAD_INIT(&PyType_Type)  Note : This doesn't work on some machines */
  PyObject_HEAD_INIT(0)              
  0,
  "varlink",                          /* Type name    */
  sizeof(swig_varlinkobject),         /* Basic size   */
  0,                                  /* Itemsize     */
  0,                                  /* Deallocator  */ 
  (printfunc) swig_varlink_print,     /* Print        */
  (getattrfunc) swig_varlink_getattr, /* get attr     */
  (setattrfunc) swig_varlink_setattr, /* Set attr     */
  0,                                  /* tp_compare   */
  (reprfunc) swig_varlink_repr,       /* tp_repr      */    
  0,                                  /* tp_as_number */
  0,                                  /* tp_as_mapping*/
  0,                                  /* tp_hash      */
};

/* Create a variable linking object for use later */

SWIGSTATIC PyObject *
SWIG_newvarlink(void)
{
  swig_varlinkobject *result = 0;
  result = PyMem_NEW(swig_varlinkobject,1);
  varlinktype.ob_type = &PyType_Type;    /* Patch varlinktype into a PyType */
  result->ob_type = &varlinktype;
  /*  _Py_NewReference(result);  Does not seem to be necessary */
  result->nvars = 0;
  result->maxvars = 64;
  result->vars = (swig_globalvar **) malloc(64*sizeof(swig_globalvar *));
  result->vars[0] = 0;
  result->ob_refcnt = 0;
  Py_XINCREF((PyObject *) result);
  return ((PyObject*) result);
}

SWIGSTATIC void
SWIG_addvarlink(PyObject *p, char *name,
	   PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p))
{
  swig_varlinkobject *v;
  v= (swig_varlinkobject *) p;
	
  if (v->nvars >= v->maxvars -1) {
    v->maxvars = 2*v->maxvars;
    v->vars = (swig_globalvar **) realloc(v->vars,v->maxvars*sizeof(swig_globalvar *));
    if (v->vars == NULL) {
      fprintf(stderr,"SWIG : Fatal error in initializing Python module.\n");
      exit(1);
    }
  }
  v->vars[v->nvars] = (swig_globalvar *) malloc(sizeof(swig_globalvar));
  v->vars[v->nvars]->name = (char *) malloc(strlen(name)+1);
  strcpy(v->vars[v->nvars]->name,name);
  v->vars[v->nvars]->get_attr = get_attr;
  v->vars[v->nvars]->set_attr = set_attr;
  v->nvars++;
  v->vars[v->nvars] = 0;
}



/*****************************************************************************
 * $Header$
 *
 * swigptr.swg
 *
 * This file contains supporting code for the SWIG run-time type checking
 * mechanism.  The following functions are available :
 *
 * SWIG_RegisterMapping(char *origtype, char *newtype, void *(*cast)(void *));
 *
 *      Registers a new type-mapping with the type-checker.  origtype is the
 *      original datatype and newtype is an equivalent type.  cast is optional
 *      pointer to a function to cast pointer values between types (this
 *      is typically used to cast pointers from derived classes to base classes in C++)
 *      
 * SWIG_MakePtr(char *buffer, void *ptr, char *typestring);
 *     
 *      Makes a pointer string from a pointer and typestring.  The result is returned
 *      in buffer which is assumed to hold enough space for the result.
 *
 * char * SWIG_GetPtr(char *buffer, void **ptr, char *type)
 *
 *      Gets a pointer value from a string.  If there is a type-mismatch, returns
 *      a character string to the received type.  On success, returns NULL.
 *
 *
 * You can remap these functions by making a file called "swigptr.swg" in
 * your the same directory as the interface file you are wrapping.
 *
 * These functions are normally declared static, but this file can be
 * can be used in a multi-module environment by redefining the symbol
 * SWIGSTATIC.
 *****************************************************************************/

#include <stdlib.h>

#ifdef SWIG_GLOBAL
#ifdef __cplusplus
#define SWIGSTATIC extern "C"
#else
#define SWIGSTATIC
#endif
#endif

#ifndef SWIGSTATIC
#define SWIGSTATIC static
#endif


/* SWIG pointer structure */

typedef struct SwigPtrType {
  char               *name;               /* Datatype name                  */
  int                 len;                /* Length (used for optimization) */
  void               *(*cast)(void *);    /* Pointer casting function       */
  struct SwigPtrType *next;               /* Linked list pointer            */
} SwigPtrType;

/* Pointer cache structure */

typedef struct {
  int                 stat;               /* Status (valid) bit             */
  SwigPtrType        *tp;                 /* Pointer to type structure      */
  char                name[256];          /* Given datatype name            */
  char                mapped[256];        /* Equivalent name                */
} SwigCacheType;

/* Some variables  */

static int SwigPtrMax  = 64;           /* Max entries that can be currently held */
                                       /* This value may be adjusted dynamically */
static int SwigPtrN    = 0;            /* Current number of entries              */
static int SwigPtrSort = 0;            /* Status flag indicating sort            */
static int SwigStart[256];             /* Starting positions of types            */

/* Pointer table */
static SwigPtrType *SwigPtrTable = 0;  /* Table containing pointer equivalences  */

/* Cached values */

#define SWIG_CACHESIZE  8
#define SWIG_CACHEMASK  0x7
static SwigCacheType SwigCache[SWIG_CACHESIZE];  
static int SwigCacheIndex = 0;
static int SwigLastCache = 0;

/* Sort comparison function */
static int swigsort(const void *data1, const void *data2) {
	SwigPtrType *d1 = (SwigPtrType *) data1;
	SwigPtrType *d2 = (SwigPtrType *) data2;
	return strcmp(d1->name,d2->name);
}

/* Binary Search function */
static int swigcmp(const void *key, const void *data) {
  char *k = (char *) key;
  SwigPtrType *d = (SwigPtrType *) data;
  return strncmp(k,d->name,d->len);
}

/* Register a new datatype with the type-checker */

SWIGSTATIC 
void SWIG_RegisterMapping(char *origtype, char *newtype, void *(*cast)(void *)) {

  int i;
  SwigPtrType *t = 0,*t1;

  /* Allocate the pointer table if necessary */

  if (!SwigPtrTable) {     
    SwigPtrTable = (SwigPtrType *) malloc(SwigPtrMax*sizeof(SwigPtrType));
    SwigPtrN = 0;
  }
  /* Grow the table */
  if (SwigPtrN >= SwigPtrMax) {
    SwigPtrMax = 2*SwigPtrMax;
    SwigPtrTable = (SwigPtrType *) realloc((char *) SwigPtrTable,SwigPtrMax*sizeof(SwigPtrType));
  }
  for (i = 0; i < SwigPtrN; i++)
    if (strcmp(SwigPtrTable[i].name,origtype) == 0) {
      t = &SwigPtrTable[i];
      break;
    }
  if (!t) {
    t = &SwigPtrTable[SwigPtrN];
    t->name = origtype;
    t->len = strlen(t->name);
    t->cast = 0;
    t->next = 0;
    SwigPtrN++;
  }

  /* Check for existing entry */

  while (t->next) {
    if ((strcmp(t->name,newtype) == 0)) {
      if (cast) t->cast = cast;
      return;
    }
    t = t->next;
  }
  
  /* Now place entry (in sorted order) */

  t1 = (SwigPtrType *) malloc(sizeof(SwigPtrType));
  t1->name = newtype;
  t1->len = strlen(t1->name);
  t1->cast = cast;
  t1->next = 0;            
  t->next = t1;           
  SwigPtrSort = 0;
}

/* Make a pointer value string */

SWIGSTATIC 
void SWIG_MakePtr(char *_c, const void *_ptr, char *type) {
  static char _hex[16] =
  {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
   'a', 'b', 'c', 'd', 'e', 'f'};
  unsigned long _p, _s;
  char _result[20], *_r;    /* Note : a 64-bit hex number = 16 digits */
  _r = _result;
  _p = (unsigned long) _ptr;
  if (_p > 0) {
    while (_p > 0) {
      _s = _p & 0xf;
      *(_r++) = _hex[_s];
      _p = _p >> 4;
    }
    *_r = '_';
    while (_r >= _result)
      *(_c++) = *(_r--);
  } else {
    strcpy (_c, "NULL");
  }
  if (_ptr)
    strcpy (_c, type);
}

/* Define for backwards compatibility */

#define _swig_make_hex   SWIG_MakePtr 

/* Function for getting a pointer value */

SWIGSTATIC 
char *SWIG_GetPtr(char *_c, void **ptr, char *_t)
{
  unsigned long _p;
  char temp_type[256];
  char *name;
  int  i, len;
  SwigPtrType *sp,*tp;
  SwigCacheType *cache;
  int  start, end;
  _p = 0;

  /* Pointer values must start with leading underscore */
  if (*_c == '_') {
      _c++;
      /* Extract hex value from pointer */
      while (*_c) {
	  if ((*_c >= '0') && (*_c <= '9'))
	    _p = (_p << 4) + (*_c - '0');
	  else if ((*_c >= 'a') && (*_c <= 'f'))
	    _p = (_p << 4) + ((*_c - 'a') + 10);
	  else
	    break;
	  _c++;
      }

      if (_t) {
	if (strcmp(_t,_c)) { 
	  if (!SwigPtrSort) {
	    qsort((void *) SwigPtrTable, SwigPtrN, sizeof(SwigPtrType), swigsort); 
	    for (i = 0; i < 256; i++) {
	      SwigStart[i] = SwigPtrN;
	    }
	    for (i = SwigPtrN-1; i >= 0; i--) {
	      SwigStart[(int) (SwigPtrTable[i].name[1])] = i;
	    }
	    for (i = 255; i >= 1; i--) {
	      if (SwigStart[i-1] > SwigStart[i])
		SwigStart[i-1] = SwigStart[i];
	    }
	    SwigPtrSort = 1;
	    for (i = 0; i < SWIG_CACHESIZE; i++)  
	      SwigCache[i].stat = 0;
	  }
	  
	  /* First check cache for matches.  Uses last cache value as starting point */
	  cache = &SwigCache[SwigLastCache];
	  for (i = 0; i < SWIG_CACHESIZE; i++) {
	    if (cache->stat) {
	      if (strcmp(_t,cache->name) == 0) {
		if (strcmp(_c,cache->mapped) == 0) {
		  cache->stat++;
		  *ptr = (void *) _p;
		  if (cache->tp->cast) *ptr = (*(cache->tp->cast))(*ptr);
		  return (char *) 0;
		}
	      }
	    }
	    SwigLastCache = (SwigLastCache+1) & SWIG_CACHEMASK;
	    if (!SwigLastCache) cache = SwigCache;
	    else cache++;
	  }
	  /* We have a type mismatch.  Will have to look through our type
	     mapping table to figure out whether or not we can accept this datatype */

	  start = SwigStart[(int) _t[1]];
	  end = SwigStart[(int) _t[1]+1];
	  sp = &SwigPtrTable[start];
	  while (start < end) {
	    if (swigcmp(_t,sp) == 0) break;
	    sp++;
	    start++;
	  }
	  if (start >= end) sp = 0;
	  /* Try to find a match for this */
	  if (sp) {
	    while (swigcmp(_t,sp) == 0) {
	      name = sp->name;
	      len = sp->len;
	      tp = sp->next;
	      /* Try to find entry for our given datatype */
	      while(tp) {
		if (tp->len >= 255) {
		  return _c;
		}
		strcpy(temp_type,tp->name);
		strncat(temp_type,_t+len,255-tp->len);
		if (strcmp(_c,temp_type) == 0) {
		  
		  strcpy(SwigCache[SwigCacheIndex].mapped,_c);
		  strcpy(SwigCache[SwigCacheIndex].name,_t);
		  SwigCache[SwigCacheIndex].stat = 1;
		  SwigCache[SwigCacheIndex].tp = tp;
		  SwigCacheIndex = SwigCacheIndex & SWIG_CACHEMASK;
		  
		  /* Get pointer value */
		  *ptr = (void *) _p;
		  if (tp->cast) *ptr = (*(tp->cast))(*ptr);
		  return (char *) 0;
		}
		tp = tp->next;
	      }
	      sp++;
	      /* Hmmm. Didn't find it this time */
	    }
	  }
	  /* Didn't find any sort of match for this data.  
	     Get the pointer value and return the received type */
	  *ptr = (void *) _p;
	  return _c;
	} else {
	  /* Found a match on the first try.  Return pointer value */
	  *ptr = (void *) _p;
	  return (char *) 0;
	}
      } else {
	/* No type specified.  Good luck */
	*ptr = (void *) _p;
	return (char *) 0;
      }
  } else {
    if (strcmp (_c, "NULL") == 0) {
	*ptr = (void *) 0;
	return (char *) 0;
    }
    *ptr = (void *) 0;	
    return _c;
  }
}

/* Compatibility mode */

#define _swig_get_hex  SWIG_GetPtr

#define SWIG_init    initblcelc

#define SWIG_name    "blcelc"


  #if defined(NO_HANDY_PERL_MACROS)
    #undef Copy
    #undef MAXXCOUNT
    #undef MAXY_SIZE
    #undef MAXYCOUNT
    #undef Move
    #undef New
    #undef Newc
    #undef Newz
    #undef Renew
    #undef Renewc
    #undef Safefree
    #undef StructCopy
    #undef Zero
  #endif

  #include "css.h"
//***** SCF Wrappers
  int MakeVersion(int version0, int version1, int version2)
  {
    return SCF_CONSTRUCT_VERSION(version0, version1, version2);
  }

#include "iutil/plugin.h"
#include "iutil/eventh.h"
#include "iutil/comp.h"
#include "iutil/event.h"
#include "iutil/objreg.h"
#include "iengine/camera.h"
#include "iengine/campos.h"
#include "imesh/object.h"
#include "imesh/thing/thing.h"
#include "imesh/thing/lightmap.h"
#include "imap/parser.h"
#include "ivideo/graph2d.h"
#include "ivideo/fontserv.h"
#include "ivideo/halo.h"



#include <ctype.h>

/*------------------------------------------------------------------
  ptrcast(value,type)

  Constructs a new pointer value.   Value may either be a string
  or an integer. Type is a string corresponding to either the
  C datatype or mangled datatype.

  ptrcast(0,"Vector *")
               or
  ptrcast(0,"Vector_p")   
  ------------------------------------------------------------------ */

static PyObject *ptrcast(PyObject *_PTRVALUE, char *type) {

  char *r,*s;
  void *ptr;
  PyObject *obj;
  char *typestr,*c;

  /* Produce a "mangled" version of the type string.  */

  typestr = (char *) malloc(strlen(type)+2);
  
  /* Go through and munge the typestring */
  
  r = typestr;
  *(r++) = '_';
  c = type;
  while (*c) {
    if (!isspace(*c)) {
      if ((*c == '*') || (*c == '&')) {
	*(r++) = 'p';
      }
      else *(r++) = *c;
    } else {
        *(r++) = '_';
    }
    c++;
  }
  *(r++) = 0;

  /* Check to see what kind of object _PTRVALUE is */
  
  if (PyInt_Check(_PTRVALUE)) {
    ptr = (void *) PyInt_AsLong(_PTRVALUE);
    /* Received a numerical value. Make a pointer out of it */
    r = (char *) malloc(strlen(typestr)+22);
    if (ptr) {
      SWIG_MakePtr(r, ptr, typestr);
    } else {
      sprintf(r,"_0%s",typestr);
    }
    obj = PyString_FromString(r);
    free(r);
  } else if (PyString_Check(_PTRVALUE)) {
    /* Have a real pointer value now.  Try to strip out the pointer
       value */
    s = PyString_AsString(_PTRVALUE);
    r = (char *) malloc(strlen(type)+22);
    
    /* Now extract the pointer value */
    if (!SWIG_GetPtr(s,&ptr,0)) {
      if (ptr) {
	SWIG_MakePtr(r,ptr,typestr);
      } else {
	sprintf(r,"_0%s",typestr);
      }
      obj = PyString_FromString(r);
    } else {
      obj = NULL;
    }
    free(r);
  } else {
    obj = NULL;
  }
  free(typestr);
  if (!obj) 
    PyErr_SetString(PyExc_TypeError,"Type error in ptrcast. Argument is not a valid pointer value.");
  return obj;
}

/*------------------------------------------------------------------
  ptrvalue(ptr,type = 0)

  Attempts to dereference a pointer value.  If type is given, it 
  will try to use that type.  Otherwise, this function will attempt
  to "guess" the proper datatype by checking against all of the 
  builtin C datatypes. 
  ------------------------------------------------------------------ */

static PyObject *ptrvalue(PyObject *_PTRVALUE, int index, char *type) {
  void     *ptr;
  char     *s;
  PyObject *obj;

  if (!PyString_Check(_PTRVALUE)) {
    PyErr_SetString(PyExc_TypeError,"Type error in ptrvalue. Argument is not a valid pointer value.");
    return NULL;
  }
  s = PyString_AsString(_PTRVALUE);
  if (SWIG_GetPtr(s,&ptr,0)) {
    PyErr_SetString(PyExc_TypeError,"Type error in ptrvalue. Argument is not a valid pointer value.");
    return NULL;
  }

  /* If no datatype was passed, try a few common datatypes first */

  if (!type) {

    /* No datatype was passed.   Type to figure out if it's a common one */

    if (!SWIG_GetPtr(s,&ptr,"_int_p")) {
      type = "int";
    } else if (!SWIG_GetPtr(s,&ptr,"_double_p")) {
      type = "double";
    } else if (!SWIG_GetPtr(s,&ptr,"_short_p")) {
      type = "short";
    } else if (!SWIG_GetPtr(s,&ptr,"_long_p")) {
      type = "long";
    } else if (!SWIG_GetPtr(s,&ptr,"_float_p")) {
      type = "float";
    } else if (!SWIG_GetPtr(s,&ptr,"_char_p")) {
      type = "char";
    } else if (!SWIG_GetPtr(s,&ptr,"_char_pp")) {
      type = "char *";
    } else {
      type = "unknown";
    }
  }

  if (!ptr) {
    PyErr_SetString(PyExc_TypeError,"Unable to dereference NULL pointer.");
    return NULL;
  }

  /* Now we have a datatype.  Try to figure out what to do about it */
  if (strcmp(type,"int") == 0) {
    obj = PyInt_FromLong((long) *(((int *) ptr) + index));
  } else if (strcmp(type,"double") == 0) {
    obj = PyFloat_FromDouble((double) *(((double *) ptr)+index));
  } else if (strcmp(type,"short") == 0) {
    obj = PyInt_FromLong((long) *(((short *) ptr)+index));
  } else if (strcmp(type,"long") == 0) {
    obj = PyInt_FromLong((long) *(((long *) ptr)+index));
  } else if (strcmp(type,"float") == 0) {
    obj = PyFloat_FromDouble((double) *(((float *) ptr)+index));
  } else if (strcmp(type,"char") == 0) {
    obj = PyString_FromString(((char *) ptr)+index);
  } else if (strcmp(type,"char *") == 0) {
    char *c = *(((char **) ptr)+index);
    if (c) obj = PyString_FromString(c);
    else obj = PyString_FromString("NULL");
  } else {
    PyErr_SetString(PyExc_TypeError,"Unable to dereference unsupported datatype.");
    return NULL;
  }
  return obj;
}

/*------------------------------------------------------------------
  ptrcreate(type,value = 0,numelements = 1)

  Attempts to create a new object of given type.  Type must be
  a basic C datatype.  Will not create complex objects.
  ------------------------------------------------------------------ */

static PyObject *ptrcreate(char *type, PyObject *_PYVALUE, int numelements) {
  void     *ptr;
  PyObject *obj;
  int       sz;
  char     *cast;
  char      temp[40];

  /* Check the type string against a variety of possibilities */

  if (strcmp(type,"int") == 0) {
    sz = sizeof(int)*numelements;
    cast = "_int_p";
  } else if (strcmp(type,"short") == 0) {
    sz = sizeof(short)*numelements;
    cast = "_short_p";
  } else if (strcmp(type,"long") == 0) {
    sz = sizeof(long)*numelements;
    cast = "_long_p";
  } else if (strcmp(type,"double") == 0) {
    sz = sizeof(double)*numelements;
    cast = "_double_p";
  } else if (strcmp(type,"float") == 0) {
    sz = sizeof(float)*numelements;
    cast = "_float_p";
  } else if (strcmp(type,"char") == 0) {
    sz = sizeof(char)*numelements;
    cast = "_char_p";
  } else if (strcmp(type,"char *") == 0) {
    sz = sizeof(char *)*(numelements+1);
    cast = "_char_pp";
  } else {
    PyErr_SetString(PyExc_TypeError,"Unable to create unknown datatype."); 
    return NULL;
  }
   
  /* Create the new object */
  
  ptr = (void *) malloc(sz);
  if (!ptr) {
    PyErr_SetString(PyExc_MemoryError,"Out of memory in swig_create."); 
    return NULL;
  }

  /* Now try to set its default value */

  if (_PYVALUE) {
    if (strcmp(type,"int") == 0) {
      int *ip,i,ivalue;
      ivalue = (int) PyInt_AsLong(_PYVALUE);
      ip = (int *) ptr;
      for (i = 0; i < numelements; i++)
	ip[i] = ivalue;
    } else if (strcmp(type,"short") == 0) {
      short *ip,ivalue;
      int i;
      ivalue = (short) PyInt_AsLong(_PYVALUE);
      ip = (short *) ptr;
      for (i = 0; i < numelements; i++)
	ip[i] = ivalue;
    } else if (strcmp(type,"long") == 0) {
      long *ip,ivalue;
      int i;
      ivalue = (long) PyInt_AsLong(_PYVALUE);
      ip = (long *) ptr;
      for (i = 0; i < numelements; i++)
	ip[i] = ivalue;
    } else if (strcmp(type,"double") == 0) {
      double *ip,ivalue;
      int i;
      ivalue = (double) PyFloat_AsDouble(_PYVALUE);
      ip = (double *) ptr;
      for (i = 0; i < numelements; i++)
	ip[i] = ivalue;
    } else if (strcmp(type,"float") == 0) {
      float *ip,ivalue;
      int i;
      ivalue = (float) PyFloat_AsDouble(_PYVALUE);
      ip = (float *) ptr;
      for (i = 0; i < numelements; i++)
	ip[i] = ivalue;
    } else if (strcmp(type,"char") == 0) {
      char *ip,*ivalue;
      ivalue = (char *) PyString_AsString(_PYVALUE);
      ip = (char *) ptr;
      strncpy(ip,ivalue,numelements-1);
    } else if (strcmp(type,"char *") == 0) {
      char **ip, *ivalue;
      int  i;
      ivalue = (char *) PyString_AsString(_PYVALUE);
      ip = (char **) ptr;
      for (i = 0; i < numelements; i++) {
	if (ivalue) {
	  ip[i] = (char *) malloc(strlen(ivalue)+1);
	  strcpy(ip[i],ivalue);
	} else {
	  ip[i] = 0;
	}
      }
      ip[numelements] = 0;
    }
  } 
  /* Create the pointer value */
  
  SWIG_MakePtr(temp,ptr,cast);
  obj = PyString_FromString(temp);
  return obj;
}


/*------------------------------------------------------------------
  ptrset(ptr,value,index = 0,type = 0)

  Attempts to set the value of a pointer variable.  If type is
  given, we will use that type.  Otherwise, we'll guess the datatype.
  ------------------------------------------------------------------ */

static PyObject *ptrset(PyObject *_PTRVALUE, PyObject *_PYVALUE, int index, char *type) {
  void     *ptr;
  char     *s;
  PyObject *obj;

  if (!PyString_Check(_PTRVALUE)) {
    PyErr_SetString(PyExc_TypeError,"Type error in ptrset. Argument is not a valid pointer value.");
    return NULL;
  }
  s = PyString_AsString(_PTRVALUE);
  if (SWIG_GetPtr(s,&ptr,0)) {
    PyErr_SetString(PyExc_TypeError,"Type error in ptrset. Argument is not a valid pointer value.");
    return NULL;
  }

  /* If no datatype was passed, try a few common datatypes first */

  if (!type) {

    /* No datatype was passed.   Type to figure out if it's a common one */

    if (!SWIG_GetPtr(s,&ptr,"_int_p")) {
      type = "int";
    } else if (!SWIG_GetPtr(s,&ptr,"_double_p")) {
      type = "double";
    } else if (!SWIG_GetPtr(s,&ptr,"_short_p")) {
      type = "short";
    } else if (!SWIG_GetPtr(s,&ptr,"_long_p")) {
      type = "long";
    } else if (!SWIG_GetPtr(s,&ptr,"_float_p")) {
      type = "float";
    } else if (!SWIG_GetPtr(s,&ptr,"_char_p")) {
      type = "char";
    } else if (!SWIG_GetPtr(s,&ptr,"_char_pp")) {
      type = "char *";
    } else {
      type = "unknown";
    }
  }

  if (!ptr) {
    PyErr_SetString(PyExc_TypeError,"Unable to set NULL pointer.");
    return NULL;
  }
  
  /* Now we have a datatype.  Try to figure out what to do about it */
  if (strcmp(type,"int") == 0) {
    *(((int *) ptr)+index) = (int) PyInt_AsLong(_PYVALUE);
  } else if (strcmp(type,"double") == 0) {
    *(((double *) ptr)+index) = (double) PyFloat_AsDouble(_PYVALUE);
  } else if (strcmp(type,"short") == 0) {
    *(((short *) ptr)+index) = (short) PyInt_AsLong(_PYVALUE);
  } else if (strcmp(type,"long") == 0) {
    *(((long *) ptr)+index) = (long) PyInt_AsLong(_PYVALUE);
  } else if (strcmp(type,"float") == 0) {
    *(((float *) ptr)+index) = (float) PyFloat_AsDouble(_PYVALUE);
  } else if (strcmp(type,"char") == 0) {
    char *c = PyString_AsString(_PYVALUE);
    strcpy(((char *) ptr)+index, c);
  } else if (strcmp(type,"char *") == 0) {
    char *c = PyString_AsString(_PYVALUE);
    char **ca = (char **) ptr;
    if (ca[index]) free(ca[index]);
    if (strcmp(c,"NULL") == 0) {
      ca[index] = 0;
    } else {
      ca[index] = (char *) malloc(strlen(c)+1);
      strcpy(ca[index],c);
    }
  } else {
    PyErr_SetString(PyExc_TypeError,"Unable to set unsupported datatype.");
    return NULL;
  }
  Py_INCREF(Py_None);
  return Py_None;
}


/*------------------------------------------------------------------
  ptradd(ptr,offset)

  Adds a value to an existing pointer value.  Will do a type-dependent
  add for basic datatypes.  For other datatypes, will do a byte-add.
  ------------------------------------------------------------------ */

static PyObject *ptradd(PyObject *_PTRVALUE, int offset) {

  char *r,*s;
  void *ptr,*junk;
  PyObject *obj;
  char *type;

  /* Check to see what kind of object _PTRVALUE is */
  
  if (PyString_Check(_PTRVALUE)) {
    /* Have a potential pointer value now.  Try to strip out the value */
    s = PyString_AsString(_PTRVALUE);

    /* Try to handle a few common datatypes first */

    if (!SWIG_GetPtr(s,&ptr,"_int_p")) {
      ptr = (void *) (((int *) ptr) + offset);
    } else if (!SWIG_GetPtr(s,&ptr,"_double_p")) {
      ptr = (void *) (((double *) ptr) + offset);
    } else if (!SWIG_GetPtr(s,&ptr,"_short_p")) {
      ptr = (void *) (((short *) ptr) + offset);
    } else if (!SWIG_GetPtr(s,&ptr,"_long_p")) {
      ptr = (void *) (((long *) ptr) + offset);
    } else if (!SWIG_GetPtr(s,&ptr,"_float_p")) {
      ptr = (void *) (((float *) ptr) + offset);
    } else if (!SWIG_GetPtr(s,&ptr,"_char_p")) {
      ptr = (void *) (((char *) ptr) + offset);
    } else if (!SWIG_GetPtr(s,&ptr,0)) {
      ptr = (void *) (((char *) ptr) + offset);
    } else {
      PyErr_SetString(PyExc_TypeError,"Type error in ptradd. Argument is not a valid pointer value.");
      return NULL;
    }
    type = SWIG_GetPtr(s,&junk,"INVALID POINTER");
    r = (char *) malloc(strlen(type)+20);
    if (ptr) {
      SWIG_MakePtr(r,ptr,type);
    } else {
      sprintf(r,"_0%s",type);
    }
    obj = PyString_FromString(r);
    free(r);
  }
  return obj;
}

/*------------------------------------------------------------------
  ptrmap(type1,type2)

  Allows a mapping between type1 and type2. (Like a typedef)
  ------------------------------------------------------------------ */

static void ptrmap(char *type1, char *type2) {

  char *typestr1,*typestr2,*c,*r;

  /* Produce a "mangled" version of the type string.  */

  typestr1 = (char *) malloc(strlen(type1)+2);
  
  /* Go through and munge the typestring */
  
  r = typestr1;
  *(r++) = '_';
  c = type1;
  while (*c) {
    if (!isspace(*c)) {
      if ((*c == '*') || (*c == '&')) {
	*(r++) = 'p';
      }
      else *(r++) = *c;
    } else {
      *(r++) = '_';
    }
    c++;
  }
  *(r++) = 0;
  
  typestr2 = (char *) malloc(strlen(type2)+2);

  /* Go through and munge the typestring */
  
  r = typestr2;
  *(r++) = '_';
  c = type2;
  while (*c) {
    if (!isspace(*c)) {
      if ((*c == '*') || (*c == '&')) {
	*(r++) = 'p';
      }
      else *(r++) = *c;
    } else {
      *(r++) = '_';
    }
    c++;
  }
  *(r++) = 0;
  SWIG_RegisterMapping(typestr1,typestr2,0);
  SWIG_RegisterMapping(typestr2,typestr1,0);
}

/*------------------------------------------------------------------
  ptrfree(ptr)

  Destroys a pointer value
  ------------------------------------------------------------------ */

PyObject *ptrfree(PyObject *_PTRVALUE) {
  void *ptr, *junk;
  char *s;

  if (!PyString_Check(_PTRVALUE)) {
    PyErr_SetString(PyExc_TypeError,"Type error in ptrfree. Argument is not a valid pointer value.");
    return NULL;
  }
  s = PyString_AsString(_PTRVALUE);
  if (SWIG_GetPtr(s,&ptr,0)) {
    PyErr_SetString(PyExc_TypeError,"Type error in ptrfree. Argument is not a valid pointer value.");
    return NULL;
  }

  /* Check to see if this pointer is a char ** */
  if (!SWIG_GetPtr(s,&junk,"_char_pp")) {
    char **c = (char **) ptr;
    if (c) {
      int i = 0;
      while (c[i]) {
	free(c[i]);
	i++;
      }
    }
  } 
  if (ptr)
    free((char *) ptr);

  Py_INCREF(Py_None);
  return Py_None;
}


#include "pl/pl.h"
#include "pl/propfact.h"
#include "pl/propclas.h"
#include "pl/entity.h"
#include "pl/persist.h"
#include "bl/bl.h"
#include "bl/behave.h"
#include "pf/region.h"
#include "pf/camera.h"
#include "pf/common/stdpcimp.h"
#include "pf/mesh.h"
#include "pf/meshsel.h"
#include "pf/timer.h"
#include "pf/solid.h"
#include "pf/gravity.h"
#include "pf/move.h"
#include "pf/inv.h"
#include "pf/chars.h"
#include "blpython/blpython.h"

iCelPlLayer *csQueryRegistry_iCelPlLayer(iObjectRegistry *object_reg) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  return pl;
}

iCelEntity *celCreateEntity(iObjectRegistry *object_reg, const char *name) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY(object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelEntity> en(pl->CreateEntity());
  if(!en.IsValid()) return NULL;
  en->SetName(name);
  return en;
}

iCelBlLayer *csQueryRegistry_iCelBlLayer(iObjectRegistry *object_reg) {
  csRef<iCelBlLayer> bl(CS_QUERY_REGISTRY (object_reg, iCelBlLayer));
  return bl;
}

iPcRegion *celQueryPC_iPcRegion(iCelPropertyClassList *pclist) {
  csRef<iPcRegion> pcregion(CEL_QUERY_PROPCLASS(pclist, iPcRegion));
  pcregion->IncRef ();
  return pcregion;
}

iPcRegion *celCreateRegion(iObjectRegistry *object_reg, iCelEntity *entity, const char *name) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, "pcregion"));
  if(!pc.IsValid()) return NULL;
  csRef<iPcRegion> pcregion(SCF_QUERY_INTERFACE(pc, iPcRegion));
  if(!pcregion.IsValid()) return NULL;
  pcregion->SetRegionName(name);
  return pcregion;
}

iPcRegion *scfQuery_iPcRegion(iCelPropertyClass *pc) { 
  csRef<iPcRegion> pcregion(SCF_QUERY_INTERFACE(pc, iPcRegion));
  pcregion->IncRef ();
  return pcregion;
}

iPcCamera *celCreateCamera(iObjectRegistry *object_reg, iCelEntity *world, iCelEntity *entity, const char *name) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, name));
  if(!pc.IsValid()) return NULL;
  csRef<iPcCamera> pccam(SCF_QUERY_INTERFACE(pc, iPcCamera));
  if(!pccam.IsValid()) return NULL;
  csRef<iPcRegion> pcregion(CEL_QUERY_PROPCLASS(world->GetPropertyClassList(), iPcRegion));
  if(!pcregion.IsValid()) return NULL;
  if(pccam->SetRegion(pcregion)) {
    return pccam;
  } else {
    return NULL;
  }
}

iPcCamera *scfQuery_iPcCamera(iCelPropertyClass *pc) {
  csRef<iPcCamera> pccamera(SCF_QUERY_INTERFACE(pc, iPcCamera));
  return pccamera;
}

iPcMeshSelect *celPcMeshSelect(iObjectRegistry *object_reg, iCelEntity *entity) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, "pcmeshselect"));
  if(!pc.IsValid()) return NULL;
  csRef<iPcMeshSelect> pcmeshselect(SCF_QUERY_INTERFACE(pc, iPcMeshSelect));
  if(!pcmeshselect.IsValid()) return NULL;
  return pcmeshselect;
}

iPcMesh *celPcMesh(iObjectRegistry *object_reg, iCelEntity *entity) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, "pcmesh"));
  if(!pc.IsValid()) return NULL;
  csRef<iPcMesh> pcmesh(SCF_QUERY_INTERFACE(pc, iPcMesh));
  if(!pcmesh.IsValid()) return NULL;
  return pcmesh;
}

iPcTimer *celPcTimer(iObjectRegistry *object_reg, iCelEntity *entity) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, "pctimer"));
  if(!pc.IsValid()) return NULL;
  csRef<iPcTimer> pctimer(SCF_QUERY_INTERFACE(pc, iPcTimer));
  if(!pctimer.IsValid()) return NULL;
  return pctimer;
}

iPcSolid *celPcSolid(iObjectRegistry *object_reg, iCelEntity *entity) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, "pcsolid"));
  if(!pc.IsValid()) return NULL;
  csRef<iPcSolid> pcsolid(SCF_QUERY_INTERFACE(pc, iPcSolid));
  if(!pcsolid.IsValid()) return NULL;
  return pcsolid;
}

iPcGravity *celPcGravity(iObjectRegistry *object_reg, iCelEntity *entity) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, "pcgravity"));
  if(!pc.IsValid()) return NULL;
  csRef<iPcGravity> pcgravity(SCF_QUERY_INTERFACE(pc, iPcGravity));
  if(!pcgravity.IsValid()) return NULL;
  return pcgravity;
}

iPcMovable *celPcMovable(iObjectRegistry *object_reg, iCelEntity *entity) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, "pcmovable"));
  if(!pc.IsValid()) return NULL;
  csRef<iPcMovable> pcmovable(SCF_QUERY_INTERFACE(pc, iPcMovable));
  if(!pcmovable.IsValid()) return NULL;
  return pcmovable;
}

iPcInventory *celPcInventory(iObjectRegistry *object_reg, iCelEntity *entity) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, "pcinventory"));
  if(!pc.IsValid()) return NULL;
  csRef<iPcInventory> pcinv(SCF_QUERY_INTERFACE(pc, iPcInventory));
  if(!pcinv.IsValid()) return NULL;
  return pcinv;
}

iPcCharacteristics *celPcCharacteristics(iObjectRegistry *object_reg, iCelEntity *entity) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, "pccharacteristics"));
  if(!pc.IsValid()) return NULL;
  csRef<iPcCharacteristics> pccharacteristics(SCF_QUERY_INTERFACE(pc, iPcCharacteristics));
  if(!pccharacteristics.IsValid()) return NULL;
  return pccharacteristics;
}
static PyObject *_wrap_ptrcast(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    PyObject * _result;
    PyObject * _arg0;
    char * _arg1;
    PyObject * _obj0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"Os:ptrcast",&_obj0,&_arg1)) 
        return NULL;
{
  _arg0 = _obj0;
}
    _result = (PyObject *)ptrcast(_arg0,_arg1);
{
  _resultobj = _result;
}
    return _resultobj;
}

static PyObject *_wrap_ptrvalue(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    PyObject * _result;
    PyObject * _arg0;
    int  _arg1 = 0;
    char * _arg2 = 0;
    PyObject * _obj0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"O|is:ptrvalue",&_obj0,&_arg1,&_arg2)) 
        return NULL;
{
  _arg0 = _obj0;
}
    _result = (PyObject *)ptrvalue(_arg0,_arg1,_arg2);
{
  _resultobj = _result;
}
    return _resultobj;
}

static PyObject *_wrap_ptrset(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    PyObject * _result;
    PyObject * _arg0;
    PyObject * _arg1;
    int  _arg2 = 0;
    char * _arg3 = 0;
    PyObject * _obj0 = 0;
    PyObject * _obj1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"OO|is:ptrset",&_obj0,&_obj1,&_arg2,&_arg3)) 
        return NULL;
{
  _arg0 = _obj0;
}
{
  _arg1 = _obj1;
}
    _result = (PyObject *)ptrset(_arg0,_arg1,_arg2,_arg3);
{
  _resultobj = _result;
}
    return _resultobj;
}

static PyObject *_wrap_ptrcreate(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    PyObject * _result;
    char * _arg0;
    PyObject * _arg1 = 0;
    int  _arg2 = 1;
    PyObject * _obj1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s|Oi:ptrcreate",&_arg0,&_obj1,&_arg2)) 
        return NULL;
    if (_obj1)
{
  _arg1 = _obj1;
}
    _result = (PyObject *)ptrcreate(_arg0,_arg1,_arg2);
{
  _resultobj = _result;
}
    return _resultobj;
}

static PyObject *_wrap_ptrfree(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    PyObject * _result;
    PyObject * _arg0;
    PyObject * _obj0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"O:ptrfree",&_obj0)) 
        return NULL;
{
  _arg0 = _obj0;
}
    _result = (PyObject *)ptrfree(_arg0);
{
  _resultobj = _result;
}
    return _resultobj;
}

static PyObject *_wrap_ptradd(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    PyObject * _result;
    PyObject * _arg0;
    int  _arg1;
    PyObject * _obj0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"Oi:ptradd",&_obj0,&_arg1)) 
        return NULL;
{
  _arg0 = _obj0;
}
    _result = (PyObject *)ptradd(_arg0,_arg1);
{
  _resultobj = _result;
}
    return _resultobj;
}

static PyObject *_wrap_ptrmap(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _arg0;
    char * _arg1;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:ptrmap",&_arg0,&_arg1)) 
        return NULL;
    ptrmap(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyObject *_wrap_MakeVersion(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    int  _arg0;
    int  _arg1;
    int  _arg2;

    self = self;
    if(!PyArg_ParseTuple(args,"iii:MakeVersion",&_arg0,&_arg1,&_arg2)) 
        return NULL;
    _result = (int )MakeVersion(_arg0,_arg1,_arg2);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static PyObject *_wrap_csQueryRegistry_iCelPlLayer(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCelPlLayer * _result;
    iObjectRegistry * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:csQueryRegistry_iCelPlLayer",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iObjectRegistry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csQueryRegistry_iCelPlLayer. Expected _iObjectRegistry_p.");
        return NULL;
        }
    }
    _result = (iCelPlLayer *)csQueryRegistry_iCelPlLayer(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iCelPlLayer_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static PyObject *_wrap_celCreateEntity(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCelEntity * _result;
    iObjectRegistry * _arg0;
    char * _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:celCreateEntity",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iObjectRegistry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of celCreateEntity. Expected _iObjectRegistry_p.");
        return NULL;
        }
    }
    _result = (iCelEntity *)celCreateEntity(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iCelEntity_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static PyObject *_wrap_csQueryRegistry_iCelBlLayer(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCelBlLayer * _result;
    iObjectRegistry * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:csQueryRegistry_iCelBlLayer",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iObjectRegistry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csQueryRegistry_iCelBlLayer. Expected _iObjectRegistry_p.");
        return NULL;
        }
    }
    _result = (iCelBlLayer *)csQueryRegistry_iCelBlLayer(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iCelBlLayer_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static PyObject *_wrap_celQueryPC_iPcRegion(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcRegion * _result;
    iCelPropertyClassList * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:celQueryPC_iPcRegion",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClassList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of celQueryPC_iPcRegion. Expected _iCelPropertyClassList_p.");
        return NULL;
        }
    }
    _result = (iPcRegion *)celQueryPC_iPcRegion(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iPcRegion_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static PyObject *_wrap_celCreateRegion(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcRegion * _result;
    iObjectRegistry * _arg0;
    iCelEntity * _arg1;
    char * _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"sss:celCreateRegion",&_argc0,&_argc1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iObjectRegistry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of celCreateRegion. Expected _iObjectRegistry_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of celCreateRegion. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    _result = (iPcRegion *)celCreateRegion(_arg0,_arg1,_arg2);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iPcRegion_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static PyObject *_wrap_scfQuery_iPcRegion(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcRegion * _result;
    iCelPropertyClass * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:scfQuery_iPcRegion",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of scfQuery_iPcRegion. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    _result = (iPcRegion *)scfQuery_iPcRegion(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iPcRegion_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static PyObject *_wrap_celCreateCamera(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcCamera * _result;
    iObjectRegistry * _arg0;
    iCelEntity * _arg1;
    iCelEntity * _arg2;
    char * _arg3;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ssss:celCreateCamera",&_argc0,&_argc1,&_argc2,&_arg3)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iObjectRegistry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of celCreateCamera. Expected _iObjectRegistry_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of celCreateCamera. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of celCreateCamera. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    _result = (iPcCamera *)celCreateCamera(_arg0,_arg1,_arg2,_arg3);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iPcCamera_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static PyObject *_wrap_scfQuery_iPcCamera(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcCamera * _result;
    iCelPropertyClass * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:scfQuery_iPcCamera",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of scfQuery_iPcCamera. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    _result = (iPcCamera *)scfQuery_iPcCamera(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iPcCamera_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static PyObject *_wrap_celPcMeshSelect(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMeshSelect * _result;
    iObjectRegistry * _arg0;
    iCelEntity * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:celPcMeshSelect",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iObjectRegistry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of celPcMeshSelect. Expected _iObjectRegistry_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of celPcMeshSelect. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    _result = (iPcMeshSelect *)celPcMeshSelect(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iPcMeshSelect_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static PyObject *_wrap_celPcMesh(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMesh * _result;
    iObjectRegistry * _arg0;
    iCelEntity * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:celPcMesh",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iObjectRegistry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of celPcMesh. Expected _iObjectRegistry_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of celPcMesh. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    _result = (iPcMesh *)celPcMesh(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iPcMesh_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static PyObject *_wrap_celPcTimer(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcTimer * _result;
    iObjectRegistry * _arg0;
    iCelEntity * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:celPcTimer",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iObjectRegistry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of celPcTimer. Expected _iObjectRegistry_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of celPcTimer. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    _result = (iPcTimer *)celPcTimer(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iPcTimer_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static PyObject *_wrap_celPcSolid(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcSolid * _result;
    iObjectRegistry * _arg0;
    iCelEntity * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:celPcSolid",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iObjectRegistry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of celPcSolid. Expected _iObjectRegistry_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of celPcSolid. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    _result = (iPcSolid *)celPcSolid(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iPcSolid_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static PyObject *_wrap_celPcGravity(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcGravity * _result;
    iObjectRegistry * _arg0;
    iCelEntity * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:celPcGravity",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iObjectRegistry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of celPcGravity. Expected _iObjectRegistry_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of celPcGravity. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    _result = (iPcGravity *)celPcGravity(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iPcGravity_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static PyObject *_wrap_celPcMovable(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMovable * _result;
    iObjectRegistry * _arg0;
    iCelEntity * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:celPcMovable",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iObjectRegistry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of celPcMovable. Expected _iObjectRegistry_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of celPcMovable. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    _result = (iPcMovable *)celPcMovable(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iPcMovable_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static PyObject *_wrap_celPcInventory(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcInventory * _result;
    iObjectRegistry * _arg0;
    iCelEntity * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:celPcInventory",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iObjectRegistry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of celPcInventory. Expected _iObjectRegistry_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of celPcInventory. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    _result = (iPcInventory *)celPcInventory(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iPcInventory_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static PyObject *_wrap_celPcCharacteristics(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcCharacteristics * _result;
    iObjectRegistry * _arg0;
    iCelEntity * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:celPcCharacteristics",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iObjectRegistry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of celPcCharacteristics. Expected _iObjectRegistry_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of celPcCharacteristics. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    _result = (iPcCharacteristics *)celPcCharacteristics(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iPcCharacteristics_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iBase_DecRef(_swigobj)  (_swigobj->DecRef())
static PyObject *_wrap_iBase_DecRef(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iBase * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iBase_DecRef",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iBase_DecRef. Expected _iBase_p.");
        return NULL;
        }
    }
    iBase_DecRef(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigiSCFToiBase(void *ptr) {
    iSCF *src;
    iBase *dest;
    src = (iSCF *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iSCF_CreateInstance(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->CreateInstance(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_iSCF_CreateInstance(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    void * _result;
    iSCF * _arg0;
    char * _arg1;
    char * _arg2;
    int  _arg3;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"sssi:iSCF_CreateInstance",&_argc0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iSCF_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iSCF_CreateInstance. Expected _iSCF_p.");
        return NULL;
        }
    }
    _result = (void *)iSCF_CreateInstance(_arg0,_arg1,_arg2,_arg3);
    SWIG_MakePtr(_ptemp, (char *) _result,"_void_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define csVector3_x_set(_swigobj,_swigval) (_swigobj->x = _swigval,_swigval)
static PyObject *_wrap_csVector3_x_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    float  _result;
    csVector3 * _arg0;
    float  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sf:csVector3_x_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csVector3_x_set. Expected _csVector3_p.");
        return NULL;
        }
    }
    _result = (float )csVector3_x_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("f",_result);
    return _resultobj;
}

#define csVector3_x_get(_swigobj) ((float ) _swigobj->x)
static PyObject *_wrap_csVector3_x_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    float  _result;
    csVector3 * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csVector3_x_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csVector3_x_get. Expected _csVector3_p.");
        return NULL;
        }
    }
    _result = (float )csVector3_x_get(_arg0);
    _resultobj = Py_BuildValue("f",_result);
    return _resultobj;
}

#define csVector3_y_set(_swigobj,_swigval) (_swigobj->y = _swigval,_swigval)
static PyObject *_wrap_csVector3_y_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    float  _result;
    csVector3 * _arg0;
    float  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sf:csVector3_y_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csVector3_y_set. Expected _csVector3_p.");
        return NULL;
        }
    }
    _result = (float )csVector3_y_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("f",_result);
    return _resultobj;
}

#define csVector3_y_get(_swigobj) ((float ) _swigobj->y)
static PyObject *_wrap_csVector3_y_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    float  _result;
    csVector3 * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csVector3_y_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csVector3_y_get. Expected _csVector3_p.");
        return NULL;
        }
    }
    _result = (float )csVector3_y_get(_arg0);
    _resultobj = Py_BuildValue("f",_result);
    return _resultobj;
}

#define csVector3_z_set(_swigobj,_swigval) (_swigobj->z = _swigval,_swigval)
static PyObject *_wrap_csVector3_z_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    float  _result;
    csVector3 * _arg0;
    float  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sf:csVector3_z_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csVector3_z_set. Expected _csVector3_p.");
        return NULL;
        }
    }
    _result = (float )csVector3_z_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("f",_result);
    return _resultobj;
}

#define csVector3_z_get(_swigobj) ((float ) _swigobj->z)
static PyObject *_wrap_csVector3_z_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    float  _result;
    csVector3 * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csVector3_z_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csVector3_z_get. Expected _csVector3_p.");
        return NULL;
        }
    }
    _result = (float )csVector3_z_get(_arg0);
    _resultobj = Py_BuildValue("f",_result);
    return _resultobj;
}

#define new_csVector3(_swigarg0,_swigarg1,_swigarg2) (new csVector3(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_new_csVector3(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csVector3 * _result;
    float  _arg0;
    float  _arg1;
    float  _arg2;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"fff:new_csVector3",&_arg0,&_arg1,&_arg2)) 
        return NULL;
    _result = (csVector3 *)new_csVector3(_arg0,_arg1,_arg2);
    SWIG_MakePtr(_ptemp, (char *) _result,"_csVector3_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define delete_csVector3(_swigobj) (delete _swigobj)
static PyObject *_wrap_delete_csVector3(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csVector3 * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:delete_csVector3",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of delete_csVector3. Expected _csVector3_p.");
        return NULL;
        }
    }
    delete_csVector3(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define csRGBpixel_red_set(_swigobj,_swigval) (_swigobj->red = _swigval,_swigval)
static PyObject *_wrap_csRGBpixel_red_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    unsigned char  _result;
    csRGBpixel * _arg0;
    unsigned char  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sb:csRGBpixel_red_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csRGBpixel_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csRGBpixel_red_set. Expected _csRGBpixel_p.");
        return NULL;
        }
    }
    _result = (unsigned char )csRGBpixel_red_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define csRGBpixel_red_get(_swigobj) ((unsigned char ) _swigobj->red)
static PyObject *_wrap_csRGBpixel_red_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    unsigned char  _result;
    csRGBpixel * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csRGBpixel_red_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csRGBpixel_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csRGBpixel_red_get. Expected _csRGBpixel_p.");
        return NULL;
        }
    }
    _result = (unsigned char )csRGBpixel_red_get(_arg0);
    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define csRGBpixel_green_set(_swigobj,_swigval) (_swigobj->green = _swigval,_swigval)
static PyObject *_wrap_csRGBpixel_green_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    unsigned char  _result;
    csRGBpixel * _arg0;
    unsigned char  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sb:csRGBpixel_green_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csRGBpixel_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csRGBpixel_green_set. Expected _csRGBpixel_p.");
        return NULL;
        }
    }
    _result = (unsigned char )csRGBpixel_green_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define csRGBpixel_green_get(_swigobj) ((unsigned char ) _swigobj->green)
static PyObject *_wrap_csRGBpixel_green_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    unsigned char  _result;
    csRGBpixel * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csRGBpixel_green_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csRGBpixel_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csRGBpixel_green_get. Expected _csRGBpixel_p.");
        return NULL;
        }
    }
    _result = (unsigned char )csRGBpixel_green_get(_arg0);
    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define csRGBpixel_blue_set(_swigobj,_swigval) (_swigobj->blue = _swigval,_swigval)
static PyObject *_wrap_csRGBpixel_blue_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    unsigned char  _result;
    csRGBpixel * _arg0;
    unsigned char  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sb:csRGBpixel_blue_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csRGBpixel_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csRGBpixel_blue_set. Expected _csRGBpixel_p.");
        return NULL;
        }
    }
    _result = (unsigned char )csRGBpixel_blue_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define csRGBpixel_blue_get(_swigobj) ((unsigned char ) _swigobj->blue)
static PyObject *_wrap_csRGBpixel_blue_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    unsigned char  _result;
    csRGBpixel * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csRGBpixel_blue_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csRGBpixel_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csRGBpixel_blue_get. Expected _csRGBpixel_p.");
        return NULL;
        }
    }
    _result = (unsigned char )csRGBpixel_blue_get(_arg0);
    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define csRGBpixel_alpha_set(_swigobj,_swigval) (_swigobj->alpha = _swigval,_swigval)
static PyObject *_wrap_csRGBpixel_alpha_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    unsigned char  _result;
    csRGBpixel * _arg0;
    unsigned char  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sb:csRGBpixel_alpha_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csRGBpixel_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csRGBpixel_alpha_set. Expected _csRGBpixel_p.");
        return NULL;
        }
    }
    _result = (unsigned char )csRGBpixel_alpha_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define csRGBpixel_alpha_get(_swigobj) ((unsigned char ) _swigobj->alpha)
static PyObject *_wrap_csRGBpixel_alpha_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    unsigned char  _result;
    csRGBpixel * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csRGBpixel_alpha_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csRGBpixel_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csRGBpixel_alpha_get. Expected _csRGBpixel_p.");
        return NULL;
        }
    }
    _result = (unsigned char )csRGBpixel_alpha_get(_arg0);
    _resultobj = Py_BuildValue("b",_result);
    return _resultobj;
}

#define csPixelFormat_RedMask_set(_swigobj,_swigval) (_swigobj->RedMask = _swigval,_swigval)
static PyObject *_wrap_csPixelFormat_RedMask_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    unsigned long  _result;
    csPixelFormat * _arg0;
    unsigned long  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sl:csPixelFormat_RedMask_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_RedMask_set. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (unsigned long )csPixelFormat_RedMask_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define csPixelFormat_RedMask_get(_swigobj) ((unsigned long ) _swigobj->RedMask)
static PyObject *_wrap_csPixelFormat_RedMask_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    unsigned long  _result;
    csPixelFormat * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csPixelFormat_RedMask_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_RedMask_get. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (unsigned long )csPixelFormat_RedMask_get(_arg0);
    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define csPixelFormat_GreenMask_set(_swigobj,_swigval) (_swigobj->GreenMask = _swigval,_swigval)
static PyObject *_wrap_csPixelFormat_GreenMask_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    unsigned long  _result;
    csPixelFormat * _arg0;
    unsigned long  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sl:csPixelFormat_GreenMask_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_GreenMask_set. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (unsigned long )csPixelFormat_GreenMask_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define csPixelFormat_GreenMask_get(_swigobj) ((unsigned long ) _swigobj->GreenMask)
static PyObject *_wrap_csPixelFormat_GreenMask_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    unsigned long  _result;
    csPixelFormat * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csPixelFormat_GreenMask_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_GreenMask_get. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (unsigned long )csPixelFormat_GreenMask_get(_arg0);
    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define csPixelFormat_BlueMask_set(_swigobj,_swigval) (_swigobj->BlueMask = _swigval,_swigval)
static PyObject *_wrap_csPixelFormat_BlueMask_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    unsigned long  _result;
    csPixelFormat * _arg0;
    unsigned long  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sl:csPixelFormat_BlueMask_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_BlueMask_set. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (unsigned long )csPixelFormat_BlueMask_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define csPixelFormat_BlueMask_get(_swigobj) ((unsigned long ) _swigobj->BlueMask)
static PyObject *_wrap_csPixelFormat_BlueMask_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    unsigned long  _result;
    csPixelFormat * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csPixelFormat_BlueMask_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_BlueMask_get. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (unsigned long )csPixelFormat_BlueMask_get(_arg0);
    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define csPixelFormat_RedShift_set(_swigobj,_swigval) (_swigobj->RedShift = _swigval,_swigval)
static PyObject *_wrap_csPixelFormat_RedShift_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csPixelFormat * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csPixelFormat_RedShift_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_RedShift_set. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (int )csPixelFormat_RedShift_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csPixelFormat_RedShift_get(_swigobj) ((int ) _swigobj->RedShift)
static PyObject *_wrap_csPixelFormat_RedShift_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csPixelFormat * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csPixelFormat_RedShift_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_RedShift_get. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (int )csPixelFormat_RedShift_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csPixelFormat_GreenShift_set(_swigobj,_swigval) (_swigobj->GreenShift = _swigval,_swigval)
static PyObject *_wrap_csPixelFormat_GreenShift_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csPixelFormat * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csPixelFormat_GreenShift_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_GreenShift_set. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (int )csPixelFormat_GreenShift_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csPixelFormat_GreenShift_get(_swigobj) ((int ) _swigobj->GreenShift)
static PyObject *_wrap_csPixelFormat_GreenShift_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csPixelFormat * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csPixelFormat_GreenShift_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_GreenShift_get. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (int )csPixelFormat_GreenShift_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csPixelFormat_BlueShift_set(_swigobj,_swigval) (_swigobj->BlueShift = _swigval,_swigval)
static PyObject *_wrap_csPixelFormat_BlueShift_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csPixelFormat * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csPixelFormat_BlueShift_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_BlueShift_set. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (int )csPixelFormat_BlueShift_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csPixelFormat_BlueShift_get(_swigobj) ((int ) _swigobj->BlueShift)
static PyObject *_wrap_csPixelFormat_BlueShift_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csPixelFormat * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csPixelFormat_BlueShift_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_BlueShift_get. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (int )csPixelFormat_BlueShift_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csPixelFormat_RedBits_set(_swigobj,_swigval) (_swigobj->RedBits = _swigval,_swigval)
static PyObject *_wrap_csPixelFormat_RedBits_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csPixelFormat * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csPixelFormat_RedBits_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_RedBits_set. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (int )csPixelFormat_RedBits_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csPixelFormat_RedBits_get(_swigobj) ((int ) _swigobj->RedBits)
static PyObject *_wrap_csPixelFormat_RedBits_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csPixelFormat * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csPixelFormat_RedBits_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_RedBits_get. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (int )csPixelFormat_RedBits_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csPixelFormat_GreenBits_set(_swigobj,_swigval) (_swigobj->GreenBits = _swigval,_swigval)
static PyObject *_wrap_csPixelFormat_GreenBits_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csPixelFormat * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csPixelFormat_GreenBits_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_GreenBits_set. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (int )csPixelFormat_GreenBits_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csPixelFormat_GreenBits_get(_swigobj) ((int ) _swigobj->GreenBits)
static PyObject *_wrap_csPixelFormat_GreenBits_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csPixelFormat * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csPixelFormat_GreenBits_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_GreenBits_get. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (int )csPixelFormat_GreenBits_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csPixelFormat_BlueBits_set(_swigobj,_swigval) (_swigobj->BlueBits = _swigval,_swigval)
static PyObject *_wrap_csPixelFormat_BlueBits_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csPixelFormat * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csPixelFormat_BlueBits_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_BlueBits_set. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (int )csPixelFormat_BlueBits_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csPixelFormat_BlueBits_get(_swigobj) ((int ) _swigobj->BlueBits)
static PyObject *_wrap_csPixelFormat_BlueBits_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csPixelFormat * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csPixelFormat_BlueBits_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_BlueBits_get. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (int )csPixelFormat_BlueBits_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csPixelFormat_PalEntries_set(_swigobj,_swigval) (_swigobj->PalEntries = _swigval,_swigval)
static PyObject *_wrap_csPixelFormat_PalEntries_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csPixelFormat * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csPixelFormat_PalEntries_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_PalEntries_set. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (int )csPixelFormat_PalEntries_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csPixelFormat_PalEntries_get(_swigobj) ((int ) _swigobj->PalEntries)
static PyObject *_wrap_csPixelFormat_PalEntries_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csPixelFormat * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csPixelFormat_PalEntries_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_PalEntries_get. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (int )csPixelFormat_PalEntries_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csPixelFormat_PixelBytes_set(_swigobj,_swigval) (_swigobj->PixelBytes = _swigval,_swigval)
static PyObject *_wrap_csPixelFormat_PixelBytes_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csPixelFormat * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csPixelFormat_PixelBytes_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_PixelBytes_set. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (int )csPixelFormat_PixelBytes_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csPixelFormat_PixelBytes_get(_swigobj) ((int ) _swigobj->PixelBytes)
static PyObject *_wrap_csPixelFormat_PixelBytes_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csPixelFormat * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csPixelFormat_PixelBytes_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csPixelFormat_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csPixelFormat_PixelBytes_get. Expected _csPixelFormat_p.");
        return NULL;
        }
    }
    _result = (int )csPixelFormat_PixelBytes_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csGraphics3DCaps_CanClip_set(_swigobj,_swigval) (_swigobj->CanClip = _swigval,_swigval)
static PyObject *_wrap_csGraphics3DCaps_CanClip_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    csGraphics3DCaps * _arg0;
    bool  _arg1;
    char * _argc0 = 0;
    int tempbool1;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csGraphics3DCaps_CanClip_set",&_argc0,&tempbool1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csGraphics3DCaps_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csGraphics3DCaps_CanClip_set. Expected _csGraphics3DCaps_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
    _result = (bool )csGraphics3DCaps_CanClip_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csGraphics3DCaps_CanClip_get(_swigobj) ((bool ) _swigobj->CanClip)
static PyObject *_wrap_csGraphics3DCaps_CanClip_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    csGraphics3DCaps * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csGraphics3DCaps_CanClip_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csGraphics3DCaps_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csGraphics3DCaps_CanClip_get. Expected _csGraphics3DCaps_p.");
        return NULL;
        }
    }
    _result = (bool )csGraphics3DCaps_CanClip_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csGraphics3DCaps_minTexHeight_set(_swigobj,_swigval) (_swigobj->minTexHeight = _swigval,_swigval)
static PyObject *_wrap_csGraphics3DCaps_minTexHeight_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csGraphics3DCaps * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csGraphics3DCaps_minTexHeight_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csGraphics3DCaps_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csGraphics3DCaps_minTexHeight_set. Expected _csGraphics3DCaps_p.");
        return NULL;
        }
    }
    _result = (int )csGraphics3DCaps_minTexHeight_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csGraphics3DCaps_minTexHeight_get(_swigobj) ((int ) _swigobj->minTexHeight)
static PyObject *_wrap_csGraphics3DCaps_minTexHeight_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csGraphics3DCaps * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csGraphics3DCaps_minTexHeight_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csGraphics3DCaps_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csGraphics3DCaps_minTexHeight_get. Expected _csGraphics3DCaps_p.");
        return NULL;
        }
    }
    _result = (int )csGraphics3DCaps_minTexHeight_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csGraphics3DCaps_minTexWidth_set(_swigobj,_swigval) (_swigobj->minTexWidth = _swigval,_swigval)
static PyObject *_wrap_csGraphics3DCaps_minTexWidth_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csGraphics3DCaps * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csGraphics3DCaps_minTexWidth_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csGraphics3DCaps_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csGraphics3DCaps_minTexWidth_set. Expected _csGraphics3DCaps_p.");
        return NULL;
        }
    }
    _result = (int )csGraphics3DCaps_minTexWidth_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csGraphics3DCaps_minTexWidth_get(_swigobj) ((int ) _swigobj->minTexWidth)
static PyObject *_wrap_csGraphics3DCaps_minTexWidth_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csGraphics3DCaps * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csGraphics3DCaps_minTexWidth_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csGraphics3DCaps_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csGraphics3DCaps_minTexWidth_get. Expected _csGraphics3DCaps_p.");
        return NULL;
        }
    }
    _result = (int )csGraphics3DCaps_minTexWidth_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csGraphics3DCaps_maxTexHeight_set(_swigobj,_swigval) (_swigobj->maxTexHeight = _swigval,_swigval)
static PyObject *_wrap_csGraphics3DCaps_maxTexHeight_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csGraphics3DCaps * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csGraphics3DCaps_maxTexHeight_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csGraphics3DCaps_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csGraphics3DCaps_maxTexHeight_set. Expected _csGraphics3DCaps_p.");
        return NULL;
        }
    }
    _result = (int )csGraphics3DCaps_maxTexHeight_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csGraphics3DCaps_maxTexHeight_get(_swigobj) ((int ) _swigobj->maxTexHeight)
static PyObject *_wrap_csGraphics3DCaps_maxTexHeight_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csGraphics3DCaps * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csGraphics3DCaps_maxTexHeight_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csGraphics3DCaps_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csGraphics3DCaps_maxTexHeight_get. Expected _csGraphics3DCaps_p.");
        return NULL;
        }
    }
    _result = (int )csGraphics3DCaps_maxTexHeight_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csGraphics3DCaps_maxTexWidth_set(_swigobj,_swigval) (_swigobj->maxTexWidth = _swigval,_swigval)
static PyObject *_wrap_csGraphics3DCaps_maxTexWidth_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csGraphics3DCaps * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csGraphics3DCaps_maxTexWidth_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csGraphics3DCaps_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csGraphics3DCaps_maxTexWidth_set. Expected _csGraphics3DCaps_p.");
        return NULL;
        }
    }
    _result = (int )csGraphics3DCaps_maxTexWidth_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csGraphics3DCaps_maxTexWidth_get(_swigobj) ((int ) _swigobj->maxTexWidth)
static PyObject *_wrap_csGraphics3DCaps_maxTexWidth_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csGraphics3DCaps * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csGraphics3DCaps_maxTexWidth_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csGraphics3DCaps_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csGraphics3DCaps_maxTexWidth_get. Expected _csGraphics3DCaps_p.");
        return NULL;
        }
    }
    _result = (int )csGraphics3DCaps_maxTexWidth_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csGraphics3DCaps_fog_set(_swigobj,_swigval) (_swigobj->fog = _swigval,_swigval)
static PyObject *_wrap_csGraphics3DCaps_fog_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    G3D_FOGMETHOD  _result;
    csGraphics3DCaps * _arg0;
    G3D_FOGMETHOD  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csGraphics3DCaps_fog_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csGraphics3DCaps_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csGraphics3DCaps_fog_set. Expected _csGraphics3DCaps_p.");
        return NULL;
        }
    }
    _result = (G3D_FOGMETHOD )csGraphics3DCaps_fog_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csGraphics3DCaps_fog_get(_swigobj) ((G3D_FOGMETHOD ) _swigobj->fog)
static PyObject *_wrap_csGraphics3DCaps_fog_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    G3D_FOGMETHOD  _result;
    csGraphics3DCaps * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csGraphics3DCaps_fog_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csGraphics3DCaps_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csGraphics3DCaps_fog_get. Expected _csGraphics3DCaps_p.");
        return NULL;
        }
    }
    _result = (G3D_FOGMETHOD )csGraphics3DCaps_fog_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csGraphics3DCaps_NeedsPO2Maps_set(_swigobj,_swigval) (_swigobj->NeedsPO2Maps = _swigval,_swigval)
static PyObject *_wrap_csGraphics3DCaps_NeedsPO2Maps_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    csGraphics3DCaps * _arg0;
    bool  _arg1;
    char * _argc0 = 0;
    int tempbool1;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csGraphics3DCaps_NeedsPO2Maps_set",&_argc0,&tempbool1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csGraphics3DCaps_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csGraphics3DCaps_NeedsPO2Maps_set. Expected _csGraphics3DCaps_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
    _result = (bool )csGraphics3DCaps_NeedsPO2Maps_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csGraphics3DCaps_NeedsPO2Maps_get(_swigobj) ((bool ) _swigobj->NeedsPO2Maps)
static PyObject *_wrap_csGraphics3DCaps_NeedsPO2Maps_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    csGraphics3DCaps * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csGraphics3DCaps_NeedsPO2Maps_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csGraphics3DCaps_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csGraphics3DCaps_NeedsPO2Maps_get. Expected _csGraphics3DCaps_p.");
        return NULL;
        }
    }
    _result = (bool )csGraphics3DCaps_NeedsPO2Maps_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csGraphics3DCaps_MaxAspectRatio_set(_swigobj,_swigval) (_swigobj->MaxAspectRatio = _swigval,_swigval)
static PyObject *_wrap_csGraphics3DCaps_MaxAspectRatio_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csGraphics3DCaps * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csGraphics3DCaps_MaxAspectRatio_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csGraphics3DCaps_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csGraphics3DCaps_MaxAspectRatio_set. Expected _csGraphics3DCaps_p.");
        return NULL;
        }
    }
    _result = (int )csGraphics3DCaps_MaxAspectRatio_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csGraphics3DCaps_MaxAspectRatio_get(_swigobj) ((int ) _swigobj->MaxAspectRatio)
static PyObject *_wrap_csGraphics3DCaps_MaxAspectRatio_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csGraphics3DCaps * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csGraphics3DCaps_MaxAspectRatio_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csGraphics3DCaps_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csGraphics3DCaps_MaxAspectRatio_get. Expected _csGraphics3DCaps_p.");
        return NULL;
        }
    }
    _result = (int )csGraphics3DCaps_MaxAspectRatio_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csImageArea_x_set(_swigobj,_swigval) (_swigobj->x = _swigval,_swigval)
static PyObject *_wrap_csImageArea_x_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csImageArea * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csImageArea_x_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csImageArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csImageArea_x_set. Expected _csImageArea_p.");
        return NULL;
        }
    }
    _result = (int )csImageArea_x_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csImageArea_x_get(_swigobj) ((int ) _swigobj->x)
static PyObject *_wrap_csImageArea_x_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csImageArea * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csImageArea_x_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csImageArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csImageArea_x_get. Expected _csImageArea_p.");
        return NULL;
        }
    }
    _result = (int )csImageArea_x_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csImageArea_y_set(_swigobj,_swigval) (_swigobj->y = _swigval,_swigval)
static PyObject *_wrap_csImageArea_y_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csImageArea * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csImageArea_y_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csImageArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csImageArea_y_set. Expected _csImageArea_p.");
        return NULL;
        }
    }
    _result = (int )csImageArea_y_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csImageArea_y_get(_swigobj) ((int ) _swigobj->y)
static PyObject *_wrap_csImageArea_y_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csImageArea * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csImageArea_y_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csImageArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csImageArea_y_get. Expected _csImageArea_p.");
        return NULL;
        }
    }
    _result = (int )csImageArea_y_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csImageArea_w_set(_swigobj,_swigval) (_swigobj->w = _swigval,_swigval)
static PyObject *_wrap_csImageArea_w_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csImageArea * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csImageArea_w_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csImageArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csImageArea_w_set. Expected _csImageArea_p.");
        return NULL;
        }
    }
    _result = (int )csImageArea_w_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csImageArea_w_get(_swigobj) ((int ) _swigobj->w)
static PyObject *_wrap_csImageArea_w_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csImageArea * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csImageArea_w_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csImageArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csImageArea_w_get. Expected _csImageArea_p.");
        return NULL;
        }
    }
    _result = (int )csImageArea_w_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csImageArea_h_set(_swigobj,_swigval) (_swigobj->h = _swigval,_swigval)
static PyObject *_wrap_csImageArea_h_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csImageArea * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:csImageArea_h_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csImageArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csImageArea_h_set. Expected _csImageArea_p.");
        return NULL;
        }
    }
    _result = (int )csImageArea_h_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define csImageArea_h_get(_swigobj) ((int ) _swigobj->h)
static PyObject *_wrap_csImageArea_h_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    csImageArea * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csImageArea_h_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csImageArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csImageArea_h_get. Expected _csImageArea_p.");
        return NULL;
        }
    }
    _result = (int )csImageArea_h_get(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static char * csImageArea_data_set(csImageArea *obj, char *val) {
    if (obj->data) delete [] obj->data;
    obj->data = new char[strlen(val)+1];
    strcpy(obj->data,val);
    return val;
}
static PyObject *_wrap_csImageArea_data_set(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    csImageArea * _arg0;
    char * _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:csImageArea_data_set",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csImageArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csImageArea_data_set. Expected _csImageArea_p.");
        return NULL;
        }
    }
    _result = (char *)csImageArea_data_set(_arg0,_arg1);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

#define csImageArea_data_get(_swigobj) ((char *) _swigobj->data)
static PyObject *_wrap_csImageArea_data_get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    csImageArea * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:csImageArea_data_get",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_csImageArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of csImageArea_data_get. Expected _csImageArea_p.");
        return NULL;
        }
    }
    _result = (char *)csImageArea_data_get(_arg0);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

#define new_csImageArea(_swigarg0,_swigarg1,_swigarg2,_swigarg3) (new csImageArea(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_new_csImageArea(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csImageArea * _result;
    int  _arg0;
    int  _arg1;
    int  _arg2;
    int  _arg3;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"iiii:new_csImageArea",&_arg0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    _result = (csImageArea *)new_csImageArea(_arg0,_arg1,_arg2,_arg3);
    SWIG_MakePtr(_ptemp, (char *) _result,"_csImageArea_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigiComponentToiBase(void *ptr) {
    iComponent *src;
    iBase *dest;
    src = (iComponent *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iComponent_Initialize(_swigobj,_swigarg0)  (_swigobj->Initialize(_swigarg0))
static PyObject *_wrap_iComponent_Initialize(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iComponent * _arg0;
    iObjectRegistry * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iComponent_Initialize",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iComponent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iComponent_Initialize. Expected _iComponent_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iObjectRegistry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iComponent_Initialize. Expected _iObjectRegistry_p.");
        return NULL;
        }
    }
    _result = (bool )iComponent_Initialize(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigiEventHandlerToiBase(void *ptr) {
    iEventHandler *src;
    iBase *dest;
    src = (iEventHandler *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iEventHandler_HandleEvent(_swigobj,_swigarg0)  (_swigobj->HandleEvent(_swigarg0))
static PyObject *_wrap_iEventHandler_HandleEvent(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iEventHandler * _arg0;
    iEvent * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iEventHandler_HandleEvent",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iEventHandler_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iEventHandler_HandleEvent. Expected _iEventHandler_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iEvent_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iEventHandler_HandleEvent. Expected _iEvent_p.");
        return NULL;
        }
    }
    _result = (bool )iEventHandler_HandleEvent(_arg0,*_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigiTextureWrapperToiBase(void *ptr) {
    iTextureWrapper *src;
    iBase *dest;
    src = (iTextureWrapper *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

static void *SwigiTextureHandleToiBase(void *ptr) {
    iTextureHandle *src;
    iBase *dest;
    src = (iTextureHandle *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iTextureHandle_GetMipMapDimensions(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->GetMipMapDimensions(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_iTextureHandle_GetMipMapDimensions(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iTextureHandle * _arg0;
    int  _arg1;
    int * _arg2;
    int * _arg3;
    char * _argc0 = 0;
    char * _argc2 = 0;
    char * _argc3 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"siss:iTextureHandle_GetMipMapDimensions",&_argc0,&_arg1,&_argc2,&_argc3)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iTextureHandle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iTextureHandle_GetMipMapDimensions. Expected _iTextureHandle_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iTextureHandle_GetMipMapDimensions. Expected _int_p.");
        return NULL;
        }
    }
    if (_argc3) {
        if (SWIG_GetPtr(_argc3,(void **) &_arg3,"_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of iTextureHandle_GetMipMapDimensions. Expected _int_p.");
        return NULL;
        }
    }
    _result = (bool )iTextureHandle_GetMipMapDimensions(_arg0,_arg1,*_arg2,*_arg3);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iTextureHandle_GetMeanColor(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->GetMeanColor(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_iTextureHandle_GetMeanColor(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iTextureHandle * _arg0;
    unsigned char * _arg1;
    unsigned char * _arg2;
    unsigned char * _arg3;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;
    char * _argc3 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ssss:iTextureHandle_GetMeanColor",&_argc0,&_argc1,&_argc2,&_argc3)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iTextureHandle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iTextureHandle_GetMeanColor. Expected _iTextureHandle_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_unsigned_char_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iTextureHandle_GetMeanColor. Expected _unsigned_char_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_unsigned_char_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iTextureHandle_GetMeanColor. Expected _unsigned_char_p.");
        return NULL;
        }
    }
    if (_argc3) {
        if (SWIG_GetPtr(_argc3,(void **) &_arg3,"_unsigned_char_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of iTextureHandle_GetMeanColor. Expected _unsigned_char_p.");
        return NULL;
        }
    }
    iTextureHandle_GetMeanColor(_arg0,*_arg1,*_arg2,*_arg3);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iTextureHandle_GetCacheData(_swigobj)  (_swigobj->GetCacheData())
static PyObject *_wrap_iTextureHandle_GetCacheData(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    void * _result;
    iTextureHandle * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iTextureHandle_GetCacheData",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iTextureHandle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iTextureHandle_GetCacheData. Expected _iTextureHandle_p.");
        return NULL;
        }
    }
    _result = (void *)iTextureHandle_GetCacheData(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_void_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iTextureHandle_SetCacheData(_swigobj,_swigarg0)  (_swigobj->SetCacheData(_swigarg0))
static PyObject *_wrap_iTextureHandle_SetCacheData(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iTextureHandle * _arg0;
    void * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iTextureHandle_SetCacheData",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iTextureHandle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iTextureHandle_SetCacheData. Expected _iTextureHandle_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iTextureHandle_SetCacheData. Expected _void_p.");
        return NULL;
        }
    }
    iTextureHandle_SetCacheData(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iTextureHandle_GetPrivateObject(_swigobj)  (_swigobj->GetPrivateObject())
static PyObject *_wrap_iTextureHandle_GetPrivateObject(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    void * _result;
    iTextureHandle * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iTextureHandle_GetPrivateObject",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iTextureHandle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iTextureHandle_GetPrivateObject. Expected _iTextureHandle_p.");
        return NULL;
        }
    }
    _result = (void *)iTextureHandle_GetPrivateObject(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_void_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigiMaterialHandleToiBase(void *ptr) {
    iMaterialHandle *src;
    iBase *dest;
    src = (iMaterialHandle *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iMaterialHandle_GetTexture(_swigobj)  (_swigobj->GetTexture())
static PyObject *_wrap_iMaterialHandle_GetTexture(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iTextureHandle * _result;
    iMaterialHandle * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iMaterialHandle_GetTexture",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iMaterialHandle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iMaterialHandle_GetTexture. Expected _iMaterialHandle_p.");
        return NULL;
        }
    }
    _result = (iTextureHandle *)iMaterialHandle_GetTexture(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iTextureHandle_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iMaterialHandle_GetFlatColor(_swigobj,_swigarg0)  (_swigobj->GetFlatColor(_swigarg0))
static PyObject *_wrap_iMaterialHandle_GetFlatColor(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iMaterialHandle * _arg0;
    csRGBpixel * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iMaterialHandle_GetFlatColor",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iMaterialHandle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iMaterialHandle_GetFlatColor. Expected _iMaterialHandle_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csRGBpixel_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iMaterialHandle_GetFlatColor. Expected _csRGBpixel_p.");
        return NULL;
        }
    }
    iMaterialHandle_GetFlatColor(_arg0,*_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iMaterialHandle_GetReflection(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->GetReflection(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_iMaterialHandle_GetReflection(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iMaterialHandle * _arg0;
    float * _arg1;
    float * _arg2;
    float * _arg3;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;
    char * _argc3 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ssss:iMaterialHandle_GetReflection",&_argc0,&_argc1,&_argc2,&_argc3)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iMaterialHandle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iMaterialHandle_GetReflection. Expected _iMaterialHandle_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_float_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iMaterialHandle_GetReflection. Expected _float_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_float_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iMaterialHandle_GetReflection. Expected _float_p.");
        return NULL;
        }
    }
    if (_argc3) {
        if (SWIG_GetPtr(_argc3,(void **) &_arg3,"_float_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of iMaterialHandle_GetReflection. Expected _float_p.");
        return NULL;
        }
    }
    iMaterialHandle_GetReflection(_arg0,*_arg1,*_arg2,*_arg3);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iMaterialHandle_Prepare(_swigobj)  (_swigobj->Prepare())
static PyObject *_wrap_iMaterialHandle_Prepare(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iMaterialHandle * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iMaterialHandle_Prepare",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iMaterialHandle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iMaterialHandle_Prepare. Expected _iMaterialHandle_p.");
        return NULL;
        }
    }
    iMaterialHandle_Prepare(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigiMaterialWrapperToiBase(void *ptr) {
    iMaterialWrapper *src;
    iBase *dest;
    src = (iMaterialWrapper *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iMaterialWrapper_GetMaterialHandle(_swigobj)  (_swigobj->GetMaterialHandle())
static PyObject *_wrap_iMaterialWrapper_GetMaterialHandle(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iMaterialHandle * _result;
    iMaterialWrapper * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iMaterialWrapper_GetMaterialHandle",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iMaterialWrapper_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iMaterialWrapper_GetMaterialHandle. Expected _iMaterialWrapper_p.");
        return NULL;
        }
    }
    _result = (iMaterialHandle *)iMaterialWrapper_GetMaterialHandle(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iMaterialHandle_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigiFontToiBase(void *ptr) {
    iFont *src;
    iBase *dest;
    src = (iFont *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iFont_SetSize(_swigobj,_swigarg0)  (_swigobj->SetSize(_swigarg0))
static PyObject *_wrap_iFont_SetSize(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iFont * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:iFont_SetSize",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iFont_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iFont_SetSize. Expected _iFont_p.");
        return NULL;
        }
    }
    iFont_SetSize(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iFont_GetSize(_swigobj)  (_swigobj->GetSize())
static PyObject *_wrap_iFont_GetSize(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iFont * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iFont_GetSize",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iFont_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iFont_GetSize. Expected _iFont_p.");
        return NULL;
        }
    }
    _result = (int )iFont_GetSize(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iFont_GetMaxSize(_swigobj,_swigarg0,_swigarg1)  (_swigobj->GetMaxSize(_swigarg0,_swigarg1))
static PyObject *_wrap_iFont_GetMaxSize(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iFont * _arg0;
    int * _arg1;
    int * _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iFont_GetMaxSize",&_argc0,&_argc1,&_argc2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iFont_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iFont_GetMaxSize. Expected _iFont_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iFont_GetMaxSize. Expected _int_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iFont_GetMaxSize. Expected _int_p.");
        return NULL;
        }
    }
    iFont_GetMaxSize(_arg0,*_arg1,*_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iFont_GetGlyphSize(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->GetGlyphSize(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_iFont_GetGlyphSize(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iFont * _arg0;
    unsigned char  _arg1;
    int * _arg2;
    int * _arg3;
    char * _argc0 = 0;
    char * _argc2 = 0;
    char * _argc3 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sbss:iFont_GetGlyphSize",&_argc0,&_arg1,&_argc2,&_argc3)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iFont_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iFont_GetGlyphSize. Expected _iFont_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iFont_GetGlyphSize. Expected _int_p.");
        return NULL;
        }
    }
    if (_argc3) {
        if (SWIG_GetPtr(_argc3,(void **) &_arg3,"_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of iFont_GetGlyphSize. Expected _int_p.");
        return NULL;
        }
    }
    _result = (bool )iFont_GetGlyphSize(_arg0,_arg1,*_arg2,*_arg3);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iFont_GetGlyphBitmap(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->GetGlyphBitmap(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_iFont_GetGlyphBitmap(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    void * _result;
    iFont * _arg0;
    unsigned char  _arg1;
    int * _arg2;
    int * _arg3;
    char * _argc0 = 0;
    char * _argc2 = 0;
    char * _argc3 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"sbss:iFont_GetGlyphBitmap",&_argc0,&_arg1,&_argc2,&_argc3)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iFont_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iFont_GetGlyphBitmap. Expected _iFont_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iFont_GetGlyphBitmap. Expected _int_p.");
        return NULL;
        }
    }
    if (_argc3) {
        if (SWIG_GetPtr(_argc3,(void **) &_arg3,"_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of iFont_GetGlyphBitmap. Expected _int_p.");
        return NULL;
        }
    }
    _result = (void *)iFont_GetGlyphBitmap(_arg0,_arg1,*_arg2,*_arg3);
    SWIG_MakePtr(_ptemp, (char *) _result,"_void_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iFont_GetDimensions(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->GetDimensions(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_iFont_GetDimensions(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iFont * _arg0;
    char * _arg1;
    int * _arg2;
    int * _arg3;
    char * _argc0 = 0;
    char * _argc2 = 0;
    char * _argc3 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ssss:iFont_GetDimensions",&_argc0,&_arg1,&_argc2,&_argc3)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iFont_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iFont_GetDimensions. Expected _iFont_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iFont_GetDimensions. Expected _int_p.");
        return NULL;
        }
    }
    if (_argc3) {
        if (SWIG_GetPtr(_argc3,(void **) &_arg3,"_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of iFont_GetDimensions. Expected _int_p.");
        return NULL;
        }
    }
    iFont_GetDimensions(_arg0,_arg1,*_arg2,*_arg3);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iFont_GetLength(_swigobj,_swigarg0,_swigarg1)  (_swigobj->GetLength(_swigarg0,_swigarg1))
static PyObject *_wrap_iFont_GetLength(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iFont * _arg0;
    char * _arg1;
    int  _arg2;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ssi:iFont_GetLength",&_argc0,&_arg1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iFont_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iFont_GetLength. Expected _iFont_p.");
        return NULL;
        }
    }
    _result = (int )iFont_GetLength(_arg0,_arg1,_arg2);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigiFontServerToiBase(void *ptr) {
    iFontServer *src;
    iBase *dest;
    src = (iFontServer *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iFontServer_LoadFont(_swigobj,_swigarg0)  (_swigobj->LoadFont(_swigarg0))
static PyObject *_wrap_iFontServer_LoadFont(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csPtr< iFont > * _result;
    iFontServer * _arg0;
    char * _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iFontServer_LoadFont",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iFontServer_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iFontServer_LoadFont. Expected _iFontServer_p.");
        return NULL;
        }
    }
    _result = new csPtr< iFont > (iFontServer_LoadFont(_arg0,_arg1));
    SWIG_MakePtr(_ptemp, (void *) _result,"_csPtr<_iFont_>_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iFontServer_GetFontCount(_swigobj)  (_swigobj->GetFontCount())
static PyObject *_wrap_iFontServer_GetFontCount(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iFontServer * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iFontServer_GetFontCount",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iFontServer_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iFontServer_GetFontCount. Expected _iFontServer_p.");
        return NULL;
        }
    }
    _result = (int )iFontServer_GetFontCount(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iFontServer_GetFont(_swigobj,_swigarg0)  (_swigobj->GetFont(_swigarg0))
static PyObject *_wrap_iFontServer_GetFont(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iFont * _result;
    iFontServer * _arg0;
    int  _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"si:iFontServer_GetFont",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iFontServer_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iFontServer_GetFont. Expected _iFontServer_p.");
        return NULL;
        }
    }
    _result = (iFont *)iFontServer_GetFont(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iFont_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigiGraphics2DToiBase(void *ptr) {
    iGraphics2D *src;
    iBase *dest;
    src = (iGraphics2D *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iGraphics2D_Open(_swigobj)  (_swigobj->Open())
static PyObject *_wrap_iGraphics2D_Open(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iGraphics2D * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics2D_Open",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_Open. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    _result = (bool )iGraphics2D_Open(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iGraphics2D_Close(_swigobj)  (_swigobj->Close())
static PyObject *_wrap_iGraphics2D_Close(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics2D * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics2D_Close",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_Close. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    iGraphics2D_Close(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics2D_GetWidth(_swigobj)  (_swigobj->GetWidth())
static PyObject *_wrap_iGraphics2D_GetWidth(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iGraphics2D * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics2D_GetWidth",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_GetWidth. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    _result = (int )iGraphics2D_GetWidth(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iGraphics2D_GetHeight(_swigobj)  (_swigobj->GetHeight())
static PyObject *_wrap_iGraphics2D_GetHeight(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iGraphics2D * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics2D_GetHeight",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_GetHeight. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    _result = (int )iGraphics2D_GetHeight(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iGraphics2D_GetFullScreen(_swigobj)  (_swigobj->GetFullScreen())
static PyObject *_wrap_iGraphics2D_GetFullScreen(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iGraphics2D * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics2D_GetFullScreen",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_GetFullScreen. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    _result = (bool )iGraphics2D_GetFullScreen(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iGraphics2D_GetPage(_swigobj)  (_swigobj->GetPage())
static PyObject *_wrap_iGraphics2D_GetPage(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iGraphics2D * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics2D_GetPage",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_GetPage. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    _result = (int )iGraphics2D_GetPage(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iGraphics2D_DoubleBuffer(_swigobj,_swigarg0)  (_swigobj->DoubleBuffer(_swigarg0))
static PyObject *_wrap_iGraphics2D_DoubleBuffer(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iGraphics2D * _arg0;
    bool  _arg1;
    char * _argc0 = 0;
    int tempbool1;

    self = self;
    if(!PyArg_ParseTuple(args,"si:iGraphics2D_DoubleBuffer",&_argc0,&tempbool1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_DoubleBuffer. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
    _result = (bool )iGraphics2D_DoubleBuffer(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iGraphics2D_GetDoubleBufferState(_swigobj)  (_swigobj->GetDoubleBufferState())
static PyObject *_wrap_iGraphics2D_GetDoubleBufferState(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iGraphics2D * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics2D_GetDoubleBufferState",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_GetDoubleBufferState. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    _result = (bool )iGraphics2D_GetDoubleBufferState(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iGraphics2D_GetPixelFormat(_swigobj)  (_swigobj->GetPixelFormat())
static PyObject *_wrap_iGraphics2D_GetPixelFormat(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csPixelFormat * _result;
    iGraphics2D * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics2D_GetPixelFormat",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_GetPixelFormat. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    _result = (csPixelFormat *)iGraphics2D_GetPixelFormat(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_csPixelFormat_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iGraphics2D_GetPixelBytes(_swigobj)  (_swigobj->GetPixelBytes())
static PyObject *_wrap_iGraphics2D_GetPixelBytes(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iGraphics2D * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics2D_GetPixelBytes",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_GetPixelBytes. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    _result = (int )iGraphics2D_GetPixelBytes(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iGraphics2D_GetPalEntryCount(_swigobj)  (_swigobj->GetPalEntryCount())
static PyObject *_wrap_iGraphics2D_GetPalEntryCount(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iGraphics2D * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics2D_GetPalEntryCount",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_GetPalEntryCount. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    _result = (int )iGraphics2D_GetPalEntryCount(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iGraphics2D_GetPalette(_swigobj)  (_swigobj->GetPalette())
static PyObject *_wrap_iGraphics2D_GetPalette(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csRGBpixel * _result;
    iGraphics2D * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics2D_GetPalette",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_GetPalette. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    _result = (csRGBpixel *)iGraphics2D_GetPalette(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_csRGBpixel_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iGraphics2D_SetRGB(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->SetRGB(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_iGraphics2D_SetRGB(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics2D * _arg0;
    int  _arg1;
    int  _arg2;
    int  _arg3;
    int  _arg4;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"siiii:iGraphics2D_SetRGB",&_argc0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_SetRGB. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    iGraphics2D_SetRGB(_arg0,_arg1,_arg2,_arg3,_arg4);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics2D_SetClipRect(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->SetClipRect(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_iGraphics2D_SetClipRect(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics2D * _arg0;
    int  _arg1;
    int  _arg2;
    int  _arg3;
    int  _arg4;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"siiii:iGraphics2D_SetClipRect",&_argc0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_SetClipRect. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    iGraphics2D_SetClipRect(_arg0,_arg1,_arg2,_arg3,_arg4);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics2D_GetClipRect(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->GetClipRect(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_iGraphics2D_GetClipRect(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics2D * _arg0;
    int * _arg1;
    int * _arg2;
    int * _arg3;
    int * _arg4;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;
    char * _argc3 = 0;
    char * _argc4 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sssss:iGraphics2D_GetClipRect",&_argc0,&_argc1,&_argc2,&_argc3,&_argc4)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_GetClipRect. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iGraphics2D_GetClipRect. Expected _int_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iGraphics2D_GetClipRect. Expected _int_p.");
        return NULL;
        }
    }
    if (_argc3) {
        if (SWIG_GetPtr(_argc3,(void **) &_arg3,"_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of iGraphics2D_GetClipRect. Expected _int_p.");
        return NULL;
        }
    }
    if (_argc4) {
        if (SWIG_GetPtr(_argc4,(void **) &_arg4,"_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 5 of iGraphics2D_GetClipRect. Expected _int_p.");
        return NULL;
        }
    }
    iGraphics2D_GetClipRect(_arg0,*_arg1,*_arg2,*_arg3,*_arg4);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics2D_BeginDraw(_swigobj)  (_swigobj->BeginDraw())
static PyObject *_wrap_iGraphics2D_BeginDraw(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iGraphics2D * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics2D_BeginDraw",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_BeginDraw. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    _result = (bool )iGraphics2D_BeginDraw(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iGraphics2D_FinishDraw(_swigobj)  (_swigobj->FinishDraw())
static PyObject *_wrap_iGraphics2D_FinishDraw(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics2D * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics2D_FinishDraw",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_FinishDraw. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    iGraphics2D_FinishDraw(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics2D_Print(_swigobj,_swigarg0)  (_swigobj->Print(_swigarg0))
static PyObject *_wrap_iGraphics2D_Print(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics2D * _arg0;
    csRect * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iGraphics2D_Print",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_Print. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csRect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iGraphics2D_Print. Expected _csRect_p.");
        return NULL;
        }
    }
    iGraphics2D_Print(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics2D_Clear(_swigobj,_swigarg0)  (_swigobj->Clear(_swigarg0))
static PyObject *_wrap_iGraphics2D_Clear(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics2D * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:iGraphics2D_Clear",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_Clear. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    iGraphics2D_Clear(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics2D_ClearAll(_swigobj,_swigarg0)  (_swigobj->ClearAll(_swigarg0))
static PyObject *_wrap_iGraphics2D_ClearAll(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics2D * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:iGraphics2D_ClearAll",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_ClearAll. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    iGraphics2D_ClearAll(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics2D_DrawLine(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4)  (_swigobj->DrawLine(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4))
static PyObject *_wrap_iGraphics2D_DrawLine(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics2D * _arg0;
    float  _arg1;
    float  _arg2;
    float  _arg3;
    float  _arg4;
    int  _arg5;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sffffi:iGraphics2D_DrawLine",&_argc0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_DrawLine. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    iGraphics2D_DrawLine(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics2D_DrawBox(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4)  (_swigobj->DrawBox(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4))
static PyObject *_wrap_iGraphics2D_DrawBox(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics2D * _arg0;
    int  _arg1;
    int  _arg2;
    int  _arg3;
    int  _arg4;
    int  _arg5;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"siiiii:iGraphics2D_DrawBox",&_argc0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_DrawBox. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    iGraphics2D_DrawBox(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics2D_ClipLine(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7)  (_swigobj->ClipLine(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7))
static PyObject *_wrap_iGraphics2D_ClipLine(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iGraphics2D * _arg0;
    float * _arg1;
    float * _arg2;
    float * _arg3;
    float * _arg4;
    int  _arg5;
    int  _arg6;
    int  _arg7;
    int  _arg8;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;
    char * _argc3 = 0;
    char * _argc4 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sssssiiii:iGraphics2D_ClipLine",&_argc0,&_argc1,&_argc2,&_argc3,&_argc4,&_arg5,&_arg6,&_arg7,&_arg8)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_ClipLine. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_float_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iGraphics2D_ClipLine. Expected _float_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_float_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iGraphics2D_ClipLine. Expected _float_p.");
        return NULL;
        }
    }
    if (_argc3) {
        if (SWIG_GetPtr(_argc3,(void **) &_arg3,"_float_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of iGraphics2D_ClipLine. Expected _float_p.");
        return NULL;
        }
    }
    if (_argc4) {
        if (SWIG_GetPtr(_argc4,(void **) &_arg4,"_float_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 5 of iGraphics2D_ClipLine. Expected _float_p.");
        return NULL;
        }
    }
    _result = (bool )iGraphics2D_ClipLine(_arg0,*_arg1,*_arg2,*_arg3,*_arg4,_arg5,_arg6,_arg7,_arg8);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iGraphics2D_DrawPixel(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->DrawPixel(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_iGraphics2D_DrawPixel(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics2D * _arg0;
    int  _arg1;
    int  _arg2;
    int  _arg3;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"siii:iGraphics2D_DrawPixel",&_argc0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_DrawPixel. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    iGraphics2D_DrawPixel(_arg0,_arg1,_arg2,_arg3);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics2D_GetPixelAt(_swigobj,_swigarg0,_swigarg1)  (_swigobj->GetPixelAt(_swigarg0,_swigarg1))
static PyObject *_wrap_iGraphics2D_GetPixelAt(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    void * _result;
    iGraphics2D * _arg0;
    int  _arg1;
    int  _arg2;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"sii:iGraphics2D_GetPixelAt",&_argc0,&_arg1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_GetPixelAt. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    _result = (void *)iGraphics2D_GetPixelAt(_arg0,_arg1,_arg2);
    SWIG_MakePtr(_ptemp, (char *) _result,"_void_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iGraphics2D_GetPixel(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4)  (_swigobj->GetPixel(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4))
static PyObject *_wrap_iGraphics2D_GetPixel(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics2D * _arg0;
    int  _arg1;
    int  _arg2;
    unsigned char * _arg3;
    unsigned char * _arg4;
    unsigned char * _arg5;
    char * _argc0 = 0;
    char * _argc3 = 0;
    char * _argc4 = 0;
    char * _argc5 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"siisss:iGraphics2D_GetPixel",&_argc0,&_arg1,&_arg2,&_argc3,&_argc4,&_argc5)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_GetPixel. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    if (_argc3) {
        if (SWIG_GetPtr(_argc3,(void **) &_arg3,"_unsigned_char_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of iGraphics2D_GetPixel. Expected _unsigned_char_p.");
        return NULL;
        }
    }
    if (_argc4) {
        if (SWIG_GetPtr(_argc4,(void **) &_arg4,"_unsigned_char_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 5 of iGraphics2D_GetPixel. Expected _unsigned_char_p.");
        return NULL;
        }
    }
    if (_argc5) {
        if (SWIG_GetPtr(_argc5,(void **) &_arg5,"_unsigned_char_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 6 of iGraphics2D_GetPixel. Expected _unsigned_char_p.");
        return NULL;
        }
    }
    iGraphics2D_GetPixel(_arg0,_arg1,_arg2,*_arg3,*_arg4,*_arg5);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics2D_SaveArea(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->SaveArea(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_iGraphics2D_SaveArea(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csImageArea * _result;
    iGraphics2D * _arg0;
    int  _arg1;
    int  _arg2;
    int  _arg3;
    int  _arg4;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"siiii:iGraphics2D_SaveArea",&_argc0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_SaveArea. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    _result = (csImageArea *)iGraphics2D_SaveArea(_arg0,_arg1,_arg2,_arg3,_arg4);
    SWIG_MakePtr(_ptemp, (char *) _result,"_csImageArea_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iGraphics2D_RestoreArea(_swigobj,_swigarg0,_swigarg1)  (_swigobj->RestoreArea(_swigarg0,_swigarg1))
static PyObject *_wrap_iGraphics2D_RestoreArea(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics2D * _arg0;
    csImageArea * _arg1;
    bool  _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    int tempbool2;

    self = self;
    if(!PyArg_ParseTuple(args,"ssi:iGraphics2D_RestoreArea",&_argc0,&_argc1,&tempbool2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_RestoreArea. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csImageArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iGraphics2D_RestoreArea. Expected _csImageArea_p.");
        return NULL;
        }
    }
    _arg2 = (bool ) tempbool2;
    iGraphics2D_RestoreArea(_arg0,_arg1,_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics2D_FreeArea(_swigobj,_swigarg0)  (_swigobj->FreeArea(_swigarg0))
static PyObject *_wrap_iGraphics2D_FreeArea(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics2D * _arg0;
    csImageArea * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iGraphics2D_FreeArea",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_FreeArea. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csImageArea_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iGraphics2D_FreeArea. Expected _csImageArea_p.");
        return NULL;
        }
    }
    iGraphics2D_FreeArea(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics2D_Write(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5)  (_swigobj->Write(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_iGraphics2D_Write(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics2D * _arg0;
    iFont * _arg1;
    int  _arg2;
    int  _arg3;
    int  _arg4;
    int  _arg5;
    char * _arg6;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ssiiiis:iGraphics2D_Write",&_argc0,&_argc1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_Write. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iFont_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iGraphics2D_Write. Expected _iFont_p.");
        return NULL;
        }
    }
    iGraphics2D_Write(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics2D_GetFontServer(_swigobj)  (_swigobj->GetFontServer())
static PyObject *_wrap_iGraphics2D_GetFontServer(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iFontServer * _result;
    iGraphics2D * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics2D_GetFontServer",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_GetFontServer. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    _result = (iFontServer *)iGraphics2D_GetFontServer(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iFontServer_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iGraphics2D_SetMousePosition(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetMousePosition(_swigarg0,_swigarg1))
static PyObject *_wrap_iGraphics2D_SetMousePosition(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iGraphics2D * _arg0;
    int  _arg1;
    int  _arg2;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sii:iGraphics2D_SetMousePosition",&_argc0,&_arg1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_SetMousePosition. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    _result = (bool )iGraphics2D_SetMousePosition(_arg0,_arg1,_arg2);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iGraphics2D_SetMouseCursor(_swigobj,_swigarg0)  (_swigobj->SetMouseCursor(_swigarg0))
static PyObject *_wrap_iGraphics2D_SetMouseCursor(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iGraphics2D * _arg0;
    csMouseCursorID * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iGraphics2D_SetMouseCursor",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_SetMouseCursor. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csMouseCursorID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iGraphics2D_SetMouseCursor. Expected _csMouseCursorID_p.");
        return NULL;
        }
    }
    _result = (bool )iGraphics2D_SetMouseCursor(_arg0,*_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iGraphics2D_ScreenShot(_swigobj)  (_swigobj->ScreenShot())
static PyObject *_wrap_iGraphics2D_ScreenShot(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csPtr< iImage > * _result;
    iGraphics2D * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics2D_ScreenShot",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_ScreenShot. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    _result = new csPtr< iImage > (iGraphics2D_ScreenShot(_arg0));
    SWIG_MakePtr(_ptemp, (void *) _result,"_csPtr<_iImage_>_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iGraphics2D_AllowResize(_swigobj,_swigarg0)  (_swigobj->AllowResize(_swigarg0))
static PyObject *_wrap_iGraphics2D_AllowResize(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics2D * _arg0;
    bool  _arg1;
    char * _argc0 = 0;
    int tempbool1;

    self = self;
    if(!PyArg_ParseTuple(args,"si:iGraphics2D_AllowResize",&_argc0,&tempbool1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_AllowResize. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
    iGraphics2D_AllowResize(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics2D_FindRGB(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->FindRGB(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_iGraphics2D_FindRGB(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iGraphics2D * _arg0;
    int  _arg1;
    int  _arg2;
    int  _arg3;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"siii:iGraphics2D_FindRGB",&_argc0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics2D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics2D_FindRGB. Expected _iGraphics2D_p.");
        return NULL;
        }
    }
    _result = (int )iGraphics2D_FindRGB(_arg0,_arg1,_arg2,_arg3);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigiHaloToiBase(void *ptr) {
    iHalo *src;
    iBase *dest;
    src = (iHalo *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iHalo_GetWidth(_swigobj)  (_swigobj->GetWidth())
static PyObject *_wrap_iHalo_GetWidth(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iHalo * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iHalo_GetWidth",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iHalo_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iHalo_GetWidth. Expected _iHalo_p.");
        return NULL;
        }
    }
    _result = (int )iHalo_GetWidth(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iHalo_GetHeight(_swigobj)  (_swigobj->GetHeight())
static PyObject *_wrap_iHalo_GetHeight(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iHalo * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iHalo_GetHeight",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iHalo_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iHalo_GetHeight. Expected _iHalo_p.");
        return NULL;
        }
    }
    _result = (int )iHalo_GetHeight(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iHalo_SetColor(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->SetColor(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_iHalo_SetColor(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iHalo * _arg0;
    float * _arg1;
    float * _arg2;
    float * _arg3;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;
    char * _argc3 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ssss:iHalo_SetColor",&_argc0,&_argc1,&_argc2,&_argc3)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iHalo_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iHalo_SetColor. Expected _iHalo_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_float_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iHalo_SetColor. Expected _float_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_float_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iHalo_SetColor. Expected _float_p.");
        return NULL;
        }
    }
    if (_argc3) {
        if (SWIG_GetPtr(_argc3,(void **) &_arg3,"_float_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of iHalo_SetColor. Expected _float_p.");
        return NULL;
        }
    }
    iHalo_SetColor(_arg0,*_arg1,*_arg2,*_arg3);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iHalo_GetColor(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->GetColor(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_iHalo_GetColor(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iHalo * _arg0;
    float * _arg1;
    float * _arg2;
    float * _arg3;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;
    char * _argc3 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ssss:iHalo_GetColor",&_argc0,&_argc1,&_argc2,&_argc3)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iHalo_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iHalo_GetColor. Expected _iHalo_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_float_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iHalo_GetColor. Expected _float_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_float_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iHalo_GetColor. Expected _float_p.");
        return NULL;
        }
    }
    if (_argc3) {
        if (SWIG_GetPtr(_argc3,(void **) &_arg3,"_float_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of iHalo_GetColor. Expected _float_p.");
        return NULL;
        }
    }
    iHalo_GetColor(_arg0,*_arg1,*_arg2,*_arg3);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iHalo_Draw(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6)  (_swigobj->Draw(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6))
static PyObject *_wrap_iHalo_Draw(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iHalo * _arg0;
    float  _arg1;
    float  _arg2;
    float  _arg3;
    float  _arg4;
    float  _arg5;
    csVector2 * _arg6;
    int  _arg7;
    char * _argc0 = 0;
    char * _argc6 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sfffffsi:iHalo_Draw",&_argc0,&_arg1,&_arg2,&_arg3,&_arg4,&_arg5,&_argc6,&_arg7)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iHalo_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iHalo_Draw. Expected _iHalo_p.");
        return NULL;
        }
    }
    if (_argc6) {
        if (SWIG_GetPtr(_argc6,(void **) &_arg6,"_csVector2_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 7 of iHalo_Draw. Expected _csVector2_p.");
        return NULL;
        }
    }
    iHalo_Draw(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigiGraphics3DToiBase(void *ptr) {
    iGraphics3D *src;
    iBase *dest;
    src = (iGraphics3D *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iGraphics3D_Open(_swigobj)  (_swigobj->Open())
static PyObject *_wrap_iGraphics3D_Open(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iGraphics3D * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics3D_Open",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_Open. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    _result = (bool )iGraphics3D_Open(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iGraphics3D_Close(_swigobj)  (_swigobj->Close())
static PyObject *_wrap_iGraphics3D_Close(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics3D_Close",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_Close. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    iGraphics3D_Close(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics3D_SetDimensions(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetDimensions(_swigarg0,_swigarg1))
static PyObject *_wrap_iGraphics3D_SetDimensions(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _arg0;
    int  _arg1;
    int  _arg2;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sii:iGraphics3D_SetDimensions",&_argc0,&_arg1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_SetDimensions. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    iGraphics3D_SetDimensions(_arg0,_arg1,_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics3D_BeginDraw(_swigobj,_swigarg0)  (_swigobj->BeginDraw(_swigarg0))
static PyObject *_wrap_iGraphics3D_BeginDraw(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iGraphics3D * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:iGraphics3D_BeginDraw",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_BeginDraw. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    _result = (bool )iGraphics3D_BeginDraw(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iGraphics3D_FinishDraw(_swigobj)  (_swigobj->FinishDraw())
static PyObject *_wrap_iGraphics3D_FinishDraw(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics3D_FinishDraw",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_FinishDraw. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    iGraphics3D_FinishDraw(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics3D_Print(_swigobj,_swigarg0)  (_swigobj->Print(_swigarg0))
static PyObject *_wrap_iGraphics3D_Print(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _arg0;
    csRect * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iGraphics3D_Print",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_Print. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csRect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iGraphics3D_Print. Expected _csRect_p.");
        return NULL;
        }
    }
    iGraphics3D_Print(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics3D_DrawPolygon(_swigobj,_swigarg0)  (_swigobj->DrawPolygon(_swigarg0))
static PyObject *_wrap_iGraphics3D_DrawPolygon(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _arg0;
    G3DPolygonDP * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iGraphics3D_DrawPolygon",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_DrawPolygon. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_G3DPolygonDP_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iGraphics3D_DrawPolygon. Expected _G3DPolygonDP_p.");
        return NULL;
        }
    }
    iGraphics3D_DrawPolygon(_arg0,*_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics3D_DrawPolygonDebug(_swigobj,_swigarg0)  (_swigobj->DrawPolygonDebug(_swigarg0))
static PyObject *_wrap_iGraphics3D_DrawPolygonDebug(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _arg0;
    G3DPolygonDP * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iGraphics3D_DrawPolygonDebug",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_DrawPolygonDebug. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_G3DPolygonDP_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iGraphics3D_DrawPolygonDebug. Expected _G3DPolygonDP_p.");
        return NULL;
        }
    }
    iGraphics3D_DrawPolygonDebug(_arg0,*_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics3D_DrawLine(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->DrawLine(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_iGraphics3D_DrawLine(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _arg0;
    csVector3 * _arg1;
    csVector3 * _arg2;
    float  _arg3;
    int  _arg4;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sssfi:iGraphics3D_DrawLine",&_argc0,&_argc1,&_argc2,&_arg3,&_arg4)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_DrawLine. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iGraphics3D_DrawLine. Expected _csVector3_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iGraphics3D_DrawLine. Expected _csVector3_p.");
        return NULL;
        }
    }
    iGraphics3D_DrawLine(_arg0,*_arg1,*_arg2,_arg3,_arg4);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics3D_DrawTriangleMesh(_swigobj,_swigarg0)  (_swigobj->DrawTriangleMesh(_swigarg0))
static PyObject *_wrap_iGraphics3D_DrawTriangleMesh(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _arg0;
    G3DTriangleMesh * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iGraphics3D_DrawTriangleMesh",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_DrawTriangleMesh. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_G3DTriangleMesh_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iGraphics3D_DrawTriangleMesh. Expected _G3DTriangleMesh_p.");
        return NULL;
        }
    }
    iGraphics3D_DrawTriangleMesh(_arg0,*_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics3D_DrawPolygonMesh(_swigobj,_swigarg0)  (_swigobj->DrawPolygonMesh(_swigarg0))
static PyObject *_wrap_iGraphics3D_DrawPolygonMesh(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _arg0;
    G3DPolygonMesh * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iGraphics3D_DrawPolygonMesh",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_DrawPolygonMesh. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_G3DPolygonMesh_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iGraphics3D_DrawPolygonMesh. Expected _G3DPolygonMesh_p.");
        return NULL;
        }
    }
    iGraphics3D_DrawPolygonMesh(_arg0,*_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics3D_OpenFogObject(_swigobj,_swigarg0,_swigarg1)  (_swigobj->OpenFogObject(_swigarg0,_swigarg1))
static PyObject *_wrap_iGraphics3D_OpenFogObject(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _arg0;
    CS_ID * _arg1;
    csFog * _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iGraphics3D_OpenFogObject",&_argc0,&_argc1,&_argc2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_OpenFogObject. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_CS_ID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iGraphics3D_OpenFogObject. Expected _CS_ID_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_csFog_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iGraphics3D_OpenFogObject. Expected _csFog_p.");
        return NULL;
        }
    }
    iGraphics3D_OpenFogObject(_arg0,*_arg1,_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics3D_DrawFogPolygon(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->DrawFogPolygon(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_iGraphics3D_DrawFogPolygon(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _arg0;
    CS_ID * _arg1;
    G3DPolygonDFP * _arg2;
    int  _arg3;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sssi:iGraphics3D_DrawFogPolygon",&_argc0,&_argc1,&_argc2,&_arg3)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_DrawFogPolygon. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_CS_ID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iGraphics3D_DrawFogPolygon. Expected _CS_ID_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_G3DPolygonDFP_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iGraphics3D_DrawFogPolygon. Expected _G3DPolygonDFP_p.");
        return NULL;
        }
    }
    iGraphics3D_DrawFogPolygon(_arg0,*_arg1,*_arg2,_arg3);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics3D_CloseFogObject(_swigobj,_swigarg0)  (_swigobj->CloseFogObject(_swigarg0))
static PyObject *_wrap_iGraphics3D_CloseFogObject(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _arg0;
    CS_ID * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iGraphics3D_CloseFogObject",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_CloseFogObject. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_CS_ID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iGraphics3D_CloseFogObject. Expected _CS_ID_p.");
        return NULL;
        }
    }
    iGraphics3D_CloseFogObject(_arg0,*_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics3D_GetCaps(_swigobj)  (_swigobj->GetCaps())
static PyObject *_wrap_iGraphics3D_GetCaps(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csGraphics3DCaps * _result;
    iGraphics3D * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics3D_GetCaps",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_GetCaps. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    _result = (csGraphics3DCaps *)iGraphics3D_GetCaps(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_csGraphics3DCaps_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iGraphics3D_GetZBuffAt(_swigobj,_swigarg0,_swigarg1)  (_swigobj->GetZBuffAt(_swigarg0,_swigarg1))
static PyObject *_wrap_iGraphics3D_GetZBuffAt(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    void * _result;
    iGraphics3D * _arg0;
    int  _arg1;
    int  _arg2;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"sii:iGraphics3D_GetZBuffAt",&_argc0,&_arg1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_GetZBuffAt. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    _result = (void *)iGraphics3D_GetZBuffAt(_arg0,_arg1,_arg2);
    SWIG_MakePtr(_ptemp, (char *) _result,"_void_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iGraphics3D_GetZBuffValue(_swigobj,_swigarg0,_swigarg1)  (_swigobj->GetZBuffValue(_swigarg0,_swigarg1))
static PyObject *_wrap_iGraphics3D_GetZBuffValue(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    float  _result;
    iGraphics3D * _arg0;
    int  _arg1;
    int  _arg2;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sii:iGraphics3D_GetZBuffValue",&_argc0,&_arg1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_GetZBuffValue. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    _result = (float )iGraphics3D_GetZBuffValue(_arg0,_arg1,_arg2);
    _resultobj = Py_BuildValue("f",_result);
    return _resultobj;
}

#define iGraphics3D_DumpCache(_swigobj)  (_swigobj->DumpCache())
static PyObject *_wrap_iGraphics3D_DumpCache(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics3D_DumpCache",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_DumpCache. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    iGraphics3D_DumpCache(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics3D_ClearCache(_swigobj)  (_swigobj->ClearCache())
static PyObject *_wrap_iGraphics3D_ClearCache(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics3D_ClearCache",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_ClearCache. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    iGraphics3D_ClearCache(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics3D_RemoveFromCache(_swigobj,_swigarg0)  (_swigobj->RemoveFromCache(_swigarg0))
static PyObject *_wrap_iGraphics3D_RemoveFromCache(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _arg0;
    iPolygonTexture * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iGraphics3D_RemoveFromCache",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_RemoveFromCache. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iPolygonTexture_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iGraphics3D_RemoveFromCache. Expected _iPolygonTexture_p.");
        return NULL;
        }
    }
    iGraphics3D_RemoveFromCache(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics3D_GetWidth(_swigobj)  (_swigobj->GetWidth())
static PyObject *_wrap_iGraphics3D_GetWidth(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iGraphics3D * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics3D_GetWidth",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_GetWidth. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    _result = (int )iGraphics3D_GetWidth(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iGraphics3D_GetHeight(_swigobj)  (_swigobj->GetHeight())
static PyObject *_wrap_iGraphics3D_GetHeight(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iGraphics3D * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics3D_GetHeight",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_GetHeight. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    _result = (int )iGraphics3D_GetHeight(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iGraphics3D_SetPerspectiveCenter(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetPerspectiveCenter(_swigarg0,_swigarg1))
static PyObject *_wrap_iGraphics3D_SetPerspectiveCenter(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _arg0;
    int  _arg1;
    int  _arg2;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sii:iGraphics3D_SetPerspectiveCenter",&_argc0,&_arg1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_SetPerspectiveCenter. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    iGraphics3D_SetPerspectiveCenter(_arg0,_arg1,_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics3D_SetPerspectiveAspect(_swigobj,_swigarg0)  (_swigobj->SetPerspectiveAspect(_swigarg0))
static PyObject *_wrap_iGraphics3D_SetPerspectiveAspect(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _arg0;
    float  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sf:iGraphics3D_SetPerspectiveAspect",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_SetPerspectiveAspect. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    iGraphics3D_SetPerspectiveAspect(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics3D_SetObjectToCamera(_swigobj,_swigarg0)  (_swigobj->SetObjectToCamera(_swigarg0))
static PyObject *_wrap_iGraphics3D_SetObjectToCamera(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _arg0;
    csReversibleTransform * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iGraphics3D_SetObjectToCamera",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_SetObjectToCamera. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csReversibleTransform_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iGraphics3D_SetObjectToCamera. Expected _csReversibleTransform_p.");
        return NULL;
        }
    }
    iGraphics3D_SetObjectToCamera(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iGraphics3D_GetDriver2D(_swigobj)  (_swigobj->GetDriver2D())
static PyObject *_wrap_iGraphics3D_GetDriver2D(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics2D * _result;
    iGraphics3D * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics3D_GetDriver2D",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_GetDriver2D. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    _result = (iGraphics2D *)iGraphics3D_GetDriver2D(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iGraphics2D_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iGraphics3D_GetTextureManager(_swigobj)  (_swigobj->GetTextureManager())
static PyObject *_wrap_iGraphics3D_GetTextureManager(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iTextureManager * _result;
    iGraphics3D * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iGraphics3D_GetTextureManager",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_GetTextureManager. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    _result = (iTextureManager *)iGraphics3D_GetTextureManager(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iTextureManager_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iGraphics3D_CreateHalo(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5)  (_swigobj->CreateHalo(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5))
static PyObject *_wrap_iGraphics3D_CreateHalo(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iHalo * _result;
    iGraphics3D * _arg0;
    float  _arg1;
    float  _arg2;
    float  _arg3;
    unsigned char * _arg4;
    int  _arg5;
    int  _arg6;
    char * _argc0 = 0;
    char * _argc4 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"sfffsii:iGraphics3D_CreateHalo",&_argc0,&_arg1,&_arg2,&_arg3,&_argc4,&_arg5,&_arg6)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_CreateHalo. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    if (_argc4) {
        if (SWIG_GetPtr(_argc4,(void **) &_arg4,"_unsigned_char_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 5 of iGraphics3D_CreateHalo. Expected _unsigned_char_p.");
        return NULL;
        }
    }
    _result = (iHalo *)iGraphics3D_CreateHalo(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iHalo_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iGraphics3D_DrawPixmap(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8)  (_swigobj->DrawPixmap(_swigarg0,_swigarg1,_swigarg2,_swigarg3,_swigarg4,_swigarg5,_swigarg6,_swigarg7,_swigarg8))
static PyObject *_wrap_iGraphics3D_DrawPixmap(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _arg0;
    iTextureHandle * _arg1;
    int  _arg2;
    int  _arg3;
    int  _arg4;
    int  _arg5;
    int  _arg6;
    int  _arg7;
    int  _arg8;
    int  _arg9;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ssiiiiiiii:iGraphics3D_DrawPixmap",&_argc0,&_argc1,&_arg2,&_arg3,&_arg4,&_arg5,&_arg6,&_arg7,&_arg8,&_arg9)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iGraphics3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iGraphics3D_DrawPixmap. Expected _iGraphics3D_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iTextureHandle_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iGraphics3D_DrawPixmap. Expected _iTextureHandle_p.");
        return NULL;
        }
    }
    iGraphics3D_DrawPixmap(_arg0,_arg1,_arg2,_arg3,_arg4,_arg5,_arg6,_arg7,_arg8,_arg9);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigiCameraToiBase(void *ptr) {
    iCamera *src;
    iBase *dest;
    src = (iCamera *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iCamera_GetFOV(_swigobj)  (_swigobj->GetFOV())
static PyObject *_wrap_iCamera_GetFOV(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    float  _result;
    iCamera * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iCamera_GetFOV",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCamera_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCamera_GetFOV. Expected _iCamera_p.");
        return NULL;
        }
    }
    _result = (float )iCamera_GetFOV(_arg0);
    _resultobj = Py_BuildValue("f",_result);
    return _resultobj;
}

#define iCamera_GetInvFOV(_swigobj)  (_swigobj->GetInvFOV())
static PyObject *_wrap_iCamera_GetInvFOV(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    float  _result;
    iCamera * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iCamera_GetInvFOV",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCamera_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCamera_GetInvFOV. Expected _iCamera_p.");
        return NULL;
        }
    }
    _result = (float )iCamera_GetInvFOV(_arg0);
    _resultobj = Py_BuildValue("f",_result);
    return _resultobj;
}

static void *SwigiSectorToiBase(void *ptr) {
    iSector *src;
    iBase *dest;
    src = (iSector *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

static void *SwigiThingStateToiBase(void *ptr) {
    iThingState *src;
    iBase *dest;
    src = (iThingState *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

static void *SwigiThingFactoryStateToiBase(void *ptr) {
    iThingFactoryState *src;
    iBase *dest;
    src = (iThingFactoryState *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iThingFactoryState_CreatePolygon(_swigobj,_swigarg0)  (_swigobj->CreatePolygon(_swigarg0))
static PyObject *_wrap_iThingFactoryState_CreatePolygon(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPolygon3DStatic * _result;
    iThingFactoryState * _arg0;
    char * _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iThingFactoryState_CreatePolygon",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iThingFactoryState_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iThingFactoryState_CreatePolygon. Expected _iThingFactoryState_p.");
        return NULL;
        }
    }
    _result = (iPolygon3DStatic *)iThingFactoryState_CreatePolygon(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iPolygon3DStatic_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigiMeshObjectToiBase(void *ptr) {
    iMeshObject *src;
    iBase *dest;
    src = (iMeshObject *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

static csPtr< iThingState >  iMeshObject_Query_iThingState(iMeshObject *self) {
      return SCF_QUERY_INTERFACE(self, iThingState);
    }
static PyObject *_wrap_iMeshObject_Query_iThingState(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csPtr< iThingState > * _result;
    iMeshObject * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iMeshObject_Query_iThingState",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iMeshObject_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iMeshObject_Query_iThingState. Expected _iMeshObject_p.");
        return NULL;
        }
    }
    _result = new csPtr< iThingState > (iMeshObject_Query_iThingState(_arg0));
    SWIG_MakePtr(_ptemp, (void *) _result,"_csPtr<_iThingState_>_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static csPtr< iThingFactoryState >  iMeshObject_Query_iThingFactoryState(iMeshObject *self) {
      return SCF_QUERY_INTERFACE(self, iThingFactoryState);
    }
static PyObject *_wrap_iMeshObject_Query_iThingFactoryState(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csPtr< iThingFactoryState > * _result;
    iMeshObject * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iMeshObject_Query_iThingFactoryState",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iMeshObject_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iMeshObject_Query_iThingFactoryState. Expected _iMeshObject_p.");
        return NULL;
        }
    }
    _result = new csPtr< iThingFactoryState > (iMeshObject_Query_iThingFactoryState(_arg0));
    SWIG_MakePtr(_ptemp, (void *) _result,"_csPtr<_iThingFactoryState_>_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigiMeshWrapperToiBase(void *ptr) {
    iMeshWrapper *src;
    iBase *dest;
    src = (iMeshWrapper *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iMeshWrapper_GetMeshObject(_swigobj)  (_swigobj->GetMeshObject())
static PyObject *_wrap_iMeshWrapper_GetMeshObject(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iMeshObject * _result;
    iMeshWrapper * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iMeshWrapper_GetMeshObject",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iMeshWrapper_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iMeshWrapper_GetMeshObject. Expected _iMeshWrapper_p.");
        return NULL;
        }
    }
    _result = (iMeshObject *)iMeshWrapper_GetMeshObject(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iMeshObject_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigiLightMapToiBase(void *ptr) {
    iLightMap *src;
    iBase *dest;
    src = (iLightMap *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iLightMap_GetMapData(_swigobj)  (_swigobj->GetMapData())
static PyObject *_wrap_iLightMap_GetMapData(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    void * _result;
    iLightMap * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iLightMap_GetMapData",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iLightMap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iLightMap_GetMapData. Expected _iLightMap_p.");
        return NULL;
        }
    }
    _result = (void *)iLightMap_GetMapData(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_void_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iLightMap_GetWidth(_swigobj)  (_swigobj->GetWidth())
static PyObject *_wrap_iLightMap_GetWidth(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iLightMap * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iLightMap_GetWidth",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iLightMap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iLightMap_GetWidth. Expected _iLightMap_p.");
        return NULL;
        }
    }
    _result = (int )iLightMap_GetWidth(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iLightMap_GetHeight(_swigobj)  (_swigobj->GetHeight())
static PyObject *_wrap_iLightMap_GetHeight(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iLightMap * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iLightMap_GetHeight",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iLightMap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iLightMap_GetHeight. Expected _iLightMap_p.");
        return NULL;
        }
    }
    _result = (int )iLightMap_GetHeight(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iLightMap_GetRealWidth(_swigobj)  (_swigobj->GetRealWidth())
static PyObject *_wrap_iLightMap_GetRealWidth(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iLightMap * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iLightMap_GetRealWidth",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iLightMap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iLightMap_GetRealWidth. Expected _iLightMap_p.");
        return NULL;
        }
    }
    _result = (int )iLightMap_GetRealWidth(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iLightMap_GetRealHeight(_swigobj)  (_swigobj->GetRealHeight())
static PyObject *_wrap_iLightMap_GetRealHeight(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iLightMap * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iLightMap_GetRealHeight",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iLightMap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iLightMap_GetRealHeight. Expected _iLightMap_p.");
        return NULL;
        }
    }
    _result = (int )iLightMap_GetRealHeight(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iLightMap_GetCacheData(_swigobj)  (_swigobj->GetCacheData())
static PyObject *_wrap_iLightMap_GetCacheData(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    void * _result;
    iLightMap * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iLightMap_GetCacheData",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iLightMap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iLightMap_GetCacheData. Expected _iLightMap_p.");
        return NULL;
        }
    }
    _result = (void *)iLightMap_GetCacheData(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_void_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iLightMap_SetCacheData(_swigobj,_swigarg0)  (_swigobj->SetCacheData(_swigarg0))
static PyObject *_wrap_iLightMap_SetCacheData(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iLightMap * _arg0;
    void * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iLightMap_SetCacheData",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iLightMap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iLightMap_SetCacheData. Expected _iLightMap_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iLightMap_SetCacheData. Expected _void_p.");
        return NULL;
        }
    }
    iLightMap_SetCacheData(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iLightMap_GetMeanLighting(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->GetMeanLighting(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_iLightMap_GetMeanLighting(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iLightMap * _arg0;
    int * _arg1;
    int * _arg2;
    int * _arg3;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;
    char * _argc3 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ssss:iLightMap_GetMeanLighting",&_argc0,&_argc1,&_argc2,&_argc3)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iLightMap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iLightMap_GetMeanLighting. Expected _iLightMap_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iLightMap_GetMeanLighting. Expected _int_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iLightMap_GetMeanLighting. Expected _int_p.");
        return NULL;
        }
    }
    if (_argc3) {
        if (SWIG_GetPtr(_argc3,(void **) &_arg3,"_int_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of iLightMap_GetMeanLighting. Expected _int_p.");
        return NULL;
        }
    }
    iLightMap_GetMeanLighting(_arg0,*_arg1,*_arg2,*_arg3);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iLightMap_GetSize(_swigobj)  (_swigobj->GetSize())
static PyObject *_wrap_iLightMap_GetSize(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    long  _result;
    iLightMap * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iLightMap_GetSize",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iLightMap_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iLightMap_GetSize. Expected _iLightMap_p.");
        return NULL;
        }
    }
    _result = (long )iLightMap_GetSize(_arg0);
    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

static void *SwigiPolygon3DStaticToiBase(void *ptr) {
    iPolygon3DStatic *src;
    iBase *dest;
    src = (iPolygon3DStatic *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iPolygon3DStatic_GetMaterialHandle(_swigobj)  (_swigobj->GetMaterialHandle())
static PyObject *_wrap_iPolygon3DStatic_GetMaterialHandle(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iMaterialHandle * _result;
    iPolygon3DStatic * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPolygon3DStatic_GetMaterialHandle",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygon3DStatic_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygon3DStatic_GetMaterialHandle. Expected _iPolygon3DStatic_p.");
        return NULL;
        }
    }
    _result = (iMaterialHandle *)iPolygon3DStatic_GetMaterialHandle(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iMaterialHandle_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iPolygon3DStatic_SetMaterial(_swigobj,_swigarg0)  (_swigobj->SetMaterial(_swigarg0))
static PyObject *_wrap_iPolygon3DStatic_SetMaterial(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPolygon3DStatic * _arg0;
    iMaterialWrapper * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPolygon3DStatic_SetMaterial",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygon3DStatic_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygon3DStatic_SetMaterial. Expected _iPolygon3DStatic_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iMaterialWrapper_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPolygon3DStatic_SetMaterial. Expected _iMaterialWrapper_p.");
        return NULL;
        }
    }
    iPolygon3DStatic_SetMaterial(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPolygon3DStatic_GetVertexCount(_swigobj)  (_swigobj->GetVertexCount())
static PyObject *_wrap_iPolygon3DStatic_GetVertexCount(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iPolygon3DStatic * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPolygon3DStatic_GetVertexCount",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygon3DStatic_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygon3DStatic_GetVertexCount. Expected _iPolygon3DStatic_p.");
        return NULL;
        }
    }
    _result = (int )iPolygon3DStatic_GetVertexCount(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPolygon3DStatic_GetVertex(_swigobj,_swigarg0)  (_swigobj->GetVertex(_swigarg0))
static PyObject *_wrap_iPolygon3DStatic_GetVertex(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csVector3 * _result;
    iPolygon3DStatic * _arg0;
    int  _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"si:iPolygon3DStatic_GetVertex",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygon3DStatic_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygon3DStatic_GetVertex. Expected _iPolygon3DStatic_p.");
        return NULL;
        }
    }
    const csVector3 & _result_ref = iPolygon3DStatic_GetVertex(_arg0,_arg1);
    _result = (csVector3 *) &_result_ref;
    SWIG_MakePtr(_ptemp, (char *) _result,"_csVector3_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iPolygon3DStatic_CreateVertexByIndex(_swigobj,_swigarg0)  (_swigobj->CreateVertex(_swigarg0))
static PyObject *_wrap_iPolygon3DStatic_CreateVertexByIndex(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iPolygon3DStatic * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:iPolygon3DStatic_CreateVertexByIndex",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygon3DStatic_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygon3DStatic_CreateVertexByIndex. Expected _iPolygon3DStatic_p.");
        return NULL;
        }
    }
    _result = (int )iPolygon3DStatic_CreateVertexByIndex(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPolygon3DStatic_CreateVertex(_swigobj,_swigarg0)  (_swigobj->CreateVertex(_swigarg0))
static PyObject *_wrap_iPolygon3DStatic_CreateVertex(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iPolygon3DStatic * _arg0;
    csVector3 * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPolygon3DStatic_CreateVertex",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygon3DStatic_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygon3DStatic_CreateVertex. Expected _iPolygon3DStatic_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPolygon3DStatic_CreateVertex. Expected _csVector3_p.");
        return NULL;
        }
    }
    _result = (int )iPolygon3DStatic_CreateVertex(_arg0,*_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPolygon3DStatic_GetAlpha(_swigobj)  (_swigobj->GetAlpha())
static PyObject *_wrap_iPolygon3DStatic_GetAlpha(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iPolygon3DStatic * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPolygon3DStatic_GetAlpha",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygon3DStatic_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygon3DStatic_GetAlpha. Expected _iPolygon3DStatic_p.");
        return NULL;
        }
    }
    _result = (int )iPolygon3DStatic_GetAlpha(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPolygon3DStatic_SetAlpha(_swigobj,_swigarg0)  (_swigobj->SetAlpha(_swigarg0))
static PyObject *_wrap_iPolygon3DStatic_SetAlpha(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPolygon3DStatic * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:iPolygon3DStatic_SetAlpha",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygon3DStatic_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygon3DStatic_SetAlpha. Expected _iPolygon3DStatic_p.");
        return NULL;
        }
    }
    iPolygon3DStatic_SetAlpha(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPolygon3DStatic_CreatePlane(_swigobj,_swigarg0,_swigarg1)  (_swigobj->CreatePlane(_swigarg0,_swigarg1))
static PyObject *_wrap_iPolygon3DStatic_CreatePlane(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPolygon3DStatic * _arg0;
    csVector3 * _arg1;
    csMatrix3 * _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iPolygon3DStatic_CreatePlane",&_argc0,&_argc1,&_argc2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygon3DStatic_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygon3DStatic_CreatePlane. Expected _iPolygon3DStatic_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPolygon3DStatic_CreatePlane. Expected _csVector3_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_csMatrix3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iPolygon3DStatic_CreatePlane. Expected _csMatrix3_p.");
        return NULL;
        }
    }
    iPolygon3DStatic_CreatePlane(_arg0,*_arg1,*_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPolygon3DStatic_SetTextureSpace(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->SetTextureSpace(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_iPolygon3DStatic_SetTextureSpace(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPolygon3DStatic * _arg0;
    csVector3 * _arg1;
    csVector3 * _arg2;
    float  _arg3;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sssf:iPolygon3DStatic_SetTextureSpace",&_argc0,&_argc1,&_argc2,&_arg3)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygon3DStatic_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygon3DStatic_SetTextureSpace. Expected _iPolygon3DStatic_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPolygon3DStatic_SetTextureSpace. Expected _csVector3_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iPolygon3DStatic_SetTextureSpace. Expected _csVector3_p.");
        return NULL;
        }
    }
    iPolygon3DStatic_SetTextureSpace(_arg0,*_arg1,*_arg2,_arg3);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigiPolygon3DToiBase(void *ptr) {
    iPolygon3D *src;
    iBase *dest;
    src = (iPolygon3D *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iPolygon3D_GetLightMap(_swigobj)  (_swigobj->GetLightMap())
static PyObject *_wrap_iPolygon3D_GetLightMap(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iLightMap * _result;
    iPolygon3D * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPolygon3D_GetLightMap",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygon3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygon3D_GetLightMap. Expected _iPolygon3D_p.");
        return NULL;
        }
    }
    _result = (iLightMap *)iPolygon3D_GetLightMap(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iLightMap_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iPolygon3D_GetVertexW(_swigobj,_swigarg0)  (_swigobj->GetVertexW(_swigarg0))
static PyObject *_wrap_iPolygon3D_GetVertexW(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csVector3 * _result;
    iPolygon3D * _arg0;
    int  _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"si:iPolygon3D_GetVertexW",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygon3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygon3D_GetVertexW. Expected _iPolygon3D_p.");
        return NULL;
        }
    }
    const csVector3 & _result_ref = iPolygon3D_GetVertexW(_arg0,_arg1);
    _result = (csVector3 *) &_result_ref;
    SWIG_MakePtr(_ptemp, (char *) _result,"_csVector3_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iPolygon3D_GetVertexC(_swigobj,_swigarg0)  (_swigobj->GetVertexC(_swigarg0))
static PyObject *_wrap_iPolygon3D_GetVertexC(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csVector3 * _result;
    iPolygon3D * _arg0;
    int  _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"si:iPolygon3D_GetVertexC",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygon3D_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygon3D_GetVertexC. Expected _iPolygon3D_p.");
        return NULL;
        }
    }
    const csVector3 & _result_ref = iPolygon3D_GetVertexC(_arg0,_arg1);
    _result = (csVector3 *) &_result_ref;
    SWIG_MakePtr(_ptemp, (char *) _result,"_csVector3_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigiImageToiBase(void *ptr) {
    iImage *src;
    iBase *dest;
    src = (iImage *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iImage_GetImageData(_swigobj)  (_swigobj->GetImageData())
static PyObject *_wrap_iImage_GetImageData(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    void * _result;
    iImage * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iImage_GetImageData",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iImage_GetImageData. Expected _iImage_p.");
        return NULL;
        }
    }
    _result = (void *)iImage_GetImageData(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_void_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iImage_GetWidth(_swigobj)  (_swigobj->GetWidth())
static PyObject *_wrap_iImage_GetWidth(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iImage * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iImage_GetWidth",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iImage_GetWidth. Expected _iImage_p.");
        return NULL;
        }
    }
    _result = (int )iImage_GetWidth(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iImage_GetHeight(_swigobj)  (_swigobj->GetHeight())
static PyObject *_wrap_iImage_GetHeight(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iImage * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iImage_GetHeight",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iImage_GetHeight. Expected _iImage_p.");
        return NULL;
        }
    }
    _result = (int )iImage_GetHeight(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iImage_GetSize(_swigobj)  (_swigobj->GetSize())
static PyObject *_wrap_iImage_GetSize(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iImage * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iImage_GetSize",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iImage_GetSize. Expected _iImage_p.");
        return NULL;
        }
    }
    _result = (int )iImage_GetSize(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iImage_Rescale(_swigobj,_swigarg0,_swigarg1)  (_swigobj->Rescale(_swigarg0,_swigarg1))
static PyObject *_wrap_iImage_Rescale(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iImage * _arg0;
    int  _arg1;
    int  _arg2;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sii:iImage_Rescale",&_argc0,&_arg1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iImage_Rescale. Expected _iImage_p.");
        return NULL;
        }
    }
    iImage_Rescale(_arg0,_arg1,_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iImage_MipMap(_swigobj,_swigarg0,_swigarg1)  (_swigobj->MipMap(_swigarg0,_swigarg1))
static PyObject *_wrap_iImage_MipMap(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csPtr< iImage > * _result;
    iImage * _arg0;
    int  _arg1;
    csRGBpixel * _arg2;
    char * _argc0 = 0;
    char * _argc2 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"sis:iImage_MipMap",&_argc0,&_arg1,&_argc2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iImage_MipMap. Expected _iImage_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_csRGBpixel_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iImage_MipMap. Expected _csRGBpixel_p.");
        return NULL;
        }
    }
    _result = new csPtr< iImage > (iImage_MipMap(_arg0,_arg1,_arg2));
    SWIG_MakePtr(_ptemp, (void *) _result,"_csPtr<_iImage_>_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iImage_SetName(_swigobj,_swigarg0)  (_swigobj->SetName(_swigarg0))
static PyObject *_wrap_iImage_SetName(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iImage * _arg0;
    char * _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iImage_SetName",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iImage_SetName. Expected _iImage_p.");
        return NULL;
        }
    }
    iImage_SetName(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iImage_GetName(_swigobj)  (_swigobj->GetName())
static PyObject *_wrap_iImage_GetName(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    iImage * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iImage_GetName",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iImage_GetName. Expected _iImage_p.");
        return NULL;
        }
    }
    _result = (char *)iImage_GetName(_arg0);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

#define iImage_GetFormat(_swigobj)  (_swigobj->GetFormat())
static PyObject *_wrap_iImage_GetFormat(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iImage * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iImage_GetFormat",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iImage_GetFormat. Expected _iImage_p.");
        return NULL;
        }
    }
    _result = (int )iImage_GetFormat(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iImage_GetPalette(_swigobj)  (_swigobj->GetPalette())
static PyObject *_wrap_iImage_GetPalette(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csRGBpixel * _result;
    iImage * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iImage_GetPalette",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iImage_GetPalette. Expected _iImage_p.");
        return NULL;
        }
    }
    _result = (csRGBpixel *)iImage_GetPalette(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_csRGBpixel_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iImage_GetAlpha(_swigobj)  (_swigobj->GetAlpha())
static PyObject *_wrap_iImage_GetAlpha(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    void * _result;
    iImage * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iImage_GetAlpha",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iImage_GetAlpha. Expected _iImage_p.");
        return NULL;
        }
    }
    _result = (void *)iImage_GetAlpha(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_void_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iImage_SetFormat(_swigobj,_swigarg0)  (_swigobj->SetFormat(_swigarg0))
static PyObject *_wrap_iImage_SetFormat(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iImage * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:iImage_SetFormat",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iImage_SetFormat. Expected _iImage_p.");
        return NULL;
        }
    }
    iImage_SetFormat(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iImage_Clone(_swigobj)  (_swigobj->Clone())
static PyObject *_wrap_iImage_Clone(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csPtr< iImage > * _result;
    iImage * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iImage_Clone",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iImage_Clone. Expected _iImage_p.");
        return NULL;
        }
    }
    _result = new csPtr< iImage > (iImage_Clone(_arg0));
    SWIG_MakePtr(_ptemp, (void *) _result,"_csPtr<_iImage_>_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iImage_Crop(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->Crop(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_iImage_Crop(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csPtr< iImage > * _result;
    iImage * _arg0;
    int  _arg1;
    int  _arg2;
    int  _arg3;
    int  _arg4;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"siiii:iImage_Crop",&_argc0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iImage_Crop. Expected _iImage_p.");
        return NULL;
        }
    }
    _result = new csPtr< iImage > (iImage_Crop(_arg0,_arg1,_arg2,_arg3,_arg4));
    SWIG_MakePtr(_ptemp, (void *) _result,"_csPtr<_iImage_>_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigiTextureManagerToiBase(void *ptr) {
    iTextureManager *src;
    iBase *dest;
    src = (iTextureManager *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iTextureManager_RegisterTexture(_swigobj,_swigarg0,_swigarg1)  (_swigobj->RegisterTexture(_swigarg0,_swigarg1))
static PyObject *_wrap_iTextureManager_RegisterTexture(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csPtr< iTextureHandle > * _result;
    iTextureManager * _arg0;
    iImage * _arg1;
    int  _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ssi:iTextureManager_RegisterTexture",&_argc0,&_argc1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iTextureManager_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iTextureManager_RegisterTexture. Expected _iTextureManager_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iImage_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iTextureManager_RegisterTexture. Expected _iImage_p.");
        return NULL;
        }
    }
    _result = new csPtr< iTextureHandle > (iTextureManager_RegisterTexture(_arg0,_arg1,_arg2));
    SWIG_MakePtr(_ptemp, (void *) _result,"_csPtr<_iTextureHandle_>_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iTextureManager_PrepareTextures(_swigobj)  (_swigobj->PrepareTextures())
static PyObject *_wrap_iTextureManager_PrepareTextures(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iTextureManager * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iTextureManager_PrepareTextures",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iTextureManager_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iTextureManager_PrepareTextures. Expected _iTextureManager_p.");
        return NULL;
        }
    }
    iTextureManager_PrepareTextures(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iTextureManager_FreeImages(_swigobj)  (_swigobj->FreeImages())
static PyObject *_wrap_iTextureManager_FreeImages(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iTextureManager * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iTextureManager_FreeImages",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iTextureManager_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iTextureManager_FreeImages. Expected _iTextureManager_p.");
        return NULL;
        }
    }
    iTextureManager_FreeImages(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iTextureManager_SetVerbose(_swigobj,_swigarg0)  (_swigobj->SetVerbose(_swigarg0))
static PyObject *_wrap_iTextureManager_SetVerbose(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iTextureManager * _arg0;
    bool  _arg1;
    char * _argc0 = 0;
    int tempbool1;

    self = self;
    if(!PyArg_ParseTuple(args,"si:iTextureManager_SetVerbose",&_argc0,&tempbool1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iTextureManager_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iTextureManager_SetVerbose. Expected _iTextureManager_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
    iTextureManager_SetVerbose(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iTextureManager_GetTextureFormat(_swigobj)  (_swigobj->GetTextureFormat())
static PyObject *_wrap_iTextureManager_GetTextureFormat(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iTextureManager * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iTextureManager_GetTextureFormat",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iTextureManager_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iTextureManager_GetTextureFormat. Expected _iTextureManager_p.");
        return NULL;
        }
    }
    _result = (int )iTextureManager_GetTextureFormat(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigiPolygonTextureToiBase(void *ptr) {
    iPolygonTexture *src;
    iBase *dest;
    src = (iPolygonTexture *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iPolygonTexture_GetMaterialHandle(_swigobj)  (_swigobj->GetMaterialHandle())
static PyObject *_wrap_iPolygonTexture_GetMaterialHandle(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iMaterialHandle * _result;
    iPolygonTexture * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPolygonTexture_GetMaterialHandle",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygonTexture_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygonTexture_GetMaterialHandle. Expected _iPolygonTexture_p.");
        return NULL;
        }
    }
    _result = (iMaterialHandle *)iPolygonTexture_GetMaterialHandle(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iMaterialHandle_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iPolygonTexture_DynamicLightsDirty(_swigobj)  (_swigobj->DynamicLightsDirty())
static PyObject *_wrap_iPolygonTexture_DynamicLightsDirty(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPolygonTexture * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPolygonTexture_DynamicLightsDirty",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygonTexture_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygonTexture_DynamicLightsDirty. Expected _iPolygonTexture_p.");
        return NULL;
        }
    }
    _result = (bool )iPolygonTexture_DynamicLightsDirty(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPolygonTexture_RecalculateDynamicLights(_swigobj)  (_swigobj->RecalculateDynamicLights())
static PyObject *_wrap_iPolygonTexture_RecalculateDynamicLights(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPolygonTexture * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPolygonTexture_RecalculateDynamicLights",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygonTexture_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygonTexture_RecalculateDynamicLights. Expected _iPolygonTexture_p.");
        return NULL;
        }
    }
    _result = (bool )iPolygonTexture_RecalculateDynamicLights(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPolygonTexture_GetLightMap(_swigobj)  (_swigobj->GetLightMap())
static PyObject *_wrap_iPolygonTexture_GetLightMap(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iLightMap * _result;
    iPolygonTexture * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPolygonTexture_GetLightMap",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygonTexture_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygonTexture_GetLightMap. Expected _iPolygonTexture_p.");
        return NULL;
        }
    }
    _result = (iLightMap *)iPolygonTexture_GetLightMap(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iLightMap_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iPolygonTexture_GetLightCellSize(_swigobj)  (_swigobj->GetLightCellSize())
static PyObject *_wrap_iPolygonTexture_GetLightCellSize(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iPolygonTexture * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPolygonTexture_GetLightCellSize",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygonTexture_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygonTexture_GetLightCellSize. Expected _iPolygonTexture_p.");
        return NULL;
        }
    }
    _result = (int )iPolygonTexture_GetLightCellSize(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPolygonTexture_GetLightCellShift(_swigobj)  (_swigobj->GetLightCellShift())
static PyObject *_wrap_iPolygonTexture_GetLightCellShift(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iPolygonTexture * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPolygonTexture_GetLightCellShift",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygonTexture_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygonTexture_GetLightCellShift. Expected _iPolygonTexture_p.");
        return NULL;
        }
    }
    _result = (int )iPolygonTexture_GetLightCellShift(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPolygonTexture_GetCacheData(_swigobj,_swigarg0)  (_swigobj->GetCacheData(_swigarg0))
static PyObject *_wrap_iPolygonTexture_GetCacheData(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    void * _result;
    iPolygonTexture * _arg0;
    int  _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"si:iPolygonTexture_GetCacheData",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygonTexture_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygonTexture_GetCacheData. Expected _iPolygonTexture_p.");
        return NULL;
        }
    }
    _result = (void *)iPolygonTexture_GetCacheData(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_void_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iPolygonTexture_SetCacheData(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetCacheData(_swigarg0,_swigarg1))
static PyObject *_wrap_iPolygonTexture_SetCacheData(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPolygonTexture * _arg0;
    int  _arg1;
    void * _arg2;
    char * _argc0 = 0;
    char * _argc2 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sis:iPolygonTexture_SetCacheData",&_argc0,&_arg1,&_argc2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPolygonTexture_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPolygonTexture_SetCacheData. Expected _iPolygonTexture_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,(char *) 0 )) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iPolygonTexture_SetCacheData. Expected _void_p.");
        return NULL;
        }
    }
    iPolygonTexture_SetCacheData(_arg0,_arg1,_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigiCameraPositionToiBase(void *ptr) {
    iCameraPosition *src;
    iBase *dest;
    src = (iCameraPosition *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

static void *SwigiSectorListToiBase(void *ptr) {
    iSectorList *src;
    iBase *dest;
    src = (iSectorList *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iSectorList_GetCount(_swigobj)  (_swigobj->GetCount())
static PyObject *_wrap_iSectorList_GetCount(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iSectorList * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iSectorList_GetCount",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iSectorList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iSectorList_GetCount. Expected _iSectorList_p.");
        return NULL;
        }
    }
    _result = (int )iSectorList_GetCount(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iSectorList_Get(_swigobj,_swigarg0)  (_swigobj->Get(_swigarg0))
static PyObject *_wrap_iSectorList_Get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iSector * _result;
    iSectorList * _arg0;
    int  _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"si:iSectorList_Get",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iSectorList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iSectorList_Get. Expected _iSectorList_p.");
        return NULL;
        }
    }
    _result = (iSector *)iSectorList_Get(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iSector_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iSectorList_Add(_swigobj,_swigarg0)  (_swigobj->Add(_swigarg0))
static PyObject *_wrap_iSectorList_Add(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iSectorList * _arg0;
    iSector * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iSectorList_Add",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iSectorList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iSectorList_Add. Expected _iSectorList_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iSector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iSectorList_Add. Expected _iSector_p.");
        return NULL;
        }
    }
    iSectorList_Add(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iSectorList_Remove(_swigobj,_swigarg0)  (_swigobj->Remove(_swigarg0))
static PyObject *_wrap_iSectorList_Remove(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iSectorList * _arg0;
    iSector * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iSectorList_Remove",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iSectorList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iSectorList_Remove. Expected _iSectorList_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iSector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iSectorList_Remove. Expected _iSector_p.");
        return NULL;
        }
    }
    iSectorList_Remove(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iSectorList_FindByName(_swigobj,_swigarg0)  (_swigobj->FindByName(_swigarg0))
static PyObject *_wrap_iSectorList_FindByName(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iSector * _result;
    iSectorList * _arg0;
    char * _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iSectorList_FindByName",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iSectorList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iSectorList_FindByName. Expected _iSectorList_p.");
        return NULL;
        }
    }
    _result = (iSector *)iSectorList_FindByName(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iSector_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigiMaterialListToiBase(void *ptr) {
    iMaterialList *src;
    iBase *dest;
    src = (iMaterialList *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iMaterialList_FindByName(_swigobj,_swigarg0)  (_swigobj->FindByName(_swigarg0))
static PyObject *_wrap_iMaterialList_FindByName(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iMaterialWrapper * _result;
    iMaterialList * _arg0;
    char * _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iMaterialList_FindByName",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iMaterialList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iMaterialList_FindByName. Expected _iMaterialList_p.");
        return NULL;
        }
    }
    _result = (iMaterialWrapper *)iMaterialList_FindByName(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iMaterialWrapper_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigiTextureListToiBase(void *ptr) {
    iTextureList *src;
    iBase *dest;
    src = (iTextureList *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iTextureList_FindByName(_swigobj,_swigarg0)  (_swigobj->FindByName(_swigarg0))
static PyObject *_wrap_iTextureList_FindByName(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iTextureWrapper * _result;
    iTextureList * _arg0;
    char * _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iTextureList_FindByName",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iTextureList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iTextureList_FindByName. Expected _iTextureList_p.");
        return NULL;
        }
    }
    _result = (iTextureWrapper *)iTextureList_FindByName(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iTextureWrapper_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigiEngineToiBase(void *ptr) {
    iEngine *src;
    iBase *dest;
    src = (iEngine *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iEngine_GetTextureFormat(_swigobj)  (_swigobj->GetTextureFormat())
static PyObject *_wrap_iEngine_GetTextureFormat(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iEngine * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iEngine_GetTextureFormat",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iEngine_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iEngine_GetTextureFormat. Expected _iEngine_p.");
        return NULL;
        }
    }
    _result = (int )iEngine_GetTextureFormat(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iEngine_DeleteAll(_swigobj)  (_swigobj->DeleteAll())
static PyObject *_wrap_iEngine_DeleteAll(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iEngine * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iEngine_DeleteAll",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iEngine_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iEngine_DeleteAll. Expected _iEngine_p.");
        return NULL;
        }
    }
    iEngine_DeleteAll(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iEngine_CreateTexture(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->CreateTexture(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_iEngine_CreateTexture(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iTextureWrapper * _result;
    iEngine * _arg0;
    char * _arg1;
    char * _arg2;
    csColor * _arg3;
    int  _arg4;
    char * _argc0 = 0;
    char * _argc3 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ssssi:iEngine_CreateTexture",&_argc0,&_arg1,&_arg2,&_argc3,&_arg4)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iEngine_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iEngine_CreateTexture. Expected _iEngine_p.");
        return NULL;
        }
    }
    if (_argc3) {
        if (SWIG_GetPtr(_argc3,(void **) &_arg3,"_csColor_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of iEngine_CreateTexture. Expected _csColor_p.");
        return NULL;
        }
    }
    _result = (iTextureWrapper *)iEngine_CreateTexture(_arg0,_arg1,_arg2,_arg3,_arg4);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iTextureWrapper_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iEngine_CreateSector(_swigobj,_swigarg0)  (_swigobj->CreateSector(_swigarg0))
static PyObject *_wrap_iEngine_CreateSector(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iSector * _result;
    iEngine * _arg0;
    char * _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iEngine_CreateSector",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iEngine_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iEngine_CreateSector. Expected _iEngine_p.");
        return NULL;
        }
    }
    _result = (iSector *)iEngine_CreateSector(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iSector_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iEngine_CreateSectorWallsMesh(_swigobj,_swigarg0,_swigarg1)  (_swigobj->CreateSectorWallsMesh(_swigarg0,_swigarg1))
static PyObject *_wrap_iEngine_CreateSectorWallsMesh(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csPtr< iMeshWrapper > * _result;
    iEngine * _arg0;
    iSector * _arg1;
    char * _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iEngine_CreateSectorWallsMesh",&_argc0,&_argc1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iEngine_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iEngine_CreateSectorWallsMesh. Expected _iEngine_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iSector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iEngine_CreateSectorWallsMesh. Expected _iSector_p.");
        return NULL;
        }
    }
    _result = new csPtr< iMeshWrapper > (iEngine_CreateSectorWallsMesh(_arg0,_arg1,_arg2));
    SWIG_MakePtr(_ptemp, (void *) _result,"_csPtr<_iMeshWrapper_>_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iEngine_GetSectors(_swigobj)  (_swigobj->GetSectors())
static PyObject *_wrap_iEngine_GetSectors(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iSectorList * _result;
    iEngine * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iEngine_GetSectors",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iEngine_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iEngine_GetSectors. Expected _iEngine_p.");
        return NULL;
        }
    }
    _result = (iSectorList *)iEngine_GetSectors(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iSectorList_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iEngine_GetMaterialList(_swigobj)  (_swigobj->GetMaterialList())
static PyObject *_wrap_iEngine_GetMaterialList(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iMaterialList * _result;
    iEngine * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iEngine_GetMaterialList",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iEngine_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iEngine_GetMaterialList. Expected _iEngine_p.");
        return NULL;
        }
    }
    _result = (iMaterialList *)iEngine_GetMaterialList(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iMaterialList_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iEngine_GetTextureList(_swigobj)  (_swigobj->GetTextureList())
static PyObject *_wrap_iEngine_GetTextureList(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iTextureList * _result;
    iEngine * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iEngine_GetTextureList",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iEngine_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iEngine_GetTextureList. Expected _iEngine_p.");
        return NULL;
        }
    }
    _result = (iTextureList *)iEngine_GetTextureList(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iTextureList_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigiObjectRegistryToiBase(void *ptr) {
    iObjectRegistry *src;
    iBase *dest;
    src = (iObjectRegistry *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

static iEngine * iObjectRegistry_Query_iEngine(iObjectRegistry *self) {
      csRef<iEngine> en (CS_QUERY_REGISTRY (self, iEngine));
      return en;	// DecRef is ok here.
    }
static PyObject *_wrap_iObjectRegistry_Query_iEngine(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iEngine * _result;
    iObjectRegistry * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iObjectRegistry_Query_iEngine",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iObjectRegistry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iObjectRegistry_Query_iEngine. Expected _iObjectRegistry_p.");
        return NULL;
        }
    }
    _result = (iEngine *)iObjectRegistry_Query_iEngine(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iEngine_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static iGraphics3D * iObjectRegistry_Query_iGraphics3D(iObjectRegistry *self) {
      csRef<iGraphics3D> g3d (CS_QUERY_REGISTRY (self, iGraphics3D));
      return g3d;	// DecRef is ok here.
    }
static PyObject *_wrap_iObjectRegistry_Query_iGraphics3D(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iGraphics3D * _result;
    iObjectRegistry * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iObjectRegistry_Query_iGraphics3D",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iObjectRegistry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iObjectRegistry_Query_iGraphics3D. Expected _iObjectRegistry_p.");
        return NULL;
        }
    }
    _result = (iGraphics3D *)iObjectRegistry_Query_iGraphics3D(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iGraphics3D_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void  iObjectRegistry_Print(iObjectRegistry *self,int  mode,const char * format) {
      printf (format);
    }
static PyObject *_wrap_iObjectRegistry_Print(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iObjectRegistry * _arg0;
    int  _arg1;
    char * _arg2;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sis:iObjectRegistry_Print",&_argc0,&_arg1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iObjectRegistry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iObjectRegistry_Print. Expected _iObjectRegistry_p.");
        return NULL;
        }
    }
    iObjectRegistry_Print(_arg0,_arg1,_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigiCelPlLayerToiBase(void *ptr) {
    iCelPlLayer *src;
    iBase *dest;
    src = (iCelPlLayer *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iCelPlLayer_CreatePropertyClass(_swigobj,_swigarg0,_swigarg1)  (_swigobj->CreatePropertyClass(_swigarg0,_swigarg1))
static PyObject *_wrap_iCelPlLayer_CreatePropertyClass(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCelPropertyClass * _result;
    iCelPlLayer * _arg0;
    iCelEntity * _arg1;
    char * _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iCelPlLayer_CreatePropertyClass",&_argc0,&_argc1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPlLayer_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPlLayer_CreatePropertyClass. Expected _iCelPlLayer_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelPlLayer_CreatePropertyClass. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    _result = (iCelPropertyClass *)iCelPlLayer_CreatePropertyClass(_arg0,_arg1,_arg2);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iCelPropertyClass_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iCelPlLayer_FetchString(_swigobj,_swigarg0)  (_swigobj->FetchString(_swigarg0))
static PyObject *_wrap_iCelPlLayer_FetchString(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    iCelPlLayer * _arg0;
    csStringID * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iCelPlLayer_FetchString",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPlLayer_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPlLayer_FetchString. Expected _iCelPlLayer_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csStringID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelPlLayer_FetchString. Expected _csStringID_p.");
        return NULL;
        }
    }
    _result = (char *)iCelPlLayer_FetchString(_arg0,*_arg1);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

#define iCelPlLayer_GetBehaviourLayerCount(_swigobj)  (_swigobj->GetBehaviourLayerCount())
static PyObject *_wrap_iCelPlLayer_GetBehaviourLayerCount(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iCelPlLayer * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iCelPlLayer_GetBehaviourLayerCount",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPlLayer_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPlLayer_GetBehaviourLayerCount. Expected _iCelPlLayer_p.");
        return NULL;
        }
    }
    _result = (int )iCelPlLayer_GetBehaviourLayerCount(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iCelPlLayer_GetBehaviourLayer(_swigobj,_swigarg0)  (_swigobj->GetBehaviourLayer(_swigarg0))
static PyObject *_wrap_iCelPlLayer_GetBehaviourLayer(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCelBlLayer * _result;
    iCelPlLayer * _arg0;
    int  _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"si:iCelPlLayer_GetBehaviourLayer",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPlLayer_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPlLayer_GetBehaviourLayer. Expected _iCelPlLayer_p.");
        return NULL;
        }
    }
    _result = (iCelBlLayer *)iCelPlLayer_GetBehaviourLayer(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iCelBlLayer_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iCelPlLayer_FindBehaviourLayer(_swigobj,_swigarg0)  (_swigobj->FindBehaviourLayer(_swigarg0))
static PyObject *_wrap_iCelPlLayer_FindBehaviourLayer(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCelBlLayer * _result;
    iCelPlLayer * _arg0;
    char * _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iCelPlLayer_FindBehaviourLayer",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPlLayer_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPlLayer_FindBehaviourLayer. Expected _iCelPlLayer_p.");
        return NULL;
        }
    }
    _result = (iCelBlLayer *)iCelPlLayer_FindBehaviourLayer(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iCelBlLayer_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigiCelEntityToiBase(void *ptr) {
    iCelEntity *src;
    iBase *dest;
    src = (iCelEntity *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iCelEntity_GetName(_swigobj)  (_swigobj->GetName())
static PyObject *_wrap_iCelEntity_GetName(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    iCelEntity * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iCelEntity_GetName",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelEntity_GetName. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    _result = (char *)iCelEntity_GetName(_arg0);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

#define iCelEntity_SetName(_swigobj,_swigarg0)  (_swigobj->SetName(_swigarg0))
static PyObject *_wrap_iCelEntity_SetName(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCelEntity * _arg0;
    char * _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iCelEntity_SetName",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelEntity_SetName. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    iCelEntity_SetName(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iCelEntity_SetBehaviour(_swigobj,_swigarg0)  (_swigobj->SetBehaviour(_swigarg0))
static PyObject *_wrap_iCelEntity_SetBehaviour(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCelEntity * _arg0;
    iCelBehaviour * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iCelEntity_SetBehaviour",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelEntity_SetBehaviour. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iCelBehaviour_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelEntity_SetBehaviour. Expected _iCelBehaviour_p.");
        return NULL;
        }
    }
    iCelEntity_SetBehaviour(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iCelEntity_GetBehaviour(_swigobj)  (_swigobj->GetBehaviour())
static PyObject *_wrap_iCelEntity_GetBehaviour(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCelBehaviour * _result;
    iCelEntity * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iCelEntity_GetBehaviour",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelEntity_GetBehaviour. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    _result = (iCelBehaviour *)iCelEntity_GetBehaviour(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iCelBehaviour_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iCelEntity_GetID(_swigobj)  (_swigobj->GetID())
static PyObject *_wrap_iCelEntity_GetID(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    CS_ID * _result;
    iCelEntity * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iCelEntity_GetID",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelEntity_GetID. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    _result = new CS_ID (iCelEntity_GetID(_arg0));
    SWIG_MakePtr(_ptemp, (void *) _result,"_CS_ID_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iCelEntity_GetPropertyClassList(_swigobj)  (_swigobj->GetPropertyClassList())
static PyObject *_wrap_iCelEntity_GetPropertyClassList(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCelPropertyClassList * _result;
    iCelEntity * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iCelEntity_GetPropertyClassList",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelEntity_GetPropertyClassList. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    _result = (iCelPropertyClassList *)iCelEntity_GetPropertyClassList(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iCelPropertyClassList_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static iCelBehaviour * iCelEntity_LoadBehaviour(iCelEntity *self,iObjectRegistry * object_reg,const char * name) {
      csRef<iCelBlLayer> bl(CS_QUERY_REGISTRY(object_reg, iCelBlLayer));
      if(!bl.IsValid()) return NULL;
      csRef<iCelBehaviour> bh(bl->CreateBehaviour(self, name));
      if(!bh.IsValid()) return NULL;
      self->SetBehaviour(bh);
      return bh;
    }
static PyObject *_wrap_iCelEntity_LoadBehaviour(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCelBehaviour * _result;
    iCelEntity * _arg0;
    iObjectRegistry * _arg1;
    char * _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iCelEntity_LoadBehaviour",&_argc0,&_argc1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelEntity_LoadBehaviour. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iObjectRegistry_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelEntity_LoadBehaviour. Expected _iObjectRegistry_p.");
        return NULL;
        }
    }
    _result = (iCelBehaviour *)iCelEntity_LoadBehaviour(_arg0,_arg1,_arg2);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iCelBehaviour_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigiCelBlLayerToiBase(void *ptr) {
    iCelBlLayer *src;
    iBase *dest;
    src = (iCelBlLayer *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iCelBlLayer_GetName(_swigobj)  (_swigobj->GetName())
static PyObject *_wrap_iCelBlLayer_GetName(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    iCelBlLayer * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iCelBlLayer_GetName",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelBlLayer_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelBlLayer_GetName. Expected _iCelBlLayer_p.");
        return NULL;
        }
    }
    _result = (char *)iCelBlLayer_GetName(_arg0);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

#define iCelBlLayer_CreateBehaviour(_swigobj,_swigarg0,_swigarg1)  (_swigobj->CreateBehaviour(_swigarg0,_swigarg1))
static PyObject *_wrap_iCelBlLayer_CreateBehaviour(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCelBehaviour * _result;
    iCelBlLayer * _arg0;
    iCelEntity * _arg1;
    char * _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iCelBlLayer_CreateBehaviour",&_argc0,&_argc1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelBlLayer_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelBlLayer_CreateBehaviour. Expected _iCelBlLayer_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelBlLayer_CreateBehaviour. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    _result = (iCelBehaviour *)iCelBlLayer_CreateBehaviour(_arg0,_arg1,_arg2);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iCelBehaviour_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigiCelBehaviourToiBase(void *ptr) {
    iCelBehaviour *src;
    iBase *dest;
    src = (iCelBehaviour *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iCelBehaviour_GetName(_swigobj)  (_swigobj->GetName())
static PyObject *_wrap_iCelBehaviour_GetName(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    iCelBehaviour * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iCelBehaviour_GetName",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelBehaviour_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelBehaviour_GetName. Expected _iCelBehaviour_p.");
        return NULL;
        }
    }
    _result = (char *)iCelBehaviour_GetName(_arg0);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

#define iCelBehaviour_GetBehaviourLayer(_swigobj)  (_swigobj->GetBehaviourLayer())
static PyObject *_wrap_iCelBehaviour_GetBehaviourLayer(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCelBlLayer * _result;
    iCelBehaviour * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iCelBehaviour_GetBehaviourLayer",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelBehaviour_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelBehaviour_GetBehaviourLayer. Expected _iCelBehaviour_p.");
        return NULL;
        }
    }
    _result = (iCelBlLayer *)iCelBehaviour_GetBehaviourLayer(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iCelBlLayer_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iCelBehaviour_SendMessage(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SendMessage(_swigarg0,_swigarg1))
static PyObject *_wrap_iCelBehaviour_SendMessage(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iCelBehaviour * _arg0;
    char * _arg1;
    iBase * _arg2;
    char * _argc0 = 0;
    char * _argc2 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iCelBehaviour_SendMessage",&_argc0,&_arg1,&_argc2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelBehaviour_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelBehaviour_SendMessage. Expected _iCelBehaviour_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_iBase_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iCelBehaviour_SendMessage. Expected _iBase_p.");
        return NULL;
        }
    }
    _result = (bool )iCelBehaviour_SendMessage(_arg0,_arg1,_arg2);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigiCelPropertyClassToiBase(void *ptr) {
    iCelPropertyClass *src;
    iBase *dest;
    src = (iCelPropertyClass *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iCelPropertyClass_GetName(_swigobj)  (_swigobj->GetName())
static PyObject *_wrap_iCelPropertyClass_GetName(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    iCelPropertyClass * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iCelPropertyClass_GetName",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClass_GetName. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    _result = (char *)iCelPropertyClass_GetName(_arg0);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

#define iCelPropertyClass_GetEntity(_swigobj)  (_swigobj->GetEntity())
static PyObject *_wrap_iCelPropertyClass_GetEntity(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCelEntity * _result;
    iCelPropertyClass * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iCelPropertyClass_GetEntity",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClass_GetEntity. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    _result = (iCelEntity *)iCelPropertyClass_GetEntity(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iCelEntity_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iCelPropertyClass_SetEntity(_swigobj,_swigarg0)  (_swigobj->SetEntity(_swigarg0))
static PyObject *_wrap_iCelPropertyClass_SetEntity(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCelPropertyClass * _arg0;
    iCelEntity * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iCelPropertyClass_SetEntity",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClass_SetEntity. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelPropertyClass_SetEntity. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    iCelPropertyClass_SetEntity(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iCelPropertyClass_GetPropertyOrActionType(_swigobj,_swigarg0)  (_swigobj->GetPropertyOrActionType(_swigarg0))
static PyObject *_wrap_iCelPropertyClass_GetPropertyOrActionType(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    celDataType * _result;
    iCelPropertyClass * _arg0;
    csStringID * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iCelPropertyClass_GetPropertyOrActionType",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClass_GetPropertyOrActionType. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csStringID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelPropertyClass_GetPropertyOrActionType. Expected _csStringID_p.");
        return NULL;
        }
    }
    _result = new celDataType (iCelPropertyClass_GetPropertyOrActionType(_arg0,*_arg1));
    SWIG_MakePtr(_ptemp, (void *) _result,"_celDataType_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iCelPropertyClass_IsPropertyReadOnly(_swigobj,_swigarg0)  (_swigobj->IsPropertyReadOnly(_swigarg0))
static PyObject *_wrap_iCelPropertyClass_IsPropertyReadOnly(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iCelPropertyClass * _arg0;
    csStringID * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iCelPropertyClass_IsPropertyReadOnly",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClass_IsPropertyReadOnly. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csStringID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelPropertyClass_IsPropertyReadOnly. Expected _csStringID_p.");
        return NULL;
        }
    }
    _result = (bool )iCelPropertyClass_IsPropertyReadOnly(_arg0,*_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iCelPropertyClass_GetPropertyLong(_swigobj,_swigarg0)  (_swigobj->GetPropertyLong(_swigarg0))
static PyObject *_wrap_iCelPropertyClass_GetPropertyLong(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    long  _result;
    iCelPropertyClass * _arg0;
    csStringID * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iCelPropertyClass_GetPropertyLong",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClass_GetPropertyLong. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csStringID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelPropertyClass_GetPropertyLong. Expected _csStringID_p.");
        return NULL;
        }
    }
    _result = (long )iCelPropertyClass_GetPropertyLong(_arg0,*_arg1);
    _resultobj = Py_BuildValue("l",_result);
    return _resultobj;
}

#define iCelPropertyClass_GetPropertyFloat(_swigobj,_swigarg0)  (_swigobj->GetPropertyFloat(_swigarg0))
static PyObject *_wrap_iCelPropertyClass_GetPropertyFloat(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    float  _result;
    iCelPropertyClass * _arg0;
    csStringID * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iCelPropertyClass_GetPropertyFloat",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClass_GetPropertyFloat. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csStringID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelPropertyClass_GetPropertyFloat. Expected _csStringID_p.");
        return NULL;
        }
    }
    _result = (float )iCelPropertyClass_GetPropertyFloat(_arg0,*_arg1);
    _resultobj = Py_BuildValue("f",_result);
    return _resultobj;
}

#define iCelPropertyClass_GetPropertyBool(_swigobj,_swigarg0)  (_swigobj->GetPropertyBool(_swigarg0))
static PyObject *_wrap_iCelPropertyClass_GetPropertyBool(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iCelPropertyClass * _arg0;
    csStringID * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iCelPropertyClass_GetPropertyBool",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClass_GetPropertyBool. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csStringID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelPropertyClass_GetPropertyBool. Expected _csStringID_p.");
        return NULL;
        }
    }
    _result = (bool )iCelPropertyClass_GetPropertyBool(_arg0,*_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iCelPropertyClass_GetPropertyString(_swigobj,_swigarg0)  (_swigobj->GetPropertyString(_swigarg0))
static PyObject *_wrap_iCelPropertyClass_GetPropertyString(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    iCelPropertyClass * _arg0;
    csStringID * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iCelPropertyClass_GetPropertyString",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClass_GetPropertyString. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csStringID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelPropertyClass_GetPropertyString. Expected _csStringID_p.");
        return NULL;
        }
    }
    _result = (char *)iCelPropertyClass_GetPropertyString(_arg0,*_arg1);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

#define iCelPropertyClass_GetPropertyVector(_swigobj,_swigarg0,_swigarg1)  (_swigobj->GetPropertyVector(_swigarg0,_swigarg1))
static PyObject *_wrap_iCelPropertyClass_GetPropertyVector(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iCelPropertyClass * _arg0;
    csStringID * _arg1;
    csVector3 * _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iCelPropertyClass_GetPropertyVector",&_argc0,&_argc1,&_argc2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClass_GetPropertyVector. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csStringID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelPropertyClass_GetPropertyVector. Expected _csStringID_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iCelPropertyClass_GetPropertyVector. Expected _csVector3_p.");
        return NULL;
        }
    }
    _result = (bool )iCelPropertyClass_GetPropertyVector(_arg0,*_arg1,*_arg2);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iCelPropertyClass_GetPropertyAndActionCount(_swigobj)  (_swigobj->GetPropertyAndActionCount())
static PyObject *_wrap_iCelPropertyClass_GetPropertyAndActionCount(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iCelPropertyClass * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iCelPropertyClass_GetPropertyAndActionCount",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClass_GetPropertyAndActionCount. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    _result = (int )iCelPropertyClass_GetPropertyAndActionCount(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iCelPropertyClass_GetPropertyOrActionID(_swigobj,_swigarg0)  (_swigobj->GetPropertyOrActionID(_swigarg0))
static PyObject *_wrap_iCelPropertyClass_GetPropertyOrActionID(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csStringID * _result;
    iCelPropertyClass * _arg0;
    int  _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"si:iCelPropertyClass_GetPropertyOrActionID",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClass_GetPropertyOrActionID. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    _result = new csStringID (iCelPropertyClass_GetPropertyOrActionID(_arg0,_arg1));
    SWIG_MakePtr(_ptemp, (void *) _result,"_csStringID_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iCelPropertyClass_GetPropertyOrActionDescription(_swigobj,_swigarg0)  (_swigobj->GetPropertyOrActionDescription(_swigarg0))
static PyObject *_wrap_iCelPropertyClass_GetPropertyOrActionDescription(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    iCelPropertyClass * _arg0;
    csStringID * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iCelPropertyClass_GetPropertyOrActionDescription",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClass_GetPropertyOrActionDescription. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csStringID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelPropertyClass_GetPropertyOrActionDescription. Expected _csStringID_p.");
        return NULL;
        }
    }
    _result = (char *)iCelPropertyClass_GetPropertyOrActionDescription(_arg0,*_arg1);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

#define iCelPropertyClass_PerformAction(_swigobj,_swigarg0,_swigarg1)  (_swigobj->PerformAction(_swigarg0,_swigarg1))
static PyObject *_wrap_iCelPropertyClass_PerformAction(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iCelPropertyClass * _arg0;
    csStringID * _arg1;
    char * _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iCelPropertyClass_PerformAction",&_argc0,&_argc1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClass_PerformAction. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csStringID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelPropertyClass_PerformAction. Expected _csStringID_p.");
        return NULL;
        }
    }
    _result = (bool )iCelPropertyClass_PerformAction(_arg0,*_arg1,_arg2);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static bool  iCelPropertyClass_SetPropertyLong(iCelPropertyClass *self,csStringID  id,long  l) { return self->SetProperty (id, l); }
static PyObject *_wrap_iCelPropertyClass_SetPropertyLong(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iCelPropertyClass * _arg0;
    csStringID * _arg1;
    long  _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ssl:iCelPropertyClass_SetPropertyLong",&_argc0,&_argc1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClass_SetPropertyLong. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csStringID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelPropertyClass_SetPropertyLong. Expected _csStringID_p.");
        return NULL;
        }
    }
    _result = (bool )iCelPropertyClass_SetPropertyLong(_arg0,*_arg1,_arg2);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static bool  iCelPropertyClass_SetPropertyFloat(iCelPropertyClass *self,csStringID  id,float  f) { return self->SetProperty (id, f); }
static PyObject *_wrap_iCelPropertyClass_SetPropertyFloat(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iCelPropertyClass * _arg0;
    csStringID * _arg1;
    float  _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ssf:iCelPropertyClass_SetPropertyFloat",&_argc0,&_argc1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClass_SetPropertyFloat. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csStringID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelPropertyClass_SetPropertyFloat. Expected _csStringID_p.");
        return NULL;
        }
    }
    _result = (bool )iCelPropertyClass_SetPropertyFloat(_arg0,*_arg1,_arg2);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static bool  iCelPropertyClass_SetPropertyBool(iCelPropertyClass *self,csStringID  id,bool  b) { return self->SetProperty (id, b); }
static PyObject *_wrap_iCelPropertyClass_SetPropertyBool(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iCelPropertyClass * _arg0;
    csStringID * _arg1;
    bool  _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    int tempbool2;

    self = self;
    if(!PyArg_ParseTuple(args,"ssi:iCelPropertyClass_SetPropertyBool",&_argc0,&_argc1,&tempbool2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClass_SetPropertyBool. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csStringID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelPropertyClass_SetPropertyBool. Expected _csStringID_p.");
        return NULL;
        }
    }
    _arg2 = (bool ) tempbool2;
    _result = (bool )iCelPropertyClass_SetPropertyBool(_arg0,*_arg1,_arg2);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static bool  iCelPropertyClass_SetPropertyString(iCelPropertyClass *self,csStringID  id,const char * s) { return self->SetProperty (id, s); }
static PyObject *_wrap_iCelPropertyClass_SetPropertyString(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iCelPropertyClass * _arg0;
    csStringID * _arg1;
    char * _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iCelPropertyClass_SetPropertyString",&_argc0,&_argc1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClass_SetPropertyString. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csStringID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelPropertyClass_SetPropertyString. Expected _csStringID_p.");
        return NULL;
        }
    }
    _result = (bool )iCelPropertyClass_SetPropertyString(_arg0,*_arg1,_arg2);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static bool  iCelPropertyClass_SetPropertyVector3(iCelPropertyClass *self,csStringID  id,const csVector3 & v) { return self->SetProperty (id, v); }
static PyObject *_wrap_iCelPropertyClass_SetPropertyVector3(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iCelPropertyClass * _arg0;
    csStringID * _arg1;
    csVector3 * _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iCelPropertyClass_SetPropertyVector3",&_argc0,&_argc1,&_argc2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClass_SetPropertyVector3. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csStringID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelPropertyClass_SetPropertyVector3. Expected _csStringID_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iCelPropertyClass_SetPropertyVector3. Expected _csVector3_p.");
        return NULL;
        }
    }
    _result = (bool )iCelPropertyClass_SetPropertyVector3(_arg0,*_arg1,*_arg2);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigiCelPropertyClassListToiBase(void *ptr) {
    iCelPropertyClassList *src;
    iBase *dest;
    src = (iCelPropertyClassList *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iCelPropertyClassList_GetCount(_swigobj)  (_swigobj->GetCount())
static PyObject *_wrap_iCelPropertyClassList_GetCount(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iCelPropertyClassList * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iCelPropertyClassList_GetCount",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClassList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClassList_GetCount. Expected _iCelPropertyClassList_p.");
        return NULL;
        }
    }
    _result = (int )iCelPropertyClassList_GetCount(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iCelPropertyClassList_Get(_swigobj,_swigarg0)  (_swigobj->Get(_swigarg0))
static PyObject *_wrap_iCelPropertyClassList_Get(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCelPropertyClass * _result;
    iCelPropertyClassList * _arg0;
    int  _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"si:iCelPropertyClassList_Get",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClassList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClassList_Get. Expected _iCelPropertyClassList_p.");
        return NULL;
        }
    }
    _result = (iCelPropertyClass *)iCelPropertyClassList_Get(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iCelPropertyClass_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iCelPropertyClassList_Find(_swigobj,_swigarg0)  (_swigobj->Find(_swigarg0))
static PyObject *_wrap_iCelPropertyClassList_Find(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iCelPropertyClassList * _arg0;
    iCelPropertyClass * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iCelPropertyClassList_Find",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClassList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClassList_Find. Expected _iCelPropertyClassList_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iCelPropertyClass_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelPropertyClassList_Find. Expected _iCelPropertyClass_p.");
        return NULL;
        }
    }
    _result = (int )iCelPropertyClassList_Find(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iCelPropertyClassList_FindByName(_swigobj,_swigarg0)  (_swigobj->FindByName(_swigarg0))
static PyObject *_wrap_iCelPropertyClassList_FindByName(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCelPropertyClass * _result;
    iCelPropertyClassList * _arg0;
    char * _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iCelPropertyClassList_FindByName",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClassList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClassList_FindByName. Expected _iCelPropertyClassList_p.");
        return NULL;
        }
    }
    _result = (iCelPropertyClass *)iCelPropertyClassList_FindByName(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iCelPropertyClass_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iCelPropertyClassList_FindByInterface(_swigobj,_swigarg0,_swigarg1)  (_swigobj->FindByInterface(_swigarg0,_swigarg1))
static PyObject *_wrap_iCelPropertyClassList_FindByInterface(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iBase * _result;
    iCelPropertyClassList * _arg0;
    scfInterfaceID * _arg1;
    int  _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ssi:iCelPropertyClassList_FindByInterface",&_argc0,&_argc1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iCelPropertyClassList_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iCelPropertyClassList_FindByInterface. Expected _iCelPropertyClassList_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_scfInterfaceID_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iCelPropertyClassList_FindByInterface. Expected _scfInterfaceID_p.");
        return NULL;
        }
    }
    _result = (iBase *)iCelPropertyClassList_FindByInterface(_arg0,*_arg1,_arg2);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iBase_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigiPcRegionToiBase(void *ptr) {
    iPcRegion *src;
    iBase *dest;
    src = (iPcRegion *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iPcRegion_SetWorldFile(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetWorldFile(_swigarg0,_swigarg1))
static PyObject *_wrap_iPcRegion_SetWorldFile(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcRegion * _arg0;
    char * _arg1;
    char * _arg2;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iPcRegion_SetWorldFile",&_argc0,&_arg1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcRegion_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcRegion_SetWorldFile. Expected _iPcRegion_p.");
        return NULL;
        }
    }
    iPcRegion_SetWorldFile(_arg0,_arg1,_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcRegion_GetWorldDir(_swigobj)  (_swigobj->GetWorldDir())
static PyObject *_wrap_iPcRegion_GetWorldDir(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    iPcRegion * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcRegion_GetWorldDir",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcRegion_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcRegion_GetWorldDir. Expected _iPcRegion_p.");
        return NULL;
        }
    }
    _result = (char *)iPcRegion_GetWorldDir(_arg0);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

#define iPcRegion_GetWorldFile(_swigobj)  (_swigobj->GetWorldFile())
static PyObject *_wrap_iPcRegion_GetWorldFile(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    iPcRegion * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcRegion_GetWorldFile",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcRegion_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcRegion_GetWorldFile. Expected _iPcRegion_p.");
        return NULL;
        }
    }
    _result = (char *)iPcRegion_GetWorldFile(_arg0);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

#define iPcRegion_SetRegionName(_swigobj,_swigarg0)  (_swigobj->SetRegionName(_swigarg0))
static PyObject *_wrap_iPcRegion_SetRegionName(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcRegion * _arg0;
    char * _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcRegion_SetRegionName",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcRegion_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcRegion_SetRegionName. Expected _iPcRegion_p.");
        return NULL;
        }
    }
    iPcRegion_SetRegionName(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcRegion_GetRegionName(_swigobj)  (_swigobj->GetRegionName())
static PyObject *_wrap_iPcRegion_GetRegionName(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    iPcRegion * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcRegion_GetRegionName",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcRegion_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcRegion_GetRegionName. Expected _iPcRegion_p.");
        return NULL;
        }
    }
    _result = (char *)iPcRegion_GetRegionName(_arg0);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

#define iPcRegion_Load(_swigobj)  (_swigobj->Load())
static PyObject *_wrap_iPcRegion_Load(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcRegion * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcRegion_Load",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcRegion_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcRegion_Load. Expected _iPcRegion_p.");
        return NULL;
        }
    }
    _result = (bool )iPcRegion_Load(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcRegion_Unload(_swigobj)  (_swigobj->Unload())
static PyObject *_wrap_iPcRegion_Unload(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcRegion * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcRegion_Unload",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcRegion_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcRegion_Unload. Expected _iPcRegion_p.");
        return NULL;
        }
    }
    iPcRegion_Unload(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcRegion_FindSector(_swigobj,_swigarg0)  (_swigobj->FindSector(_swigarg0))
static PyObject *_wrap_iPcRegion_FindSector(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iSector * _result;
    iPcRegion * _arg0;
    char * _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcRegion_FindSector",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcRegion_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcRegion_FindSector. Expected _iPcRegion_p.");
        return NULL;
        }
    }
    _result = (iSector *)iPcRegion_FindSector(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iSector_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iPcRegion_GetStartSector(_swigobj,_swigarg0)  (_swigobj->GetStartSector(_swigarg0))
static PyObject *_wrap_iPcRegion_GetStartSector(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iSector * _result;
    iPcRegion * _arg0;
    char * _arg1 = NULL;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s|s:iPcRegion_GetStartSector",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcRegion_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcRegion_GetStartSector. Expected _iPcRegion_p.");
        return NULL;
        }
    }
    _result = (iSector *)iPcRegion_GetStartSector(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iSector_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iPcRegion_GetStartPosition(_swigobj,_swigarg0)  (_swigobj->GetStartPosition(_swigarg0))
static PyObject *_wrap_iPcRegion_GetStartPosition(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    csVector3 * _result;
    iPcRegion * _arg0;
    char * _arg1 = NULL;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s|s:iPcRegion_GetStartPosition",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcRegion_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcRegion_GetStartPosition. Expected _iPcRegion_p.");
        return NULL;
        }
    }
    _result = new csVector3 (iPcRegion_GetStartPosition(_arg0,_arg1));
    SWIG_MakePtr(_ptemp, (void *) _result,"_csVector3_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iPcRegion_PointCamera(_swigobj,_swigarg0,_swigarg1)  (_swigobj->PointCamera(_swigarg0,_swigarg1))
static PyObject *_wrap_iPcRegion_PointCamera(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcRegion * _arg0;
    iPcCamera * _arg1;
    char * _arg2 = NULL;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss|s:iPcRegion_PointCamera",&_argc0,&_argc1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcRegion_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcRegion_PointCamera. Expected _iPcRegion_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iPcCamera_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcRegion_PointCamera. Expected _iPcCamera_p.");
        return NULL;
        }
    }
    iPcRegion_PointCamera(_arg0,_arg1,_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static bool  iPcRegion_LoadWorld(iPcRegion *self,const char * vfsdir,const char * name) {
      self->SetWorldFile(vfsdir, name);
      return self->Load();
    }
static PyObject *_wrap_iPcRegion_LoadWorld(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcRegion * _arg0;
    char * _arg1;
    char * _arg2;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iPcRegion_LoadWorld",&_argc0,&_arg1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcRegion_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcRegion_LoadWorld. Expected _iPcRegion_p.");
        return NULL;
        }
    }
    _result = (bool )iPcRegion_LoadWorld(_arg0,_arg1,_arg2);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigiPcCameraToiBase(void *ptr) {
    iPcCamera *src;
    iBase *dest;
    src = (iPcCamera *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iPcCamera_SetRegion(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->SetRegion(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_iPcCamera_SetRegion(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcCamera * _arg0;
    iPcRegion * _arg1;
    bool  _arg2 = true;
    char * _arg3 = NULL;
    char * _argc0 = 0;
    char * _argc1 = 0;
    int tempbool2;

    self = self;
    if(!PyArg_ParseTuple(args,"ss|is:iPcCamera_SetRegion",&_argc0,&_argc1,&tempbool2,&_arg3)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCamera_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCamera_SetRegion. Expected _iPcCamera_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iPcRegion_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcCamera_SetRegion. Expected _iPcRegion_p.");
        return NULL;
        }
    }
    _arg2 = (bool ) tempbool2;
    _result = (bool )iPcCamera_SetRegion(_arg0,_arg1,_arg2,_arg3);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcCamera_SetMode(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetMode(_swigarg0,_swigarg1))
static PyObject *_wrap_iPcCamera_SetMode(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcCamera * _arg0;
    iPcCamera::CameraMode  _arg1;
    bool  _arg2 = true;
    char * _argc0 = 0;
    int tempbool2;

    self = self;
    if(!PyArg_ParseTuple(args,"si|i:iPcCamera_SetMode",&_argc0,&_arg1,&tempbool2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCamera_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCamera_SetMode. Expected _iPcCamera_p.");
        return NULL;
        }
    }
    _arg2 = (bool ) tempbool2;
    _result = (bool )iPcCamera_SetMode(_arg0,_arg1,_arg2);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcCamera_GetMode(_swigobj)  (_swigobj->GetMode())
static PyObject *_wrap_iPcCamera_GetMode(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcCamera::CameraMode  _result;
    iPcCamera * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcCamera_GetMode",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCamera_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCamera_GetMode. Expected _iPcCamera_p.");
        return NULL;
        }
    }
    _result = (iPcCamera::CameraMode )iPcCamera_GetMode(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcCamera_SetFollowPos(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetFollowPos(_swigarg0,_swigarg1))
static PyObject *_wrap_iPcCamera_SetFollowPos(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcCamera * _arg0;
    csVector3 * _arg1;
    csVector3 * _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iPcCamera_SetFollowPos",&_argc0,&_argc1,&_argc2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCamera_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCamera_SetFollowPos. Expected _iPcCamera_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcCamera_SetFollowPos. Expected _csVector3_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iPcCamera_SetFollowPos. Expected _csVector3_p.");
        return NULL;
        }
    }
    iPcCamera_SetFollowPos(_arg0,*_arg1,*_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcCamera_GetFollowPos(_swigobj,_swigarg0,_swigarg1)  (_swigobj->GetFollowPos(_swigarg0,_swigarg1))
static PyObject *_wrap_iPcCamera_GetFollowPos(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcCamera * _arg0;
    csVector3 * _arg1;
    csVector3 * _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iPcCamera_GetFollowPos",&_argc0,&_argc1,&_argc2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCamera_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCamera_GetFollowPos. Expected _iPcCamera_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcCamera_GetFollowPos. Expected _csVector3_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iPcCamera_GetFollowPos. Expected _csVector3_p.");
        return NULL;
        }
    }
    iPcCamera_GetFollowPos(_arg0,*_arg1,*_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcCamera_SetPitch(_swigobj,_swigarg0)  (_swigobj->SetPitch(_swigarg0))
static PyObject *_wrap_iPcCamera_SetPitch(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcCamera * _arg0;
    float  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sf:iPcCamera_SetPitch",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCamera_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCamera_SetPitch. Expected _iPcCamera_p.");
        return NULL;
        }
    }
    iPcCamera_SetPitch(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcCamera_GetPitch(_swigobj)  (_swigobj->GetPitch())
static PyObject *_wrap_iPcCamera_GetPitch(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    float  _result;
    iPcCamera * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcCamera_GetPitch",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCamera_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCamera_GetPitch. Expected _iPcCamera_p.");
        return NULL;
        }
    }
    _result = (float )iPcCamera_GetPitch(_arg0);
    _resultobj = Py_BuildValue("f",_result);
    return _resultobj;
}

#define iPcCamera_SetRoll(_swigobj,_swigarg0)  (_swigobj->SetRoll(_swigarg0))
static PyObject *_wrap_iPcCamera_SetRoll(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcCamera * _arg0;
    float  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sf:iPcCamera_SetRoll",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCamera_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCamera_SetRoll. Expected _iPcCamera_p.");
        return NULL;
        }
    }
    iPcCamera_SetRoll(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcCamera_GetRoll(_swigobj)  (_swigobj->GetRoll())
static PyObject *_wrap_iPcCamera_GetRoll(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    float  _result;
    iPcCamera * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcCamera_GetRoll",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCamera_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCamera_GetRoll. Expected _iPcCamera_p.");
        return NULL;
        }
    }
    _result = (float )iPcCamera_GetRoll(_arg0);
    _resultobj = Py_BuildValue("f",_result);
    return _resultobj;
}

#define iPcCamera_SetRectangle(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->SetRectangle(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_iPcCamera_SetRectangle(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcCamera * _arg0;
    int  _arg1;
    int  _arg2;
    int  _arg3;
    int  _arg4;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"siiii:iPcCamera_SetRectangle",&_argc0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCamera_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCamera_SetRectangle. Expected _iPcCamera_p.");
        return NULL;
        }
    }
    iPcCamera_SetRectangle(_arg0,_arg1,_arg2,_arg3,_arg4);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcCamera_GetCamera(_swigobj)  (_swigobj->GetCamera())
static PyObject *_wrap_iPcCamera_GetCamera(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCamera * _result;
    iPcCamera * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcCamera_GetCamera",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCamera_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCamera_GetCamera. Expected _iPcCamera_p.");
        return NULL;
        }
    }
    _result = (iCamera *)iPcCamera_GetCamera(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iCamera_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iPcCamera_GetView(_swigobj)  (_swigobj->GetView())
static PyObject *_wrap_iPcCamera_GetView(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iView * _result;
    iPcCamera * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcCamera_GetView",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCamera_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCamera_GetView. Expected _iPcCamera_p.");
        return NULL;
        }
    }
    _result = (iView *)iPcCamera_GetView(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iView_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigiPcMeshSelectToiBase(void *ptr) {
    iPcMeshSelect *src;
    iBase *dest;
    src = (iPcMeshSelect *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iPcMeshSelect_SetCamera(_swigobj,_swigarg0)  (_swigobj->SetCamera(_swigarg0))
static PyObject *_wrap_iPcMeshSelect_SetCamera(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMeshSelect * _arg0;
    iPcCamera * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcMeshSelect_SetCamera",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMeshSelect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMeshSelect_SetCamera. Expected _iPcMeshSelect_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iPcCamera_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcMeshSelect_SetCamera. Expected _iPcCamera_p.");
        return NULL;
        }
    }
    iPcMeshSelect_SetCamera(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMeshSelect_SetMouseButtons(_swigobj,_swigarg0)  (_swigobj->SetMouseButtons(_swigarg0))
static PyObject *_wrap_iPcMeshSelect_SetMouseButtons(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMeshSelect * _arg0;
    int  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"si:iPcMeshSelect_SetMouseButtons",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMeshSelect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMeshSelect_SetMouseButtons. Expected _iPcMeshSelect_p.");
        return NULL;
        }
    }
    iPcMeshSelect_SetMouseButtons(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMeshSelect_GetMouseButtons(_swigobj)  (_swigobj->GetMouseButtons())
static PyObject *_wrap_iPcMeshSelect_GetMouseButtons(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iPcMeshSelect * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcMeshSelect_GetMouseButtons",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMeshSelect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMeshSelect_GetMouseButtons. Expected _iPcMeshSelect_p.");
        return NULL;
        }
    }
    _result = (int )iPcMeshSelect_GetMouseButtons(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcMeshSelect_SetGlobalSelection(_swigobj,_swigarg0)  (_swigobj->SetGlobalSelection(_swigarg0))
static PyObject *_wrap_iPcMeshSelect_SetGlobalSelection(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMeshSelect * _arg0;
    bool  _arg1;
    char * _argc0 = 0;
    int tempbool1;

    self = self;
    if(!PyArg_ParseTuple(args,"si:iPcMeshSelect_SetGlobalSelection",&_argc0,&tempbool1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMeshSelect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMeshSelect_SetGlobalSelection. Expected _iPcMeshSelect_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
    iPcMeshSelect_SetGlobalSelection(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMeshSelect_HasGlobalSelection(_swigobj)  (_swigobj->HasGlobalSelection())
static PyObject *_wrap_iPcMeshSelect_HasGlobalSelection(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcMeshSelect * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcMeshSelect_HasGlobalSelection",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMeshSelect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMeshSelect_HasGlobalSelection. Expected _iPcMeshSelect_p.");
        return NULL;
        }
    }
    _result = (bool )iPcMeshSelect_HasGlobalSelection(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcMeshSelect_SetFollowMode(_swigobj,_swigarg0)  (_swigobj->SetFollowMode(_swigarg0))
static PyObject *_wrap_iPcMeshSelect_SetFollowMode(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMeshSelect * _arg0;
    bool  _arg1;
    char * _argc0 = 0;
    int tempbool1;

    self = self;
    if(!PyArg_ParseTuple(args,"si:iPcMeshSelect_SetFollowMode",&_argc0,&tempbool1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMeshSelect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMeshSelect_SetFollowMode. Expected _iPcMeshSelect_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
    iPcMeshSelect_SetFollowMode(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMeshSelect_HasFollowMode(_swigobj)  (_swigobj->HasFollowMode())
static PyObject *_wrap_iPcMeshSelect_HasFollowMode(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcMeshSelect * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcMeshSelect_HasFollowMode",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMeshSelect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMeshSelect_HasFollowMode. Expected _iPcMeshSelect_p.");
        return NULL;
        }
    }
    _result = (bool )iPcMeshSelect_HasFollowMode(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcMeshSelect_SetFollowAlwaysMode(_swigobj,_swigarg0)  (_swigobj->SetFollowAlwaysMode(_swigarg0))
static PyObject *_wrap_iPcMeshSelect_SetFollowAlwaysMode(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMeshSelect * _arg0;
    bool  _arg1;
    char * _argc0 = 0;
    int tempbool1;

    self = self;
    if(!PyArg_ParseTuple(args,"si:iPcMeshSelect_SetFollowAlwaysMode",&_argc0,&tempbool1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMeshSelect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMeshSelect_SetFollowAlwaysMode. Expected _iPcMeshSelect_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
    iPcMeshSelect_SetFollowAlwaysMode(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMeshSelect_HasFollowAlwaysMode(_swigobj)  (_swigobj->HasFollowAlwaysMode())
static PyObject *_wrap_iPcMeshSelect_HasFollowAlwaysMode(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcMeshSelect * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcMeshSelect_HasFollowAlwaysMode",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMeshSelect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMeshSelect_HasFollowAlwaysMode. Expected _iPcMeshSelect_p.");
        return NULL;
        }
    }
    _result = (bool )iPcMeshSelect_HasFollowAlwaysMode(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcMeshSelect_SetDragMode(_swigobj,_swigarg0)  (_swigobj->SetDragMode(_swigarg0))
static PyObject *_wrap_iPcMeshSelect_SetDragMode(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMeshSelect * _arg0;
    bool  _arg1;
    char * _argc0 = 0;
    int tempbool1;

    self = self;
    if(!PyArg_ParseTuple(args,"si:iPcMeshSelect_SetDragMode",&_argc0,&tempbool1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMeshSelect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMeshSelect_SetDragMode. Expected _iPcMeshSelect_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
    iPcMeshSelect_SetDragMode(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMeshSelect_HasDragMode(_swigobj)  (_swigobj->HasDragMode())
static PyObject *_wrap_iPcMeshSelect_HasDragMode(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcMeshSelect * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcMeshSelect_HasDragMode",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMeshSelect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMeshSelect_HasDragMode. Expected _iPcMeshSelect_p.");
        return NULL;
        }
    }
    _result = (bool )iPcMeshSelect_HasDragMode(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcMeshSelect_SetDragPlaneNormal(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetDragPlaneNormal(_swigarg0,_swigarg1))
static PyObject *_wrap_iPcMeshSelect_SetDragPlaneNormal(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMeshSelect * _arg0;
    csVector3 * _arg1;
    bool  _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    int tempbool2;

    self = self;
    if(!PyArg_ParseTuple(args,"ssi:iPcMeshSelect_SetDragPlaneNormal",&_argc0,&_argc1,&tempbool2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMeshSelect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMeshSelect_SetDragPlaneNormal. Expected _iPcMeshSelect_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcMeshSelect_SetDragPlaneNormal. Expected _csVector3_p.");
        return NULL;
        }
    }
    _arg2 = (bool ) tempbool2;
    iPcMeshSelect_SetDragPlaneNormal(_arg0,*_arg1,_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMeshSelect_GetDragPlaneNormal(_swigobj,_swigarg0,_swigarg1)  (_swigobj->GetDragPlaneNormal(_swigarg0,_swigarg1))
static PyObject *_wrap_iPcMeshSelect_GetDragPlaneNormal(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMeshSelect * _arg0;
    csVector3 * _arg1;
    bool * _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iPcMeshSelect_GetDragPlaneNormal",&_argc0,&_argc1,&_argc2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMeshSelect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMeshSelect_GetDragPlaneNormal. Expected _iPcMeshSelect_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcMeshSelect_GetDragPlaneNormal. Expected _csVector3_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_bool_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iPcMeshSelect_GetDragPlaneNormal. Expected _bool_p.");
        return NULL;
        }
    }
    iPcMeshSelect_GetDragPlaneNormal(_arg0,*_arg1,*_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMeshSelect_SetSendmoveEvent(_swigobj,_swigarg0)  (_swigobj->SetSendmoveEvent(_swigarg0))
static PyObject *_wrap_iPcMeshSelect_SetSendmoveEvent(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMeshSelect * _arg0;
    bool  _arg1;
    char * _argc0 = 0;
    int tempbool1;

    self = self;
    if(!PyArg_ParseTuple(args,"si:iPcMeshSelect_SetSendmoveEvent",&_argc0,&tempbool1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMeshSelect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMeshSelect_SetSendmoveEvent. Expected _iPcMeshSelect_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
    iPcMeshSelect_SetSendmoveEvent(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMeshSelect_HasSendmoveEvent(_swigobj)  (_swigobj->HasSendmoveEvent())
static PyObject *_wrap_iPcMeshSelect_HasSendmoveEvent(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcMeshSelect * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcMeshSelect_HasSendmoveEvent",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMeshSelect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMeshSelect_HasSendmoveEvent. Expected _iPcMeshSelect_p.");
        return NULL;
        }
    }
    _result = (bool )iPcMeshSelect_HasSendmoveEvent(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcMeshSelect_SetSendupEvent(_swigobj,_swigarg0)  (_swigobj->SetSendupEvent(_swigarg0))
static PyObject *_wrap_iPcMeshSelect_SetSendupEvent(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMeshSelect * _arg0;
    bool  _arg1;
    char * _argc0 = 0;
    int tempbool1;

    self = self;
    if(!PyArg_ParseTuple(args,"si:iPcMeshSelect_SetSendupEvent",&_argc0,&tempbool1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMeshSelect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMeshSelect_SetSendupEvent. Expected _iPcMeshSelect_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
    iPcMeshSelect_SetSendupEvent(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMeshSelect_HasSendupEvent(_swigobj)  (_swigobj->HasSendupEvent())
static PyObject *_wrap_iPcMeshSelect_HasSendupEvent(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcMeshSelect * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcMeshSelect_HasSendupEvent",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMeshSelect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMeshSelect_HasSendupEvent. Expected _iPcMeshSelect_p.");
        return NULL;
        }
    }
    _result = (bool )iPcMeshSelect_HasSendupEvent(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcMeshSelect_SetSenddownEvent(_swigobj,_swigarg0)  (_swigobj->SetSenddownEvent(_swigarg0))
static PyObject *_wrap_iPcMeshSelect_SetSenddownEvent(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMeshSelect * _arg0;
    bool  _arg1;
    char * _argc0 = 0;
    int tempbool1;

    self = self;
    if(!PyArg_ParseTuple(args,"si:iPcMeshSelect_SetSenddownEvent",&_argc0,&tempbool1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMeshSelect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMeshSelect_SetSenddownEvent. Expected _iPcMeshSelect_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
    iPcMeshSelect_SetSenddownEvent(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMeshSelect_HasSenddownEvent(_swigobj)  (_swigobj->HasSenddownEvent())
static PyObject *_wrap_iPcMeshSelect_HasSenddownEvent(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcMeshSelect * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcMeshSelect_HasSenddownEvent",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMeshSelect_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMeshSelect_HasSenddownEvent. Expected _iPcMeshSelect_p.");
        return NULL;
        }
    }
    _result = (bool )iPcMeshSelect_HasSenddownEvent(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigiPcMeshToiBase(void *ptr) {
    iPcMesh *src;
    iBase *dest;
    src = (iPcMesh *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iPcMesh_LoadMesh(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetMesh(_swigarg0,_swigarg1))
static PyObject *_wrap_iPcMesh_LoadMesh(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMesh * _arg0;
    char * _arg1;
    char * _arg2;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iPcMesh_LoadMesh",&_argc0,&_arg1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMesh_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMesh_LoadMesh. Expected _iPcMesh_p.");
        return NULL;
        }
    }
    iPcMesh_LoadMesh(_arg0,_arg1,_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMesh_SetMesh(_swigobj,_swigarg0)  (_swigobj->SetMesh(_swigarg0))
static PyObject *_wrap_iPcMesh_SetMesh(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMesh * _arg0;
    iMeshWrapper * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcMesh_SetMesh",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMesh_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMesh_SetMesh. Expected _iPcMesh_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iMeshWrapper_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcMesh_SetMesh. Expected _iMeshWrapper_p.");
        return NULL;
        }
    }
    iPcMesh_SetMesh(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMesh_CreateEmptyThing(_swigobj)  (_swigobj->CreateEmptyThing())
static PyObject *_wrap_iPcMesh_CreateEmptyThing(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMesh * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcMesh_CreateEmptyThing",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMesh_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMesh_CreateEmptyThing. Expected _iPcMesh_p.");
        return NULL;
        }
    }
    iPcMesh_CreateEmptyThing(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMesh_GetMesh(_swigobj)  (_swigobj->GetMesh())
static PyObject *_wrap_iPcMesh_GetMesh(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iMeshWrapper * _result;
    iPcMesh * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcMesh_GetMesh",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMesh_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMesh_GetMesh. Expected _iPcMesh_p.");
        return NULL;
        }
    }
    _result = (iMeshWrapper *)iPcMesh_GetMesh(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iMeshWrapper_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iPcMesh_MoveMesh(_swigobj,_swigarg0,_swigarg1)  (_swigobj->MoveMesh(_swigarg0,_swigarg1))
static PyObject *_wrap_iPcMesh_MoveMesh(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMesh * _arg0;
    iSector * _arg1;
    csVector3 * _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iPcMesh_MoveMesh",&_argc0,&_argc1,&_argc2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMesh_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMesh_MoveMesh. Expected _iPcMesh_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iSector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcMesh_MoveMesh. Expected _iSector_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iPcMesh_MoveMesh. Expected _csVector3_p.");
        return NULL;
        }
    }
    iPcMesh_MoveMesh(_arg0,_arg1,*_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMesh_SetAction(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetAction(_swigarg0,_swigarg1))
static PyObject *_wrap_iPcMesh_SetAction(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMesh * _arg0;
    char * _arg1;
    bool  _arg2 = false;
    char * _argc0 = 0;
    int tempbool2;

    self = self;
    if(!PyArg_ParseTuple(args,"ss|i:iPcMesh_SetAction",&_argc0,&_arg1,&tempbool2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMesh_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMesh_SetAction. Expected _iPcMesh_p.");
        return NULL;
        }
    }
    _arg2 = (bool ) tempbool2;
    iPcMesh_SetAction(_arg0,_arg1,_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMesh_GetAction(_swigobj)  (_swigobj->GetAction())
static PyObject *_wrap_iPcMesh_GetAction(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    char * _result;
    iPcMesh * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcMesh_GetAction",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMesh_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMesh_GetAction. Expected _iPcMesh_p.");
        return NULL;
        }
    }
    _result = (char *)iPcMesh_GetAction(_arg0);
    _resultobj = Py_BuildValue("s", _result);
    return _resultobj;
}

#define iPcMesh_Hide(_swigobj)  (_swigobj->Hide())
static PyObject *_wrap_iPcMesh_Hide(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMesh * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcMesh_Hide",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMesh_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMesh_Hide. Expected _iPcMesh_p.");
        return NULL;
        }
    }
    iPcMesh_Hide(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMesh_Show(_swigobj)  (_swigobj->Show())
static PyObject *_wrap_iPcMesh_Show(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMesh * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcMesh_Show",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMesh_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMesh_Show. Expected _iPcMesh_p.");
        return NULL;
        }
    }
    iPcMesh_Show(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMesh_IsVisible(_swigobj)  (_swigobj->IsVisible())
static PyObject *_wrap_iPcMesh_IsVisible(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcMesh * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcMesh_IsVisible",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMesh_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMesh_IsVisible. Expected _iPcMesh_p.");
        return NULL;
        }
    }
    _result = (bool )iPcMesh_IsVisible(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigiPcTimerToiBase(void *ptr) {
    iPcTimer *src;
    iBase *dest;
    src = (iPcTimer *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iPcTimer_WakeUp(_swigobj,_swigarg0,_swigarg1)  (_swigobj->WakeUp(_swigarg0,_swigarg1))
static PyObject *_wrap_iPcTimer_WakeUp(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcTimer * _arg0;
    csTicks * _arg1;
    bool  _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    int tempbool2;

    self = self;
    if(!PyArg_ParseTuple(args,"ssi:iPcTimer_WakeUp",&_argc0,&_argc1,&tempbool2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcTimer_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcTimer_WakeUp. Expected _iPcTimer_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csTicks_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcTimer_WakeUp. Expected _csTicks_p.");
        return NULL;
        }
    }
    _arg2 = (bool ) tempbool2;
    iPcTimer_WakeUp(_arg0,*_arg1,_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcTimer_Clear(_swigobj)  (_swigobj->Clear())
static PyObject *_wrap_iPcTimer_Clear(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcTimer * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcTimer_Clear",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcTimer_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcTimer_Clear. Expected _iPcTimer_p.");
        return NULL;
        }
    }
    iPcTimer_Clear(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigiPcSolidToiBase(void *ptr) {
    iPcSolid *src;
    iBase *dest;
    src = (iPcSolid *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iPcSolid_SetMesh(_swigobj,_swigarg0)  (_swigobj->SetMesh(_swigarg0))
static PyObject *_wrap_iPcSolid_SetMesh(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcSolid * _arg0;
    iPcMesh * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcSolid_SetMesh",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcSolid_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcSolid_SetMesh. Expected _iPcSolid_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iPcMesh_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcSolid_SetMesh. Expected _iPcMesh_p.");
        return NULL;
        }
    }
    iPcSolid_SetMesh(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcSolid_GetMesh(_swigobj)  (_swigobj->GetMesh())
static PyObject *_wrap_iPcSolid_GetMesh(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMesh * _result;
    iPcSolid * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcSolid_GetMesh",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcSolid_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcSolid_GetMesh. Expected _iPcSolid_p.");
        return NULL;
        }
    }
    _result = (iPcMesh *)iPcSolid_GetMesh(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iPcMesh_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iPcSolid_GetCollider(_swigobj)  (_swigobj->GetCollider())
static PyObject *_wrap_iPcSolid_GetCollider(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCollider * _result;
    iPcSolid * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcSolid_GetCollider",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcSolid_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcSolid_GetCollider. Expected _iPcSolid_p.");
        return NULL;
        }
    }
    _result = (iCollider *)iPcSolid_GetCollider(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iCollider_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

static void *SwigiPcGravityToiBase(void *ptr) {
    iPcGravity *src;
    iBase *dest;
    src = (iPcGravity *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iPcGravity_CreateGravityColliderFromMesh(_swigobj,_swigarg0)  (_swigobj->CreateGravityCollider(_swigarg0))
static PyObject *_wrap_iPcGravity_CreateGravityColliderFromMesh(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcGravity * _arg0;
    iPcMesh * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcGravity_CreateGravityColliderFromMesh",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcGravity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcGravity_CreateGravityColliderFromMesh. Expected _iPcGravity_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iPcMesh_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcGravity_CreateGravityColliderFromMesh. Expected _iPcMesh_p.");
        return NULL;
        }
    }
    iPcGravity_CreateGravityColliderFromMesh(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcGravity_CreateGravityCollider(_swigobj,_swigarg0,_swigarg1)  (_swigobj->CreateGravityCollider(_swigarg0,_swigarg1))
static PyObject *_wrap_iPcGravity_CreateGravityCollider(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcGravity * _arg0;
    csVector3 * _arg1;
    csVector3 * _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iPcGravity_CreateGravityCollider",&_argc0,&_argc1,&_argc2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcGravity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcGravity_CreateGravityCollider. Expected _iPcGravity_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcGravity_CreateGravityCollider. Expected _csVector3_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iPcGravity_CreateGravityCollider. Expected _csVector3_p.");
        return NULL;
        }
    }
    iPcGravity_CreateGravityCollider(_arg0,*_arg1,*_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcGravity_GetGravityCollider(_swigobj)  (_swigobj->GetGravityCollider())
static PyObject *_wrap_iPcGravity_GetGravityCollider(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCollider * _result;
    iPcGravity * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcGravity_GetGravityCollider",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcGravity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcGravity_GetGravityCollider. Expected _iPcGravity_p.");
        return NULL;
        }
    }
    _result = (iCollider *)iPcGravity_GetGravityCollider(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iCollider_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iPcGravity_SetMovable(_swigobj,_swigarg0)  (_swigobj->SetMovable(_swigarg0))
static PyObject *_wrap_iPcGravity_SetMovable(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcGravity * _arg0;
    iPcMovable * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcGravity_SetMovable",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcGravity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcGravity_SetMovable. Expected _iPcGravity_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iPcMovable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcGravity_SetMovable. Expected _iPcMovable_p.");
        return NULL;
        }
    }
    iPcGravity_SetMovable(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcGravity_GetMovable(_swigobj)  (_swigobj->GetMovable())
static PyObject *_wrap_iPcGravity_GetMovable(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMovable * _result;
    iPcGravity * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcGravity_GetMovable",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcGravity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcGravity_GetMovable. Expected _iPcGravity_p.");
        return NULL;
        }
    }
    _result = (iPcMovable *)iPcGravity_GetMovable(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iPcMovable_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iPcGravity_SetSolid(_swigobj,_swigarg0)  (_swigobj->SetSolid(_swigarg0))
static PyObject *_wrap_iPcGravity_SetSolid(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcGravity * _arg0;
    iPcSolid * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcGravity_SetSolid",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcGravity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcGravity_SetSolid. Expected _iPcGravity_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iPcSolid_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcGravity_SetSolid. Expected _iPcSolid_p.");
        return NULL;
        }
    }
    iPcGravity_SetSolid(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcGravity_GetSolid(_swigobj)  (_swigobj->GetSolid())
static PyObject *_wrap_iPcGravity_GetSolid(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcSolid * _result;
    iPcGravity * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcGravity_GetSolid",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcGravity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcGravity_GetSolid. Expected _iPcGravity_p.");
        return NULL;
        }
    }
    _result = (iPcSolid *)iPcGravity_GetSolid(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iPcSolid_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iPcGravity_SetWeight(_swigobj,_swigarg0)  (_swigobj->SetWeight(_swigarg0))
static PyObject *_wrap_iPcGravity_SetWeight(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcGravity * _arg0;
    float  _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sf:iPcGravity_SetWeight",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcGravity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcGravity_SetWeight. Expected _iPcGravity_p.");
        return NULL;
        }
    }
    iPcGravity_SetWeight(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcGravity_GetWeight(_swigobj)  (_swigobj->GetWeight())
static PyObject *_wrap_iPcGravity_GetWeight(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    float  _result;
    iPcGravity * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcGravity_GetWeight",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcGravity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcGravity_GetWeight. Expected _iPcGravity_p.");
        return NULL;
        }
    }
    _result = (float )iPcGravity_GetWeight(_arg0);
    _resultobj = Py_BuildValue("f",_result);
    return _resultobj;
}

#define iPcGravity_ClearForces(_swigobj)  (_swigobj->ClearForces())
static PyObject *_wrap_iPcGravity_ClearForces(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcGravity * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcGravity_ClearForces",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcGravity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcGravity_ClearForces. Expected _iPcGravity_p.");
        return NULL;
        }
    }
    iPcGravity_ClearForces(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcGravity_ClearPermanentForces(_swigobj)  (_swigobj->ClearPermanentForces())
static PyObject *_wrap_iPcGravity_ClearPermanentForces(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcGravity * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcGravity_ClearPermanentForces",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcGravity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcGravity_ClearPermanentForces. Expected _iPcGravity_p.");
        return NULL;
        }
    }
    iPcGravity_ClearPermanentForces(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcGravity_ResetSpeed(_swigobj)  (_swigobj->ResetSpeed())
static PyObject *_wrap_iPcGravity_ResetSpeed(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcGravity * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcGravity_ResetSpeed",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcGravity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcGravity_ResetSpeed. Expected _iPcGravity_p.");
        return NULL;
        }
    }
    iPcGravity_ResetSpeed(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcGravity_ApplyForce(_swigobj,_swigarg0,_swigarg1)  (_swigobj->ApplyForce(_swigarg0,_swigarg1))
static PyObject *_wrap_iPcGravity_ApplyForce(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcGravity * _arg0;
    csVector3 * _arg1;
    float  _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ssf:iPcGravity_ApplyForce",&_argc0,&_argc1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcGravity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcGravity_ApplyForce. Expected _iPcGravity_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcGravity_ApplyForce. Expected _csVector3_p.");
        return NULL;
        }
    }
    iPcGravity_ApplyForce(_arg0,*_arg1,_arg2);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcGravity_ApplyPermanentForce(_swigobj,_swigarg0)  (_swigobj->ApplyPermanentForce(_swigarg0))
static PyObject *_wrap_iPcGravity_ApplyPermanentForce(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcGravity * _arg0;
    csVector3 * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcGravity_ApplyPermanentForce",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcGravity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcGravity_ApplyPermanentForce. Expected _iPcGravity_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcGravity_ApplyPermanentForce. Expected _csVector3_p.");
        return NULL;
        }
    }
    iPcGravity_ApplyPermanentForce(_arg0,*_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcGravity_IsResting(_swigobj)  (_swigobj->IsResting())
static PyObject *_wrap_iPcGravity_IsResting(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcGravity * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcGravity_IsResting",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcGravity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcGravity_IsResting. Expected _iPcGravity_p.");
        return NULL;
        }
    }
    _result = (bool )iPcGravity_IsResting(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcGravity_SetActive(_swigobj,_swigarg0)  (_swigobj->SetActive(_swigarg0))
static PyObject *_wrap_iPcGravity_SetActive(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcGravity * _arg0;
    bool  _arg1;
    char * _argc0 = 0;
    int tempbool1;

    self = self;
    if(!PyArg_ParseTuple(args,"si:iPcGravity_SetActive",&_argc0,&tempbool1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcGravity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcGravity_SetActive. Expected _iPcGravity_p.");
        return NULL;
        }
    }
    _arg1 = (bool ) tempbool1;
    iPcGravity_SetActive(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcGravity_IsActive(_swigobj)  (_swigobj->IsActive())
static PyObject *_wrap_iPcGravity_IsActive(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcGravity * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcGravity_IsActive",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcGravity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcGravity_IsActive. Expected _iPcGravity_p.");
        return NULL;
        }
    }
    _result = (bool )iPcGravity_IsActive(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

static void *SwigiPcMovableToiBase(void *ptr) {
    iPcMovable *src;
    iBase *dest;
    src = (iPcMovable *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iPcMovable_SetMesh(_swigobj,_swigarg0)  (_swigobj->SetMesh(_swigarg0))
static PyObject *_wrap_iPcMovable_SetMesh(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMovable * _arg0;
    iPcMesh * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcMovable_SetMesh",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMovable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMovable_SetMesh. Expected _iPcMovable_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iPcMesh_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcMovable_SetMesh. Expected _iPcMesh_p.");
        return NULL;
        }
    }
    iPcMovable_SetMesh(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMovable_GetMesh(_swigobj)  (_swigobj->GetMesh())
static PyObject *_wrap_iPcMovable_GetMesh(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMesh * _result;
    iPcMovable * _arg0;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcMovable_GetMesh",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMovable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMovable_GetMesh. Expected _iPcMovable_p.");
        return NULL;
        }
    }
    _result = (iPcMesh *)iPcMovable_GetMesh(_arg0);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iPcMesh_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iPcMovable_SetPos(_swigobj,_swigarg0,_swigarg1)  (_swigobj->Move(_swigarg0,_swigarg1))
static PyObject *_wrap_iPcMovable_SetPos(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iPcMovable * _arg0;
    iSector * _arg1;
    csVector3 * _arg2;
    char * _argc0 = 0;
    char * _argc1 = 0;
    char * _argc2 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sss:iPcMovable_SetPos",&_argc0,&_argc1,&_argc2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMovable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMovable_SetPos. Expected _iPcMovable_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iSector_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcMovable_SetPos. Expected _iSector_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iPcMovable_SetPos. Expected _csVector3_p.");
        return NULL;
        }
    }
    _result = (int )iPcMovable_SetPos(_arg0,_arg1,*_arg2);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcMovable_Move(_swigobj,_swigarg0)  (_swigobj->Move(_swigarg0))
static PyObject *_wrap_iPcMovable_Move(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iPcMovable * _arg0;
    csVector3 * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcMovable_Move",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMovable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMovable_Move. Expected _iPcMovable_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_csVector3_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcMovable_Move. Expected _csVector3_p.");
        return NULL;
        }
    }
    _result = (int )iPcMovable_Move(_arg0,*_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcMovable_AddConstraint(_swigobj,_swigarg0)  (_swigobj->AddConstraint(_swigarg0))
static PyObject *_wrap_iPcMovable_AddConstraint(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMovable * _arg0;
    iPcMovableConstraint * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcMovable_AddConstraint",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMovable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMovable_AddConstraint. Expected _iPcMovable_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iPcMovableConstraint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcMovable_AddConstraint. Expected _iPcMovableConstraint_p.");
        return NULL;
        }
    }
    iPcMovable_AddConstraint(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMovable_RemoveConstraint(_swigobj,_swigarg0)  (_swigobj->RemoveConstraint(_swigarg0))
static PyObject *_wrap_iPcMovable_RemoveConstraint(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMovable * _arg0;
    iPcMovableConstraint * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcMovable_RemoveConstraint",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMovable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMovable_RemoveConstraint. Expected _iPcMovable_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iPcMovableConstraint_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcMovable_RemoveConstraint. Expected _iPcMovableConstraint_p.");
        return NULL;
        }
    }
    iPcMovable_RemoveConstraint(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcMovable_RemoveAllConstraints(_swigobj)  (_swigobj->RemoveAllConstraints())
static PyObject *_wrap_iPcMovable_RemoveAllConstraints(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcMovable * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcMovable_RemoveAllConstraints",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcMovable_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcMovable_RemoveAllConstraints. Expected _iPcMovable_p.");
        return NULL;
        }
    }
    iPcMovable_RemoveAllConstraints(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigiPcInventoryToiBase(void *ptr) {
    iPcInventory *src;
    iBase *dest;
    src = (iPcInventory *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iPcInventory_AddEntity(_swigobj,_swigarg0)  (_swigobj->AddEntity(_swigarg0))
static PyObject *_wrap_iPcInventory_AddEntity(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcInventory * _arg0;
    iCelEntity * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcInventory_AddEntity",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcInventory_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcInventory_AddEntity. Expected _iPcInventory_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcInventory_AddEntity. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    _result = (bool )iPcInventory_AddEntity(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcInventory_RemoveEntity(_swigobj,_swigarg0)  (_swigobj->RemoveEntity(_swigarg0))
static PyObject *_wrap_iPcInventory_RemoveEntity(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcInventory * _arg0;
    iCelEntity * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcInventory_RemoveEntity",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcInventory_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcInventory_RemoveEntity. Expected _iPcInventory_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iCelEntity_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcInventory_RemoveEntity. Expected _iCelEntity_p.");
        return NULL;
        }
    }
    _result = (bool )iPcInventory_RemoveEntity(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcInventory_RemoveAll(_swigobj)  (_swigobj->RemoveAll())
static PyObject *_wrap_iPcInventory_RemoveAll(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcInventory * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcInventory_RemoveAll",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcInventory_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcInventory_RemoveAll. Expected _iPcInventory_p.");
        return NULL;
        }
    }
    _result = (bool )iPcInventory_RemoveAll(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcInventory_GetEntityCount(_swigobj)  (_swigobj->GetEntityCount())
static PyObject *_wrap_iPcInventory_GetEntityCount(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    int  _result;
    iPcInventory * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcInventory_GetEntityCount",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcInventory_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcInventory_GetEntityCount. Expected _iPcInventory_p.");
        return NULL;
        }
    }
    _result = (int )iPcInventory_GetEntityCount(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcInventory_GetEntity(_swigobj,_swigarg0)  (_swigobj->GetEntity(_swigarg0))
static PyObject *_wrap_iPcInventory_GetEntity(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iCelEntity * _result;
    iPcInventory * _arg0;
    int  _arg1;
    char * _argc0 = 0;
    char _ptemp[128];

    self = self;
    if(!PyArg_ParseTuple(args,"si:iPcInventory_GetEntity",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcInventory_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcInventory_GetEntity. Expected _iPcInventory_p.");
        return NULL;
        }
    }
    _result = (iCelEntity *)iPcInventory_GetEntity(_arg0,_arg1);
    SWIG_MakePtr(_ptemp, (char *) _result,"_iCelEntity_p");
    _resultobj = Py_BuildValue("s",_ptemp);
    return _resultobj;
}

#define iPcInventory_SetStrictCharacteristics(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetStrictCharacteristics(_swigarg0,_swigarg1))
static PyObject *_wrap_iPcInventory_SetStrictCharacteristics(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcInventory * _arg0;
    char * _arg1;
    bool  _arg2;
    char * _argc0 = 0;
    int tempbool2;

    self = self;
    if(!PyArg_ParseTuple(args,"ssi:iPcInventory_SetStrictCharacteristics",&_argc0,&_arg1,&tempbool2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcInventory_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcInventory_SetStrictCharacteristics. Expected _iPcInventory_p.");
        return NULL;
        }
    }
    _arg2 = (bool ) tempbool2;
    _result = (bool )iPcInventory_SetStrictCharacteristics(_arg0,_arg1,_arg2);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcInventory_HasStrictCharacteristics(_swigobj,_swigarg0)  (_swigobj->HasStrictCharacteristics(_swigarg0))
static PyObject *_wrap_iPcInventory_HasStrictCharacteristics(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcInventory * _arg0;
    char * _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcInventory_HasStrictCharacteristics",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcInventory_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcInventory_HasStrictCharacteristics. Expected _iPcInventory_p.");
        return NULL;
        }
    }
    _result = (bool )iPcInventory_HasStrictCharacteristics(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcInventory_SetConstraints(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->SetConstraints(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_iPcInventory_SetConstraints(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcInventory * _arg0;
    char * _arg1;
    float  _arg2;
    float  _arg3;
    float  _arg4;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ssfff:iPcInventory_SetConstraints",&_argc0,&_arg1,&_arg2,&_arg3,&_arg4)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcInventory_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcInventory_SetConstraints. Expected _iPcInventory_p.");
        return NULL;
        }
    }
    _result = (bool )iPcInventory_SetConstraints(_arg0,_arg1,_arg2,_arg3,_arg4);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcInventory_GetConstraints(_swigobj,_swigarg0,_swigarg1,_swigarg2,_swigarg3)  (_swigobj->GetConstraints(_swigarg0,_swigarg1,_swigarg2,_swigarg3))
static PyObject *_wrap_iPcInventory_GetConstraints(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcInventory * _arg0;
    char * _arg1;
    float * _arg2;
    float * _arg3;
    float * _arg4;
    char * _argc0 = 0;
    char * _argc2 = 0;
    char * _argc3 = 0;
    char * _argc4 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"sssss:iPcInventory_GetConstraints",&_argc0,&_arg1,&_argc2,&_argc3,&_argc4)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcInventory_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcInventory_GetConstraints. Expected _iPcInventory_p.");
        return NULL;
        }
    }
    if (_argc2) {
        if (SWIG_GetPtr(_argc2,(void **) &_arg2,"_float_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 3 of iPcInventory_GetConstraints. Expected _float_p.");
        return NULL;
        }
    }
    if (_argc3) {
        if (SWIG_GetPtr(_argc3,(void **) &_arg3,"_float_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 4 of iPcInventory_GetConstraints. Expected _float_p.");
        return NULL;
        }
    }
    if (_argc4) {
        if (SWIG_GetPtr(_argc4,(void **) &_arg4,"_float_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 5 of iPcInventory_GetConstraints. Expected _float_p.");
        return NULL;
        }
    }
    _result = (bool )iPcInventory_GetConstraints(_arg0,_arg1,*_arg2,*_arg3,*_arg4);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcInventory_RemoveConstraints(_swigobj,_swigarg0)  (_swigobj->RemoveConstraints(_swigarg0))
static PyObject *_wrap_iPcInventory_RemoveConstraints(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcInventory * _arg0;
    char * _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcInventory_RemoveConstraints",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcInventory_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcInventory_RemoveConstraints. Expected _iPcInventory_p.");
        return NULL;
        }
    }
    iPcInventory_RemoveConstraints(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcInventory_RemoveAllConstraints(_swigobj)  (_swigobj->RemoveAllConstraints())
static PyObject *_wrap_iPcInventory_RemoveAllConstraints(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcInventory * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcInventory_RemoveAllConstraints",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcInventory_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcInventory_RemoveAllConstraints. Expected _iPcInventory_p.");
        return NULL;
        }
    }
    iPcInventory_RemoveAllConstraints(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcInventory_GetCurrentCharacteristic(_swigobj,_swigarg0)  (_swigobj->GetCurrentCharacteristic(_swigarg0))
static PyObject *_wrap_iPcInventory_GetCurrentCharacteristic(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    float  _result;
    iPcInventory * _arg0;
    char * _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcInventory_GetCurrentCharacteristic",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcInventory_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcInventory_GetCurrentCharacteristic. Expected _iPcInventory_p.");
        return NULL;
        }
    }
    _result = (float )iPcInventory_GetCurrentCharacteristic(_arg0,_arg1);
    _resultobj = Py_BuildValue("f",_result);
    return _resultobj;
}

#define iPcInventory_MarkDirty(_swigobj,_swigarg0)  (_swigobj->MarkDirty(_swigarg0))
static PyObject *_wrap_iPcInventory_MarkDirty(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcInventory * _arg0;
    char * _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcInventory_MarkDirty",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcInventory_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcInventory_MarkDirty. Expected _iPcInventory_p.");
        return NULL;
        }
    }
    iPcInventory_MarkDirty(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcInventory_TestConstraints(_swigobj,_swigarg0)  (_swigobj->TestConstraints(_swigarg0))
static PyObject *_wrap_iPcInventory_TestConstraints(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcInventory * _arg0;
    char * _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcInventory_TestConstraints",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcInventory_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcInventory_TestConstraints. Expected _iPcInventory_p.");
        return NULL;
        }
    }
    _result = (bool )iPcInventory_TestConstraints(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcInventory_Dump(_swigobj)  (_swigobj->Dump())
static PyObject *_wrap_iPcInventory_Dump(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcInventory * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcInventory_Dump",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcInventory_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcInventory_Dump. Expected _iPcInventory_p.");
        return NULL;
        }
    }
    iPcInventory_Dump(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static void *SwigiPcCharacteristicsToiBase(void *ptr) {
    iPcCharacteristics *src;
    iBase *dest;
    src = (iPcCharacteristics *) ptr;
    dest = (iBase *) src;
    return (void *) dest;
}

#define iPcCharacteristics_SetCharacteristic(_swigobj,_swigarg0,_swigarg1)  (_swigobj->SetCharacteristic(_swigarg0,_swigarg1))
static PyObject *_wrap_iPcCharacteristics_SetCharacteristic(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcCharacteristics * _arg0;
    char * _arg1;
    float  _arg2;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ssf:iPcCharacteristics_SetCharacteristic",&_argc0,&_arg1,&_arg2)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCharacteristics_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCharacteristics_SetCharacteristic. Expected _iPcCharacteristics_p.");
        return NULL;
        }
    }
    _result = (bool )iPcCharacteristics_SetCharacteristic(_arg0,_arg1,_arg2);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcCharacteristics_SetInheritedCharacteristic(_swigobj,_swigarg0,_swigarg1,_swigarg2)  (_swigobj->SetInheritedCharacteristic(_swigarg0,_swigarg1,_swigarg2))
static PyObject *_wrap_iPcCharacteristics_SetInheritedCharacteristic(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcCharacteristics * _arg0;
    char * _arg1;
    float  _arg2;
    float  _arg3;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ssff:iPcCharacteristics_SetInheritedCharacteristic",&_argc0,&_arg1,&_arg2,&_arg3)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCharacteristics_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCharacteristics_SetInheritedCharacteristic. Expected _iPcCharacteristics_p.");
        return NULL;
        }
    }
    _result = (bool )iPcCharacteristics_SetInheritedCharacteristic(_arg0,_arg1,_arg2,_arg3);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcCharacteristics_GetCharacteristic(_swigobj,_swigarg0)  (_swigobj->GetCharacteristic(_swigarg0))
static PyObject *_wrap_iPcCharacteristics_GetCharacteristic(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    float  _result;
    iPcCharacteristics * _arg0;
    char * _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcCharacteristics_GetCharacteristic",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCharacteristics_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCharacteristics_GetCharacteristic. Expected _iPcCharacteristics_p.");
        return NULL;
        }
    }
    _result = (float )iPcCharacteristics_GetCharacteristic(_arg0,_arg1);
    _resultobj = Py_BuildValue("f",_result);
    return _resultobj;
}

#define iPcCharacteristics_GetLocalCharacteristic(_swigobj,_swigarg0)  (_swigobj->GetLocalCharacteristic(_swigarg0))
static PyObject *_wrap_iPcCharacteristics_GetLocalCharacteristic(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    float  _result;
    iPcCharacteristics * _arg0;
    char * _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcCharacteristics_GetLocalCharacteristic",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCharacteristics_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCharacteristics_GetLocalCharacteristic. Expected _iPcCharacteristics_p.");
        return NULL;
        }
    }
    _result = (float )iPcCharacteristics_GetLocalCharacteristic(_arg0,_arg1);
    _resultobj = Py_BuildValue("f",_result);
    return _resultobj;
}

#define iPcCharacteristics_GetInheritedCharacteristic(_swigobj,_swigarg0)  (_swigobj->GetInheritedCharacteristic(_swigarg0))
static PyObject *_wrap_iPcCharacteristics_GetInheritedCharacteristic(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    float  _result;
    iPcCharacteristics * _arg0;
    char * _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcCharacteristics_GetInheritedCharacteristic",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCharacteristics_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCharacteristics_GetInheritedCharacteristic. Expected _iPcCharacteristics_p.");
        return NULL;
        }
    }
    _result = (float )iPcCharacteristics_GetInheritedCharacteristic(_arg0,_arg1);
    _resultobj = Py_BuildValue("f",_result);
    return _resultobj;
}

#define iPcCharacteristics_ClearCharacteristic(_swigobj,_swigarg0)  (_swigobj->ClearCharacteristic(_swigarg0))
static PyObject *_wrap_iPcCharacteristics_ClearCharacteristic(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcCharacteristics * _arg0;
    char * _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcCharacteristics_ClearCharacteristic",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCharacteristics_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCharacteristics_ClearCharacteristic. Expected _iPcCharacteristics_p.");
        return NULL;
        }
    }
    _result = (bool )iPcCharacteristics_ClearCharacteristic(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcCharacteristics_HasCharacteristic(_swigobj,_swigarg0)  (_swigobj->HasCharacteristic(_swigarg0))
static PyObject *_wrap_iPcCharacteristics_HasCharacteristic(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcCharacteristics * _arg0;
    char * _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcCharacteristics_HasCharacteristic",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCharacteristics_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCharacteristics_HasCharacteristic. Expected _iPcCharacteristics_p.");
        return NULL;
        }
    }
    _result = (bool )iPcCharacteristics_HasCharacteristic(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcCharacteristics_ClearAll(_swigobj)  (_swigobj->ClearAll())
static PyObject *_wrap_iPcCharacteristics_ClearAll(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcCharacteristics * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcCharacteristics_ClearAll",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCharacteristics_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCharacteristics_ClearAll. Expected _iPcCharacteristics_p.");
        return NULL;
        }
    }
    _result = (bool )iPcCharacteristics_ClearAll(_arg0);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcCharacteristics_AddToInventory(_swigobj,_swigarg0)  (_swigobj->AddToInventory(_swigarg0))
static PyObject *_wrap_iPcCharacteristics_AddToInventory(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcCharacteristics * _arg0;
    iPcInventory * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcCharacteristics_AddToInventory",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCharacteristics_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCharacteristics_AddToInventory. Expected _iPcCharacteristics_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iPcInventory_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcCharacteristics_AddToInventory. Expected _iPcInventory_p.");
        return NULL;
        }
    }
    iPcCharacteristics_AddToInventory(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcCharacteristics_RemoveFromInventory(_swigobj,_swigarg0)  (_swigobj->RemoveFromInventory(_swigarg0))
static PyObject *_wrap_iPcCharacteristics_RemoveFromInventory(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcCharacteristics * _arg0;
    iPcInventory * _arg1;
    char * _argc0 = 0;
    char * _argc1 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcCharacteristics_RemoveFromInventory",&_argc0,&_argc1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCharacteristics_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCharacteristics_RemoveFromInventory. Expected _iPcCharacteristics_p.");
        return NULL;
        }
    }
    if (_argc1) {
        if (SWIG_GetPtr(_argc1,(void **) &_arg1,"_iPcInventory_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 2 of iPcCharacteristics_RemoveFromInventory. Expected _iPcInventory_p.");
        return NULL;
        }
    }
    iPcCharacteristics_RemoveFromInventory(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcCharacteristics_MarkDirty(_swigobj,_swigarg0)  (_swigobj->MarkDirty(_swigarg0))
static PyObject *_wrap_iPcCharacteristics_MarkDirty(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcCharacteristics * _arg0;
    char * _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcCharacteristics_MarkDirty",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCharacteristics_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCharacteristics_MarkDirty. Expected _iPcCharacteristics_p.");
        return NULL;
        }
    }
    iPcCharacteristics_MarkDirty(_arg0,_arg1);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

#define iPcCharacteristics_TestConstraints(_swigobj,_swigarg0)  (_swigobj->TestConstraints(_swigarg0))
static PyObject *_wrap_iPcCharacteristics_TestConstraints(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    bool  _result;
    iPcCharacteristics * _arg0;
    char * _arg1;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"ss:iPcCharacteristics_TestConstraints",&_argc0,&_arg1)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCharacteristics_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCharacteristics_TestConstraints. Expected _iPcCharacteristics_p.");
        return NULL;
        }
    }
    _result = (bool )iPcCharacteristics_TestConstraints(_arg0,_arg1);
    _resultobj = Py_BuildValue("i",_result);
    return _resultobj;
}

#define iPcCharacteristics_Dump(_swigobj)  (_swigobj->Dump())
static PyObject *_wrap_iPcCharacteristics_Dump(PyObject *self, PyObject *args) {
    PyObject * _resultobj;
    iPcCharacteristics * _arg0;
    char * _argc0 = 0;

    self = self;
    if(!PyArg_ParseTuple(args,"s:iPcCharacteristics_Dump",&_argc0)) 
        return NULL;
    if (_argc0) {
        if (SWIG_GetPtr(_argc0,(void **) &_arg0,"_iPcCharacteristics_p")) {
            PyErr_SetString(PyExc_TypeError,"Type error in argument 1 of iPcCharacteristics_Dump. Expected _iPcCharacteristics_p.");
        return NULL;
        }
    }
    iPcCharacteristics_Dump(_arg0);
    Py_INCREF(Py_None);
    _resultobj = Py_None;
    return _resultobj;
}

static PyMethodDef blcelcMethods[] = {
	 { "iPcCharacteristics_Dump", _wrap_iPcCharacteristics_Dump, 1 },
	 { "iPcCharacteristics_TestConstraints", _wrap_iPcCharacteristics_TestConstraints, 1 },
	 { "iPcCharacteristics_MarkDirty", _wrap_iPcCharacteristics_MarkDirty, 1 },
	 { "iPcCharacteristics_RemoveFromInventory", _wrap_iPcCharacteristics_RemoveFromInventory, 1 },
	 { "iPcCharacteristics_AddToInventory", _wrap_iPcCharacteristics_AddToInventory, 1 },
	 { "iPcCharacteristics_ClearAll", _wrap_iPcCharacteristics_ClearAll, 1 },
	 { "iPcCharacteristics_HasCharacteristic", _wrap_iPcCharacteristics_HasCharacteristic, 1 },
	 { "iPcCharacteristics_ClearCharacteristic", _wrap_iPcCharacteristics_ClearCharacteristic, 1 },
	 { "iPcCharacteristics_GetInheritedCharacteristic", _wrap_iPcCharacteristics_GetInheritedCharacteristic, 1 },
	 { "iPcCharacteristics_GetLocalCharacteristic", _wrap_iPcCharacteristics_GetLocalCharacteristic, 1 },
	 { "iPcCharacteristics_GetCharacteristic", _wrap_iPcCharacteristics_GetCharacteristic, 1 },
	 { "iPcCharacteristics_SetInheritedCharacteristic", _wrap_iPcCharacteristics_SetInheritedCharacteristic, 1 },
	 { "iPcCharacteristics_SetCharacteristic", _wrap_iPcCharacteristics_SetCharacteristic, 1 },
	 { "iPcInventory_Dump", _wrap_iPcInventory_Dump, 1 },
	 { "iPcInventory_TestConstraints", _wrap_iPcInventory_TestConstraints, 1 },
	 { "iPcInventory_MarkDirty", _wrap_iPcInventory_MarkDirty, 1 },
	 { "iPcInventory_GetCurrentCharacteristic", _wrap_iPcInventory_GetCurrentCharacteristic, 1 },
	 { "iPcInventory_RemoveAllConstraints", _wrap_iPcInventory_RemoveAllConstraints, 1 },
	 { "iPcInventory_RemoveConstraints", _wrap_iPcInventory_RemoveConstraints, 1 },
	 { "iPcInventory_GetConstraints", _wrap_iPcInventory_GetConstraints, 1 },
	 { "iPcInventory_SetConstraints", _wrap_iPcInventory_SetConstraints, 1 },
	 { "iPcInventory_HasStrictCharacteristics", _wrap_iPcInventory_HasStrictCharacteristics, 1 },
	 { "iPcInventory_SetStrictCharacteristics", _wrap_iPcInventory_SetStrictCharacteristics, 1 },
	 { "iPcInventory_GetEntity", _wrap_iPcInventory_GetEntity, 1 },
	 { "iPcInventory_GetEntityCount", _wrap_iPcInventory_GetEntityCount, 1 },
	 { "iPcInventory_RemoveAll", _wrap_iPcInventory_RemoveAll, 1 },
	 { "iPcInventory_RemoveEntity", _wrap_iPcInventory_RemoveEntity, 1 },
	 { "iPcInventory_AddEntity", _wrap_iPcInventory_AddEntity, 1 },
	 { "iPcMovable_RemoveAllConstraints", _wrap_iPcMovable_RemoveAllConstraints, 1 },
	 { "iPcMovable_RemoveConstraint", _wrap_iPcMovable_RemoveConstraint, 1 },
	 { "iPcMovable_AddConstraint", _wrap_iPcMovable_AddConstraint, 1 },
	 { "iPcMovable_Move", _wrap_iPcMovable_Move, 1 },
	 { "iPcMovable_SetPos", _wrap_iPcMovable_SetPos, 1 },
	 { "iPcMovable_GetMesh", _wrap_iPcMovable_GetMesh, 1 },
	 { "iPcMovable_SetMesh", _wrap_iPcMovable_SetMesh, 1 },
	 { "iPcGravity_IsActive", _wrap_iPcGravity_IsActive, 1 },
	 { "iPcGravity_SetActive", _wrap_iPcGravity_SetActive, 1 },
	 { "iPcGravity_IsResting", _wrap_iPcGravity_IsResting, 1 },
	 { "iPcGravity_ApplyPermanentForce", _wrap_iPcGravity_ApplyPermanentForce, 1 },
	 { "iPcGravity_ApplyForce", _wrap_iPcGravity_ApplyForce, 1 },
	 { "iPcGravity_ResetSpeed", _wrap_iPcGravity_ResetSpeed, 1 },
	 { "iPcGravity_ClearPermanentForces", _wrap_iPcGravity_ClearPermanentForces, 1 },
	 { "iPcGravity_ClearForces", _wrap_iPcGravity_ClearForces, 1 },
	 { "iPcGravity_GetWeight", _wrap_iPcGravity_GetWeight, 1 },
	 { "iPcGravity_SetWeight", _wrap_iPcGravity_SetWeight, 1 },
	 { "iPcGravity_GetSolid", _wrap_iPcGravity_GetSolid, 1 },
	 { "iPcGravity_SetSolid", _wrap_iPcGravity_SetSolid, 1 },
	 { "iPcGravity_GetMovable", _wrap_iPcGravity_GetMovable, 1 },
	 { "iPcGravity_SetMovable", _wrap_iPcGravity_SetMovable, 1 },
	 { "iPcGravity_GetGravityCollider", _wrap_iPcGravity_GetGravityCollider, 1 },
	 { "iPcGravity_CreateGravityCollider", _wrap_iPcGravity_CreateGravityCollider, 1 },
	 { "iPcGravity_CreateGravityColliderFromMesh", _wrap_iPcGravity_CreateGravityColliderFromMesh, 1 },
	 { "iPcSolid_GetCollider", _wrap_iPcSolid_GetCollider, 1 },
	 { "iPcSolid_GetMesh", _wrap_iPcSolid_GetMesh, 1 },
	 { "iPcSolid_SetMesh", _wrap_iPcSolid_SetMesh, 1 },
	 { "iPcTimer_Clear", _wrap_iPcTimer_Clear, 1 },
	 { "iPcTimer_WakeUp", _wrap_iPcTimer_WakeUp, 1 },
	 { "iPcMesh_IsVisible", _wrap_iPcMesh_IsVisible, 1 },
	 { "iPcMesh_Show", _wrap_iPcMesh_Show, 1 },
	 { "iPcMesh_Hide", _wrap_iPcMesh_Hide, 1 },
	 { "iPcMesh_GetAction", _wrap_iPcMesh_GetAction, 1 },
	 { "iPcMesh_SetAction", _wrap_iPcMesh_SetAction, 1 },
	 { "iPcMesh_MoveMesh", _wrap_iPcMesh_MoveMesh, 1 },
	 { "iPcMesh_GetMesh", _wrap_iPcMesh_GetMesh, 1 },
	 { "iPcMesh_CreateEmptyThing", _wrap_iPcMesh_CreateEmptyThing, 1 },
	 { "iPcMesh_SetMesh", _wrap_iPcMesh_SetMesh, 1 },
	 { "iPcMesh_LoadMesh", _wrap_iPcMesh_LoadMesh, 1 },
	 { "iPcMeshSelect_HasSenddownEvent", _wrap_iPcMeshSelect_HasSenddownEvent, 1 },
	 { "iPcMeshSelect_SetSenddownEvent", _wrap_iPcMeshSelect_SetSenddownEvent, 1 },
	 { "iPcMeshSelect_HasSendupEvent", _wrap_iPcMeshSelect_HasSendupEvent, 1 },
	 { "iPcMeshSelect_SetSendupEvent", _wrap_iPcMeshSelect_SetSendupEvent, 1 },
	 { "iPcMeshSelect_HasSendmoveEvent", _wrap_iPcMeshSelect_HasSendmoveEvent, 1 },
	 { "iPcMeshSelect_SetSendmoveEvent", _wrap_iPcMeshSelect_SetSendmoveEvent, 1 },
	 { "iPcMeshSelect_GetDragPlaneNormal", _wrap_iPcMeshSelect_GetDragPlaneNormal, 1 },
	 { "iPcMeshSelect_SetDragPlaneNormal", _wrap_iPcMeshSelect_SetDragPlaneNormal, 1 },
	 { "iPcMeshSelect_HasDragMode", _wrap_iPcMeshSelect_HasDragMode, 1 },
	 { "iPcMeshSelect_SetDragMode", _wrap_iPcMeshSelect_SetDragMode, 1 },
	 { "iPcMeshSelect_HasFollowAlwaysMode", _wrap_iPcMeshSelect_HasFollowAlwaysMode, 1 },
	 { "iPcMeshSelect_SetFollowAlwaysMode", _wrap_iPcMeshSelect_SetFollowAlwaysMode, 1 },
	 { "iPcMeshSelect_HasFollowMode", _wrap_iPcMeshSelect_HasFollowMode, 1 },
	 { "iPcMeshSelect_SetFollowMode", _wrap_iPcMeshSelect_SetFollowMode, 1 },
	 { "iPcMeshSelect_HasGlobalSelection", _wrap_iPcMeshSelect_HasGlobalSelection, 1 },
	 { "iPcMeshSelect_SetGlobalSelection", _wrap_iPcMeshSelect_SetGlobalSelection, 1 },
	 { "iPcMeshSelect_GetMouseButtons", _wrap_iPcMeshSelect_GetMouseButtons, 1 },
	 { "iPcMeshSelect_SetMouseButtons", _wrap_iPcMeshSelect_SetMouseButtons, 1 },
	 { "iPcMeshSelect_SetCamera", _wrap_iPcMeshSelect_SetCamera, 1 },
	 { "iPcCamera_GetView", _wrap_iPcCamera_GetView, 1 },
	 { "iPcCamera_GetCamera", _wrap_iPcCamera_GetCamera, 1 },
	 { "iPcCamera_SetRectangle", _wrap_iPcCamera_SetRectangle, 1 },
	 { "iPcCamera_GetRoll", _wrap_iPcCamera_GetRoll, 1 },
	 { "iPcCamera_SetRoll", _wrap_iPcCamera_SetRoll, 1 },
	 { "iPcCamera_GetPitch", _wrap_iPcCamera_GetPitch, 1 },
	 { "iPcCamera_SetPitch", _wrap_iPcCamera_SetPitch, 1 },
	 { "iPcCamera_GetFollowPos", _wrap_iPcCamera_GetFollowPos, 1 },
	 { "iPcCamera_SetFollowPos", _wrap_iPcCamera_SetFollowPos, 1 },
	 { "iPcCamera_GetMode", _wrap_iPcCamera_GetMode, 1 },
	 { "iPcCamera_SetMode", _wrap_iPcCamera_SetMode, 1 },
	 { "iPcCamera_SetRegion", _wrap_iPcCamera_SetRegion, 1 },
	 { "iPcRegion_LoadWorld", _wrap_iPcRegion_LoadWorld, 1 },
	 { "iPcRegion_PointCamera", _wrap_iPcRegion_PointCamera, 1 },
	 { "iPcRegion_GetStartPosition", _wrap_iPcRegion_GetStartPosition, 1 },
	 { "iPcRegion_GetStartSector", _wrap_iPcRegion_GetStartSector, 1 },
	 { "iPcRegion_FindSector", _wrap_iPcRegion_FindSector, 1 },
	 { "iPcRegion_Unload", _wrap_iPcRegion_Unload, 1 },
	 { "iPcRegion_Load", _wrap_iPcRegion_Load, 1 },
	 { "iPcRegion_GetRegionName", _wrap_iPcRegion_GetRegionName, 1 },
	 { "iPcRegion_SetRegionName", _wrap_iPcRegion_SetRegionName, 1 },
	 { "iPcRegion_GetWorldFile", _wrap_iPcRegion_GetWorldFile, 1 },
	 { "iPcRegion_GetWorldDir", _wrap_iPcRegion_GetWorldDir, 1 },
	 { "iPcRegion_SetWorldFile", _wrap_iPcRegion_SetWorldFile, 1 },
	 { "iCelPropertyClassList_FindByInterface", _wrap_iCelPropertyClassList_FindByInterface, 1 },
	 { "iCelPropertyClassList_FindByName", _wrap_iCelPropertyClassList_FindByName, 1 },
	 { "iCelPropertyClassList_Find", _wrap_iCelPropertyClassList_Find, 1 },
	 { "iCelPropertyClassList_Get", _wrap_iCelPropertyClassList_Get, 1 },
	 { "iCelPropertyClassList_GetCount", _wrap_iCelPropertyClassList_GetCount, 1 },
	 { "iCelPropertyClass_SetPropertyVector3", _wrap_iCelPropertyClass_SetPropertyVector3, 1 },
	 { "iCelPropertyClass_SetPropertyString", _wrap_iCelPropertyClass_SetPropertyString, 1 },
	 { "iCelPropertyClass_SetPropertyBool", _wrap_iCelPropertyClass_SetPropertyBool, 1 },
	 { "iCelPropertyClass_SetPropertyFloat", _wrap_iCelPropertyClass_SetPropertyFloat, 1 },
	 { "iCelPropertyClass_SetPropertyLong", _wrap_iCelPropertyClass_SetPropertyLong, 1 },
	 { "iCelPropertyClass_PerformAction", _wrap_iCelPropertyClass_PerformAction, 1 },
	 { "iCelPropertyClass_GetPropertyOrActionDescription", _wrap_iCelPropertyClass_GetPropertyOrActionDescription, 1 },
	 { "iCelPropertyClass_GetPropertyOrActionID", _wrap_iCelPropertyClass_GetPropertyOrActionID, 1 },
	 { "iCelPropertyClass_GetPropertyAndActionCount", _wrap_iCelPropertyClass_GetPropertyAndActionCount, 1 },
	 { "iCelPropertyClass_GetPropertyVector", _wrap_iCelPropertyClass_GetPropertyVector, 1 },
	 { "iCelPropertyClass_GetPropertyString", _wrap_iCelPropertyClass_GetPropertyString, 1 },
	 { "iCelPropertyClass_GetPropertyBool", _wrap_iCelPropertyClass_GetPropertyBool, 1 },
	 { "iCelPropertyClass_GetPropertyFloat", _wrap_iCelPropertyClass_GetPropertyFloat, 1 },
	 { "iCelPropertyClass_GetPropertyLong", _wrap_iCelPropertyClass_GetPropertyLong, 1 },
	 { "iCelPropertyClass_IsPropertyReadOnly", _wrap_iCelPropertyClass_IsPropertyReadOnly, 1 },
	 { "iCelPropertyClass_GetPropertyOrActionType", _wrap_iCelPropertyClass_GetPropertyOrActionType, 1 },
	 { "iCelPropertyClass_SetEntity", _wrap_iCelPropertyClass_SetEntity, 1 },
	 { "iCelPropertyClass_GetEntity", _wrap_iCelPropertyClass_GetEntity, 1 },
	 { "iCelPropertyClass_GetName", _wrap_iCelPropertyClass_GetName, 1 },
	 { "iCelBehaviour_SendMessage", _wrap_iCelBehaviour_SendMessage, 1 },
	 { "iCelBehaviour_GetBehaviourLayer", _wrap_iCelBehaviour_GetBehaviourLayer, 1 },
	 { "iCelBehaviour_GetName", _wrap_iCelBehaviour_GetName, 1 },
	 { "iCelBlLayer_CreateBehaviour", _wrap_iCelBlLayer_CreateBehaviour, 1 },
	 { "iCelBlLayer_GetName", _wrap_iCelBlLayer_GetName, 1 },
	 { "iCelEntity_LoadBehaviour", _wrap_iCelEntity_LoadBehaviour, 1 },
	 { "iCelEntity_GetPropertyClassList", _wrap_iCelEntity_GetPropertyClassList, 1 },
	 { "iCelEntity_GetID", _wrap_iCelEntity_GetID, 1 },
	 { "iCelEntity_GetBehaviour", _wrap_iCelEntity_GetBehaviour, 1 },
	 { "iCelEntity_SetBehaviour", _wrap_iCelEntity_SetBehaviour, 1 },
	 { "iCelEntity_SetName", _wrap_iCelEntity_SetName, 1 },
	 { "iCelEntity_GetName", _wrap_iCelEntity_GetName, 1 },
	 { "iCelPlLayer_FindBehaviourLayer", _wrap_iCelPlLayer_FindBehaviourLayer, 1 },
	 { "iCelPlLayer_GetBehaviourLayer", _wrap_iCelPlLayer_GetBehaviourLayer, 1 },
	 { "iCelPlLayer_GetBehaviourLayerCount", _wrap_iCelPlLayer_GetBehaviourLayerCount, 1 },
	 { "iCelPlLayer_FetchString", _wrap_iCelPlLayer_FetchString, 1 },
	 { "iCelPlLayer_CreatePropertyClass", _wrap_iCelPlLayer_CreatePropertyClass, 1 },
	 { "iObjectRegistry_Print", _wrap_iObjectRegistry_Print, 1 },
	 { "iObjectRegistry_Query_iGraphics3D", _wrap_iObjectRegistry_Query_iGraphics3D, 1 },
	 { "iObjectRegistry_Query_iEngine", _wrap_iObjectRegistry_Query_iEngine, 1 },
	 { "iEngine_GetTextureList", _wrap_iEngine_GetTextureList, 1 },
	 { "iEngine_GetMaterialList", _wrap_iEngine_GetMaterialList, 1 },
	 { "iEngine_GetSectors", _wrap_iEngine_GetSectors, 1 },
	 { "iEngine_CreateSectorWallsMesh", _wrap_iEngine_CreateSectorWallsMesh, 1 },
	 { "iEngine_CreateSector", _wrap_iEngine_CreateSector, 1 },
	 { "iEngine_CreateTexture", _wrap_iEngine_CreateTexture, 1 },
	 { "iEngine_DeleteAll", _wrap_iEngine_DeleteAll, 1 },
	 { "iEngine_GetTextureFormat", _wrap_iEngine_GetTextureFormat, 1 },
	 { "iTextureList_FindByName", _wrap_iTextureList_FindByName, 1 },
	 { "iMaterialList_FindByName", _wrap_iMaterialList_FindByName, 1 },
	 { "iSectorList_FindByName", _wrap_iSectorList_FindByName, 1 },
	 { "iSectorList_Remove", _wrap_iSectorList_Remove, 1 },
	 { "iSectorList_Add", _wrap_iSectorList_Add, 1 },
	 { "iSectorList_Get", _wrap_iSectorList_Get, 1 },
	 { "iSectorList_GetCount", _wrap_iSectorList_GetCount, 1 },
	 { "iPolygonTexture_SetCacheData", _wrap_iPolygonTexture_SetCacheData, 1 },
	 { "iPolygonTexture_GetCacheData", _wrap_iPolygonTexture_GetCacheData, 1 },
	 { "iPolygonTexture_GetLightCellShift", _wrap_iPolygonTexture_GetLightCellShift, 1 },
	 { "iPolygonTexture_GetLightCellSize", _wrap_iPolygonTexture_GetLightCellSize, 1 },
	 { "iPolygonTexture_GetLightMap", _wrap_iPolygonTexture_GetLightMap, 1 },
	 { "iPolygonTexture_RecalculateDynamicLights", _wrap_iPolygonTexture_RecalculateDynamicLights, 1 },
	 { "iPolygonTexture_DynamicLightsDirty", _wrap_iPolygonTexture_DynamicLightsDirty, 1 },
	 { "iPolygonTexture_GetMaterialHandle", _wrap_iPolygonTexture_GetMaterialHandle, 1 },
	 { "iTextureManager_GetTextureFormat", _wrap_iTextureManager_GetTextureFormat, 1 },
	 { "iTextureManager_SetVerbose", _wrap_iTextureManager_SetVerbose, 1 },
	 { "iTextureManager_FreeImages", _wrap_iTextureManager_FreeImages, 1 },
	 { "iTextureManager_PrepareTextures", _wrap_iTextureManager_PrepareTextures, 1 },
	 { "iTextureManager_RegisterTexture", _wrap_iTextureManager_RegisterTexture, 1 },
	 { "iImage_Crop", _wrap_iImage_Crop, 1 },
	 { "iImage_Clone", _wrap_iImage_Clone, 1 },
	 { "iImage_SetFormat", _wrap_iImage_SetFormat, 1 },
	 { "iImage_GetAlpha", _wrap_iImage_GetAlpha, 1 },
	 { "iImage_GetPalette", _wrap_iImage_GetPalette, 1 },
	 { "iImage_GetFormat", _wrap_iImage_GetFormat, 1 },
	 { "iImage_GetName", _wrap_iImage_GetName, 1 },
	 { "iImage_SetName", _wrap_iImage_SetName, 1 },
	 { "iImage_MipMap", _wrap_iImage_MipMap, 1 },
	 { "iImage_Rescale", _wrap_iImage_Rescale, 1 },
	 { "iImage_GetSize", _wrap_iImage_GetSize, 1 },
	 { "iImage_GetHeight", _wrap_iImage_GetHeight, 1 },
	 { "iImage_GetWidth", _wrap_iImage_GetWidth, 1 },
	 { "iImage_GetImageData", _wrap_iImage_GetImageData, 1 },
	 { "iPolygon3D_GetVertexC", _wrap_iPolygon3D_GetVertexC, 1 },
	 { "iPolygon3D_GetVertexW", _wrap_iPolygon3D_GetVertexW, 1 },
	 { "iPolygon3D_GetLightMap", _wrap_iPolygon3D_GetLightMap, 1 },
	 { "iPolygon3DStatic_SetTextureSpace", _wrap_iPolygon3DStatic_SetTextureSpace, 1 },
	 { "iPolygon3DStatic_CreatePlane", _wrap_iPolygon3DStatic_CreatePlane, 1 },
	 { "iPolygon3DStatic_SetAlpha", _wrap_iPolygon3DStatic_SetAlpha, 1 },
	 { "iPolygon3DStatic_GetAlpha", _wrap_iPolygon3DStatic_GetAlpha, 1 },
	 { "iPolygon3DStatic_CreateVertex", _wrap_iPolygon3DStatic_CreateVertex, 1 },
	 { "iPolygon3DStatic_CreateVertexByIndex", _wrap_iPolygon3DStatic_CreateVertexByIndex, 1 },
	 { "iPolygon3DStatic_GetVertex", _wrap_iPolygon3DStatic_GetVertex, 1 },
	 { "iPolygon3DStatic_GetVertexCount", _wrap_iPolygon3DStatic_GetVertexCount, 1 },
	 { "iPolygon3DStatic_SetMaterial", _wrap_iPolygon3DStatic_SetMaterial, 1 },
	 { "iPolygon3DStatic_GetMaterialHandle", _wrap_iPolygon3DStatic_GetMaterialHandle, 1 },
	 { "iLightMap_GetSize", _wrap_iLightMap_GetSize, 1 },
	 { "iLightMap_GetMeanLighting", _wrap_iLightMap_GetMeanLighting, 1 },
	 { "iLightMap_SetCacheData", _wrap_iLightMap_SetCacheData, 1 },
	 { "iLightMap_GetCacheData", _wrap_iLightMap_GetCacheData, 1 },
	 { "iLightMap_GetRealHeight", _wrap_iLightMap_GetRealHeight, 1 },
	 { "iLightMap_GetRealWidth", _wrap_iLightMap_GetRealWidth, 1 },
	 { "iLightMap_GetHeight", _wrap_iLightMap_GetHeight, 1 },
	 { "iLightMap_GetWidth", _wrap_iLightMap_GetWidth, 1 },
	 { "iLightMap_GetMapData", _wrap_iLightMap_GetMapData, 1 },
	 { "iMeshWrapper_GetMeshObject", _wrap_iMeshWrapper_GetMeshObject, 1 },
	 { "iMeshObject_Query_iThingFactoryState", _wrap_iMeshObject_Query_iThingFactoryState, 1 },
	 { "iMeshObject_Query_iThingState", _wrap_iMeshObject_Query_iThingState, 1 },
	 { "iThingFactoryState_CreatePolygon", _wrap_iThingFactoryState_CreatePolygon, 1 },
	 { "iCamera_GetInvFOV", _wrap_iCamera_GetInvFOV, 1 },
	 { "iCamera_GetFOV", _wrap_iCamera_GetFOV, 1 },
	 { "iGraphics3D_DrawPixmap", _wrap_iGraphics3D_DrawPixmap, 1 },
	 { "iGraphics3D_CreateHalo", _wrap_iGraphics3D_CreateHalo, 1 },
	 { "iGraphics3D_GetTextureManager", _wrap_iGraphics3D_GetTextureManager, 1 },
	 { "iGraphics3D_GetDriver2D", _wrap_iGraphics3D_GetDriver2D, 1 },
	 { "iGraphics3D_SetObjectToCamera", _wrap_iGraphics3D_SetObjectToCamera, 1 },
	 { "iGraphics3D_SetPerspectiveAspect", _wrap_iGraphics3D_SetPerspectiveAspect, 1 },
	 { "iGraphics3D_SetPerspectiveCenter", _wrap_iGraphics3D_SetPerspectiveCenter, 1 },
	 { "iGraphics3D_GetHeight", _wrap_iGraphics3D_GetHeight, 1 },
	 { "iGraphics3D_GetWidth", _wrap_iGraphics3D_GetWidth, 1 },
	 { "iGraphics3D_RemoveFromCache", _wrap_iGraphics3D_RemoveFromCache, 1 },
	 { "iGraphics3D_ClearCache", _wrap_iGraphics3D_ClearCache, 1 },
	 { "iGraphics3D_DumpCache", _wrap_iGraphics3D_DumpCache, 1 },
	 { "iGraphics3D_GetZBuffValue", _wrap_iGraphics3D_GetZBuffValue, 1 },
	 { "iGraphics3D_GetZBuffAt", _wrap_iGraphics3D_GetZBuffAt, 1 },
	 { "iGraphics3D_GetCaps", _wrap_iGraphics3D_GetCaps, 1 },
	 { "iGraphics3D_CloseFogObject", _wrap_iGraphics3D_CloseFogObject, 1 },
	 { "iGraphics3D_DrawFogPolygon", _wrap_iGraphics3D_DrawFogPolygon, 1 },
	 { "iGraphics3D_OpenFogObject", _wrap_iGraphics3D_OpenFogObject, 1 },
	 { "iGraphics3D_DrawPolygonMesh", _wrap_iGraphics3D_DrawPolygonMesh, 1 },
	 { "iGraphics3D_DrawTriangleMesh", _wrap_iGraphics3D_DrawTriangleMesh, 1 },
	 { "iGraphics3D_DrawLine", _wrap_iGraphics3D_DrawLine, 1 },
	 { "iGraphics3D_DrawPolygonDebug", _wrap_iGraphics3D_DrawPolygonDebug, 1 },
	 { "iGraphics3D_DrawPolygon", _wrap_iGraphics3D_DrawPolygon, 1 },
	 { "iGraphics3D_Print", _wrap_iGraphics3D_Print, 1 },
	 { "iGraphics3D_FinishDraw", _wrap_iGraphics3D_FinishDraw, 1 },
	 { "iGraphics3D_BeginDraw", _wrap_iGraphics3D_BeginDraw, 1 },
	 { "iGraphics3D_SetDimensions", _wrap_iGraphics3D_SetDimensions, 1 },
	 { "iGraphics3D_Close", _wrap_iGraphics3D_Close, 1 },
	 { "iGraphics3D_Open", _wrap_iGraphics3D_Open, 1 },
	 { "iHalo_Draw", _wrap_iHalo_Draw, 1 },
	 { "iHalo_GetColor", _wrap_iHalo_GetColor, 1 },
	 { "iHalo_SetColor", _wrap_iHalo_SetColor, 1 },
	 { "iHalo_GetHeight", _wrap_iHalo_GetHeight, 1 },
	 { "iHalo_GetWidth", _wrap_iHalo_GetWidth, 1 },
	 { "iGraphics2D_FindRGB", _wrap_iGraphics2D_FindRGB, 1 },
	 { "iGraphics2D_AllowResize", _wrap_iGraphics2D_AllowResize, 1 },
	 { "iGraphics2D_ScreenShot", _wrap_iGraphics2D_ScreenShot, 1 },
	 { "iGraphics2D_SetMouseCursor", _wrap_iGraphics2D_SetMouseCursor, 1 },
	 { "iGraphics2D_SetMousePosition", _wrap_iGraphics2D_SetMousePosition, 1 },
	 { "iGraphics2D_GetFontServer", _wrap_iGraphics2D_GetFontServer, 1 },
	 { "iGraphics2D_Write", _wrap_iGraphics2D_Write, 1 },
	 { "iGraphics2D_FreeArea", _wrap_iGraphics2D_FreeArea, 1 },
	 { "iGraphics2D_RestoreArea", _wrap_iGraphics2D_RestoreArea, 1 },
	 { "iGraphics2D_SaveArea", _wrap_iGraphics2D_SaveArea, 1 },
	 { "iGraphics2D_GetPixel", _wrap_iGraphics2D_GetPixel, 1 },
	 { "iGraphics2D_GetPixelAt", _wrap_iGraphics2D_GetPixelAt, 1 },
	 { "iGraphics2D_DrawPixel", _wrap_iGraphics2D_DrawPixel, 1 },
	 { "iGraphics2D_ClipLine", _wrap_iGraphics2D_ClipLine, 1 },
	 { "iGraphics2D_DrawBox", _wrap_iGraphics2D_DrawBox, 1 },
	 { "iGraphics2D_DrawLine", _wrap_iGraphics2D_DrawLine, 1 },
	 { "iGraphics2D_ClearAll", _wrap_iGraphics2D_ClearAll, 1 },
	 { "iGraphics2D_Clear", _wrap_iGraphics2D_Clear, 1 },
	 { "iGraphics2D_Print", _wrap_iGraphics2D_Print, 1 },
	 { "iGraphics2D_FinishDraw", _wrap_iGraphics2D_FinishDraw, 1 },
	 { "iGraphics2D_BeginDraw", _wrap_iGraphics2D_BeginDraw, 1 },
	 { "iGraphics2D_GetClipRect", _wrap_iGraphics2D_GetClipRect, 1 },
	 { "iGraphics2D_SetClipRect", _wrap_iGraphics2D_SetClipRect, 1 },
	 { "iGraphics2D_SetRGB", _wrap_iGraphics2D_SetRGB, 1 },
	 { "iGraphics2D_GetPalette", _wrap_iGraphics2D_GetPalette, 1 },
	 { "iGraphics2D_GetPalEntryCount", _wrap_iGraphics2D_GetPalEntryCount, 1 },
	 { "iGraphics2D_GetPixelBytes", _wrap_iGraphics2D_GetPixelBytes, 1 },
	 { "iGraphics2D_GetPixelFormat", _wrap_iGraphics2D_GetPixelFormat, 1 },
	 { "iGraphics2D_GetDoubleBufferState", _wrap_iGraphics2D_GetDoubleBufferState, 1 },
	 { "iGraphics2D_DoubleBuffer", _wrap_iGraphics2D_DoubleBuffer, 1 },
	 { "iGraphics2D_GetPage", _wrap_iGraphics2D_GetPage, 1 },
	 { "iGraphics2D_GetFullScreen", _wrap_iGraphics2D_GetFullScreen, 1 },
	 { "iGraphics2D_GetHeight", _wrap_iGraphics2D_GetHeight, 1 },
	 { "iGraphics2D_GetWidth", _wrap_iGraphics2D_GetWidth, 1 },
	 { "iGraphics2D_Close", _wrap_iGraphics2D_Close, 1 },
	 { "iGraphics2D_Open", _wrap_iGraphics2D_Open, 1 },
	 { "iFontServer_GetFont", _wrap_iFontServer_GetFont, 1 },
	 { "iFontServer_GetFontCount", _wrap_iFontServer_GetFontCount, 1 },
	 { "iFontServer_LoadFont", _wrap_iFontServer_LoadFont, 1 },
	 { "iFont_GetLength", _wrap_iFont_GetLength, 1 },
	 { "iFont_GetDimensions", _wrap_iFont_GetDimensions, 1 },
	 { "iFont_GetGlyphBitmap", _wrap_iFont_GetGlyphBitmap, 1 },
	 { "iFont_GetGlyphSize", _wrap_iFont_GetGlyphSize, 1 },
	 { "iFont_GetMaxSize", _wrap_iFont_GetMaxSize, 1 },
	 { "iFont_GetSize", _wrap_iFont_GetSize, 1 },
	 { "iFont_SetSize", _wrap_iFont_SetSize, 1 },
	 { "iMaterialWrapper_GetMaterialHandle", _wrap_iMaterialWrapper_GetMaterialHandle, 1 },
	 { "iMaterialHandle_Prepare", _wrap_iMaterialHandle_Prepare, 1 },
	 { "iMaterialHandle_GetReflection", _wrap_iMaterialHandle_GetReflection, 1 },
	 { "iMaterialHandle_GetFlatColor", _wrap_iMaterialHandle_GetFlatColor, 1 },
	 { "iMaterialHandle_GetTexture", _wrap_iMaterialHandle_GetTexture, 1 },
	 { "iTextureHandle_GetPrivateObject", _wrap_iTextureHandle_GetPrivateObject, 1 },
	 { "iTextureHandle_SetCacheData", _wrap_iTextureHandle_SetCacheData, 1 },
	 { "iTextureHandle_GetCacheData", _wrap_iTextureHandle_GetCacheData, 1 },
	 { "iTextureHandle_GetMeanColor", _wrap_iTextureHandle_GetMeanColor, 1 },
	 { "iTextureHandle_GetMipMapDimensions", _wrap_iTextureHandle_GetMipMapDimensions, 1 },
	 { "iEventHandler_HandleEvent", _wrap_iEventHandler_HandleEvent, 1 },
	 { "iComponent_Initialize", _wrap_iComponent_Initialize, 1 },
	 { "new_csImageArea", _wrap_new_csImageArea, 1 },
	 { "csImageArea_data_get", _wrap_csImageArea_data_get, 1 },
	 { "csImageArea_data_set", _wrap_csImageArea_data_set, 1 },
	 { "csImageArea_h_get", _wrap_csImageArea_h_get, 1 },
	 { "csImageArea_h_set", _wrap_csImageArea_h_set, 1 },
	 { "csImageArea_w_get", _wrap_csImageArea_w_get, 1 },
	 { "csImageArea_w_set", _wrap_csImageArea_w_set, 1 },
	 { "csImageArea_y_get", _wrap_csImageArea_y_get, 1 },
	 { "csImageArea_y_set", _wrap_csImageArea_y_set, 1 },
	 { "csImageArea_x_get", _wrap_csImageArea_x_get, 1 },
	 { "csImageArea_x_set", _wrap_csImageArea_x_set, 1 },
	 { "csGraphics3DCaps_MaxAspectRatio_get", _wrap_csGraphics3DCaps_MaxAspectRatio_get, 1 },
	 { "csGraphics3DCaps_MaxAspectRatio_set", _wrap_csGraphics3DCaps_MaxAspectRatio_set, 1 },
	 { "csGraphics3DCaps_NeedsPO2Maps_get", _wrap_csGraphics3DCaps_NeedsPO2Maps_get, 1 },
	 { "csGraphics3DCaps_NeedsPO2Maps_set", _wrap_csGraphics3DCaps_NeedsPO2Maps_set, 1 },
	 { "csGraphics3DCaps_fog_get", _wrap_csGraphics3DCaps_fog_get, 1 },
	 { "csGraphics3DCaps_fog_set", _wrap_csGraphics3DCaps_fog_set, 1 },
	 { "csGraphics3DCaps_maxTexWidth_get", _wrap_csGraphics3DCaps_maxTexWidth_get, 1 },
	 { "csGraphics3DCaps_maxTexWidth_set", _wrap_csGraphics3DCaps_maxTexWidth_set, 1 },
	 { "csGraphics3DCaps_maxTexHeight_get", _wrap_csGraphics3DCaps_maxTexHeight_get, 1 },
	 { "csGraphics3DCaps_maxTexHeight_set", _wrap_csGraphics3DCaps_maxTexHeight_set, 1 },
	 { "csGraphics3DCaps_minTexWidth_get", _wrap_csGraphics3DCaps_minTexWidth_get, 1 },
	 { "csGraphics3DCaps_minTexWidth_set", _wrap_csGraphics3DCaps_minTexWidth_set, 1 },
	 { "csGraphics3DCaps_minTexHeight_get", _wrap_csGraphics3DCaps_minTexHeight_get, 1 },
	 { "csGraphics3DCaps_minTexHeight_set", _wrap_csGraphics3DCaps_minTexHeight_set, 1 },
	 { "csGraphics3DCaps_CanClip_get", _wrap_csGraphics3DCaps_CanClip_get, 1 },
	 { "csGraphics3DCaps_CanClip_set", _wrap_csGraphics3DCaps_CanClip_set, 1 },
	 { "csPixelFormat_PixelBytes_get", _wrap_csPixelFormat_PixelBytes_get, 1 },
	 { "csPixelFormat_PixelBytes_set", _wrap_csPixelFormat_PixelBytes_set, 1 },
	 { "csPixelFormat_PalEntries_get", _wrap_csPixelFormat_PalEntries_get, 1 },
	 { "csPixelFormat_PalEntries_set", _wrap_csPixelFormat_PalEntries_set, 1 },
	 { "csPixelFormat_BlueBits_get", _wrap_csPixelFormat_BlueBits_get, 1 },
	 { "csPixelFormat_BlueBits_set", _wrap_csPixelFormat_BlueBits_set, 1 },
	 { "csPixelFormat_GreenBits_get", _wrap_csPixelFormat_GreenBits_get, 1 },
	 { "csPixelFormat_GreenBits_set", _wrap_csPixelFormat_GreenBits_set, 1 },
	 { "csPixelFormat_RedBits_get", _wrap_csPixelFormat_RedBits_get, 1 },
	 { "csPixelFormat_RedBits_set", _wrap_csPixelFormat_RedBits_set, 1 },
	 { "csPixelFormat_BlueShift_get", _wrap_csPixelFormat_BlueShift_get, 1 },
	 { "csPixelFormat_BlueShift_set", _wrap_csPixelFormat_BlueShift_set, 1 },
	 { "csPixelFormat_GreenShift_get", _wrap_csPixelFormat_GreenShift_get, 1 },
	 { "csPixelFormat_GreenShift_set", _wrap_csPixelFormat_GreenShift_set, 1 },
	 { "csPixelFormat_RedShift_get", _wrap_csPixelFormat_RedShift_get, 1 },
	 { "csPixelFormat_RedShift_set", _wrap_csPixelFormat_RedShift_set, 1 },
	 { "csPixelFormat_BlueMask_get", _wrap_csPixelFormat_BlueMask_get, 1 },
	 { "csPixelFormat_BlueMask_set", _wrap_csPixelFormat_BlueMask_set, 1 },
	 { "csPixelFormat_GreenMask_get", _wrap_csPixelFormat_GreenMask_get, 1 },
	 { "csPixelFormat_GreenMask_set", _wrap_csPixelFormat_GreenMask_set, 1 },
	 { "csPixelFormat_RedMask_get", _wrap_csPixelFormat_RedMask_get, 1 },
	 { "csPixelFormat_RedMask_set", _wrap_csPixelFormat_RedMask_set, 1 },
	 { "csRGBpixel_alpha_get", _wrap_csRGBpixel_alpha_get, 1 },
	 { "csRGBpixel_alpha_set", _wrap_csRGBpixel_alpha_set, 1 },
	 { "csRGBpixel_blue_get", _wrap_csRGBpixel_blue_get, 1 },
	 { "csRGBpixel_blue_set", _wrap_csRGBpixel_blue_set, 1 },
	 { "csRGBpixel_green_get", _wrap_csRGBpixel_green_get, 1 },
	 { "csRGBpixel_green_set", _wrap_csRGBpixel_green_set, 1 },
	 { "csRGBpixel_red_get", _wrap_csRGBpixel_red_get, 1 },
	 { "csRGBpixel_red_set", _wrap_csRGBpixel_red_set, 1 },
	 { "delete_csVector3", _wrap_delete_csVector3, 1 },
	 { "new_csVector3", _wrap_new_csVector3, 1 },
	 { "csVector3_z_get", _wrap_csVector3_z_get, 1 },
	 { "csVector3_z_set", _wrap_csVector3_z_set, 1 },
	 { "csVector3_y_get", _wrap_csVector3_y_get, 1 },
	 { "csVector3_y_set", _wrap_csVector3_y_set, 1 },
	 { "csVector3_x_get", _wrap_csVector3_x_get, 1 },
	 { "csVector3_x_set", _wrap_csVector3_x_set, 1 },
	 { "iSCF_CreateInstance", _wrap_iSCF_CreateInstance, 1 },
	 { "iBase_DecRef", _wrap_iBase_DecRef, 1 },
	 { "celPcCharacteristics", _wrap_celPcCharacteristics, 1 },
	 { "celPcInventory", _wrap_celPcInventory, 1 },
	 { "celPcMovable", _wrap_celPcMovable, 1 },
	 { "celPcGravity", _wrap_celPcGravity, 1 },
	 { "celPcSolid", _wrap_celPcSolid, 1 },
	 { "celPcTimer", _wrap_celPcTimer, 1 },
	 { "celPcMesh", _wrap_celPcMesh, 1 },
	 { "celPcMeshSelect", _wrap_celPcMeshSelect, 1 },
	 { "scfQuery_iPcCamera", _wrap_scfQuery_iPcCamera, 1 },
	 { "celCreateCamera", _wrap_celCreateCamera, 1 },
	 { "scfQuery_iPcRegion", _wrap_scfQuery_iPcRegion, 1 },
	 { "celCreateRegion", _wrap_celCreateRegion, 1 },
	 { "celQueryPC_iPcRegion", _wrap_celQueryPC_iPcRegion, 1 },
	 { "csQueryRegistry_iCelBlLayer", _wrap_csQueryRegistry_iCelBlLayer, 1 },
	 { "celCreateEntity", _wrap_celCreateEntity, 1 },
	 { "csQueryRegistry_iCelPlLayer", _wrap_csQueryRegistry_iCelPlLayer, 1 },
	 { "MakeVersion", _wrap_MakeVersion, 1 },
	 { "ptrmap", _wrap_ptrmap, 1 },
	 { "ptradd", _wrap_ptradd, 1 },
	 { "ptrfree", _wrap_ptrfree, 1 },
	 { "ptrcreate", _wrap_ptrcreate, 1 },
	 { "ptrset", _wrap_ptrset, 1 },
	 { "ptrvalue", _wrap_ptrvalue, 1 },
	 { "ptrcast", _wrap_ptrcast, 1 },
	 { NULL, NULL }
};
static PyObject *SWIG_globals;
#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT(void,initblcelc)() {
	 PyObject *m, *d;
	 SWIG_globals = SWIG_newvarlink();
	 m = Py_InitModule("blcelc", blcelcMethods);
	 d = PyModule_GetDict(m);
	 PyDict_SetItemString(d,"CEL_MOUSE_BUTTON1", PyInt_FromLong((long) 1));
	 PyDict_SetItemString(d,"CEL_MOUSE_BUTTON2", PyInt_FromLong((long) 2));
	 PyDict_SetItemString(d,"CEL_MOUSE_BUTTON3", PyInt_FromLong((long) 4));
	 PyDict_SetItemString(d,"CEL_DATA_NONE", PyInt_FromLong((long) CEL_DATA_NONE));
	 PyDict_SetItemString(d,"CEL_DATA_BOOL", PyInt_FromLong((long) CEL_DATA_BOOL));
	 PyDict_SetItemString(d,"CEL_DATA_BYTE", PyInt_FromLong((long) CEL_DATA_BYTE));
	 PyDict_SetItemString(d,"CEL_DATA_WORD", PyInt_FromLong((long) CEL_DATA_WORD));
	 PyDict_SetItemString(d,"CEL_DATA_LONG", PyInt_FromLong((long) CEL_DATA_LONG));
	 PyDict_SetItemString(d,"CEL_DATA_UBYTE", PyInt_FromLong((long) CEL_DATA_UBYTE));
	 PyDict_SetItemString(d,"CEL_DATA_UWORD", PyInt_FromLong((long) CEL_DATA_UWORD));
	 PyDict_SetItemString(d,"CEL_DATA_ULONG", PyInt_FromLong((long) CEL_DATA_ULONG));
	 PyDict_SetItemString(d,"CEL_DATA_FLOAT", PyInt_FromLong((long) CEL_DATA_FLOAT));
	 PyDict_SetItemString(d,"CEL_DATA_VECTOR3", PyInt_FromLong((long) CEL_DATA_VECTOR3));
	 PyDict_SetItemString(d,"CEL_DATA_STRING", PyInt_FromLong((long) CEL_DATA_STRING));
	 PyDict_SetItemString(d,"CEL_DATA_PCLASS", PyInt_FromLong((long) CEL_DATA_PCLASS));
	 PyDict_SetItemString(d,"CEL_DATA_ENTITY", PyInt_FromLong((long) CEL_DATA_ENTITY));
	 PyDict_SetItemString(d,"CEL_DATA_BUFFER", PyInt_FromLong((long) CEL_DATA_BUFFER));
	 PyDict_SetItemString(d,"CEL_DATA_ACTION", PyInt_FromLong((long) CEL_DATA_ACTION));
	 PyDict_SetItemString(d,"iPcCamera_freelook", PyInt_FromLong((long) iPcCamera::freelook));
	 PyDict_SetItemString(d,"iPcCamera_follow", PyInt_FromLong((long) iPcCamera::follow));
	 PyDict_SetItemString(d,"iPcCamera_rotational", PyInt_FromLong((long) iPcCamera::rotational));
	 PyDict_SetItemString(d,"iPcCamera_firstperson", PyInt_FromLong((long) iPcCamera::firstperson));
/*
 * These are the pointer type-equivalency mappings. 
 * (Used by the SWIG pointer type-checker).
 */
	 SWIG_RegisterMapping("_signed_long","_long",0);
	 SWIG_RegisterMapping("_struct_iCelPropertyClassList","_iCelPropertyClassList",0);
	 SWIG_RegisterMapping("_struct_iPcTimer","_iPcTimer",0);
	 SWIG_RegisterMapping("_struct_iFontServer","_iFontServer",0);
	 SWIG_RegisterMapping("_iCelBehaviour","_struct_iCelBehaviour",0);
	 SWIG_RegisterMapping("_iPcGravity","_struct_iPcGravity",0);
	 SWIG_RegisterMapping("_iMeshObject","_struct_iMeshObject",0);
	 SWIG_RegisterMapping("_iEngine","_struct_iEngine",0);
	 SWIG_RegisterMapping("_struct_iSectorList","_iSectorList",0);
	 SWIG_RegisterMapping("_iCelEntity","_struct_iCelEntity",0);
	 SWIG_RegisterMapping("_struct_iCelPlLayer","_iCelPlLayer",0);
	 SWIG_RegisterMapping("_long","_unsigned_long",0);
	 SWIG_RegisterMapping("_long","_signed_long",0);
	 SWIG_RegisterMapping("_csRGBpixel","_struct_csRGBpixel",0);
	 SWIG_RegisterMapping("_struct_iTextureHandle","_iTextureHandle",0);
	 SWIG_RegisterMapping("_struct_iPcSolid","_iPcSolid",0);
	 SWIG_RegisterMapping("_struct_iCelPropertyClass","_iCelPropertyClass",0);
	 SWIG_RegisterMapping("_iSCF","_struct_iSCF",0);
	 SWIG_RegisterMapping("_struct_iEventHandler","_iEventHandler",0);
	 SWIG_RegisterMapping("_iCamera","_struct_iCamera",0);
	 SWIG_RegisterMapping("_struct_iMaterialList","_iMaterialList",0);
	 SWIG_RegisterMapping("_struct_iPcGravity","_iPcGravity",0);
	 SWIG_RegisterMapping("_iCelBlLayer","_struct_iCelBlLayer",0);
	 SWIG_RegisterMapping("_struct_iSector","_iSector",0);
	 SWIG_RegisterMapping("_struct_csImageArea","_csImageArea",0);
	 SWIG_RegisterMapping("_struct_iMaterialWrapper","_iMaterialWrapper",0);
	 SWIG_RegisterMapping("_struct_iHalo","_iHalo",0);
	 SWIG_RegisterMapping("_struct_iPcCamera","_iPcCamera",0);
	 SWIG_RegisterMapping("_struct_iCelEntity","_iCelEntity",0);
	 SWIG_RegisterMapping("_iPcMesh","_struct_iPcMesh",0);
	 SWIG_RegisterMapping("_iHalo","_struct_iHalo",0);
	 SWIG_RegisterMapping("_struct_csRGBpixel","_csRGBpixel",0);
	 SWIG_RegisterMapping("_struct_iEngine","_iEngine",0);
	 SWIG_RegisterMapping("_iMaterialWrapper","_struct_iMaterialWrapper",0);
	 SWIG_RegisterMapping("_iPcRegion","_struct_iPcRegion",0);
	 SWIG_RegisterMapping("_struct_iTextureList","_iTextureList",0);
	 SWIG_RegisterMapping("_iComponent","_struct_iComponent",0);
	 SWIG_RegisterMapping("_iPcMeshSelect","_struct_iPcMeshSelect",0);
	 SWIG_RegisterMapping("_struct_iThingState","_iThingState",0);
	 SWIG_RegisterMapping("_struct_iSCF","_iSCF",0);
	 SWIG_RegisterMapping("_iPcMovable","_struct_iPcMovable",0);
	 SWIG_RegisterMapping("_iGraphics2D","_struct_iGraphics2D",0);
	 SWIG_RegisterMapping("_iTextureList","_struct_iTextureList",0);
	 SWIG_RegisterMapping("_struct_iLightMap","_iLightMap",0);
	 SWIG_RegisterMapping("_struct_iCelBehaviour","_iCelBehaviour",0);
	 SWIG_RegisterMapping("_csPixelFormat","_struct_csPixelFormat",0);
	 SWIG_RegisterMapping("_struct_csGraphics3DCaps","_csGraphics3DCaps",0);
	 SWIG_RegisterMapping("_unsigned_long","_long",0);
	 SWIG_RegisterMapping("_struct_iCamera","_iCamera",0);
	 SWIG_RegisterMapping("_iGraphics3D","_struct_iGraphics3D",0);
	 SWIG_RegisterMapping("_struct_iMeshObject","_iMeshObject",0);
	 SWIG_RegisterMapping("_signed_int","_int",0);
	 SWIG_RegisterMapping("_csGraphics3DCaps","_struct_csGraphics3DCaps",0);
	 SWIG_RegisterMapping("_struct_iComponent","_iComponent",0);
	 SWIG_RegisterMapping("_struct_iTextureWrapper","_iTextureWrapper",0);
	 SWIG_RegisterMapping("_iPcTimer","_struct_iPcTimer",0);
	 SWIG_RegisterMapping("_iTextureWrapper","_struct_iTextureWrapper",0);
	 SWIG_RegisterMapping("_struct_iPcMovable","_iPcMovable",0);
	 SWIG_RegisterMapping("_struct_iPcMesh","_iPcMesh",0);
	 SWIG_RegisterMapping("_unsigned_short","_short",0);
	 SWIG_RegisterMapping("_iTextureHandle","_struct_iTextureHandle",0);
	 SWIG_RegisterMapping("_struct_iMeshWrapper","_iMeshWrapper",0);
	 SWIG_RegisterMapping("_iFontServer","_struct_iFontServer",0);
	 SWIG_RegisterMapping("_csVector3","_class_csVector3",0);
	 SWIG_RegisterMapping("_struct_iImage","_iImage",0);
	 SWIG_RegisterMapping("_signed_short","_short",0);
	 SWIG_RegisterMapping("_iPolygon3D","_struct_iPolygon3D",0);
	 SWIG_RegisterMapping("_iMeshWrapper","_struct_iMeshWrapper",0);
	 SWIG_RegisterMapping("_struct_iCelBlLayer","_iCelBlLayer",0);
	 SWIG_RegisterMapping("_iPcSolid","_struct_iPcSolid",0);
	 SWIG_RegisterMapping("_iSectorList","_struct_iSectorList",0);
	 SWIG_RegisterMapping("_struct_iObjectRegistry","_iObjectRegistry",0);
	 SWIG_RegisterMapping("_unsigned_int","_int",0);
	 SWIG_RegisterMapping("_iObjectRegistry","_struct_iObjectRegistry",0);
	 SWIG_RegisterMapping("_iCelPlLayer","_struct_iCelPlLayer",0);
	 SWIG_RegisterMapping("_short","_unsigned_short",0);
	 SWIG_RegisterMapping("_short","_signed_short",0);
	 SWIG_RegisterMapping("_struct_iPcCharacteristics","_iPcCharacteristics",0);
	 SWIG_RegisterMapping("_struct_iThingFactoryState","_iThingFactoryState",0);
	 SWIG_RegisterMapping("_struct_iFont","_iFont",0);
	 SWIG_RegisterMapping("_struct_iPolygonTexture","_iPolygonTexture",0);
	 SWIG_RegisterMapping("_int","_unsigned_int",0);
	 SWIG_RegisterMapping("_int","_signed_int",0);
	 SWIG_RegisterMapping("_class_csVector3","_csVector3",0);
	 SWIG_RegisterMapping("_iPolygonTexture","_struct_iPolygonTexture",0);
	 SWIG_RegisterMapping("_struct_iPcMeshSelect","_iPcMeshSelect",0);
	 SWIG_RegisterMapping("_iFont","_struct_iFont",0);
	 SWIG_RegisterMapping("_iEventHandler","_struct_iEventHandler",0);
	 SWIG_RegisterMapping("_struct_iTextureManager","_iTextureManager",0);
	 SWIG_RegisterMapping("_iTextureManager","_struct_iTextureManager",0);
	 SWIG_RegisterMapping("_struct_iPolygon3D","_iPolygon3D",0);
	 SWIG_RegisterMapping("_iMaterialList","_struct_iMaterialList",0);
	 SWIG_RegisterMapping("_struct_iPcRegion","_iPcRegion",0);
	 SWIG_RegisterMapping("_iPcCamera","_struct_iPcCamera",0);
	 SWIG_RegisterMapping("_csImageArea","_struct_csImageArea",0);
	 SWIG_RegisterMapping("_struct_csPixelFormat","_csPixelFormat",0);
	 SWIG_RegisterMapping("_struct_iGraphics2D","_iGraphics2D",0);
	 SWIG_RegisterMapping("_iCelPropertyClass","_struct_iCelPropertyClass",0);
	 SWIG_RegisterMapping("_iPcCharacteristics","_struct_iPcCharacteristics",0);
	 SWIG_RegisterMapping("_iThingFactoryState","_struct_iThingFactoryState",0);
	 SWIG_RegisterMapping("_struct_iPolygon3DStatic","_iPolygon3DStatic",0);
	 SWIG_RegisterMapping("_struct_iPcInventory","_iPcInventory",0);
	 SWIG_RegisterMapping("_struct_iMaterialHandle","_iMaterialHandle",0);
	 SWIG_RegisterMapping("_iMaterialHandle","_struct_iMaterialHandle",0);
	 SWIG_RegisterMapping("_struct_iGraphics3D","_iGraphics3D",0);
	 SWIG_RegisterMapping("_iImage","_struct_iImage",0);
	 SWIG_RegisterMapping("_iCelPropertyClassList","_struct_iCelPropertyClassList",0);
	 SWIG_RegisterMapping("_iPolygon3DStatic","_struct_iPolygon3DStatic",0);
	 SWIG_RegisterMapping("_iThingState","_struct_iThingState",0);
	 SWIG_RegisterMapping("_iPcInventory","_struct_iPcInventory",0);
	 SWIG_RegisterMapping("_struct_iCameraPosition","_iCameraPosition",0);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iPcCharacteristics",SwigiPcCharacteristicsToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iPcCharacteristics",SwigiPcCharacteristicsToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iPcInventory",SwigiPcInventoryToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iPcInventory",SwigiPcInventoryToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iPcMovable",SwigiPcMovableToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iPcMovable",SwigiPcMovableToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iPcGravity",SwigiPcGravityToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iPcGravity",SwigiPcGravityToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iPcSolid",SwigiPcSolidToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iPcSolid",SwigiPcSolidToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iPcTimer",SwigiPcTimerToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iPcTimer",SwigiPcTimerToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iPcMesh",SwigiPcMeshToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iPcMesh",SwigiPcMeshToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iPcMeshSelect",SwigiPcMeshSelectToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iPcMeshSelect",SwigiPcMeshSelectToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iPcCamera",SwigiPcCameraToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iPcCamera",SwigiPcCameraToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iPcRegion",SwigiPcRegionToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iPcRegion",SwigiPcRegionToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iCelPropertyClassList",SwigiCelPropertyClassListToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iCelPropertyClassList",SwigiCelPropertyClassListToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iCelPropertyClass",SwigiCelPropertyClassToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iCelPropertyClass",SwigiCelPropertyClassToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iCelBehaviour",SwigiCelBehaviourToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iCelBehaviour",SwigiCelBehaviourToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iCelBlLayer",SwigiCelBlLayerToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iCelBlLayer",SwigiCelBlLayerToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iCelEntity",SwigiCelEntityToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iCelEntity",SwigiCelEntityToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iCelPlLayer",SwigiCelPlLayerToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iCelPlLayer",SwigiCelPlLayerToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iObjectRegistry",SwigiObjectRegistryToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iObjectRegistry",SwigiObjectRegistryToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iEngine",SwigiEngineToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iEngine",SwigiEngineToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iTextureList",SwigiTextureListToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iTextureList",SwigiTextureListToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iMaterialList",SwigiMaterialListToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iMaterialList",SwigiMaterialListToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iSectorList",SwigiSectorListToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iSectorList",SwigiSectorListToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iCameraPosition",SwigiCameraPositionToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iCameraPosition",SwigiCameraPositionToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iPolygonTexture",SwigiPolygonTextureToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iPolygonTexture",SwigiPolygonTextureToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iTextureManager",SwigiTextureManagerToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iTextureManager",SwigiTextureManagerToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iImage",SwigiImageToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iImage",SwigiImageToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iPolygon3D",SwigiPolygon3DToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iPolygon3D",SwigiPolygon3DToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iPolygon3DStatic",SwigiPolygon3DStaticToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iPolygon3DStatic",SwigiPolygon3DStaticToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iLightMap",SwigiLightMapToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iLightMap",SwigiLightMapToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iMeshWrapper",SwigiMeshWrapperToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iMeshWrapper",SwigiMeshWrapperToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iMeshObject",SwigiMeshObjectToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iMeshObject",SwigiMeshObjectToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iThingFactoryState",SwigiThingFactoryStateToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iThingFactoryState",SwigiThingFactoryStateToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iThingState",SwigiThingStateToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iThingState",SwigiThingStateToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iSector",SwigiSectorToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iSector",SwigiSectorToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iCamera",SwigiCameraToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iCamera",SwigiCameraToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iGraphics3D",SwigiGraphics3DToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iGraphics3D",SwigiGraphics3DToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iHalo",SwigiHaloToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iHalo",SwigiHaloToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iGraphics2D",SwigiGraphics2DToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iGraphics2D",SwigiGraphics2DToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iFontServer",SwigiFontServerToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iFontServer",SwigiFontServerToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iFont",SwigiFontToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iFont",SwigiFontToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iMaterialWrapper",SwigiMaterialWrapperToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iMaterialWrapper",SwigiMaterialWrapperToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iMaterialHandle",SwigiMaterialHandleToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iMaterialHandle",SwigiMaterialHandleToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iTextureHandle",SwigiTextureHandleToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iTextureHandle",SwigiTextureHandleToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iTextureWrapper",SwigiTextureWrapperToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iTextureWrapper",SwigiTextureWrapperToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iEventHandler",SwigiEventHandlerToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iEventHandler",SwigiEventHandlerToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iComponent",SwigiComponentToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iComponent",SwigiComponentToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_struct_iSCF",SwigiSCFToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iSCF",SwigiSCFToiBase);
	 SWIG_RegisterMapping("_struct_iBase","_iBase",0);
	 SWIG_RegisterMapping("_iSector","_struct_iSector",0);
	 SWIG_RegisterMapping("_iCameraPosition","_struct_iCameraPosition",0);
	 SWIG_RegisterMapping("_iLightMap","_struct_iLightMap",0);
	 SWIG_RegisterMapping("_iBase","_struct_iPcCharacteristics",SwigiPcCharacteristicsToiBase);
	 SWIG_RegisterMapping("_iBase","_iPcCharacteristics",SwigiPcCharacteristicsToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iPcInventory",SwigiPcInventoryToiBase);
	 SWIG_RegisterMapping("_iBase","_iPcInventory",SwigiPcInventoryToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iPcMovable",SwigiPcMovableToiBase);
	 SWIG_RegisterMapping("_iBase","_iPcMovable",SwigiPcMovableToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iPcGravity",SwigiPcGravityToiBase);
	 SWIG_RegisterMapping("_iBase","_iPcGravity",SwigiPcGravityToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iPcSolid",SwigiPcSolidToiBase);
	 SWIG_RegisterMapping("_iBase","_iPcSolid",SwigiPcSolidToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iPcTimer",SwigiPcTimerToiBase);
	 SWIG_RegisterMapping("_iBase","_iPcTimer",SwigiPcTimerToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iPcMesh",SwigiPcMeshToiBase);
	 SWIG_RegisterMapping("_iBase","_iPcMesh",SwigiPcMeshToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iPcMeshSelect",SwigiPcMeshSelectToiBase);
	 SWIG_RegisterMapping("_iBase","_iPcMeshSelect",SwigiPcMeshSelectToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iPcCamera",SwigiPcCameraToiBase);
	 SWIG_RegisterMapping("_iBase","_iPcCamera",SwigiPcCameraToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iPcRegion",SwigiPcRegionToiBase);
	 SWIG_RegisterMapping("_iBase","_iPcRegion",SwigiPcRegionToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iCelPropertyClassList",SwigiCelPropertyClassListToiBase);
	 SWIG_RegisterMapping("_iBase","_iCelPropertyClassList",SwigiCelPropertyClassListToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iCelPropertyClass",SwigiCelPropertyClassToiBase);
	 SWIG_RegisterMapping("_iBase","_iCelPropertyClass",SwigiCelPropertyClassToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iCelBehaviour",SwigiCelBehaviourToiBase);
	 SWIG_RegisterMapping("_iBase","_iCelBehaviour",SwigiCelBehaviourToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iCelBlLayer",SwigiCelBlLayerToiBase);
	 SWIG_RegisterMapping("_iBase","_iCelBlLayer",SwigiCelBlLayerToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iCelEntity",SwigiCelEntityToiBase);
	 SWIG_RegisterMapping("_iBase","_iCelEntity",SwigiCelEntityToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iCelPlLayer",SwigiCelPlLayerToiBase);
	 SWIG_RegisterMapping("_iBase","_iCelPlLayer",SwigiCelPlLayerToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iObjectRegistry",SwigiObjectRegistryToiBase);
	 SWIG_RegisterMapping("_iBase","_iObjectRegistry",SwigiObjectRegistryToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iEngine",SwigiEngineToiBase);
	 SWIG_RegisterMapping("_iBase","_iEngine",SwigiEngineToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iTextureList",SwigiTextureListToiBase);
	 SWIG_RegisterMapping("_iBase","_iTextureList",SwigiTextureListToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iMaterialList",SwigiMaterialListToiBase);
	 SWIG_RegisterMapping("_iBase","_iMaterialList",SwigiMaterialListToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iSectorList",SwigiSectorListToiBase);
	 SWIG_RegisterMapping("_iBase","_iSectorList",SwigiSectorListToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iCameraPosition",SwigiCameraPositionToiBase);
	 SWIG_RegisterMapping("_iBase","_iCameraPosition",SwigiCameraPositionToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iPolygonTexture",SwigiPolygonTextureToiBase);
	 SWIG_RegisterMapping("_iBase","_iPolygonTexture",SwigiPolygonTextureToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iTextureManager",SwigiTextureManagerToiBase);
	 SWIG_RegisterMapping("_iBase","_iTextureManager",SwigiTextureManagerToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iImage",SwigiImageToiBase);
	 SWIG_RegisterMapping("_iBase","_iImage",SwigiImageToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iPolygon3D",SwigiPolygon3DToiBase);
	 SWIG_RegisterMapping("_iBase","_iPolygon3D",SwigiPolygon3DToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iPolygon3DStatic",SwigiPolygon3DStaticToiBase);
	 SWIG_RegisterMapping("_iBase","_iPolygon3DStatic",SwigiPolygon3DStaticToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iLightMap",SwigiLightMapToiBase);
	 SWIG_RegisterMapping("_iBase","_iLightMap",SwigiLightMapToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iMeshWrapper",SwigiMeshWrapperToiBase);
	 SWIG_RegisterMapping("_iBase","_iMeshWrapper",SwigiMeshWrapperToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iMeshObject",SwigiMeshObjectToiBase);
	 SWIG_RegisterMapping("_iBase","_iMeshObject",SwigiMeshObjectToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iThingFactoryState",SwigiThingFactoryStateToiBase);
	 SWIG_RegisterMapping("_iBase","_iThingFactoryState",SwigiThingFactoryStateToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iThingState",SwigiThingStateToiBase);
	 SWIG_RegisterMapping("_iBase","_iThingState",SwigiThingStateToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iSector",SwigiSectorToiBase);
	 SWIG_RegisterMapping("_iBase","_iSector",SwigiSectorToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iCamera",SwigiCameraToiBase);
	 SWIG_RegisterMapping("_iBase","_iCamera",SwigiCameraToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iGraphics3D",SwigiGraphics3DToiBase);
	 SWIG_RegisterMapping("_iBase","_iGraphics3D",SwigiGraphics3DToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iHalo",SwigiHaloToiBase);
	 SWIG_RegisterMapping("_iBase","_iHalo",SwigiHaloToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iGraphics2D",SwigiGraphics2DToiBase);
	 SWIG_RegisterMapping("_iBase","_iGraphics2D",SwigiGraphics2DToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iFontServer",SwigiFontServerToiBase);
	 SWIG_RegisterMapping("_iBase","_iFontServer",SwigiFontServerToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iFont",SwigiFontToiBase);
	 SWIG_RegisterMapping("_iBase","_iFont",SwigiFontToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iMaterialWrapper",SwigiMaterialWrapperToiBase);
	 SWIG_RegisterMapping("_iBase","_iMaterialWrapper",SwigiMaterialWrapperToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iMaterialHandle",SwigiMaterialHandleToiBase);
	 SWIG_RegisterMapping("_iBase","_iMaterialHandle",SwigiMaterialHandleToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iTextureHandle",SwigiTextureHandleToiBase);
	 SWIG_RegisterMapping("_iBase","_iTextureHandle",SwigiTextureHandleToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iTextureWrapper",SwigiTextureWrapperToiBase);
	 SWIG_RegisterMapping("_iBase","_iTextureWrapper",SwigiTextureWrapperToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iEventHandler",SwigiEventHandlerToiBase);
	 SWIG_RegisterMapping("_iBase","_iEventHandler",SwigiEventHandlerToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iComponent",SwigiComponentToiBase);
	 SWIG_RegisterMapping("_iBase","_iComponent",SwigiComponentToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iSCF",SwigiSCFToiBase);
	 SWIG_RegisterMapping("_iBase","_iSCF",SwigiSCFToiBase);
	 SWIG_RegisterMapping("_iBase","_struct_iBase",0);
}
