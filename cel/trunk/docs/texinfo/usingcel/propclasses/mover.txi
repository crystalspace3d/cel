@c -*-texinfo-*-
@node PropClass Mover, PropClass ZoneMgr, PropClass LinMove, Property Classes
@subsection Mover
@cindex pcmover property class
@cindex pcmover
@cindex @code{iPcMover}

This is a mover property class. It works closely with pclinmove and
pcactormove in order to help in making higher level movement actions
while checking collision detection along the way.

@subsubheading Property Class Details

@itemize @bullet
@item @emph{Name}:
@samp{pcmover}
@item @emph{Factory ID}:
@samp{cel.pcfactory.mover}
@item @emph{Interface}:
@code{iPcMover}
@item @emph{Header}:
@file{include/propclass/mover.h}
@end itemize

@subsubheading General Information

PcMover can be used when you want to control movement of an entity
by specifying a point to move to.

Currently it has only one method to move to a certain point in the map,
and another one to stop it, but it is possible that later other methods 
will be added.

@subsubheading MoveTo

With MoveTo an entity can be pointed to a certain point in some
sector and it will try to move to the specified distance of the point. 
The method accepts an optional parameter to set whether to make an initial
line of sight test before starting movement. If this test is activated and
there is no direct line of sight to target point, then movement will be
aborted.

Note this property class will test for arrival based only on x and z
axis, to avoid entity never arriving due to entity center and destination
not being in perfect alignment (which is easy due to the own entity body for
example).

You can use MoveTo from API or as a cel action.

@subsubheading Interrupt

This method allows to manually interrupt some movement. After calling this,
the mover will forget about what it was doing.

You can use Interrupt from API or as a cel action.

@subsubheading Message Callbacks

This property class can send the following messages to the behaviour.

@code{pcmover_arrived}: Will be sent when destination is reached.

@code{pcmover_impossible}: Sent when the (optional) initial line of sight test fails.

@code{pcmover_interrupted}: Sent if a new movement is started while another one is under way, or movement is manually interrupted using interrupt.

@subsubheading Defining a mover for an entity in map xml.

To define an entity that uses this property class we add a <propclass> stance
to the entity or entity template <addon> section. Usually though, this
property class will be added manually to entities, but there is nothing
preventing you from creating this already in the map.

@example
<addon entityname="FinalMonster" plugin="cel.addons.celentity">
  <propclass name="pcmesh">
    <action name="SetMesh">
      <par string="EvilMonster" name="name"/>
    </action>
  </propclass>
  <propclass name='pclinearmovement'>
    <action name='InitCDMesh'>
      <par float='10.0' name='percentage'/>
    </action>
  </propclass>
  <propclass name="pcactormove" />
  <propclass name="pcmover" />
  <behaviour layer="blpython" name="moverent"/>
</addon>
@end example

