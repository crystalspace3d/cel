/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.21
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};                                                    
#endif



    #ifndef __STDC_CONSTANT_MACROS
    #define __STDC_CONSTANT_MACROS
    #endif
    #ifndef __STDC_LIMIT_MACROS
    #define __STDC_LIMIT_MACROS
    #endif
    #ifndef DEBUG_PYTHON
    #undef _DEBUG
    #endif
    #include "Python.h"

/*************************************************************** -*- c -*-
 * python/precommon.swg
 *
 * Rename all exported symbols from common.swg, to avoid symbol
 * clashes if multiple interpreters are included
 *
 ************************************************************************/

#define SWIG_TypeRegister    SWIG_Python_TypeRegister
#define SWIG_TypeCheck       SWIG_Python_TypeCheck
#define SWIG_TypeCast        SWIG_Python_TypeCast
#define SWIG_TypeDynamicCast SWIG_Python_TypeDynamicCast
#define SWIG_TypeName        SWIG_Python_TypeName
#define SWIG_TypeQuery       SWIG_Python_TypeQuery
#define SWIG_TypeClientData  SWIG_Python_TypeClientData
#define SWIG_PackData        SWIG_Python_PackData 
#define SWIG_UnpackData      SWIG_Python_UnpackData 


/***********************************************************************
 * common.swg
 *
 *     This file contains generic SWIG runtime support for pointer
 *     type checking as well as a few commonly used macros to control
 *     external linkage.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 *
 * Copyright (c) 1999-2000, The University of Chicago
 * 
 * This file may be freely redistributed without license or fee provided
 * this copyright message remains intact.
 ************************************************************************/

#include <string.h>

#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  if defined(_MSC_VER) || defined(__GNUC__)
#    if defined(STATIC_LINKED)
#      define SWIGEXPORT(a) a
#      define SWIGIMPORT(a) extern a
#    else
#      define SWIGEXPORT(a) __declspec(dllexport) a
#      define SWIGIMPORT(a) extern a
#    endif
#  else
#    if defined(__BORLANDC__)
#      define SWIGEXPORT(a) a _export
#      define SWIGIMPORT(a) a _export
#    else
#      define SWIGEXPORT(a) a
#      define SWIGIMPORT(a) a
#    endif
#  endif
#else
#  define SWIGEXPORT(a) a
#  define SWIGIMPORT(a) a
#endif

#ifdef SWIG_GLOBAL
#  define SWIGRUNTIME(a) SWIGEXPORT(a)
#else
#  define SWIGRUNTIME(a) static a
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

typedef struct swig_type_info {
  const char             *name;
  swig_converter_func     converter;
  const char             *str;
  void                   *clientdata;
  swig_dycast_func        dcast;
  struct swig_type_info  *next;
  struct swig_type_info  *prev;
} swig_type_info;

#ifdef SWIG_NOINCLUDE

SWIGIMPORT(swig_type_info *) SWIG_TypeRegister(swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeCheck(char *c, swig_type_info *);
SWIGIMPORT(void *)           SWIG_TypeCast(swig_type_info *, void *);
SWIGIMPORT(swig_type_info *) SWIG_TypeDynamicCast(swig_type_info *, void **);
SWIGIMPORT(const char *)     SWIG_TypeName(const swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeQuery(const char *);
SWIGIMPORT(void)             SWIG_TypeClientData(swig_type_info *, void *);
SWIGIMPORT(char *)           SWIG_PackData(char *, void *, int);
SWIGIMPORT(char *)           SWIG_UnpackData(char *, void *, int);

#else

static swig_type_info *swig_type_list = 0;

/* Register a type mapping with the type-checking */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeRegister(swig_type_info *ti) {
  swig_type_info *tc, *head, *ret, *next;
  /* Check to see if this type has already been registered */
  tc = swig_type_list;
  while (tc) {
    if (strcmp(tc->name, ti->name) == 0) {
      /* Already exists in the table.  Just add additional types to the list */
      if (tc->clientdata) ti->clientdata = tc->clientdata;
      head = tc;
      next = tc->next;
      goto l1;
    }
    tc = tc->prev;
  }
  head = ti;
  next = 0;

  /* Place in list */
  ti->prev = swig_type_list;
  swig_type_list = ti;

  /* Build linked lists */
  l1:
  ret = head;
  tc = ti + 1;
  /* Patch up the rest of the links */
  while (tc->name) {
    head->next = tc;
    tc->prev = head;
    head = tc;
    tc++;
  }
  if (next) next->prev = head;
  head->next = next;
  return ret;
}

/* Check the typename */
SWIGRUNTIME(swig_type_info *) 
SWIG_TypeCheck(char *c, swig_type_info *ty) {
  swig_type_info *s;
  if (!ty) return 0;        /* Void pointer */
  s = ty->next;             /* First element always just a name */
  do {
    if (strcmp(s->name,c) == 0) {
      if (s == ty->next) return s;
      /* Move s to the top of the linked list */
      s->prev->next = s->next;
      if (s->next) {
        s->next->prev = s->prev;
      }
      /* Insert s as second element in the list */
      s->next = ty->next;
      if (ty->next) ty->next->prev = s;
      ty->next = s;
      s->prev = ty;
      return s;
    }
    s = s->next;
  } while (s && (s != ty->next));
  return 0;
}

/* Cast a pointer up an inheritance hierarchy */
SWIGRUNTIME(void *) 
SWIG_TypeCast(swig_type_info *ty, void *ptr) {
  if ((!ty) || (!ty->converter)) return ptr;
  return (*ty->converter)(ptr);
}

/* Dynamic pointer casting. Down an inheritance hierarchy */
SWIGRUNTIME(swig_type_info *) 
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/* Return the name associated with this type */
SWIGRUNTIME(const char *)
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/* Search for a swig_type_info structure */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeQuery(const char *name) {
  swig_type_info *ty = swig_type_list;
  while (ty) {
    if (ty->str && (strcmp(name,ty->str) == 0)) return ty;
    if (ty->name && (strcmp(name,ty->name) == 0)) return ty;
    ty = ty->prev;
  }
  return 0;
}

/* Set the clientdata field for a type */
SWIGRUNTIME(void)
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_type_info *tc, *equiv;
  if (ti->clientdata == clientdata) return;
  ti->clientdata = clientdata;
  equiv = ti->next;
  while (equiv) {
    if (!equiv->converter) {
      tc = swig_type_list;
      while (tc) {
        if ((strcmp(tc->name, equiv->name) == 0))
          SWIG_TypeClientData(tc,clientdata);
        tc = tc->prev;
      }
    }
    equiv = equiv->next;
  }
}

/* Pack binary data into a string */
SWIGRUNTIME(char *)
SWIG_PackData(char *c, void *ptr, int sz) {
  static char hex[17] = "0123456789abcdef";
  int i;
  unsigned char *u = (unsigned char *) ptr;
  register unsigned char uu;
  for (i = 0; i < sz; i++,u++) {
    uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* Unpack binary data from a string */
SWIGRUNTIME(char *)
SWIG_UnpackData(char *c, void *ptr, int sz) {
  register unsigned char uu = 0;
  register int d;
  unsigned char *u = (unsigned char *) ptr;
  int i;
  for (i = 0; i < sz; i++, u++) {
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    *u = uu;
  }
  return c;
}

#endif

#ifdef __cplusplus
}
#endif

/***********************************************************************
 * python.swg
 *
 *     This file contains the runtime support for Python modules
 *     and includes code for managing global variables and pointer
 *     type checking.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 ************************************************************************/


    #ifndef __STDC_CONSTANT_MACROS
    #define __STDC_CONSTANT_MACROS
    #endif
    #ifndef __STDC_LIMIT_MACROS
    #define __STDC_LIMIT_MACROS
    #endif
    #ifndef DEBUG_PYTHON
    #undef _DEBUG
    #endif
    #include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif

#define SWIG_PY_INT     1
#define SWIG_PY_FLOAT   2
#define SWIG_PY_STRING  3
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Flags for pointer conversion */

#define SWIG_POINTER_EXCEPTION     0x1
#define SWIG_POINTER_DISOWN        0x2

/* Exception handling in wrappers */
#define SWIG_fail   goto fail

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;

/* Common SWIG API */
#define SWIG_ConvertPtr(obj, pp, type, flags) \
  SWIG_Python_ConvertPtr(obj, pp, type, flags)
#define SWIG_NewPointerObj(p, type, flags) \
  SWIG_Python_NewPointerObj(p, type, flags)
#define SWIG_MustGetPtr(p, type, argnum, flags) \
  SWIG_Python_MustGetPtr(p, type, argnum, flags)

/* Python-specific SWIG API */
#define SWIG_newvarlink() \
  SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr) \
  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_ConvertPacked(obj, ptr, sz, ty, flags) \
  SWIG_Python_ConvertPacked(obj, ptr, sz, ty, flags)
#define SWIG_NewPackedObj(ptr, sz, type) \
  SWIG_Python_NewPackedObj(ptr, sz, type)
#define SWIG_InstallConstants(d, constants) \
  SWIG_Python_InstallConstants(d, constants)

#ifdef SWIG_NOINCLUDE

SWIGIMPORT(int)               SWIG_Python_ConvertPtr(PyObject *, void **, swig_type_info *, int);
SWIGIMPORT(PyObject *)        SWIG_Python_NewPointerObj(void *, swig_type_info *,int own);
SWIGIMPORT(void *)            SWIG_Python_MustGetPtr(PyObject *, swig_type_info *, int, int);
SWIGIMPORT(PyObject *)        SWIG_Python_newvarlink(void);
SWIGIMPORT(void)              SWIG_Python_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
SWIGIMPORT(int)               SWIG_Python_ConvertPacked(PyObject *, void *, int sz, swig_type_info *, int);
SWIGIMPORT(PyObject *)        SWIG_Python_NewPackedObj(void *, int sz, swig_type_info *);
SWIGIMPORT(void)              SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]);

#else

/* -----------------------------------------------------------------------------
 * global variable support code.
 * ----------------------------------------------------------------------------- */

typedef struct swig_globalvar {   
  char       *name;                  /* Name of global variable */
  PyObject *(*get_attr)(void);       /* Return the current value */
  int       (*set_attr)(PyObject *); /* Set the value */
  struct swig_globalvar *next;
} swig_globalvar;

typedef struct swig_varlinkobject {
  PyObject_HEAD
  swig_globalvar *vars;
} swig_varlinkobject;

static PyObject *
swig_varlink_repr(swig_varlinkobject *v) {
  v = v;
  return PyString_FromString("<Global variables>");
}

static int
swig_varlink_print(swig_varlinkobject *v, FILE *fp, int flags) {
  swig_globalvar  *var;
  flags = flags;
  fprintf(fp,"Global variables { ");
  for (var = v->vars; var; var=var->next) {
    fprintf(fp,"%s", var->name);
    if (var->next) fprintf(fp,", ");
  }
  fprintf(fp," }\n");
  return 0;
}

static PyObject *
swig_varlink_getattr(swig_varlinkobject *v, char *n) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->get_attr)();
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return NULL;
}

static int
swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->set_attr)(p);
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return 1;
}

statichere PyTypeObject varlinktype = {
  PyObject_HEAD_INIT(0)              
  0,
  (char *)"swigvarlink",              /* Type name    */
  sizeof(swig_varlinkobject),         /* Basic size   */
  0,                                  /* Itemsize     */
  0,                                  /* Deallocator  */ 
  (printfunc) swig_varlink_print,     /* Print        */
  (getattrfunc) swig_varlink_getattr, /* get attr     */
  (setattrfunc) swig_varlink_setattr, /* Set attr     */
  0,                                  /* tp_compare   */
  (reprfunc) swig_varlink_repr,       /* tp_repr      */    
  0,                                  /* tp_as_number */
  0,                                  /* tp_as_mapping*/
  0,                                  /* tp_hash      */
};

/* Create a variable linking object for use later */
SWIGRUNTIME(PyObject *)
SWIG_Python_newvarlink(void) {
  swig_varlinkobject *result = 0;
  result = PyMem_NEW(swig_varlinkobject,1);
  varlinktype.ob_type = &PyType_Type;    /* Patch varlinktype into a PyType */
  result->ob_type = &varlinktype;
  result->vars = 0;
  result->ob_refcnt = 0;
  Py_XINCREF((PyObject *) result);
  return ((PyObject*) result);
}

SWIGRUNTIME(void)
SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
  swig_varlinkobject *v;
  swig_globalvar *gv;
  v= (swig_varlinkobject *) p;
  gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
  gv->name = (char *) malloc(strlen(name)+1);
  strcpy(gv->name,name);
  gv->get_attr = get_attr;
  gv->set_attr = set_attr;
  gv->next = v->vars;
  v->vars = gv;
}

/* Convert a pointer value */
SWIGRUNTIME(int)
SWIG_Python_ConvertPtr(PyObject *obj, void **ptr, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c = 0;
  static PyObject *SWIG_this = 0;
  int    newref = 0;
  PyObject  *pyobj = 0;

  if (!obj) return 0;
  if (obj == Py_None) {
    *ptr = 0;
    return 0;
  }
#ifdef SWIG_COBJECT_TYPES
  if (!(PyCObject_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyCObject_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  }  
  *ptr = PyCObject_AsVoidPtr(obj);
  c = (char *) PyCObject_GetDesc(obj);
  if (newref) Py_DECREF(obj);
  goto cobject;
#else
  if (!(PyString_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyString_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  } 
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') {
    *ptr = (void *) 0;
    if (strcmp(c,"NULL") == 0) {
      if (newref) { Py_DECREF(obj); }
      return 0;
    } else {
      if (newref) { Py_DECREF(obj); }
      goto type_error;
    }
  }
  c++;
  c = SWIG_UnpackData(c,ptr,sizeof(void *));
  if (newref) { Py_DECREF(obj); }
#endif

#ifdef SWIG_COBJECT_TYPES
cobject:
#endif

  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
    *ptr = SWIG_TypeCast(tc,(void*) *ptr);
  }

  if ((pyobj) && (flags & SWIG_POINTER_DISOWN)) {
    PyObject *zero = PyInt_FromLong(0);
    PyObject_SetAttrString(pyobj,(char*)"thisown",zero);
    Py_DECREF(zero);
  }
  return 0;

type_error:
  if (flags & SWIG_POINTER_EXCEPTION) {
    if (ty && c) {
      char *temp = (char *) malloc(64+strlen(ty->name)+strlen(c));
      sprintf(temp,"Type error. Got %s, expected %s", c, ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME(void *)
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {
  void *result;
  SWIG_Python_ConvertPtr(obj, &result, ty, flags | SWIG_POINTER_EXCEPTION);
  return result;
}

/* Convert a packed value value */
SWIGRUNTIME(int)
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, int sz, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c = 0;

  if ((!obj) || (!PyString_Check(obj))) goto type_error;
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') goto type_error;
  c++;
  c = SWIG_UnpackData(c,ptr,sz);
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
  }
  return 0;

type_error:

  if (flags) {
    if (ty && c) {
      char *temp = (char *) malloc(64+strlen(ty->name)+strlen(c));
      sprintf(temp,"Type error. Got %s, expected %s", c, ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Create a new pointer object */
SWIGRUNTIME(PyObject *)
SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int own) {
  PyObject *robj;
  if (!ptr) {
    Py_INCREF(Py_None);
    return Py_None;
  }
#ifdef SWIG_COBJECT_TYPES
  robj = PyCObject_FromVoidPtrAndDesc((void *) ptr, (char *) type->name, NULL);
#else
  {
    char result[1024];
    char *r = result;
    *(r++) = '_';
    r = SWIG_PackData(r,&ptr,sizeof(void *));
    strcpy(r,type->name);
    robj = PyString_FromString(result);
  }
#endif
  if (!robj || (robj == Py_None)) return robj;
  if (type->clientdata) {
    PyObject *inst;
    PyObject *args = Py_BuildValue((char*)"(O)", robj);
    Py_DECREF(robj);
    inst = PyObject_CallObject((PyObject *) type->clientdata, args);
    Py_DECREF(args);
    if (inst) {
      if (own) {
        PyObject *n = PyInt_FromLong(1);
        PyObject_SetAttrString(inst,(char*)"thisown",n);
        Py_DECREF(n);
      }
      robj = inst;
    }
  }
  return robj;
}

SWIGRUNTIME(PyObject *)
SWIG_Python_NewPackedObj(void *ptr, int sz, swig_type_info *type) {
  char result[1024];
  char *r = result;
  if ((2*sz + 1 + strlen(type->name)) > 1000) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  strcpy(r,type->name);
  return PyString_FromString(result);
}

/* Install Constants */
SWIGRUNTIME(void)
SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
  int i;
  PyObject *obj;
  for (i = 0; constants[i].type; i++) {
    switch(constants[i].type) {
    case SWIG_PY_INT:
      obj = PyInt_FromLong(constants[i].lvalue);
      break;
    case SWIG_PY_FLOAT:
      obj = PyFloat_FromDouble(constants[i].dvalue);
      break;
    case SWIG_PY_STRING:
      obj = PyString_FromString((char *) constants[i].pvalue);
      break;
    case SWIG_PY_POINTER:
      obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
      break;
    case SWIG_PY_BINARY:
      obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
      break;
    default:
      obj = 0;
      break;
    }
    if (obj) {
      PyDict_SetItemString(d,constants[i].name,obj);
      Py_DECREF(obj);
    }
  }
}

#endif

/* Contract support */

#define SWIG_contract_assert(expr, msg) if (!(expr)) { PyErr_SetString(PyExc_RuntimeError, (char *) msg ); goto fail; } else

#ifdef __cplusplus
}
#endif


/* -------- TYPES TABLE (BEGIN) -------- */

#define  SWIGTYPE_p_csInitializer swig_types[0] 
#define  SWIGTYPE_p_celInitializer swig_types[1] 
#define  SWIGTYPE_p_iPcMovable swig_types[2] 
#define  SWIGTYPE_p_iPcMovableConstraint swig_types[3] 
#define  SWIGTYPE_p_iPcBillboard swig_types[4] 
#define  SWIGTYPE_p_iBillboard swig_types[5] 
#define  SWIGTYPE_p_iPcRegion swig_types[6] 
#define  SWIGTYPE_p_iCelPlLayer swig_types[7] 
#define  SWIGTYPE_p_iCelBlLayer swig_types[8] 
#define  SWIGTYPE_p_csOrthoTransform swig_types[9] 
#define  SWIGTYPE_p_iCollider swig_types[10] 
#define  SWIGTYPE_p_iPcInventory swig_types[11] 
#define  SWIGTYPE_p_iPcGravity swig_types[12] 
#define  SWIGTYPE_p_iBase swig_types[13] 
#define  SWIGTYPE_p_iObjectRegistry swig_types[14] 
#define  SWIGTYPE_p_iPcTimer swig_types[15] 
#define  SWIGTYPE_p_bool swig_types[16] 
#define  SWIGTYPE_p_iCelParameterBlock swig_types[17] 
#define  SWIGTYPE_p_iPcLinearMovement swig_types[18] 
#define  SWIGTYPE_p_iPcCollisionDetection swig_types[19] 
#define  SWIGTYPE_p_csVector3 swig_types[20] 
#define  SWIGTYPE_p_iView swig_types[21] 
#define  SWIGTYPE_p_iPcSolid swig_types[22] 
#define  SWIGTYPE_p_iCelEntity swig_types[23] 
#define  SWIGTYPE_p_iPcMeshSelect swig_types[24] 
#define  SWIGTYPE_p_iCelEntityList swig_types[25] 
#define  SWIGTYPE_p_iPcCharacteristics swig_types[26] 
#define  SWIGTYPE_p_csFlags swig_types[27] 
#define  SWIGTYPE_p_csArrayTcsPluginRequest_t swig_types[28] 
#define  SWIGTYPE_p_iPcMesh swig_types[29] 
#define  SWIGTYPE_p_iCelPropertyClassList swig_types[30] 
#define  SWIGTYPE_p_csPlane3 swig_types[31] 
#define  SWIGTYPE_p_csStringID swig_types[32] 
#define  SWIGTYPE_p_iCelBehaviour swig_types[33] 
#define  SWIGTYPE_p_iDynamicSystem swig_types[34] 
#define  SWIGTYPE_p_iPcDynamicSystem swig_types[35] 
#define  SWIGTYPE_p_iSector swig_types[36] 
#define  SWIGTYPE_p_iPcCamera swig_types[37] 
#define  SWIGTYPE_p_p_iSector swig_types[38] 
#define  SWIGTYPE_p_iCamera swig_types[39] 
#define  SWIGTYPE_p_celData swig_types[40] 
#define  SWIGTYPE_p_basetype swig_types[41] 
#define  SWIGTYPE_p_iCelPropertyClass swig_types[42] 
#define  SWIGTYPE_p_iPath swig_types[43] 
#define  SWIGTYPE_p_iRigidBody swig_types[44] 
#define  SWIGTYPE_p_celDataType swig_types[45] 
#define  SWIGTYPE_p_float swig_types[46] 
#define  SWIGTYPE_p_int swig_types[47] 
#define  SWIGTYPE_p_iPcDynamicBody swig_types[48] 
#define  SWIGTYPE_p_iPcCommandInput swig_types[49] 
#define  SWIGTYPE_p_iBillboardManager swig_types[50] 
#define  SWIGTYPE_p_iPcZoneManager swig_types[51] 
#define  SWIGTYPE_p_iMeshWrapper swig_types[52] 
static swig_type_info *swig_types[54];

/* -------- TYPES TABLE (END) -------- */


/*-----------------------------------------------
              @(target):= _blcelc.so
  ------------------------------------------------*/
#define SWIG_init SWIG_init_blcelc

#define SWIG_name    "_blcelc"

#include <crystalspace.h>
#include "celtool/initapp.h"
#include "physicallayer/pl.h"
#include "physicallayer/propfact.h"
#include "physicallayer/propclas.h"
#include "physicallayer/entity.h"
#include "physicallayer/persist.h"
#include "behaviourlayer/bl.h"
#include "behaviourlayer/behave.h"
#include "propclass/region.h"
#include "propclass/camera.h"
#include "propclass/mesh.h"
#include "propclass/meshsel.h"
#include "propclass/timer.h"
#include "propclass/solid.h"
#include "propclass/gravity.h"
#include "propclass/move.h"
#include "propclass/inv.h"
#include "propclass/chars.h"
#include "propclass/linmove.h"
#include "propclass/input.h"
#include "propclass/dynmove.h"
#include "propclass/billboard.h"
#include "plugins/behaviourlayer/python/blpython.h"
#include "tools/billboard.h"



  struct _csPyEventHandler : public iEventHandler
  {
    SCF_DECLARE_IBASE;
    _csPyEventHandler (PyObject * obj) : _pySelf(obj)
    {
      SCF_CONSTRUCT_IBASE(0);
      IncRef();
    }
    virtual ~_csPyEventHandler ()
    {
      SCF_DESTRUCT_IBASE();
      DecRef();
    }
    virtual bool HandleEvent (iEvent & event)
    {
      PyObject * event_obj = SWIG_NewPointerObj(
        (void *) &event, SWIG_TypeQuery("iEvent *"), 0
      );
      PyObject * result = PyObject_CallMethod(_pySelf, "HandleEvent", "(O)",
        event_obj
      );
      Py_DECREF(event_obj);
      if (!result)
      {
        return false;
      }
      bool res = PyInt_AsLong(result);
      Py_DECREF(result);
      return res;
    }
  private:
    PyObject * _pySelf;
  };



iCelPlLayer *csQueryRegistry_iCelPlLayer (iObjectRegistry *object_reg)
{
  csRef<iCelPlLayer> pl = CS_QUERY_REGISTRY (object_reg, iCelPlLayer);
  return pl;
}

iCelBehaviour *iCelEntity_CreateBehaviour(iCelEntity *self,iCelBlLayer *bl,char const *name){
      csRef<iCelBehaviour> bh(bl->CreateBehaviour(self, name));
      if (!bh.IsValid()) return 0;
      return bh;
    }

bool celRegisterPCFactory (iObjectRegistry* object_reg, const char* pcfactname)
{
  csRef<iCelPlLayer> pl = CS_QUERY_REGISTRY (object_reg,
  	iCelPlLayer);
  bool rc = pl->LoadPropertyClassFactory (pcfactname);
  return rc;
}


iCelEntity *celCreateEntity(iCelPlLayer *pl, const char *name)
{
  csRef<iCelEntity> en = pl->CreateEntity();
  if (!en.IsValid()) return 0;
  en->SetName (name);
  en->IncRef ();
  return en;
}


iCelEntity *scfQueryInterface_iCelEntity (iBase *base)
{
  csRef<iCelEntity> ent = SCF_QUERY_INTERFACE (base, iCelEntity);
  return ent;
}


iCelEntityList *celFindNearbyEntities (iObjectRegistry *object_reg,
	iSector *sector, csVector3 pos, float radius)
{
  csRef<iCelPlLayer> pl = CS_QUERY_REGISTRY (object_reg, iCelPlLayer);
  if (!pl.IsValid()) return 0;
  csRef<iCelEntityList> entlist = pl->FindNearbyEntities (sector, pos, radius);
  entlist->IncRef();
  return entlist;
}


iCelBlLayer *csQueryRegistry_iCelBlLayer (iObjectRegistry *object_reg)
{
  csRef<iCelBlLayer> bl = CS_QUERY_REGISTRY (object_reg, iCelBlLayer);
  return bl;
}

PyObject *iCelBehaviour_GetPythonObject(iCelBehaviour *self){
      PyObject* obj = (PyObject*)(self->GetInternalObject());
      Py_INCREF (obj);
      return obj;
    }
bool iCelPropertyClass_SetPropertyLong(iCelPropertyClass *self,csStringID id,long l){ return self->SetProperty (id, l); }
bool iCelPropertyClass_SetPropertyFloat(iCelPropertyClass *self,csStringID id,float f){ return self->SetProperty (id, f); }
bool iCelPropertyClass_SetPropertyBool(iCelPropertyClass *self,csStringID id,bool b){ return self->SetProperty (id, b); }
bool iCelPropertyClass_SetPropertyString(iCelPropertyClass *self,csStringID id,char const *s){ return self->SetProperty (id, s); }
bool iCelPropertyClass_SetPropertyVector3(iCelPropertyClass *self,csStringID id,csVector3 const &v){ return self->SetProperty (id, v); }

iPcDynamicSystem *celCreateDynamicSystem(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcdynsys" );
  if (!pc.IsValid()) return 0;
  csRef<iPcDynamicSystem> pclm =    csPtr<iPcDynamicSystem> ((iPcDynamicSystem *)(pc)->QueryInterface (		   scfInterface<iPcDynamicSystem>::GetID (), scfInterface<iPcDynamicSystem>::GetVersion()));
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcDynamicSystem * celGetDynamicSystem (iCelEntity *entity)
{
  csRef<iPcDynamicSystem> pc = CEL_QUERY_PROPCLASS (
    entity->GetPropertyClassList (), iPcDynamicSystem);
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcDynamicSystem *scfQuery_iPcDynamicSystem (iCelPropertyClass *pc)
{
  csRef<iPcDynamicSystem> iface =    csPtr<iPcDynamicSystem> ((iPcDynamicSystem *)(pc)->QueryInterface (		   scfInterface<iPcDynamicSystem>::GetID (), scfInterface<iPcDynamicSystem>::GetVersion()));
  if (iface) iface->IncRef ();
  return iface;
}


iPcDynamicSystem *scfQueryPC_iPcDynamicSystem (iCelPropertyClassList *pclist)
{
  csRef<iPcDynamicSystem> iface =    csPtr<iPcDynamicSystem> ((iPcDynamicSystem *)(pclist)->QueryInterface (		   scfInterface<iPcDynamicSystem>::GetID (), scfInterface<iPcDynamicSystem>::GetVersion()));
  if (iface) iface->IncRef ();
  return iface;
}


iPcDynamicBody *celCreateDynamicBody(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcdynbody" );
  if (!pc.IsValid()) return 0;
  csRef<iPcDynamicBody> pclm =    csPtr<iPcDynamicBody> ((iPcDynamicBody *)(pc)->QueryInterface (		   scfInterface<iPcDynamicBody>::GetID (), scfInterface<iPcDynamicBody>::GetVersion()));
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcDynamicBody * celGetDynamicBody (iCelEntity *entity)
{
  csRef<iPcDynamicBody> pc = CEL_QUERY_PROPCLASS (
    entity->GetPropertyClassList (), iPcDynamicBody);
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcDynamicBody *scfQuery_iPcDynamicBody (iCelPropertyClass *pc)
{
  csRef<iPcDynamicBody> iface =    csPtr<iPcDynamicBody> ((iPcDynamicBody *)(pc)->QueryInterface (		   scfInterface<iPcDynamicBody>::GetID (), scfInterface<iPcDynamicBody>::GetVersion()));
  if (iface) iface->IncRef ();
  return iface;
}


iPcDynamicBody *scfQueryPC_iPcDynamicBody (iCelPropertyClassList *pclist)
{
  csRef<iPcDynamicBody> iface =    csPtr<iPcDynamicBody> ((iPcDynamicBody *)(pclist)->QueryInterface (		   scfInterface<iPcDynamicBody>::GetID (), scfInterface<iPcDynamicBody>::GetVersion()));
  if (iface) iface->IncRef ();
  return iface;
}


static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;

    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }
        o3 = PyTuple_New(1);            
        PyTuple_SetItem(o3, 0, o);      

        o2 = target;
        target = PySequence_Concat(o2, o3); 
        Py_DECREF(o2);                      
        Py_DECREF(o3);
    }
    return target;
}


iPcBillboard *celCreateBillboard(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcbillboard" );
  if (!pc.IsValid()) return 0;
  csRef<iPcBillboard> pclm =    csPtr<iPcBillboard> ((iPcBillboard *)(pc)->QueryInterface (		   scfInterface<iPcBillboard>::GetID (), scfInterface<iPcBillboard>::GetVersion()));
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcBillboard * celGetBillboard (iCelEntity *entity)
{
  csRef<iPcBillboard> pc = CEL_QUERY_PROPCLASS (
    entity->GetPropertyClassList (), iPcBillboard);
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcBillboard *scfQuery_iPcBillboard (iCelPropertyClass *pc)
{
  csRef<iPcBillboard> iface =    csPtr<iPcBillboard> ((iPcBillboard *)(pc)->QueryInterface (		   scfInterface<iPcBillboard>::GetID (), scfInterface<iPcBillboard>::GetVersion()));
  if (iface) iface->IncRef ();
  return iface;
}


iPcBillboard *scfQueryPC_iPcBillboard (iCelPropertyClassList *pclist)
{
  csRef<iPcBillboard> iface =    csPtr<iPcBillboard> ((iPcBillboard *)(pclist)->QueryInterface (		   scfInterface<iPcBillboard>::GetID (), scfInterface<iPcBillboard>::GetVersion()));
  if (iface) iface->IncRef ();
  return iface;
}

bool iPcRegion_LoadWorld(iPcRegion *self,char const *vfsdir,char const *name){
      self->SetWorldFile (vfsdir, name);
      return self->Load ();
    }

iPcRegion *celCreateRegion (iCelPlLayer *pl, iCelEntity *entity,
	const char *name)
{
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity, "pcregion");
  if (!pc.IsValid()) return 0;
  csRef<iPcRegion> pcregion = SCF_QUERY_INTERFACE(pc, iPcRegion);
  if (!pcregion.IsValid()) return 0;
  pcregion->SetRegionName (name);
  return pcregion;
}


iPcRegion * Region (iCelEntity *entity)
{
  csRef<iPcRegion> pc = CEL_QUERY_PROPCLASS (
    entity->GetPropertyClassList (), iPcRegion);
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcRegion *scfQuery_iPcRegion (iCelPropertyClass *pc)
{
  csRef<iPcRegion> iface =    csPtr<iPcRegion> ((iPcRegion *)(pc)->QueryInterface (		   scfInterface<iPcRegion>::GetID (), scfInterface<iPcRegion>::GetVersion()));
  if (iface) iface->IncRef ();
  return iface;
}


iPcRegion *scfQueryPC_iPcRegion (iCelPropertyClassList *pclist)
{
  csRef<iPcRegion> iface =    csPtr<iPcRegion> ((iPcRegion *)(pclist)->QueryInterface (		   scfInterface<iPcRegion>::GetID (), scfInterface<iPcRegion>::GetVersion()));
  if (iface) iface->IncRef ();
  return iface;
}


iPcCommandInput *celCreateCommandInput(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pccommandinput" );
  if (!pc.IsValid()) return 0;
  csRef<iPcCommandInput> pclm =    csPtr<iPcCommandInput> ((iPcCommandInput *)(pc)->QueryInterface (		   scfInterface<iPcCommandInput>::GetID (), scfInterface<iPcCommandInput>::GetVersion()));
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcCommandInput * celGetCommandInput (iCelEntity *entity)
{
  csRef<iPcCommandInput> pc = CEL_QUERY_PROPCLASS (
    entity->GetPropertyClassList (), iPcCommandInput);
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcCommandInput *scfQuery_iPcCommandInput (iCelPropertyClass *pc)
{
  csRef<iPcCommandInput> iface =    csPtr<iPcCommandInput> ((iPcCommandInput *)(pc)->QueryInterface (		   scfInterface<iPcCommandInput>::GetID (), scfInterface<iPcCommandInput>::GetVersion()));
  if (iface) iface->IncRef ();
  return iface;
}


iPcLinearMovement *celCreateLinearMovement(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pclinearmovement" );
  if (!pc.IsValid()) return 0;
  csRef<iPcLinearMovement> pclm =    csPtr<iPcLinearMovement> ((iPcLinearMovement *)(pc)->QueryInterface (		   scfInterface<iPcLinearMovement>::GetID (), scfInterface<iPcLinearMovement>::GetVersion()));
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcLinearMovement * celGetLinearMovement (iCelEntity *entity)
{
  csRef<iPcLinearMovement> pc = CEL_QUERY_PROPCLASS (
    entity->GetPropertyClassList (), iPcLinearMovement);
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcLinearMovement *scfQuery_iPcLinearMovement (iCelPropertyClass *pc)
{
  csRef<iPcLinearMovement> iface =    csPtr<iPcLinearMovement> ((iPcLinearMovement *)(pc)->QueryInterface (		   scfInterface<iPcLinearMovement>::GetID (), scfInterface<iPcLinearMovement>::GetVersion()));
  if (iface) iface->IncRef ();
  return iface;
}


iPcCamera *celCreateCamera(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pccamera" );
  if (!pc.IsValid()) return 0;
  csRef<iPcCamera> pclm =    csPtr<iPcCamera> ((iPcCamera *)(pc)->QueryInterface (		   scfInterface<iPcCamera>::GetID (), scfInterface<iPcCamera>::GetVersion()));
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcCamera * celGetCamera (iCelEntity *entity)
{
  csRef<iPcCamera> pc = CEL_QUERY_PROPCLASS (
    entity->GetPropertyClassList (), iPcCamera);
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcCamera *scfQuery_iPcCamera (iCelPropertyClass *pc)
{
  csRef<iPcCamera> iface =    csPtr<iPcCamera> ((iPcCamera *)(pc)->QueryInterface (		   scfInterface<iPcCamera>::GetID (), scfInterface<iPcCamera>::GetVersion()));
  if (iface) iface->IncRef ();
  return iface;
}


iPcMeshSelect *celCreateMeshSelect(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcmeshselect" );
  if (!pc.IsValid()) return 0;
  csRef<iPcMeshSelect> pclm =    csPtr<iPcMeshSelect> ((iPcMeshSelect *)(pc)->QueryInterface (		   scfInterface<iPcMeshSelect>::GetID (), scfInterface<iPcMeshSelect>::GetVersion()));
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcMeshSelect * celGetMeshSelect (iCelEntity *entity)
{
  csRef<iPcMeshSelect> pc = CEL_QUERY_PROPCLASS (
    entity->GetPropertyClassList (), iPcMeshSelect);
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcMeshSelect *scfQuery_iPcMeshSelect (iCelPropertyClass *pc)
{
  csRef<iPcMeshSelect> iface =    csPtr<iPcMeshSelect> ((iPcMeshSelect *)(pc)->QueryInterface (		   scfInterface<iPcMeshSelect>::GetID (), scfInterface<iPcMeshSelect>::GetVersion()));
  if (iface) iface->IncRef ();
  return iface;
}


iPcMesh *celCreateMesh(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcmesh" );
  if (!pc.IsValid()) return 0;
  csRef<iPcMesh> pclm =    csPtr<iPcMesh> ((iPcMesh *)(pc)->QueryInterface (		   scfInterface<iPcMesh>::GetID (), scfInterface<iPcMesh>::GetVersion()));
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcMesh * celGetMesh (iCelEntity *entity)
{
  csRef<iPcMesh> pc = CEL_QUERY_PROPCLASS (
    entity->GetPropertyClassList (), iPcMesh);
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcMesh *scfQuery_iPcMesh (iCelPropertyClass *pc)
{
  csRef<iPcMesh> iface =    csPtr<iPcMesh> ((iPcMesh *)(pc)->QueryInterface (		   scfInterface<iPcMesh>::GetID (), scfInterface<iPcMesh>::GetVersion()));
  if (iface) iface->IncRef ();
  return iface;
}


iPcTimer *celCreateTimer(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pctimer" );
  if (!pc.IsValid()) return 0;
  csRef<iPcTimer> pclm =    csPtr<iPcTimer> ((iPcTimer *)(pc)->QueryInterface (		   scfInterface<iPcTimer>::GetID (), scfInterface<iPcTimer>::GetVersion()));
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcTimer * celGetTimer (iCelEntity *entity)
{
  csRef<iPcTimer> pc = CEL_QUERY_PROPCLASS (
    entity->GetPropertyClassList (), iPcTimer);
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcTimer *scfQuery_iPcTimer (iCelPropertyClass *pc)
{
  csRef<iPcTimer> iface =    csPtr<iPcTimer> ((iPcTimer *)(pc)->QueryInterface (		   scfInterface<iPcTimer>::GetID (), scfInterface<iPcTimer>::GetVersion()));
  if (iface) iface->IncRef ();
  return iface;
}


iPcSolid *celCreateSolid(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcsolid" );
  if (!pc.IsValid()) return 0;
  csRef<iPcSolid> pclm =    csPtr<iPcSolid> ((iPcSolid *)(pc)->QueryInterface (		   scfInterface<iPcSolid>::GetID (), scfInterface<iPcSolid>::GetVersion()));
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcSolid * celGetSolid (iCelEntity *entity)
{
  csRef<iPcSolid> pc = CEL_QUERY_PROPCLASS (
    entity->GetPropertyClassList (), iPcSolid);
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcSolid *scfQuery_iPcSolid (iCelPropertyClass *pc)
{
  csRef<iPcSolid> iface =    csPtr<iPcSolid> ((iPcSolid *)(pc)->QueryInterface (		   scfInterface<iPcSolid>::GetID (), scfInterface<iPcSolid>::GetVersion()));
  if (iface) iface->IncRef ();
  return iface;
}


iPcGravity *celCreateGravity(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcgravity" );
  if (!pc.IsValid()) return 0;
  csRef<iPcGravity> pclm =    csPtr<iPcGravity> ((iPcGravity *)(pc)->QueryInterface (		   scfInterface<iPcGravity>::GetID (), scfInterface<iPcGravity>::GetVersion()));
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcGravity * celGetGravity (iCelEntity *entity)
{
  csRef<iPcGravity> pc = CEL_QUERY_PROPCLASS (
    entity->GetPropertyClassList (), iPcGravity);
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcGravity *scfQuery_iPcGravity (iCelPropertyClass *pc)
{
  csRef<iPcGravity> iface =    csPtr<iPcGravity> ((iPcGravity *)(pc)->QueryInterface (		   scfInterface<iPcGravity>::GetID (), scfInterface<iPcGravity>::GetVersion()));
  if (iface) iface->IncRef ();
  return iface;
}


iPcMovable *celCreateMovable(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcmovable" );
  if (!pc.IsValid()) return 0;
  csRef<iPcMovable> pclm =    csPtr<iPcMovable> ((iPcMovable *)(pc)->QueryInterface (		   scfInterface<iPcMovable>::GetID (), scfInterface<iPcMovable>::GetVersion()));
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcMovable * celGetMovable (iCelEntity *entity)
{
  csRef<iPcMovable> pc = CEL_QUERY_PROPCLASS (
    entity->GetPropertyClassList (), iPcMovable);
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcMovable *scfQuery_iPcMovable (iCelPropertyClass *pc)
{
  csRef<iPcMovable> iface =    csPtr<iPcMovable> ((iPcMovable *)(pc)->QueryInterface (		   scfInterface<iPcMovable>::GetID (), scfInterface<iPcMovable>::GetVersion()));
  if (iface) iface->IncRef ();
  return iface;
}


iPcInventory *celCreateInventory(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pcinventory" );
  if (!pc.IsValid()) return 0;
  csRef<iPcInventory> pclm =    csPtr<iPcInventory> ((iPcInventory *)(pc)->QueryInterface (		   scfInterface<iPcInventory>::GetID (), scfInterface<iPcInventory>::GetVersion()));
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcInventory * celGetInventory (iCelEntity *entity)
{
  csRef<iPcInventory> pc = CEL_QUERY_PROPCLASS (
    entity->GetPropertyClassList (), iPcInventory);
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcInventory *scfQuery_iPcInventory (iCelPropertyClass *pc)
{
  csRef<iPcInventory> iface =    csPtr<iPcInventory> ((iPcInventory *)(pc)->QueryInterface (		   scfInterface<iPcInventory>::GetID (), scfInterface<iPcInventory>::GetVersion()));
  if (iface) iface->IncRef ();
  return iface;
}


iPcCharacteristics *celCreateCharacteristics(iCelPlLayer *pl, iCelEntity *entity) {
  csRef<iCelPropertyClass> pc = pl->CreatePropertyClass(entity,"pccharacteristics" );
  if (!pc.IsValid()) return 0;
  csRef<iPcCharacteristics> pclm =    csPtr<iPcCharacteristics> ((iPcCharacteristics *)(pc)->QueryInterface (		   scfInterface<iPcCharacteristics>::GetID (), scfInterface<iPcCharacteristics>::GetVersion()));
  if (!pclm.IsValid()) return 0;
  return pclm;
}


iPcCharacteristics * celGetCharacteristics (iCelEntity *entity)
{
  csRef<iPcCharacteristics> pc = CEL_QUERY_PROPCLASS (
    entity->GetPropertyClassList (), iPcCharacteristics);
  if (!pc.IsValid()) return 0;
  return pc;
}


iPcCharacteristics *scfQuery_iPcCharacteristics (iCelPropertyClass *pc)
{
  csRef<iPcCharacteristics> iface =    csPtr<iPcCharacteristics> ((iPcCharacteristics *)(pc)->QueryInterface (		   scfInterface<iPcCharacteristics>::GetID (), scfInterface<iPcCharacteristics>::GetVersion()));
  if (iface) iface->IncRef ();
  return iface;
}

#ifdef __cplusplus
extern "C" {
#endif
static PyObject *_wrap_celInitializer_SetupCelPluginDirs(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celInitializer_SetupCelPluginDirs",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    celInitializer::SetupCelPluginDirs(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celInitializer__RequestPlugins(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    csArray<csPluginRequest > *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celInitializer__RequestPlugins",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csArrayTcsPluginRequest_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)celInitializer::RequestPlugins(arg1,(csArray<csPluginRequest > const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_celInitializer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    celInitializer *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_celInitializer")) goto fail;
    result = (celInitializer *)new celInitializer();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_celInitializer, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_celInitializer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    celInitializer *arg1 = (celInitializer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_celInitializer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_celInitializer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * celInitializer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_celInitializer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelPlLayer_FindEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    char *arg2 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelPlLayer_FindEntity",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)(arg1)->FindEntity((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_RemoveEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_RemoveEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveEntity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_LoadPropertyClassFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelPlLayer_LoadPropertyClassFactory",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->LoadPropertyClassFactory((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_CreatePropertyClass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    char *arg3 ;
    iCelPropertyClass *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iCelPlLayer_CreatePropertyClass",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelPropertyClass *)(arg1)->CreatePropertyClass(arg2,(char const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClass, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_FetchString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    csStringID arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_FetchString",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (char *)(arg1)->FetchString(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_GetBehaviourLayerCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPlLayer_GetBehaviourLayerCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iCelPlLayer const *)arg1)->GetBehaviourLayerCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_GetBehaviourLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    int arg2 ;
    iCelBlLayer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iCelPlLayer_GetBehaviourLayer",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBlLayer *)((iCelPlLayer const *)arg1)->GetBehaviourLayer(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBlLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPlLayer_FindBehaviourLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    char *arg2 ;
    iCelBlLayer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelPlLayer_FindBehaviourLayer",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBlLayer *)((iCelPlLayer const *)arg1)->FindBehaviourLayer((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBlLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelPlLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelPlLayer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelPlLayer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelPlLayer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csQueryRegistry_iCelPlLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    iCelPlLayer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csQueryRegistry_iCelPlLayer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelPlLayer *)csQueryRegistry_iCelPlLayer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPlLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntity_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelEntity const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_SetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelEntity_SetName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_SetBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iCelBehaviour *arg2 = (iCelBehaviour *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelEntity_SetBehaviour",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelBehaviour,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetBehaviour(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_GetBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iCelBehaviour *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntity_GetBehaviour",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBehaviour *)(arg1)->GetBehaviour();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBehaviour, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_GetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    uint result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntity_GetID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (uint)((iCelEntity const *)arg1)->GetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_GetPropertyClassList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iCelPropertyClassList *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntity_GetPropertyClassList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelPropertyClassList *)(arg1)->GetPropertyClassList();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClassList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntity_CreateBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iCelBlLayer *arg2 = (iCelBlLayer *) 0 ;
    char *arg3 ;
    iCelBehaviour *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iCelEntity_CreateBehaviour",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelBlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBehaviour *)iCelEntity_CreateBehaviour(arg1,arg2,(char const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBehaviour, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelEntity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelEntity_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelEntity, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celRegisterPCFactory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:celRegisterPCFactory",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)celRegisterPCFactory(arg1,(char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celCreateEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    char *arg2 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:celCreateEntity",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)celCreateEntity(arg1,(char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQueryInterface_iCelEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBase *arg1 = (iBase *) 0 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQueryInterface_iCelEntity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)scfQueryInterface_iCelEntity(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_GetCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntityList_GetCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iCelEntityList const *)arg1)->GetCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_Get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    int arg2 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iCelEntityList_Get",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)((iCelEntityList const *)arg1)->Get(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_Add(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelEntityList_Add",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Add(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_Remove__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelEntityList_Remove",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_Remove__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iCelEntityList_Remove",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Remove(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_Remove(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelEntityList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iCelEntity, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iCelEntityList_Remove__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelEntityList, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iCelEntityList_Remove__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iCelEntityList_Remove'");
    return NULL;
}


static PyObject *_wrap_iCelEntityList_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntityList_RemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_Find(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelEntityList_Find",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iCelEntityList const *)arg1)->Find(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelEntityList_FindByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    char *arg2 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelEntityList_FindByName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)((iCelEntityList const *)arg1)->FindByName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelEntityList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntityList *arg1 = (iCelEntityList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelEntityList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntityList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelEntityList_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelEntityList, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celFindNearbyEntities(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 arg3 ;
    float arg4 ;
    iCelEntityList *result;
    csVector3 *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOf:celFindNearbyEntities",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    result = (iCelEntityList *)celFindNearbyEntities(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntityList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelBlLayer_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBlLayer *arg1 = (iCelBlLayer *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelBlLayer_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelBlLayer const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelBlLayer_CreateBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBlLayer *arg1 = (iCelBlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    char *arg3 ;
    iCelBehaviour *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iCelBlLayer_CreateBehaviour",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBehaviour *)(arg1)->CreateBehaviour(arg2,(char const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBehaviour, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelBlLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBlLayer *arg1 = (iCelBlLayer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelBlLayer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelBlLayer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelBlLayer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csQueryRegistry_iCelBlLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 = (iObjectRegistry *) 0 ;
    iCelBlLayer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csQueryRegistry_iCelBlLayer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBlLayer *)csQueryRegistry_iCelBlLayer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBlLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelParameterBlock_GetParameterCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelParameterBlock *arg1 = (iCelParameterBlock *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelParameterBlock_GetParameterCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iCelParameterBlock const *)arg1)->GetParameterCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelParameterBlock_GetParameter__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelParameterBlock *arg1 = (iCelParameterBlock *) 0 ;
    int arg2 ;
    csStringID *arg3 = 0 ;
    celDataType *arg4 = 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOO:iCelParameterBlock_GetParameter",&obj0,&arg2,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csStringID,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_celDataType,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (char *)((iCelParameterBlock const *)arg1)->GetParameter(arg2,*arg3,*arg4);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelParameterBlock_GetParameter__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelParameterBlock *arg1 = (iCelParameterBlock *) 0 ;
    csStringID arg2 ;
    celData *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelParameterBlock_GetParameter",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (celData *)((iCelParameterBlock const *)arg1)->GetParameter(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_celData, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelParameterBlock_GetParameter(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelParameterBlock, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_iCelParameterBlock_GetParameter__SWIG_1(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iCelParameterBlock, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csStringID, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_celDataType, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_iCelParameterBlock_GetParameter__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iCelParameterBlock_GetParameter'");
    return NULL;
}


static PyObject *_wrap_delete_iCelParameterBlock(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelParameterBlock *arg1 = (iCelParameterBlock *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelParameterBlock",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelParameterBlock_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelParameterBlock, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelBehaviour_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBehaviour *arg1 = (iCelBehaviour *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelBehaviour_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelBehaviour const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelBehaviour_GetBehaviourLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBehaviour *arg1 = (iCelBehaviour *) 0 ;
    iCelBlLayer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelBehaviour_GetBehaviourLayer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelBlLayer *)((iCelBehaviour const *)arg1)->GetBehaviourLayer();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBlLayer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelBehaviour_SendMessage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBehaviour *arg1 = (iCelBehaviour *) 0 ;
    char *arg2 ;
    iCelPropertyClass *arg3 = (iCelPropertyClass *) 0 ;
    celData *arg4 = 0 ;
    iCelParameterBlock *arg5 = (iCelParameterBlock *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOOO:iCelBehaviour_SendMessage",&obj0,&arg2,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_celData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SendMessage((char const *)arg2,arg3,*arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelBehaviour_GetPythonObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBehaviour *arg1 = (iCelBehaviour *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelBehaviour_GetPythonObject",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PyObject *)iCelBehaviour_GetPythonObject(arg1);
    
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBehaviour *arg1 = (iCelBehaviour *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelBehaviour",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelBehaviour_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelBehaviour, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelPropertyClass_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClass_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iCelPropertyClass const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClass_GetEntity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)(arg1)->GetEntity();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_SetEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetEntity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyOrActionType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyOrActionType",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (int)(arg1)->GetPropertyOrActionType(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_IsPropertyReadOnly(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_IsPropertyReadOnly",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->IsPropertyReadOnly(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyLong(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    long result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyLong",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (long)(arg1)->GetPropertyLong(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyFloat",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (float)(arg1)->GetPropertyFloat(arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyBool(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyBool",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->GetPropertyBool(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyString",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (char *)(arg1)->GetPropertyString(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    csVector3 *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelPropertyClass_GetPropertyVector",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->GetPropertyVector(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyAndActionCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClass_GetPropertyAndActionCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iCelPropertyClass const *)arg1)->GetPropertyAndActionCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyOrActionID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    int arg2 ;
    csStringID result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iCelPropertyClass_GetPropertyOrActionID",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (csStringID)(arg1)->GetPropertyOrActionID(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyOrActionDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyOrActionDescription",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (char *)(arg1)->GetPropertyOrActionDescription(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_PerformAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    iCelParameterBlock *arg3 = (iCelParameterBlock *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelPropertyClass_PerformAction",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iCelParameterBlock,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->PerformAction(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyLong(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    long arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOl:iCelPropertyClass_SetPropertyLong",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)iCelPropertyClass_SetPropertyLong(arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    float arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf:iCelPropertyClass_SetPropertyFloat",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)iCelPropertyClass_SetPropertyFloat(arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyBool(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    bool arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelPropertyClass_SetPropertyBool",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)iCelPropertyClass_SetPropertyBool(arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iCelPropertyClass_SetPropertyString",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)iCelPropertyClass_SetPropertyString(arg1,arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyVector3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    csStringID arg2 ;
    csVector3 *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelPropertyClass_SetPropertyVector3",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csStringID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)iCelPropertyClass_SetPropertyVector3(arg1,arg2,(csVector3 const &)*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelPropertyClass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelPropertyClass",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelPropertyClass_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelPropertyClass, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelPropertyClassList_GetCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClassList_GetCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_Get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    int arg2 ;
    iCelPropertyClass *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iCelPropertyClassList_Get",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelPropertyClass *)(arg1)->Get(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClass, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_Find(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    iCelPropertyClass *arg2 = (iCelPropertyClass *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClassList_Find",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Find(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_FindByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    char *arg2 ;
    iCelPropertyClass *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelPropertyClassList_FindByName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelPropertyClass *)(arg1)->FindByName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClass, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iCelPropertyClassList_FindByInterface(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    scfInterfaceID arg2 ;
    int arg3 ;
    iBase *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iCelPropertyClassList_FindByInterface",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (scfInterfaceID) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (iBase *)(arg1)->FindByInterface(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iCelPropertyClassList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelPropertyClassList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iCelPropertyClassList_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelPropertyClassList, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iPcDynamicSystem_GetDynamicSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicSystem *arg1 = (iPcDynamicSystem *) 0 ;
    iDynamicSystem *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcDynamicSystem_GetDynamicSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iDynamicSystem *)(arg1)->GetDynamicSystem();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iDynamicSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicSystem_AddForceDuration(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicSystem *arg1 = (iPcDynamicSystem *) 0 ;
    iPcDynamicBody *arg2 = (iPcDynamicBody *) 0 ;
    csVector3 *arg3 = 0 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOf:iPcDynamicSystem_AddForceDuration",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddForceDuration(arg2,(csVector3 const &)*arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicSystem_AddForceFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicSystem *arg1 = (iPcDynamicSystem *) 0 ;
    iPcDynamicBody *arg2 = (iPcDynamicBody *) 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcDynamicSystem_AddForceFrame",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddForceFrame(arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicSystem_ClearForces(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicSystem *arg1 = (iPcDynamicSystem *) 0 ;
    iPcDynamicBody *arg2 = (iPcDynamicBody *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcDynamicSystem_ClearForces",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearForces(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicSystem_ClearAllForces(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicSystem *arg1 = (iPcDynamicSystem *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcDynamicSystem_ClearAllForces",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearAllForces();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcDynamicSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicSystem *arg1 = (iPcDynamicSystem *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcDynamicSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcDynamicSystem_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcDynamicSystem, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateDynamicSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcDynamicSystem *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateDynamicSystem",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcDynamicSystem *)celCreateDynamicSystem(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcDynamicSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetDynamicSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcDynamicSystem *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetDynamicSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcDynamicSystem *)celGetDynamicSystem(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcDynamicSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcDynamicSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcDynamicSystem *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcDynamicSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcDynamicSystem *)scfQuery_iPcDynamicSystem(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcDynamicSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQueryPC_iPcDynamicSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    iPcDynamicSystem *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQueryPC_iPcDynamicSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcDynamicSystem *)scfQueryPC_iPcDynamicSystem(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcDynamicSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicBody_SetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicBody *arg1 = (iPcDynamicBody *) 0 ;
    iPcMesh *arg2 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcDynamicBody_SetMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMesh(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicBody_GetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicBody *arg1 = (iPcDynamicBody *) 0 ;
    iPcMesh *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcDynamicBody_GetMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMesh *)(arg1)->GetMesh();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicBody_SetDynamicSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicBody *arg1 = (iPcDynamicBody *) 0 ;
    iPcDynamicSystem *arg2 = (iPcDynamicSystem *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcDynamicBody_SetDynamicSystem",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcDynamicSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDynamicSystem(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicBody_GetDynamicSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicBody *arg1 = (iPcDynamicBody *) 0 ;
    iPcDynamicSystem *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcDynamicBody_GetDynamicSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcDynamicSystem *)(arg1)->GetDynamicSystem();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcDynamicSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicBody_GetBody(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicBody *arg1 = (iPcDynamicBody *) 0 ;
    iRigidBody *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcDynamicBody_GetBody",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iRigidBody *)(arg1)->GetBody();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iRigidBody, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicBody_SetParameters(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicBody *arg1 = (iPcDynamicBody *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    float arg5 ;
    float arg6 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offfff:iPcDynamicBody_SetParameters",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetParameters(arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicBody_MakeStatic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicBody *arg1 = (iPcDynamicBody *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcDynamicBody_MakeStatic",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->MakeStatic(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicBody_IsStatic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicBody *arg1 = (iPcDynamicBody *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcDynamicBody_IsStatic",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcDynamicBody const *)arg1)->IsStatic();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicBody_AttachColliderSphere(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicBody *arg1 = (iPcDynamicBody *) 0 ;
    float arg2 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OfO:iPcDynamicBody_AttachColliderSphere",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AttachColliderSphere(arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicBody_AttachColliderCylinder(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicBody *arg1 = (iPcDynamicBody *) 0 ;
    float arg2 ;
    float arg3 ;
    csOrthoTransform *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OffO:iPcDynamicBody_AttachColliderCylinder",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csOrthoTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AttachColliderCylinder(arg2,arg3,(csOrthoTransform const &)*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicBody_AttachColliderBox(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicBody *arg1 = (iPcDynamicBody *) 0 ;
    csVector3 *arg2 = 0 ;
    csOrthoTransform *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcDynamicBody_AttachColliderBox",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csOrthoTransform,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AttachColliderBox((csVector3 const &)*arg2,(csOrthoTransform const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicBody_AttachColliderPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicBody *arg1 = (iPcDynamicBody *) 0 ;
    csPlane3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcDynamicBody_AttachColliderPlane",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csPlane3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AttachColliderPlane((csPlane3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicBody_AttachColliderMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicBody *arg1 = (iPcDynamicBody *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcDynamicBody_AttachColliderMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AttachColliderMesh();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicBody_AddForceOnce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicBody *arg1 = (iPcDynamicBody *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcDynamicBody_AddForceOnce",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddForceOnce((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicBody_AddForceDuration(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicBody *arg1 = (iPcDynamicBody *) 0 ;
    csVector3 *arg2 = 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf:iPcDynamicBody_AddForceDuration",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddForceDuration((csVector3 const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicBody_AddForceFrame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicBody *arg1 = (iPcDynamicBody *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcDynamicBody_AddForceFrame",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->AddForceFrame((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcDynamicBody_ClearForces(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicBody *arg1 = (iPcDynamicBody *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcDynamicBody_ClearForces",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearForces();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcDynamicBody(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcDynamicBody *arg1 = (iPcDynamicBody *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcDynamicBody",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcDynamicBody,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcDynamicBody_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcDynamicBody, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateDynamicBody(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcDynamicBody *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateDynamicBody",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcDynamicBody *)celCreateDynamicBody(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcDynamicBody, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetDynamicBody(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcDynamicBody *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetDynamicBody",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcDynamicBody *)celGetDynamicBody(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcDynamicBody, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcDynamicBody(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcDynamicBody *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcDynamicBody",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcDynamicBody *)scfQuery_iPcDynamicBody(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcDynamicBody, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQueryPC_iPcDynamicBody(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    iPcDynamicBody *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQueryPC_iPcDynamicBody",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcDynamicBody *)scfQueryPC_iPcDynamicBody(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcDynamicBody, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iBillboard const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetFlags(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    csFlags *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetFlags",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        csFlags &_result_ref = (arg1)->GetFlags();
        result = (csFlags *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csFlags, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_SetMaterialName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iBillboard_SetMaterialName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetMaterialName((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetMaterialName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetMaterialName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetMaterialName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_SetSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iBillboard_SetSize",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSize(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetImageSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetImageSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetImageSize(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetSize(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_SetPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iBillboard_SetPosition",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPosition(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_GetPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int temp2 ;
    int temp3 ;
    PyObject * obj0 = 0 ;
    
    arg2 = &temp2;
    arg3 = &temp3;
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboard_GetPosition",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    ((iBillboard const *)arg1)->GetPosition(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg2));
        resultobj = t_output_helper(resultobj,o);
    }
    {
        PyObject *o = PyInt_FromLong((long) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboard_Move(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iBillboard_Move",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Move(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboard *arg1 = (iBillboard *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iBillboard",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iBillboard_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iBillboard, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iBillboardManager_CreateBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    char *arg2 ;
    iBillboard *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iBillboardManager_CreateBillboard",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBillboard *)(arg1)->CreateBillboard((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBillboard, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_FindBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    char *arg2 ;
    iBillboard *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iBillboardManager_FindBillboard",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBillboard *)((iBillboardManager const *)arg1)->FindBillboard((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBillboard, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_RemoveBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    iBillboard *arg2 = (iBillboard *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iBillboardManager_RemoveBillboard",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveBillboard(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_GetBillboardCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboardManager_GetBillboardCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iBillboardManager const *)arg1)->GetBillboardCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_GetBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    int arg2 ;
    iBillboard *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iBillboardManager_GetBillboard",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBillboard *)((iBillboardManager const *)arg1)->GetBillboard(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBillboard, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBillboardManager_RemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iBillboardManager_SetFlags(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    uint32 arg2 ;
    uint32 arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iBillboardManager_SetFlags",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (uint32) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (uint32) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetFlags(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iBillboardManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBillboardManager *arg1 = (iBillboardManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iBillboardManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBillboardManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iBillboardManager_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iBillboardManager, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iPcBillboard_SetBillboardName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcBillboard *arg1 = (iPcBillboard *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcBillboard_SetBillboardName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetBillboardName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcBillboard_GetBillboardName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcBillboard *arg1 = (iPcBillboard *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcBillboard_GetBillboardName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetBillboardName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcBillboard_GetBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcBillboard *arg1 = (iPcBillboard *) 0 ;
    iBillboard *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcBillboard_GetBillboard",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iBillboard *)(arg1)->GetBillboard();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBillboard, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcBillboard *arg1 = (iPcBillboard *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcBillboard",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcBillboard,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcBillboard_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcBillboard, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcBillboard *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateBillboard",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcBillboard *)celCreateBillboard(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcBillboard, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcBillboard *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetBillboard",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcBillboard *)celGetBillboard(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcBillboard, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcBillboard *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcBillboard",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcBillboard *)scfQuery_iPcBillboard(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcBillboard, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQueryPC_iPcBillboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    iPcBillboard *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQueryPC_iPcBillboard",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcBillboard *)scfQueryPC_iPcBillboard(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcBillboard, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_SetWorldFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 ;
    char *arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcRegion_SetWorldFile",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetWorldFile((char const *)arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_GetWorldDir(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_GetWorldDir",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iPcRegion const *)arg1)->GetWorldDir();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_GetWorldFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_GetWorldFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iPcRegion const *)arg1)->GetWorldFile();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_CreateEmptySector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcRegion_CreateEmptySector",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CreateEmptySector((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_SetRegionName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcRegion_SetRegionName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetRegionName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_GetRegionName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_GetRegionName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iPcRegion const *)arg1)->GetRegionName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_Load(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_Load",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Load();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_Unload(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_Unload",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Unload();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_FindSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 ;
    iSector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcRegion_FindSector",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSector *)(arg1)->FindSector((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_GetStartSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 = (char *) 0 ;
    iSector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|s:iPcRegion_GetStartSector",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSector *)(arg1)->GetStartSector((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_GetStartPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 = (char *) 0 ;
    csVector3 result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|s:iPcRegion_GetStartPosition",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetStartPosition((char const *)arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3((csVector3 &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_PointCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    iPcCamera *arg2 = (iPcCamera *) 0 ;
    char *arg3 = (char *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|s:iPcRegion_PointCamera",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PointCamera(arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcRegion_LoadWorld(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    char *arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcRegion_LoadWorld",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)iPcRegion_LoadWorld(arg1,(char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 = (iPcRegion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcRegion",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcRegion_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcRegion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    char *arg3 ;
    iPcRegion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:celCreateRegion",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcRegion *)celCreateRegion(arg1,arg2,(char const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcRegion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Region(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcRegion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Region",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcRegion *)Region(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcRegion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcRegion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcRegion",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcRegion *)scfQuery_iPcRegion(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcRegion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQueryPC_iPcRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 = (iCelPropertyClassList *) 0 ;
    iPcRegion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQueryPC_iPcRegion",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcRegion *)scfQueryPC_iPcRegion(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcRegion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_Activate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    bool arg2 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:iPcCommandInput_Activate",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->Activate(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_LoadConfig(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCommandInput_LoadConfig",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->LoadConfig((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_Bind(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    char *arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcCommandInput_Bind",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Bind((char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_GetBind(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    char *arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCommandInput_GetBind",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iPcCommandInput const *)arg1)->GetBind((char const *)arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCommandInput_RemoveBind(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    char *arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcCommandInput_RemoveBind",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveBind((char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcCommandInput(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCommandInput *arg1 = (iPcCommandInput *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcCommandInput",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCommandInput,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcCommandInput_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcCommandInput, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateCommandInput(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcCommandInput *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateCommandInput",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCommandInput *)celCreateCommandInput(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCommandInput, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetCommandInput(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcCommandInput *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetCommandInput",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCommandInput *)celGetCommandInput(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCommandInput, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcCommandInput(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcCommandInput *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcCommandInput",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCommandInput *)scfQuery_iPcCommandInput(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCommandInput, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetAngularVelocity__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_SetAngularVelocity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetAngularVelocity((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetAngularVelocity__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcLinearMovement_SetAngularVelocity",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetAngularVelocity((csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetAngularVelocity(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcLinearMovement, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iPcLinearMovement_SetAngularVelocity__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcLinearMovement, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_iPcLinearMovement_SetAngularVelocity__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcLinearMovement_SetAngularVelocity'");
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcLinearMovement_SetSpeed",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSpeed(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_SetVelocity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetVelocity((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_GetVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_GetVelocity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((iPcLinearMovement const *)arg1)->GetVelocity(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_GetAngularVelocity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_GetAngularVelocity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((iPcLinearMovement const *)arg1)->GetAngularVelocity(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_InitCD__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    iPcCollisionDetection *arg5 = (iPcCollisionDetection *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO|O:iPcLinearMovement_InitCD",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj4) {
        if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_iPcCollisionDetection,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (bool)(arg1)->InitCD((csVector3 const &)*arg2,(csVector3 const &)*arg3,(csVector3 const &)*arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_InitCD__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    iPcCollisionDetection *arg2 = (iPcCollisionDetection *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:iPcLinearMovement_InitCD",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcCollisionDetection,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (bool)(arg1)->InitCD(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_InitCD(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcLinearMovement, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_iPcLinearMovement_InitCD__SWIG_1(self,args);
            }
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_iPcCollisionDetection, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_iPcLinearMovement_InitCD__SWIG_1(self,args);
            }
        }
    }
    if ((argc >= 4) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_iPcLinearMovement, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_csVector3, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_iPcLinearMovement_InitCD__SWIG_0(self,args);
                        }
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_iPcCollisionDetection, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            } else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_iPcLinearMovement_InitCD__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'iPcLinearMovement_InitCD'");
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_GetDRData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    bool *arg2 = 0 ;
    float *arg3 = 0 ;
    csVector3 *arg4 = 0 ;
    float *arg5 = 0 ;
    iSector **arg6 = 0 ;
    csVector3 *arg7 = 0 ;
    float *arg8 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    PyObject * obj7 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOOOO:iPcLinearMovement_GetDRData",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bool,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj7,(void **) &arg8, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg8 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetDRData(*arg2,*arg3,*arg4,*arg5,*arg6,*arg7,*arg8);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetDRData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    bool arg2 ;
    float arg3 ;
    csVector3 *arg4 = 0 ;
    float arg5 ;
    iSector *arg6 = (iSector *) 0 ;
    csVector3 *arg7 = 0 ;
    float arg8 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOfOfOOf:iPcLinearMovement_SetDRData",&obj0,&obj1,&arg3,&obj3,&arg5,&obj5,&obj6,&arg8)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetDRData(arg2,arg3,*arg4,arg5,arg6,*arg7,arg8);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    float arg3 ;
    iSector *arg4 = (iSector *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOfO:iPcLinearMovement_SetPosition",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPosition((csVector3 const &)*arg2,arg3,(iSector const *)arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_GetLastPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csVector3 *arg2 = 0 ;
    float *arg3 = 0 ;
    iSector **arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iPcLinearMovement_GetLastPosition",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetLastPosition(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_IsPath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcLinearMovement_IsPath",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcLinearMovement const *)arg1)->IsPath();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_GetSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    iSector *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcLinearMovement_GetSector",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iSector *)(arg1)->GetSector();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_ExtrapolatePosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcLinearMovement_ExtrapolatePosition",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ExtrapolatePosition(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_UpdateDRDelta(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csTicks arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_UpdateDRDelta",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->UpdateDRDelta(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_UpdateDR(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    csTicks arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_UpdateDR",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->UpdateDR(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetPath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    iPath *arg2 = (iPath *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcLinearMovement_SetPath",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPath(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetPathTime(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcLinearMovement_SetPathTime",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPathTime(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetPathSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcLinearMovement_SetPathSpeed",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPathSpeed(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetPathAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    int arg2 ;
    char *arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:iPcLinearMovement_SetPathAction",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPathAction(arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetPathSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcLinearMovement_SetPathSector",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPathSector((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_IsOnGround(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcLinearMovement_IsOnGround",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcLinearMovement const *)arg1)->IsOnGround();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcLinearMovement_SetDeltaLimit(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcLinearMovement_SetDeltaLimit",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDeltaLimit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcLinearMovement(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcLinearMovement *arg1 = (iPcLinearMovement *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcLinearMovement",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcLinearMovement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcLinearMovement_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcLinearMovement, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateLinearMovement(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcLinearMovement *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateLinearMovement",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcLinearMovement *)celCreateLinearMovement(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcLinearMovement, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetLinearMovement(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcLinearMovement *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetLinearMovement",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcLinearMovement *)celGetLinearMovement(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcLinearMovement, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcLinearMovement(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcLinearMovement *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcLinearMovement",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcLinearMovement *)scfQuery_iPcLinearMovement(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcLinearMovement, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    iPcRegion *arg2 = (iPcRegion *) 0 ;
    bool arg3 = (bool) true ;
    char *arg4 = (char *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|Os:iPcCamera_SetRegion",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcRegion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->SetRegion(arg2,arg3,(char const *)arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetZoneManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    iPcZoneManager *arg2 = (iPcZoneManager *) 0 ;
    bool arg3 ;
    char *arg4 ;
    char *arg5 = (char *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOs|s:iPcCamera_SetZoneManager",&obj0,&obj1,&obj2,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcZoneManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->SetZoneManager(arg2,arg3,(char const *)arg4,(char const *)arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    int arg2 ;
    bool arg3 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi|O:iPcCamera_SetMode",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->SetMode((iPcCamera::CameraMode )arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iPcCamera const *)arg1)->GetMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetModeName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    char *arg2 ;
    bool arg3 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iPcCamera_SetModeName",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->SetModeName((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetModeName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetModeName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((iPcCamera const *)arg1)->GetModeName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetNextMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetNextMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iPcCamera const *)arg1)->GetNextMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetSpringParameters(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offf:iPcCamera_SetSpringParameters",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSpringParameters(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetMinMaxCameraDistance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float arg2 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Off:iPcCamera_SetMinMaxCameraDistance",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMinMaxCameraDistance(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetTurnSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcCamera_SetTurnSpeed",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetTurnSpeed(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetSwingCoef(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcCamera_SetSwingCoef",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSwingCoef(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetFirstPersonOffset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcCamera_SetFirstPersonOffset",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetFirstPersonOffset((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetThirdPersonOffset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcCamera_SetThirdPersonOffset",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetThirdPersonOffset((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetRectangle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:iPcCamera_SetRectangle",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetRectangle(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    iCamera *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCamera *)((iPcCamera const *)arg1)->GetCamera();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetView(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    iView *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetView",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iView *)((iPcCamera const *)arg1)->GetView();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iView, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetClearZBuffer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcCamera_SetClearZBuffer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetClearZBuffer(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetClearZBuffer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetClearZBuffer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcCamera const *)arg1)->GetClearZBuffer();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_SetClearScreen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcCamera_SetClearScreen",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetClearScreen(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetClearScreen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetClearScreen",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcCamera const *)arg1)->GetClearScreen();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_DisableDistanceClipping(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_DisableDistanceClipping",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DisableDistanceClipping();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_EnableFixedDistanceClipping(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcCamera_EnableFixedDistanceClipping",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->EnableFixedDistanceClipping(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_EnableAdaptiveDistanceClipping(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offf:iPcCamera_EnableAdaptiveDistanceClipping",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->EnableAdaptiveDistanceClipping(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_UseDistanceClipping(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_UseDistanceClipping",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcCamera const *)arg1)->UseDistanceClipping();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_UseFixedDistanceClipping(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_UseFixedDistanceClipping",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcCamera const *)arg1)->UseFixedDistanceClipping();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetFixedDistance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetFixedDistance",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcCamera const *)arg1)->GetFixedDistance();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetAdaptiveMinFPS(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetAdaptiveMinFPS",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcCamera const *)arg1)->GetAdaptiveMinFPS();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetAdaptiveMaxFPS(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetAdaptiveMaxFPS",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcCamera const *)arg1)->GetAdaptiveMaxFPS();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCamera_GetAdaptiveMinDistance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetAdaptiveMinDistance",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcCamera const *)arg1)->GetAdaptiveMinDistance();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 = (iPcCamera *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcCamera_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcCamera, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcCamera *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateCamera",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCamera *)celCreateCamera(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcCamera *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCamera *)celGetCamera(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcCamera *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcCamera",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCamera *)scfQuery_iPcCamera(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCamera, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    iPcCamera *arg2 = (iPcCamera *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetCamera",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcCamera,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCamera(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetMouseButtons(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPcMeshSelect_SetMouseButtons",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMouseButtons(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_GetMouseButtons(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_GetMouseButtons",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iPcMeshSelect const *)arg1)->GetMouseButtons();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetGlobalSelection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetGlobalSelection",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetGlobalSelection(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasGlobalSelection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasGlobalSelection",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasGlobalSelection();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetFollowMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetFollowMode",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetFollowMode(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasFollowMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasFollowMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasFollowMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetFollowAlwaysMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetFollowAlwaysMode",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetFollowAlwaysMode(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasFollowAlwaysMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasFollowAlwaysMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasFollowAlwaysMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetDragMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetDragMode",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetDragMode(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasDragMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasDragMode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasDragMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetDragPlaneNormal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    csVector3 *arg2 = 0 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcMeshSelect_SetDragPlaneNormal",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetDragPlaneNormal((csVector3 const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_GetDragPlaneNormal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    csVector3 *arg2 = 0 ;
    bool *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcMeshSelect_GetDragPlaneNormal",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_bool,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((iPcMeshSelect const *)arg1)->GetDragPlaneNormal(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetSendmoveEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetSendmoveEvent",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetSendmoveEvent(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasSendmoveEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasSendmoveEvent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasSendmoveEvent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetSendupEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetSendupEvent",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetSendupEvent(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasSendupEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasSendupEvent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasSendupEvent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_SetSenddownEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetSenddownEvent",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetSenddownEvent(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMeshSelect_HasSenddownEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasSenddownEvent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMeshSelect const *)arg1)->HasSenddownEvent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcMeshSelect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 = (iPcMeshSelect *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMeshSelect",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcMeshSelect_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMeshSelect, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateMeshSelect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcMeshSelect *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateMeshSelect",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMeshSelect *)celCreateMeshSelect(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMeshSelect, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetMeshSelect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcMeshSelect *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetMeshSelect",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMeshSelect *)celGetMeshSelect(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMeshSelect, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcMeshSelect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcMeshSelect *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcMeshSelect",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMeshSelect *)scfQuery_iPcMeshSelect(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMeshSelect, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_LoadMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    char *arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcMesh_LoadMesh",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetMesh((char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_SetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMesh_SetMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMesh(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_CreateEmptyThing(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_CreateEmptyThing",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CreateEmptyThing();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_GetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    iMeshWrapper *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_GetMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iMeshWrapper *)((iPcMesh const *)arg1)->GetMesh();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshWrapper, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_MoveMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcMesh_MoveMesh",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveMesh(arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_SetAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    char *arg2 ;
    bool arg3 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iPcMesh_SetAction",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->SetAction((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_GetAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_GetAction",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetAction();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_Hide(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_Hide",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Hide();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_Show(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_Show",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Show();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMesh_IsVisible(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_IsVisible",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcMesh const *)arg1)->IsVisible();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcMesh_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMesh, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcMesh *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMesh *)celCreateMesh(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcMesh *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMesh *)celGetMesh(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcMesh *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMesh *)scfQuery_iPcMesh(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcTimer_WakeUp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTimer *arg1 = (iPcTimer *) 0 ;
    csTicks arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcTimer_WakeUp",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (csTicks) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->WakeUp(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcTimer_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTimer *arg1 = (iPcTimer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcTimer_Clear",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Clear();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcTimer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTimer *arg1 = (iPcTimer *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcTimer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcTimer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcTimer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateTimer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcTimer *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateTimer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcTimer *)celCreateTimer(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcTimer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetTimer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcTimer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetTimer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcTimer *)celGetTimer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcTimer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcTimer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcTimer *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcTimer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcTimer *)scfQuery_iPcTimer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcTimer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcSolid_SetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSolid *arg1 = (iPcSolid *) 0 ;
    iPcMesh *arg2 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcSolid_SetMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSolid,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMesh(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcSolid_GetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSolid *arg1 = (iPcSolid *) 0 ;
    iPcMesh *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcSolid_GetMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSolid,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMesh *)((iPcSolid const *)arg1)->GetMesh();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcSolid_GetCollider(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSolid *arg1 = (iPcSolid *) 0 ;
    iCollider *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcSolid_GetCollider",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSolid,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCollider *)(arg1)->GetCollider();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCollider, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSolid *arg1 = (iPcSolid *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcSolid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSolid,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcSolid_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcSolid, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcSolid *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateSolid",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcSolid *)celCreateSolid(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSolid, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcSolid *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetSolid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcSolid *)celGetSolid(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSolid, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcSolid *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcSolid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcSolid *)scfQuery_iPcSolid(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSolid, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_CreateGravityColliderFromMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    iPcMesh *arg2 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_CreateGravityColliderFromMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CreateGravityCollider(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_CreateGravityCollider(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    csVector3 *arg2 = 0 ;
    csVector3 *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcGravity_CreateGravityCollider",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->CreateGravityCollider((csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_GetGravityCollider(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    iCollider *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_GetGravityCollider",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCollider *)(arg1)->GetGravityCollider();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCollider, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_SetMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    iPcMovable *arg2 = (iPcMovable *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_SetMovable",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMovable(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_GetMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    iPcMovable *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_GetMovable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMovable *)(arg1)->GetMovable();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMovable, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_SetSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    iPcSolid *arg2 = (iPcSolid *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_SetSolid",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcSolid,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSolid(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_GetSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    iPcSolid *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_GetSolid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcSolid *)(arg1)->GetSolid();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSolid, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_SetWeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcGravity_SetWeight",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetWeight(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_GetWeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_GetWeight",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcGravity const *)arg1)->GetWeight();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_ClearForces(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_ClearForces",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearForces();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_ClearPermanentForces(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_ClearPermanentForces",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearPermanentForces();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_ResetSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_ResetSpeed",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ResetSpeed();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_ApplyForce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    csVector3 *arg2 = 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf:iPcGravity_ApplyForce",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->ApplyForce((csVector3 const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_ApplyPermanentForce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    csVector3 *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_ApplyPermanentForce",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->ApplyPermanentForce((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_IsResting(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_IsResting",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcGravity const *)arg1)->IsResting();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_SetActive(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_SetActive",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetActive(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcGravity_IsActive(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_IsActive",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcGravity const *)arg1)->IsActive();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcGravity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 = (iPcGravity *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcGravity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcGravity_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcGravity, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateGravity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcGravity *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateGravity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcGravity *)celCreateGravity(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcGravity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetGravity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcGravity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetGravity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcGravity *)celGetGravity(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcGravity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcGravity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcGravity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcGravity",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcGravity *)scfQuery_iPcGravity(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcGravity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_SetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    iPcMesh *arg2 = (iPcMesh *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMovable_SetMesh",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMesh,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMesh(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_GetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    iPcMesh *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMovable_GetMesh",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMesh *)(arg1)->GetMesh();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_SetPos(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    iSector *arg2 = (iSector *) 0 ;
    csVector3 *arg3 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcMovable_SetPos",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->Move(arg2,(csVector3 const &)*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_Move(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    csVector3 *arg2 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMovable_Move",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->Move((csVector3 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_AddConstraint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    iPcMovableConstraint *arg2 = (iPcMovableConstraint *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMovable_AddConstraint",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMovableConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddConstraint(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_RemoveConstraint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    iPcMovableConstraint *arg2 = (iPcMovableConstraint *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMovable_RemoveConstraint",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMovableConstraint,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveConstraint(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcMovable_RemoveAllConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMovable_RemoveAllConstraints",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAllConstraints();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 = (iPcMovable *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMovable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcMovable_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMovable, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcMovable *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateMovable",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMovable *)celCreateMovable(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMovable, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcMovable *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetMovable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMovable *)celGetMovable(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMovable, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcMovable *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcMovable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcMovable *)scfQuery_iPcMovable(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMovable, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_AddEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcInventory_AddEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->AddEntity(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_RemoveEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcInventory_RemoveEntity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveEntity(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcInventory_RemoveAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveAll();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_GetEntityCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcInventory_GetEntityCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((iPcInventory const *)arg1)->GetEntityCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_GetEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    int arg2 ;
    iCelEntity *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPcInventory_GetEntity",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iCelEntity *)((iPcInventory const *)arg1)->GetEntity(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_SetStrictCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    bool arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iPcInventory_SetStrictCharacteristics",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    result = (bool)(arg1)->SetStrictCharacteristics((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_HasStrictCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_HasStrictCharacteristics",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcInventory const *)arg1)->HasStrictCharacteristics((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_SetConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    float arg3 ;
    float arg4 ;
    float arg5 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osfff:iPcInventory_SetConstraints",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetConstraints((char const *)arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_GetConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    float *arg3 = 0 ;
    float *arg4 = 0 ;
    float *arg5 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOOO:iPcInventory_GetConstraints",&obj0,&arg2,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((iPcInventory const *)arg1)->GetConstraints((char const *)arg2,*arg3,*arg4,*arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_RemoveConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_RemoveConstraints",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveConstraints((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_RemoveAllConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcInventory_RemoveAllConstraints",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAllConstraints();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_GetCurrentCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_GetCurrentCharacteristic",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcInventory const *)arg1)->GetCurrentCharacteristic((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_MarkDirty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_MarkDirty",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MarkDirty((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_TestConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_TestConstraints",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->TestConstraints((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcInventory_Dump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcInventory_Dump",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Dump();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 = (iPcInventory *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcInventory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcInventory_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcInventory, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcInventory *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateInventory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcInventory *)celCreateInventory(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcInventory, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcInventory *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetInventory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcInventory *)celGetInventory(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcInventory, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcInventory *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcInventory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcInventory *)scfQuery_iPcInventory(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcInventory, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_SetCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    float arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osf:iPcCharacteristics_SetCharacteristic",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetCharacteristic((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_SetInheritedCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    float arg3 ;
    float arg4 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osff:iPcCharacteristics_SetInheritedCharacteristic",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->SetInheritedCharacteristic((char const *)arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_GetCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_GetCharacteristic",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcCharacteristics const *)arg1)->GetCharacteristic((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_GetLocalCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_GetLocalCharacteristic",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcCharacteristics const *)arg1)->GetLocalCharacteristic((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_GetInheritedCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_GetInheritedCharacteristic",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float)((iPcCharacteristics const *)arg1)->GetInheritedCharacteristic((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_ClearCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_ClearCharacteristic",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->ClearCharacteristic((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_HasCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_HasCharacteristic",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((iPcCharacteristics const *)arg1)->HasCharacteristic((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_ClearAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCharacteristics_ClearAll",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->ClearAll();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_AddToInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    iPcInventory *arg2 = (iPcInventory *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcCharacteristics_AddToInventory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddToInventory(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_RemoveFromInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    iPcInventory *arg2 = (iPcInventory *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcCharacteristics_RemoveFromInventory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcInventory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveFromInventory(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_MarkDirty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_MarkDirty",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MarkDirty((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_TestConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_TestConstraints",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->TestConstraints((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_iPcCharacteristics_Dump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCharacteristics_Dump",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Dump();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_iPcCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 = (iPcCharacteristics *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcCharacteristics",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * iPcCharacteristics_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcCharacteristics, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 = (iCelPlLayer *) 0 ;
    iCelEntity *arg2 = (iCelEntity *) 0 ;
    iPcCharacteristics *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celCreateCharacteristics",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCharacteristics *)celCreateCharacteristics(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCharacteristics, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_celGetCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 = (iCelEntity *) 0 ;
    iPcCharacteristics *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celGetCharacteristics",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCharacteristics *)celGetCharacteristics(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCharacteristics, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_scfQuery_iPcCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 = (iCelPropertyClass *) 0 ;
    iPcCharacteristics *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcCharacteristics",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (iPcCharacteristics *)scfQuery_iPcCharacteristics(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCharacteristics, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"celInitializer_SetupCelPluginDirs", _wrap_celInitializer_SetupCelPluginDirs, METH_VARARGS },
	 { (char *)"celInitializer__RequestPlugins", _wrap_celInitializer__RequestPlugins, METH_VARARGS },
	 { (char *)"new_celInitializer", _wrap_new_celInitializer, METH_VARARGS },
	 { (char *)"delete_celInitializer", _wrap_delete_celInitializer, METH_VARARGS },
	 { (char *)"celInitializer_swigregister", celInitializer_swigregister, METH_VARARGS },
	 { (char *)"iCelPlLayer_FindEntity", _wrap_iCelPlLayer_FindEntity, METH_VARARGS },
	 { (char *)"iCelPlLayer_RemoveEntity", _wrap_iCelPlLayer_RemoveEntity, METH_VARARGS },
	 { (char *)"iCelPlLayer_LoadPropertyClassFactory", _wrap_iCelPlLayer_LoadPropertyClassFactory, METH_VARARGS },
	 { (char *)"iCelPlLayer_CreatePropertyClass", _wrap_iCelPlLayer_CreatePropertyClass, METH_VARARGS },
	 { (char *)"iCelPlLayer_FetchString", _wrap_iCelPlLayer_FetchString, METH_VARARGS },
	 { (char *)"iCelPlLayer_GetBehaviourLayerCount", _wrap_iCelPlLayer_GetBehaviourLayerCount, METH_VARARGS },
	 { (char *)"iCelPlLayer_GetBehaviourLayer", _wrap_iCelPlLayer_GetBehaviourLayer, METH_VARARGS },
	 { (char *)"iCelPlLayer_FindBehaviourLayer", _wrap_iCelPlLayer_FindBehaviourLayer, METH_VARARGS },
	 { (char *)"delete_iCelPlLayer", _wrap_delete_iCelPlLayer, METH_VARARGS },
	 { (char *)"iCelPlLayer_swigregister", iCelPlLayer_swigregister, METH_VARARGS },
	 { (char *)"csQueryRegistry_iCelPlLayer", _wrap_csQueryRegistry_iCelPlLayer, METH_VARARGS },
	 { (char *)"iCelEntity_GetName", _wrap_iCelEntity_GetName, METH_VARARGS },
	 { (char *)"iCelEntity_SetName", _wrap_iCelEntity_SetName, METH_VARARGS },
	 { (char *)"iCelEntity_SetBehaviour", _wrap_iCelEntity_SetBehaviour, METH_VARARGS },
	 { (char *)"iCelEntity_GetBehaviour", _wrap_iCelEntity_GetBehaviour, METH_VARARGS },
	 { (char *)"iCelEntity_GetID", _wrap_iCelEntity_GetID, METH_VARARGS },
	 { (char *)"iCelEntity_GetPropertyClassList", _wrap_iCelEntity_GetPropertyClassList, METH_VARARGS },
	 { (char *)"iCelEntity_CreateBehaviour", _wrap_iCelEntity_CreateBehaviour, METH_VARARGS },
	 { (char *)"delete_iCelEntity", _wrap_delete_iCelEntity, METH_VARARGS },
	 { (char *)"iCelEntity_swigregister", iCelEntity_swigregister, METH_VARARGS },
	 { (char *)"celRegisterPCFactory", _wrap_celRegisterPCFactory, METH_VARARGS },
	 { (char *)"celCreateEntity", _wrap_celCreateEntity, METH_VARARGS },
	 { (char *)"scfQueryInterface_iCelEntity", _wrap_scfQueryInterface_iCelEntity, METH_VARARGS },
	 { (char *)"iCelEntityList_GetCount", _wrap_iCelEntityList_GetCount, METH_VARARGS },
	 { (char *)"iCelEntityList_Get", _wrap_iCelEntityList_Get, METH_VARARGS },
	 { (char *)"iCelEntityList_Add", _wrap_iCelEntityList_Add, METH_VARARGS },
	 { (char *)"iCelEntityList_Remove", _wrap_iCelEntityList_Remove, METH_VARARGS },
	 { (char *)"iCelEntityList_RemoveAll", _wrap_iCelEntityList_RemoveAll, METH_VARARGS },
	 { (char *)"iCelEntityList_Find", _wrap_iCelEntityList_Find, METH_VARARGS },
	 { (char *)"iCelEntityList_FindByName", _wrap_iCelEntityList_FindByName, METH_VARARGS },
	 { (char *)"delete_iCelEntityList", _wrap_delete_iCelEntityList, METH_VARARGS },
	 { (char *)"iCelEntityList_swigregister", iCelEntityList_swigregister, METH_VARARGS },
	 { (char *)"celFindNearbyEntities", _wrap_celFindNearbyEntities, METH_VARARGS },
	 { (char *)"iCelBlLayer_GetName", _wrap_iCelBlLayer_GetName, METH_VARARGS },
	 { (char *)"iCelBlLayer_CreateBehaviour", _wrap_iCelBlLayer_CreateBehaviour, METH_VARARGS },
	 { (char *)"delete_iCelBlLayer", _wrap_delete_iCelBlLayer, METH_VARARGS },
	 { (char *)"iCelBlLayer_swigregister", iCelBlLayer_swigregister, METH_VARARGS },
	 { (char *)"csQueryRegistry_iCelBlLayer", _wrap_csQueryRegistry_iCelBlLayer, METH_VARARGS },
	 { (char *)"iCelParameterBlock_GetParameterCount", _wrap_iCelParameterBlock_GetParameterCount, METH_VARARGS },
	 { (char *)"iCelParameterBlock_GetParameter", _wrap_iCelParameterBlock_GetParameter, METH_VARARGS },
	 { (char *)"delete_iCelParameterBlock", _wrap_delete_iCelParameterBlock, METH_VARARGS },
	 { (char *)"iCelParameterBlock_swigregister", iCelParameterBlock_swigregister, METH_VARARGS },
	 { (char *)"iCelBehaviour_GetName", _wrap_iCelBehaviour_GetName, METH_VARARGS },
	 { (char *)"iCelBehaviour_GetBehaviourLayer", _wrap_iCelBehaviour_GetBehaviourLayer, METH_VARARGS },
	 { (char *)"iCelBehaviour_SendMessage", _wrap_iCelBehaviour_SendMessage, METH_VARARGS },
	 { (char *)"iCelBehaviour_GetPythonObject", _wrap_iCelBehaviour_GetPythonObject, METH_VARARGS },
	 { (char *)"delete_iCelBehaviour", _wrap_delete_iCelBehaviour, METH_VARARGS },
	 { (char *)"iCelBehaviour_swigregister", iCelBehaviour_swigregister, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetName", _wrap_iCelPropertyClass_GetName, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetEntity", _wrap_iCelPropertyClass_GetEntity, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetEntity", _wrap_iCelPropertyClass_SetEntity, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyOrActionType", _wrap_iCelPropertyClass_GetPropertyOrActionType, METH_VARARGS },
	 { (char *)"iCelPropertyClass_IsPropertyReadOnly", _wrap_iCelPropertyClass_IsPropertyReadOnly, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyLong", _wrap_iCelPropertyClass_GetPropertyLong, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyFloat", _wrap_iCelPropertyClass_GetPropertyFloat, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyBool", _wrap_iCelPropertyClass_GetPropertyBool, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyString", _wrap_iCelPropertyClass_GetPropertyString, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyVector", _wrap_iCelPropertyClass_GetPropertyVector, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyAndActionCount", _wrap_iCelPropertyClass_GetPropertyAndActionCount, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyOrActionID", _wrap_iCelPropertyClass_GetPropertyOrActionID, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyOrActionDescription", _wrap_iCelPropertyClass_GetPropertyOrActionDescription, METH_VARARGS },
	 { (char *)"iCelPropertyClass_PerformAction", _wrap_iCelPropertyClass_PerformAction, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyLong", _wrap_iCelPropertyClass_SetPropertyLong, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyFloat", _wrap_iCelPropertyClass_SetPropertyFloat, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyBool", _wrap_iCelPropertyClass_SetPropertyBool, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyString", _wrap_iCelPropertyClass_SetPropertyString, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyVector3", _wrap_iCelPropertyClass_SetPropertyVector3, METH_VARARGS },
	 { (char *)"delete_iCelPropertyClass", _wrap_delete_iCelPropertyClass, METH_VARARGS },
	 { (char *)"iCelPropertyClass_swigregister", iCelPropertyClass_swigregister, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_GetCount", _wrap_iCelPropertyClassList_GetCount, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_Get", _wrap_iCelPropertyClassList_Get, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_Find", _wrap_iCelPropertyClassList_Find, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_FindByName", _wrap_iCelPropertyClassList_FindByName, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_FindByInterface", _wrap_iCelPropertyClassList_FindByInterface, METH_VARARGS },
	 { (char *)"delete_iCelPropertyClassList", _wrap_delete_iCelPropertyClassList, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_swigregister", iCelPropertyClassList_swigregister, METH_VARARGS },
	 { (char *)"iPcDynamicSystem_GetDynamicSystem", _wrap_iPcDynamicSystem_GetDynamicSystem, METH_VARARGS },
	 { (char *)"iPcDynamicSystem_AddForceDuration", _wrap_iPcDynamicSystem_AddForceDuration, METH_VARARGS },
	 { (char *)"iPcDynamicSystem_AddForceFrame", _wrap_iPcDynamicSystem_AddForceFrame, METH_VARARGS },
	 { (char *)"iPcDynamicSystem_ClearForces", _wrap_iPcDynamicSystem_ClearForces, METH_VARARGS },
	 { (char *)"iPcDynamicSystem_ClearAllForces", _wrap_iPcDynamicSystem_ClearAllForces, METH_VARARGS },
	 { (char *)"delete_iPcDynamicSystem", _wrap_delete_iPcDynamicSystem, METH_VARARGS },
	 { (char *)"iPcDynamicSystem_swigregister", iPcDynamicSystem_swigregister, METH_VARARGS },
	 { (char *)"celCreateDynamicSystem", _wrap_celCreateDynamicSystem, METH_VARARGS },
	 { (char *)"celGetDynamicSystem", _wrap_celGetDynamicSystem, METH_VARARGS },
	 { (char *)"scfQuery_iPcDynamicSystem", _wrap_scfQuery_iPcDynamicSystem, METH_VARARGS },
	 { (char *)"scfQueryPC_iPcDynamicSystem", _wrap_scfQueryPC_iPcDynamicSystem, METH_VARARGS },
	 { (char *)"iPcDynamicBody_SetMesh", _wrap_iPcDynamicBody_SetMesh, METH_VARARGS },
	 { (char *)"iPcDynamicBody_GetMesh", _wrap_iPcDynamicBody_GetMesh, METH_VARARGS },
	 { (char *)"iPcDynamicBody_SetDynamicSystem", _wrap_iPcDynamicBody_SetDynamicSystem, METH_VARARGS },
	 { (char *)"iPcDynamicBody_GetDynamicSystem", _wrap_iPcDynamicBody_GetDynamicSystem, METH_VARARGS },
	 { (char *)"iPcDynamicBody_GetBody", _wrap_iPcDynamicBody_GetBody, METH_VARARGS },
	 { (char *)"iPcDynamicBody_SetParameters", _wrap_iPcDynamicBody_SetParameters, METH_VARARGS },
	 { (char *)"iPcDynamicBody_MakeStatic", _wrap_iPcDynamicBody_MakeStatic, METH_VARARGS },
	 { (char *)"iPcDynamicBody_IsStatic", _wrap_iPcDynamicBody_IsStatic, METH_VARARGS },
	 { (char *)"iPcDynamicBody_AttachColliderSphere", _wrap_iPcDynamicBody_AttachColliderSphere, METH_VARARGS },
	 { (char *)"iPcDynamicBody_AttachColliderCylinder", _wrap_iPcDynamicBody_AttachColliderCylinder, METH_VARARGS },
	 { (char *)"iPcDynamicBody_AttachColliderBox", _wrap_iPcDynamicBody_AttachColliderBox, METH_VARARGS },
	 { (char *)"iPcDynamicBody_AttachColliderPlane", _wrap_iPcDynamicBody_AttachColliderPlane, METH_VARARGS },
	 { (char *)"iPcDynamicBody_AttachColliderMesh", _wrap_iPcDynamicBody_AttachColliderMesh, METH_VARARGS },
	 { (char *)"iPcDynamicBody_AddForceOnce", _wrap_iPcDynamicBody_AddForceOnce, METH_VARARGS },
	 { (char *)"iPcDynamicBody_AddForceDuration", _wrap_iPcDynamicBody_AddForceDuration, METH_VARARGS },
	 { (char *)"iPcDynamicBody_AddForceFrame", _wrap_iPcDynamicBody_AddForceFrame, METH_VARARGS },
	 { (char *)"iPcDynamicBody_ClearForces", _wrap_iPcDynamicBody_ClearForces, METH_VARARGS },
	 { (char *)"delete_iPcDynamicBody", _wrap_delete_iPcDynamicBody, METH_VARARGS },
	 { (char *)"iPcDynamicBody_swigregister", iPcDynamicBody_swigregister, METH_VARARGS },
	 { (char *)"celCreateDynamicBody", _wrap_celCreateDynamicBody, METH_VARARGS },
	 { (char *)"celGetDynamicBody", _wrap_celGetDynamicBody, METH_VARARGS },
	 { (char *)"scfQuery_iPcDynamicBody", _wrap_scfQuery_iPcDynamicBody, METH_VARARGS },
	 { (char *)"scfQueryPC_iPcDynamicBody", _wrap_scfQueryPC_iPcDynamicBody, METH_VARARGS },
	 { (char *)"iBillboard_GetName", _wrap_iBillboard_GetName, METH_VARARGS },
	 { (char *)"iBillboard_GetFlags", _wrap_iBillboard_GetFlags, METH_VARARGS },
	 { (char *)"iBillboard_SetMaterialName", _wrap_iBillboard_SetMaterialName, METH_VARARGS },
	 { (char *)"iBillboard_GetMaterialName", _wrap_iBillboard_GetMaterialName, METH_VARARGS },
	 { (char *)"iBillboard_SetSize", _wrap_iBillboard_SetSize, METH_VARARGS },
	 { (char *)"iBillboard_GetImageSize", _wrap_iBillboard_GetImageSize, METH_VARARGS },
	 { (char *)"iBillboard_GetSize", _wrap_iBillboard_GetSize, METH_VARARGS },
	 { (char *)"iBillboard_SetPosition", _wrap_iBillboard_SetPosition, METH_VARARGS },
	 { (char *)"iBillboard_GetPosition", _wrap_iBillboard_GetPosition, METH_VARARGS },
	 { (char *)"iBillboard_Move", _wrap_iBillboard_Move, METH_VARARGS },
	 { (char *)"delete_iBillboard", _wrap_delete_iBillboard, METH_VARARGS },
	 { (char *)"iBillboard_swigregister", iBillboard_swigregister, METH_VARARGS },
	 { (char *)"iBillboardManager_CreateBillboard", _wrap_iBillboardManager_CreateBillboard, METH_VARARGS },
	 { (char *)"iBillboardManager_FindBillboard", _wrap_iBillboardManager_FindBillboard, METH_VARARGS },
	 { (char *)"iBillboardManager_RemoveBillboard", _wrap_iBillboardManager_RemoveBillboard, METH_VARARGS },
	 { (char *)"iBillboardManager_GetBillboardCount", _wrap_iBillboardManager_GetBillboardCount, METH_VARARGS },
	 { (char *)"iBillboardManager_GetBillboard", _wrap_iBillboardManager_GetBillboard, METH_VARARGS },
	 { (char *)"iBillboardManager_RemoveAll", _wrap_iBillboardManager_RemoveAll, METH_VARARGS },
	 { (char *)"iBillboardManager_SetFlags", _wrap_iBillboardManager_SetFlags, METH_VARARGS },
	 { (char *)"delete_iBillboardManager", _wrap_delete_iBillboardManager, METH_VARARGS },
	 { (char *)"iBillboardManager_swigregister", iBillboardManager_swigregister, METH_VARARGS },
	 { (char *)"iPcBillboard_SetBillboardName", _wrap_iPcBillboard_SetBillboardName, METH_VARARGS },
	 { (char *)"iPcBillboard_GetBillboardName", _wrap_iPcBillboard_GetBillboardName, METH_VARARGS },
	 { (char *)"iPcBillboard_GetBillboard", _wrap_iPcBillboard_GetBillboard, METH_VARARGS },
	 { (char *)"delete_iPcBillboard", _wrap_delete_iPcBillboard, METH_VARARGS },
	 { (char *)"iPcBillboard_swigregister", iPcBillboard_swigregister, METH_VARARGS },
	 { (char *)"celCreateBillboard", _wrap_celCreateBillboard, METH_VARARGS },
	 { (char *)"celGetBillboard", _wrap_celGetBillboard, METH_VARARGS },
	 { (char *)"scfQuery_iPcBillboard", _wrap_scfQuery_iPcBillboard, METH_VARARGS },
	 { (char *)"scfQueryPC_iPcBillboard", _wrap_scfQueryPC_iPcBillboard, METH_VARARGS },
	 { (char *)"iPcRegion_SetWorldFile", _wrap_iPcRegion_SetWorldFile, METH_VARARGS },
	 { (char *)"iPcRegion_GetWorldDir", _wrap_iPcRegion_GetWorldDir, METH_VARARGS },
	 { (char *)"iPcRegion_GetWorldFile", _wrap_iPcRegion_GetWorldFile, METH_VARARGS },
	 { (char *)"iPcRegion_CreateEmptySector", _wrap_iPcRegion_CreateEmptySector, METH_VARARGS },
	 { (char *)"iPcRegion_SetRegionName", _wrap_iPcRegion_SetRegionName, METH_VARARGS },
	 { (char *)"iPcRegion_GetRegionName", _wrap_iPcRegion_GetRegionName, METH_VARARGS },
	 { (char *)"iPcRegion_Load", _wrap_iPcRegion_Load, METH_VARARGS },
	 { (char *)"iPcRegion_Unload", _wrap_iPcRegion_Unload, METH_VARARGS },
	 { (char *)"iPcRegion_FindSector", _wrap_iPcRegion_FindSector, METH_VARARGS },
	 { (char *)"iPcRegion_GetStartSector", _wrap_iPcRegion_GetStartSector, METH_VARARGS },
	 { (char *)"iPcRegion_GetStartPosition", _wrap_iPcRegion_GetStartPosition, METH_VARARGS },
	 { (char *)"iPcRegion_PointCamera", _wrap_iPcRegion_PointCamera, METH_VARARGS },
	 { (char *)"iPcRegion_LoadWorld", _wrap_iPcRegion_LoadWorld, METH_VARARGS },
	 { (char *)"delete_iPcRegion", _wrap_delete_iPcRegion, METH_VARARGS },
	 { (char *)"iPcRegion_swigregister", iPcRegion_swigregister, METH_VARARGS },
	 { (char *)"celCreateRegion", _wrap_celCreateRegion, METH_VARARGS },
	 { (char *)"Region", _wrap_Region, METH_VARARGS },
	 { (char *)"scfQuery_iPcRegion", _wrap_scfQuery_iPcRegion, METH_VARARGS },
	 { (char *)"scfQueryPC_iPcRegion", _wrap_scfQueryPC_iPcRegion, METH_VARARGS },
	 { (char *)"iPcCommandInput_Activate", _wrap_iPcCommandInput_Activate, METH_VARARGS },
	 { (char *)"iPcCommandInput_LoadConfig", _wrap_iPcCommandInput_LoadConfig, METH_VARARGS },
	 { (char *)"iPcCommandInput_Bind", _wrap_iPcCommandInput_Bind, METH_VARARGS },
	 { (char *)"iPcCommandInput_GetBind", _wrap_iPcCommandInput_GetBind, METH_VARARGS },
	 { (char *)"iPcCommandInput_RemoveBind", _wrap_iPcCommandInput_RemoveBind, METH_VARARGS },
	 { (char *)"delete_iPcCommandInput", _wrap_delete_iPcCommandInput, METH_VARARGS },
	 { (char *)"iPcCommandInput_swigregister", iPcCommandInput_swigregister, METH_VARARGS },
	 { (char *)"celCreateCommandInput", _wrap_celCreateCommandInput, METH_VARARGS },
	 { (char *)"celGetCommandInput", _wrap_celGetCommandInput, METH_VARARGS },
	 { (char *)"scfQuery_iPcCommandInput", _wrap_scfQuery_iPcCommandInput, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetAngularVelocity", _wrap_iPcLinearMovement_SetAngularVelocity, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetSpeed", _wrap_iPcLinearMovement_SetSpeed, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetVelocity", _wrap_iPcLinearMovement_SetVelocity, METH_VARARGS },
	 { (char *)"iPcLinearMovement_GetVelocity", _wrap_iPcLinearMovement_GetVelocity, METH_VARARGS },
	 { (char *)"iPcLinearMovement_GetAngularVelocity", _wrap_iPcLinearMovement_GetAngularVelocity, METH_VARARGS },
	 { (char *)"iPcLinearMovement_InitCD", _wrap_iPcLinearMovement_InitCD, METH_VARARGS },
	 { (char *)"iPcLinearMovement_GetDRData", _wrap_iPcLinearMovement_GetDRData, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetDRData", _wrap_iPcLinearMovement_SetDRData, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetPosition", _wrap_iPcLinearMovement_SetPosition, METH_VARARGS },
	 { (char *)"iPcLinearMovement_GetLastPosition", _wrap_iPcLinearMovement_GetLastPosition, METH_VARARGS },
	 { (char *)"iPcLinearMovement_IsPath", _wrap_iPcLinearMovement_IsPath, METH_VARARGS },
	 { (char *)"iPcLinearMovement_GetSector", _wrap_iPcLinearMovement_GetSector, METH_VARARGS },
	 { (char *)"iPcLinearMovement_ExtrapolatePosition", _wrap_iPcLinearMovement_ExtrapolatePosition, METH_VARARGS },
	 { (char *)"iPcLinearMovement_UpdateDRDelta", _wrap_iPcLinearMovement_UpdateDRDelta, METH_VARARGS },
	 { (char *)"iPcLinearMovement_UpdateDR", _wrap_iPcLinearMovement_UpdateDR, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetPath", _wrap_iPcLinearMovement_SetPath, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetPathTime", _wrap_iPcLinearMovement_SetPathTime, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetPathSpeed", _wrap_iPcLinearMovement_SetPathSpeed, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetPathAction", _wrap_iPcLinearMovement_SetPathAction, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetPathSector", _wrap_iPcLinearMovement_SetPathSector, METH_VARARGS },
	 { (char *)"iPcLinearMovement_IsOnGround", _wrap_iPcLinearMovement_IsOnGround, METH_VARARGS },
	 { (char *)"iPcLinearMovement_SetDeltaLimit", _wrap_iPcLinearMovement_SetDeltaLimit, METH_VARARGS },
	 { (char *)"delete_iPcLinearMovement", _wrap_delete_iPcLinearMovement, METH_VARARGS },
	 { (char *)"iPcLinearMovement_swigregister", iPcLinearMovement_swigregister, METH_VARARGS },
	 { (char *)"celCreateLinearMovement", _wrap_celCreateLinearMovement, METH_VARARGS },
	 { (char *)"celGetLinearMovement", _wrap_celGetLinearMovement, METH_VARARGS },
	 { (char *)"scfQuery_iPcLinearMovement", _wrap_scfQuery_iPcLinearMovement, METH_VARARGS },
	 { (char *)"iPcCamera_SetRegion", _wrap_iPcCamera_SetRegion, METH_VARARGS },
	 { (char *)"iPcCamera_SetZoneManager", _wrap_iPcCamera_SetZoneManager, METH_VARARGS },
	 { (char *)"iPcCamera_SetMode", _wrap_iPcCamera_SetMode, METH_VARARGS },
	 { (char *)"iPcCamera_GetMode", _wrap_iPcCamera_GetMode, METH_VARARGS },
	 { (char *)"iPcCamera_SetModeName", _wrap_iPcCamera_SetModeName, METH_VARARGS },
	 { (char *)"iPcCamera_GetModeName", _wrap_iPcCamera_GetModeName, METH_VARARGS },
	 { (char *)"iPcCamera_GetNextMode", _wrap_iPcCamera_GetNextMode, METH_VARARGS },
	 { (char *)"iPcCamera_SetSpringParameters", _wrap_iPcCamera_SetSpringParameters, METH_VARARGS },
	 { (char *)"iPcCamera_SetMinMaxCameraDistance", _wrap_iPcCamera_SetMinMaxCameraDistance, METH_VARARGS },
	 { (char *)"iPcCamera_SetTurnSpeed", _wrap_iPcCamera_SetTurnSpeed, METH_VARARGS },
	 { (char *)"iPcCamera_SetSwingCoef", _wrap_iPcCamera_SetSwingCoef, METH_VARARGS },
	 { (char *)"iPcCamera_SetFirstPersonOffset", _wrap_iPcCamera_SetFirstPersonOffset, METH_VARARGS },
	 { (char *)"iPcCamera_SetThirdPersonOffset", _wrap_iPcCamera_SetThirdPersonOffset, METH_VARARGS },
	 { (char *)"iPcCamera_SetRectangle", _wrap_iPcCamera_SetRectangle, METH_VARARGS },
	 { (char *)"iPcCamera_GetCamera", _wrap_iPcCamera_GetCamera, METH_VARARGS },
	 { (char *)"iPcCamera_GetView", _wrap_iPcCamera_GetView, METH_VARARGS },
	 { (char *)"iPcCamera_SetClearZBuffer", _wrap_iPcCamera_SetClearZBuffer, METH_VARARGS },
	 { (char *)"iPcCamera_GetClearZBuffer", _wrap_iPcCamera_GetClearZBuffer, METH_VARARGS },
	 { (char *)"iPcCamera_SetClearScreen", _wrap_iPcCamera_SetClearScreen, METH_VARARGS },
	 { (char *)"iPcCamera_GetClearScreen", _wrap_iPcCamera_GetClearScreen, METH_VARARGS },
	 { (char *)"iPcCamera_DisableDistanceClipping", _wrap_iPcCamera_DisableDistanceClipping, METH_VARARGS },
	 { (char *)"iPcCamera_EnableFixedDistanceClipping", _wrap_iPcCamera_EnableFixedDistanceClipping, METH_VARARGS },
	 { (char *)"iPcCamera_EnableAdaptiveDistanceClipping", _wrap_iPcCamera_EnableAdaptiveDistanceClipping, METH_VARARGS },
	 { (char *)"iPcCamera_UseDistanceClipping", _wrap_iPcCamera_UseDistanceClipping, METH_VARARGS },
	 { (char *)"iPcCamera_UseFixedDistanceClipping", _wrap_iPcCamera_UseFixedDistanceClipping, METH_VARARGS },
	 { (char *)"iPcCamera_GetFixedDistance", _wrap_iPcCamera_GetFixedDistance, METH_VARARGS },
	 { (char *)"iPcCamera_GetAdaptiveMinFPS", _wrap_iPcCamera_GetAdaptiveMinFPS, METH_VARARGS },
	 { (char *)"iPcCamera_GetAdaptiveMaxFPS", _wrap_iPcCamera_GetAdaptiveMaxFPS, METH_VARARGS },
	 { (char *)"iPcCamera_GetAdaptiveMinDistance", _wrap_iPcCamera_GetAdaptiveMinDistance, METH_VARARGS },
	 { (char *)"delete_iPcCamera", _wrap_delete_iPcCamera, METH_VARARGS },
	 { (char *)"iPcCamera_swigregister", iPcCamera_swigregister, METH_VARARGS },
	 { (char *)"celCreateCamera", _wrap_celCreateCamera, METH_VARARGS },
	 { (char *)"celGetCamera", _wrap_celGetCamera, METH_VARARGS },
	 { (char *)"scfQuery_iPcCamera", _wrap_scfQuery_iPcCamera, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetCamera", _wrap_iPcMeshSelect_SetCamera, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetMouseButtons", _wrap_iPcMeshSelect_SetMouseButtons, METH_VARARGS },
	 { (char *)"iPcMeshSelect_GetMouseButtons", _wrap_iPcMeshSelect_GetMouseButtons, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetGlobalSelection", _wrap_iPcMeshSelect_SetGlobalSelection, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasGlobalSelection", _wrap_iPcMeshSelect_HasGlobalSelection, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetFollowMode", _wrap_iPcMeshSelect_SetFollowMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasFollowMode", _wrap_iPcMeshSelect_HasFollowMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetFollowAlwaysMode", _wrap_iPcMeshSelect_SetFollowAlwaysMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasFollowAlwaysMode", _wrap_iPcMeshSelect_HasFollowAlwaysMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetDragMode", _wrap_iPcMeshSelect_SetDragMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasDragMode", _wrap_iPcMeshSelect_HasDragMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetDragPlaneNormal", _wrap_iPcMeshSelect_SetDragPlaneNormal, METH_VARARGS },
	 { (char *)"iPcMeshSelect_GetDragPlaneNormal", _wrap_iPcMeshSelect_GetDragPlaneNormal, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetSendmoveEvent", _wrap_iPcMeshSelect_SetSendmoveEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasSendmoveEvent", _wrap_iPcMeshSelect_HasSendmoveEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetSendupEvent", _wrap_iPcMeshSelect_SetSendupEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasSendupEvent", _wrap_iPcMeshSelect_HasSendupEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetSenddownEvent", _wrap_iPcMeshSelect_SetSenddownEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasSenddownEvent", _wrap_iPcMeshSelect_HasSenddownEvent, METH_VARARGS },
	 { (char *)"delete_iPcMeshSelect", _wrap_delete_iPcMeshSelect, METH_VARARGS },
	 { (char *)"iPcMeshSelect_swigregister", iPcMeshSelect_swigregister, METH_VARARGS },
	 { (char *)"celCreateMeshSelect", _wrap_celCreateMeshSelect, METH_VARARGS },
	 { (char *)"celGetMeshSelect", _wrap_celGetMeshSelect, METH_VARARGS },
	 { (char *)"scfQuery_iPcMeshSelect", _wrap_scfQuery_iPcMeshSelect, METH_VARARGS },
	 { (char *)"iPcMesh_LoadMesh", _wrap_iPcMesh_LoadMesh, METH_VARARGS },
	 { (char *)"iPcMesh_SetMesh", _wrap_iPcMesh_SetMesh, METH_VARARGS },
	 { (char *)"iPcMesh_CreateEmptyThing", _wrap_iPcMesh_CreateEmptyThing, METH_VARARGS },
	 { (char *)"iPcMesh_GetMesh", _wrap_iPcMesh_GetMesh, METH_VARARGS },
	 { (char *)"iPcMesh_MoveMesh", _wrap_iPcMesh_MoveMesh, METH_VARARGS },
	 { (char *)"iPcMesh_SetAction", _wrap_iPcMesh_SetAction, METH_VARARGS },
	 { (char *)"iPcMesh_GetAction", _wrap_iPcMesh_GetAction, METH_VARARGS },
	 { (char *)"iPcMesh_Hide", _wrap_iPcMesh_Hide, METH_VARARGS },
	 { (char *)"iPcMesh_Show", _wrap_iPcMesh_Show, METH_VARARGS },
	 { (char *)"iPcMesh_IsVisible", _wrap_iPcMesh_IsVisible, METH_VARARGS },
	 { (char *)"delete_iPcMesh", _wrap_delete_iPcMesh, METH_VARARGS },
	 { (char *)"iPcMesh_swigregister", iPcMesh_swigregister, METH_VARARGS },
	 { (char *)"celCreateMesh", _wrap_celCreateMesh, METH_VARARGS },
	 { (char *)"celGetMesh", _wrap_celGetMesh, METH_VARARGS },
	 { (char *)"scfQuery_iPcMesh", _wrap_scfQuery_iPcMesh, METH_VARARGS },
	 { (char *)"iPcTimer_WakeUp", _wrap_iPcTimer_WakeUp, METH_VARARGS },
	 { (char *)"iPcTimer_Clear", _wrap_iPcTimer_Clear, METH_VARARGS },
	 { (char *)"delete_iPcTimer", _wrap_delete_iPcTimer, METH_VARARGS },
	 { (char *)"iPcTimer_swigregister", iPcTimer_swigregister, METH_VARARGS },
	 { (char *)"celCreateTimer", _wrap_celCreateTimer, METH_VARARGS },
	 { (char *)"celGetTimer", _wrap_celGetTimer, METH_VARARGS },
	 { (char *)"scfQuery_iPcTimer", _wrap_scfQuery_iPcTimer, METH_VARARGS },
	 { (char *)"iPcSolid_SetMesh", _wrap_iPcSolid_SetMesh, METH_VARARGS },
	 { (char *)"iPcSolid_GetMesh", _wrap_iPcSolid_GetMesh, METH_VARARGS },
	 { (char *)"iPcSolid_GetCollider", _wrap_iPcSolid_GetCollider, METH_VARARGS },
	 { (char *)"delete_iPcSolid", _wrap_delete_iPcSolid, METH_VARARGS },
	 { (char *)"iPcSolid_swigregister", iPcSolid_swigregister, METH_VARARGS },
	 { (char *)"celCreateSolid", _wrap_celCreateSolid, METH_VARARGS },
	 { (char *)"celGetSolid", _wrap_celGetSolid, METH_VARARGS },
	 { (char *)"scfQuery_iPcSolid", _wrap_scfQuery_iPcSolid, METH_VARARGS },
	 { (char *)"iPcGravity_CreateGravityColliderFromMesh", _wrap_iPcGravity_CreateGravityColliderFromMesh, METH_VARARGS },
	 { (char *)"iPcGravity_CreateGravityCollider", _wrap_iPcGravity_CreateGravityCollider, METH_VARARGS },
	 { (char *)"iPcGravity_GetGravityCollider", _wrap_iPcGravity_GetGravityCollider, METH_VARARGS },
	 { (char *)"iPcGravity_SetMovable", _wrap_iPcGravity_SetMovable, METH_VARARGS },
	 { (char *)"iPcGravity_GetMovable", _wrap_iPcGravity_GetMovable, METH_VARARGS },
	 { (char *)"iPcGravity_SetSolid", _wrap_iPcGravity_SetSolid, METH_VARARGS },
	 { (char *)"iPcGravity_GetSolid", _wrap_iPcGravity_GetSolid, METH_VARARGS },
	 { (char *)"iPcGravity_SetWeight", _wrap_iPcGravity_SetWeight, METH_VARARGS },
	 { (char *)"iPcGravity_GetWeight", _wrap_iPcGravity_GetWeight, METH_VARARGS },
	 { (char *)"iPcGravity_ClearForces", _wrap_iPcGravity_ClearForces, METH_VARARGS },
	 { (char *)"iPcGravity_ClearPermanentForces", _wrap_iPcGravity_ClearPermanentForces, METH_VARARGS },
	 { (char *)"iPcGravity_ResetSpeed", _wrap_iPcGravity_ResetSpeed, METH_VARARGS },
	 { (char *)"iPcGravity_ApplyForce", _wrap_iPcGravity_ApplyForce, METH_VARARGS },
	 { (char *)"iPcGravity_ApplyPermanentForce", _wrap_iPcGravity_ApplyPermanentForce, METH_VARARGS },
	 { (char *)"iPcGravity_IsResting", _wrap_iPcGravity_IsResting, METH_VARARGS },
	 { (char *)"iPcGravity_SetActive", _wrap_iPcGravity_SetActive, METH_VARARGS },
	 { (char *)"iPcGravity_IsActive", _wrap_iPcGravity_IsActive, METH_VARARGS },
	 { (char *)"delete_iPcGravity", _wrap_delete_iPcGravity, METH_VARARGS },
	 { (char *)"iPcGravity_swigregister", iPcGravity_swigregister, METH_VARARGS },
	 { (char *)"celCreateGravity", _wrap_celCreateGravity, METH_VARARGS },
	 { (char *)"celGetGravity", _wrap_celGetGravity, METH_VARARGS },
	 { (char *)"scfQuery_iPcGravity", _wrap_scfQuery_iPcGravity, METH_VARARGS },
	 { (char *)"iPcMovable_SetMesh", _wrap_iPcMovable_SetMesh, METH_VARARGS },
	 { (char *)"iPcMovable_GetMesh", _wrap_iPcMovable_GetMesh, METH_VARARGS },
	 { (char *)"iPcMovable_SetPos", _wrap_iPcMovable_SetPos, METH_VARARGS },
	 { (char *)"iPcMovable_Move", _wrap_iPcMovable_Move, METH_VARARGS },
	 { (char *)"iPcMovable_AddConstraint", _wrap_iPcMovable_AddConstraint, METH_VARARGS },
	 { (char *)"iPcMovable_RemoveConstraint", _wrap_iPcMovable_RemoveConstraint, METH_VARARGS },
	 { (char *)"iPcMovable_RemoveAllConstraints", _wrap_iPcMovable_RemoveAllConstraints, METH_VARARGS },
	 { (char *)"delete_iPcMovable", _wrap_delete_iPcMovable, METH_VARARGS },
	 { (char *)"iPcMovable_swigregister", iPcMovable_swigregister, METH_VARARGS },
	 { (char *)"celCreateMovable", _wrap_celCreateMovable, METH_VARARGS },
	 { (char *)"celGetMovable", _wrap_celGetMovable, METH_VARARGS },
	 { (char *)"scfQuery_iPcMovable", _wrap_scfQuery_iPcMovable, METH_VARARGS },
	 { (char *)"iPcInventory_AddEntity", _wrap_iPcInventory_AddEntity, METH_VARARGS },
	 { (char *)"iPcInventory_RemoveEntity", _wrap_iPcInventory_RemoveEntity, METH_VARARGS },
	 { (char *)"iPcInventory_RemoveAll", _wrap_iPcInventory_RemoveAll, METH_VARARGS },
	 { (char *)"iPcInventory_GetEntityCount", _wrap_iPcInventory_GetEntityCount, METH_VARARGS },
	 { (char *)"iPcInventory_GetEntity", _wrap_iPcInventory_GetEntity, METH_VARARGS },
	 { (char *)"iPcInventory_SetStrictCharacteristics", _wrap_iPcInventory_SetStrictCharacteristics, METH_VARARGS },
	 { (char *)"iPcInventory_HasStrictCharacteristics", _wrap_iPcInventory_HasStrictCharacteristics, METH_VARARGS },
	 { (char *)"iPcInventory_SetConstraints", _wrap_iPcInventory_SetConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_GetConstraints", _wrap_iPcInventory_GetConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_RemoveConstraints", _wrap_iPcInventory_RemoveConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_RemoveAllConstraints", _wrap_iPcInventory_RemoveAllConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_GetCurrentCharacteristic", _wrap_iPcInventory_GetCurrentCharacteristic, METH_VARARGS },
	 { (char *)"iPcInventory_MarkDirty", _wrap_iPcInventory_MarkDirty, METH_VARARGS },
	 { (char *)"iPcInventory_TestConstraints", _wrap_iPcInventory_TestConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_Dump", _wrap_iPcInventory_Dump, METH_VARARGS },
	 { (char *)"delete_iPcInventory", _wrap_delete_iPcInventory, METH_VARARGS },
	 { (char *)"iPcInventory_swigregister", iPcInventory_swigregister, METH_VARARGS },
	 { (char *)"celCreateInventory", _wrap_celCreateInventory, METH_VARARGS },
	 { (char *)"celGetInventory", _wrap_celGetInventory, METH_VARARGS },
	 { (char *)"scfQuery_iPcInventory", _wrap_scfQuery_iPcInventory, METH_VARARGS },
	 { (char *)"iPcCharacteristics_SetCharacteristic", _wrap_iPcCharacteristics_SetCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_SetInheritedCharacteristic", _wrap_iPcCharacteristics_SetInheritedCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_GetCharacteristic", _wrap_iPcCharacteristics_GetCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_GetLocalCharacteristic", _wrap_iPcCharacteristics_GetLocalCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_GetInheritedCharacteristic", _wrap_iPcCharacteristics_GetInheritedCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_ClearCharacteristic", _wrap_iPcCharacteristics_ClearCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_HasCharacteristic", _wrap_iPcCharacteristics_HasCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_ClearAll", _wrap_iPcCharacteristics_ClearAll, METH_VARARGS },
	 { (char *)"iPcCharacteristics_AddToInventory", _wrap_iPcCharacteristics_AddToInventory, METH_VARARGS },
	 { (char *)"iPcCharacteristics_RemoveFromInventory", _wrap_iPcCharacteristics_RemoveFromInventory, METH_VARARGS },
	 { (char *)"iPcCharacteristics_MarkDirty", _wrap_iPcCharacteristics_MarkDirty, METH_VARARGS },
	 { (char *)"iPcCharacteristics_TestConstraints", _wrap_iPcCharacteristics_TestConstraints, METH_VARARGS },
	 { (char *)"iPcCharacteristics_Dump", _wrap_iPcCharacteristics_Dump, METH_VARARGS },
	 { (char *)"delete_iPcCharacteristics", _wrap_delete_iPcCharacteristics, METH_VARARGS },
	 { (char *)"iPcCharacteristics_swigregister", iPcCharacteristics_swigregister, METH_VARARGS },
	 { (char *)"celCreateCharacteristics", _wrap_celCreateCharacteristics, METH_VARARGS },
	 { (char *)"celGetCharacteristics", _wrap_celGetCharacteristics, METH_VARARGS },
	 { (char *)"scfQuery_iPcCharacteristics", _wrap_scfQuery_iPcCharacteristics, METH_VARARGS },
	 { NULL, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_celInitializerTo_p_csInitializer(void *x) {
    return (void *)((csInitializer *)  ((celInitializer *) x));
}
static void *_p_iAwsRGBKeyTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsKey *) ((iAwsRGBKey *) x));
}
static void *_p_iEventTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEvent *) x));
}
static void *_p_iRendererLightmapTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iRendererLightmap *) x));
}
static void *_p_iSuperLightmapTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSuperLightmap *) x));
}
static void *_p_iConsoleOutputTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iConsoleOutput *) x));
}
static void *_p_iTerrainObjectStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTerrainObjectState *) x));
}
static void *_p_iClipper2DTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iClipper2D *) x));
}
static void *_p_iDebugHelperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDebugHelper *) x));
}
static void *_p_csGeomDebugHelperTo_p_iBase(void *x) {
    return (void *)((iBase *) (iDebugHelper *) ((csGeomDebugHelper *) x));
}
static void *_p_iDocumentAttributeTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDocumentAttribute *) x));
}
static void *_p_iMaterialEngineTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMaterialEngine *) x));
}
static void *_p_iImageIOTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iImageIO *) x));
}
static void *_p_iBillboardTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iBillboard *) x));
}
static void *_p_iPcBillboardTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcBillboard *) x));
}
static void *_p_iLoaderStatusTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLoaderStatus *) x));
}
static void *_p_iImageTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iImage *) x));
}
static void *_p_iPcCharacteristicsTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcCharacteristics *) x));
}
static void *_p_iTextureHandleTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTextureHandle *) x));
}
static void *_p_iGeneralMeshStateTo_p_iBase(void *x) {
    return (void *)((iBase *) (iGeneralMeshCommonState *) ((iGeneralMeshState *) x));
}
static void *_p_iDynamicsTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDynamics *) x));
}
static void *_p_iModelConverterTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iModelConverter *) x));
}
static void *_p_iParameterESMTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iParameterESM *) x));
}
static void *_p_csViewTo_p_iBase(void *x) {
    return (void *)((iBase *) (iView *) ((csView *) x));
}
static void *_p_iPcCommandInputTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcCommandInput *) x));
}
static void *_p_iAwsIntKeyTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsKey *) ((iAwsIntKey *) x));
}
static void *_p_iSaverTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSaver *) x));
}
static void *_p_iMeshListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshList *) x));
}
static void *_p_iEventPlugTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEventPlug *) x));
}
static void *_p_iCelPropertyClassTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelPropertyClass *) x));
}
static void *_p_iSoundWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSoundWrapper *) x));
}
static void *_p_iTextureWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTextureWrapper *) x));
}
static void *_p_iMaterialWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMaterialWrapper *) x));
}
static void *_p_iMeshWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshWrapper *) x));
}
static void *_p_iMeshFactoryWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshFactoryWrapper *) x));
}
static void *_p_iStringTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iString *) x));
}
static void *_p_iSequenceWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSequenceWrapper *) x));
}
static void *_p_csColliderWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *) (iObject *)(csObject *) ((csColliderWrapper *) x));
}
static void *_p_iEngineTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEngine *) x));
}
static void *_p_iConsoleWatcherTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iConsoleWatcher *) x));
}
static void *_p_iPcInventoryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcInventory *) x));
}
static void *_p_iMaterialTo_p_iBase(void *x) {
    return (void *)((iBase *) (iShaderVariableContext *) ((iMaterial *) x));
}
static void *_p_iSimpleFormerStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSimpleFormerState *) x));
}
static void *_p_iSprite2DUVAnimationTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSprite2DUVAnimation *) x));
}
static void *_p_csPolygonMeshTo_p_iBase(void *x) {
    return (void *)((iBase *) (iPolygonMesh *) ((csPolygonMesh *) x));
}
static void *_p_iPolygonMeshTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPolygonMesh *) x));
}
static void *_p_iTerrainFactoryStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTerrainFactoryState *) x));
}
static void *_p_iThingFactoryStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iThingFactoryState *) x));
}
static void *_p_iSpriteCal3DFactoryStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSpriteCal3DFactoryState *) x));
}
static void *_p_iSprite3DFactoryStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSprite3DFactoryState *) x));
}
static void *_p_iSprite2DFactoryStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSprite2DFactoryState *) x));
}
static void *_p_iGeneralFactoryStateTo_p_iBase(void *x) {
    return (void *)((iBase *) (iGeneralMeshCommonState *) ((iGeneralFactoryState *) x));
}
static void *_p_iSCFTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSCF *) x));
}
static void *_p_iGraphics2DTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iGraphics2D *) x));
}
static void *_p_iDocumentTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDocument *) x));
}
static void *_p_iShaderPriorityListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iShaderPriorityList *) x));
}
static void *_p_iCelEntityListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelEntityList *) x));
}
static void *_p_iDataBufferTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDataBuffer *) x));
}
static void *_p_iMeshObjectTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshObject *) x));
}
static void *_p_iScriptObjectTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iScriptObject *) x));
}
static void *_p_iSequenceTimedOperationTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSequenceTimedOperation *) x));
}
static void *_p_iFontServerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFontServer *) x));
}
static void *_p_csPolygonMeshBoxTo_p_iBase(void *x) {
    return (void *)((iBase *) (iPolygonMesh *) ((csPolygonMeshBox *) x));
}
static void *_p_iStringArrayTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iStringArray *) x));
}
static void *_p_iReporterTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iReporter *) x));
}
static void *_p_iPathTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPath *) x));
}
static void *_p_iDocumentNodeIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDocumentNodeIterator *) x));
}
static void *_p_iDocumentAttributeIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDocumentAttributeIterator *) x));
}
static void *_p_iConfigIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iConfigIterator *) x));
}
static void *_p_iPluginIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPluginIterator *) x));
}
static void *_p_iEventAttributeIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEventAttributeIterator *) x));
}
static void *_p_iObjectRegistryIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iObjectRegistryIterator *) x));
}
static void *_p_iObjectIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iObjectIterator *) x));
}
static void *_p_iLightIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLightIterator *) x));
}
static void *_p_iSectorIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSectorIterator *) x));
}
static void *_p_iMeshWrapperIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshWrapperIterator *) x));
}
static void *_p_iVisibilityObjectIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVisibilityObjectIterator *) x));
}
static void *_p_iStreamIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iStreamIterator *) x));
}
static void *_p_iReporterIteratorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iReporterIterator *) x));
}
static void *_p_iGenMeshAnimationControlTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iGenMeshAnimationControl *) x));
}
static void *_p_iObjectRegistryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iObjectRegistry *) x));
}
static void *_p_iCelPlLayerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelPlLayer *) x));
}
static void *_p_iCelBlLayerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelBlLayer *) x));
}
static void *_p_iPcLinearMovementTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcLinearMovement *) x));
}
static void *_p_iObjectModelListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iObjectModelListener *) x));
}
static void *_p_iCameraSectorListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCameraSectorListener *) x));
}
static void *_p_iMovableListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMovableListener *) x));
}
static void *_p_iVisibilityCullerListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVisibilityCullerListener *) x));
}
static void *_p_csTinyDocumentSystemTo_p_iBase(void *x) {
    return (void *)((iBase *) (iDocumentSystem *) ((csTinyDocumentSystem *) x));
}
static void *_p_iDocumentSystemTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDocumentSystem *) x));
}
static void *_p_iReporterListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iReporterListener *) x));
}
static void *_p_iStandardReporterListenerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iStandardReporterListener *) x));
}
static void *_p_iPcTimerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcTimer *) x));
}
static void *_p_iSprite2DUVAnimationFrameTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSprite2DUVAnimationFrame *) x));
}
static void *_p_iTerraFormerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTerraFormer *) x));
}
static void *_p_iSectorTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSector *) x));
}
static void *_p_iSequenceTriggerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSequenceTrigger *) x));
}
static void *_p_iPortalContainerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPortalContainer *) x));
}
static void *_p_iAwsKeyContainerTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsKey *) ((iAwsKeyContainer *) x));
}
static void *_p_iPcGravityTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcGravity *) x));
}
static void *_p_iCameraPositionListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCameraPositionList *) x));
}
static void *_p_iRegionListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iRegionList *) x));
}
static void *_p_iSpriteActionTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSpriteAction *) x));
}
static void *_p_iLightListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLightList *) x));
}
static void *_p_iOffscreenCanvasCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iOffscreenCanvasCallback *) x));
}
static void *_p_iMeshObjectDrawCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshObjectDrawCallback *) x));
}
static void *_p_iLightCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLightCallback *) x));
}
static void *_p_iSectorCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSectorCallback *) x));
}
static void *_p_iSectorMeshCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSectorMeshCallback *) x));
}
static void *_p_iEngineSectorCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEngineSectorCallback *) x));
}
static void *_p_iTextureCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTextureCallback *) x));
}
static void *_p_iMeshDrawCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshDrawCallback *) x));
}
static void *_p_iPortalCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPortalCallback *) x));
}
static void *_p_iObjectTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iObject *) x));
}
static void *_p_iVisibilityObjectTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVisibilityObject *) x));
}
static void *_p_iDynamicsMoveCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDynamicsMoveCallback *) x));
}
static void *_p_iDynamicsCollisionCallbackTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDynamicsCollisionCallback *) x));
}
static void *_p_csObjectTo_p_iBase(void *x) {
    return (void *)((iBase *) (iObject *) ((csObject *) x));
}
static void *_p_iCameraTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCamera *) x));
}
static void *_p_iMeshFactoryListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshFactoryList *) x));
}
static void *_p_iPcCameraTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcCamera *) x));
}
static void *_p_iGraphics3DTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iGraphics3D *) x));
}
static void *_p_iVirtualClockTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVirtualClock *) x));
}
static void *_p_iMeshObjectTypeTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshObjectType *) x));
}
static void *_p_iSprite2DStateTo_p_iBase(void *x) {
    return (void *)((iBase *) (iSprite2DFactoryState *) ((iSprite2DState *) x));
}
static void *_p_iThingEnvironmentTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iThingEnvironment *) x));
}
static void *_p_iMovableTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMovable *) x));
}
static void *_p_iPcMovableTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcMovable *) x));
}
static void *_p_iSectorListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSectorList *) x));
}
static void *_p_iShaderVariableContextTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iShaderVariableContext *) x));
}
static void *_p_iCollideSystemTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCollideSystem *) x));
}
static void *_p_iDynamicSystemTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDynamicSystem *) x));
}
static void *_p_iPcDynamicSystemTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcDynamicSystem *) x));
}
static void *_p_csPathTo_p_iBase(void *x) {
    return (void *)((iBase *) (iPath *) ((csPath *) x));
}
static void *_p_iShaderCompilerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iShaderCompiler *) x));
}
static void *_p_iLightingProcessDataTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLightingProcessData *) x));
}
static void *_p_iCameraPositionTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCameraPosition *) x));
}
static void *_p_iBinaryLoaderPluginTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iBinaryLoaderPlugin *) x));
}
static void *_p_iLoaderPluginTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLoaderPlugin *) x));
}
static void *_p_iHaloTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iHalo *) x));
}
static void *_p_iSpriteCal3DSocketTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSpriteCal3DSocket *) x));
}
static void *_p_iStreamTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iStream *) x));
}
static void *_p_iVideoStreamTo_p_iBase(void *x) {
    return (void *)((iBase *) (iStream *) ((iVideoStream *) x));
}
static void *_p_iAudioStreamTo_p_iBase(void *x) {
    return (void *)((iBase *) (iStream *) ((iAudioStream *) x));
}
static void *_p_iVisibilityCullerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVisibilityCuller *) x));
}
static void *_p_iGeneralMeshCommonStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iGeneralMeshCommonState *) x));
}
static void *_p_iConfigFileTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iConfigFile *) x));
}
static void *_p_iEventQueueTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEventQueue *) x));
}
static void *_p_iSoundSourceTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSoundSource *) x));
}
static void *_p_iRigidBodyTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iRigidBody *) x));
}
static void *_p_iEventOutletTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEventOutlet *) x));
}
static void *_p_iDocumentNodeTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iDocumentNode *) x));
}
static void *_p_iAwsComponentNodeTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsKey *)(iAwsKeyContainer *) ((iAwsComponentNode *) x));
}
static void *_p_iStreamFormatTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iStreamFormat *) x));
}
static void *_p_iKeyboardDriverTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iKeyboardDriver *) x));
}
static void *_p_iSoundDriverTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSoundDriver *) x));
}
static void *_p_iSpriteCal3DStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSpriteCal3DState *) x));
}
static void *_p_iSprite3DStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSprite3DState *) x));
}
static void *_p_iBodyGroupTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iBodyGroup *) x));
}
static void *_p_iPcDynamicBodyTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcDynamicBody *) x));
}
static void *_p_iFrustumViewTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFrustumView *) x));
}
static void *_p_iCelBehaviourTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelBehaviour *) x));
}
static void *_p_iEventHandlerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEventHandler *) x));
}
static void *_p_iAnimTimeUpdateHandlerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAnimTimeUpdateHandler *) x));
}
static void *_p_iSoundLoaderTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSoundLoader *) x));
}
static void *_p__csPyEventHandlerTo_p_iBase(void *x) {
    return (void *)((iBase *) (iEventHandler *) ((_csPyEventHandler *) x));
}
static void *_p_iPortalTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPortal *) x));
}
static void *_p_iAwsTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAws *) x));
}
static void *_p_iEngineSequenceParametersTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEngineSequenceParameters *) x));
}
static void *_p_iAwsKeyTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsKey *) x));
}
static void *_p_iGenMeshAnimationControlTypeTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iGenMeshAnimationControlType *) x));
}
static void *_p_iSoundRenderTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSoundRender *) x));
}
static void *_p_iFileTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFile *) x));
}
static void *_p_iKeyComposerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iKeyComposer *) x));
}
static void *_p_iShaderRenderInterfaceTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iShaderRenderInterface *) x));
}
static void *_p_iMaterialListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMaterialList *) x));
}
static void *_p_iAwsRectKeyTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsKey *) ((iAwsRectKey *) x));
}
static void *_p_iLightingProcessInfoTo_p_iBase(void *x) {
    return (void *)((iBase *) (iFrustumViewUserdata *) ((iLightingProcessInfo *) x));
}
static void *_p_iSpriteSocketTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSpriteSocket *) x));
}
static void *_p_iComponentTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iComponent *) x));
}
static void *_p_iAwsComponentTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsSource *) ((iAwsComponent *) x));
}
static void *_p_iAwsStringKeyTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsKey *) ((iAwsStringKey *) x));
}
static void *_p_iAwsSourceTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsSource *) x));
}
static void *_p_iCelEntityTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelEntity *) x));
}
static void *_p_iVFSTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iVFS *) x));
}
static void *_p_iJoystickDriverTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iJoystickDriver *) x));
}
static void *_p_iMouseDriverTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMouseDriver *) x));
}
static void *_p_iMeshObjectFactoryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iMeshObjectFactory *) x));
}
static void *_p_iGenMeshAnimationControlFactoryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iGenMeshAnimationControlFactory *) x));
}
static void *_p_iAwsConnectionNodeFactoryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsConnectionNodeFactory *) x));
}
static void *_p_iAwsKeyFactoryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsKeyFactory *) x));
}
static void *_p_iAwsComponentFactoryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsComponentFactory *) x));
}
static void *_p_iFactoryTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFactory *) x));
}
static void *_p_iLoaderTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLoader *) x));
}
static void *_p_iFrustumViewUserdataTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFrustumViewUserdata *) x));
}
static void *_p_iAwsSinkTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsSink *) x));
}
static void *_p_iShaderTo_p_iBase(void *x) {
    return (void *)((iBase *) (iShaderVariableContext *) ((iShader *) x));
}
static void *_p_iTextureListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTextureList *) x));
}
static void *_p_iNativeWindowTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iNativeWindow *) x));
}
static void *_p_iSpriteFrameTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSpriteFrame *) x));
}
static void *_p_iFontDeleteNotifyTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFontDeleteNotify *) x));
}
static void *_p_iThingStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iThingState *) x));
}
static void *_p_iAwsFloatKeyTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsKey *) ((iAwsFloatKey *) x));
}
static void *_p_iJointTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iJoint *) x));
}
static void *_p_iFontTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iFont *) x));
}
static void *_p_iTerraSamplerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTerraSampler *) x));
}
static void *_p_iAwsSlotTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsSlot *) x));
}
static void *_p_iLightTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iLight *) x));
}
static void *_p_iBallStateTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iBallState *) x));
}
static void *_p_iViewTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iView *) x));
}
static void *_p_iColliderTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCollider *) x));
}
static void *_p_iCelParameterBlockTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelParameterBlock *) x));
}
static void *_p_iPcMeshSelectTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcMeshSelect *) x));
}
static void *_p_iSoundHandleTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iSoundHandle *) x));
}
static void *_p_iPolygonHandleTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPolygonHandle *) x));
}
static void *_p_iObjectModelTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iObjectModel *) x));
}
static void *_p_iAwsConnectionKeyTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsKey *) ((iAwsConnectionKey *) x));
}
static void *_p_iCelPropertyClassListTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCelPropertyClassList *) x));
}
static void *_p_iRegionTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iRegion *) x));
}
static void *_p_iStringSetTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iStringSet *) x));
}
static void *_p_iPcRegionTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcRegion *) x));
}
static void *_p_iNativeWindowManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iNativeWindowManager *) x));
}
static void *_p_iConfigManagerTo_p_iBase(void *x) {
    return (void *)((iBase *) (iConfigFile *) ((iConfigManager *) x));
}
static void *_p_iPluginManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPluginManager *) x));
}
static void *_p_iCacheManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iCacheManager *) x));
}
static void *_p_iAwsLayoutManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsLayoutManager *) x));
}
static void *_p_iAwsSinkManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsSinkManager *) x));
}
static void *_p_iAwsPrefManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iAwsPrefManager *) x));
}
static void *_p_iShaderManagerTo_p_iBase(void *x) {
    return (void *)((iBase *) (iShaderVariableContext *) ((iShaderManager *) x));
}
static void *_p_iTextureManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iTextureManager *) x));
}
static void *_p_iEngineSequenceManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEngineSequenceManager *) x));
}
static void *_p_iBillboardManagerTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iBillboardManager *) x));
}
static void *_p_iAwsPointKeyTo_p_iBase(void *x) {
    return (void *)((iBase *) (iAwsKey *) ((iAwsPointKey *) x));
}
static void *_p_iScriptTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iScript *) x));
}
static void *_p_iPcSolidTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcSolid *) x));
}
static void *_p_iPcMeshTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iPcMesh *) x));
}
static void *_p_iEventCordTo_p_iBase(void *x) {
    return (void *)((iBase *)  ((iEventCord *) x));
}
static void *_p_csViewTo_p_iView(void *x) {
    return (void *)((iView *)  ((csView *) x));
}
static void *_p_csPathTo_p_iPath(void *x) {
    return (void *)((iPath *)  ((csPath *) x));
}
static swig_type_info _swigt__p_csInitializer[] = {{"_p_csInitializer", 0, "csInitializer *", 0},{"_p_csInitializer"},{"_p_celInitializer", _p_celInitializerTo_p_csInitializer},{0}};
static swig_type_info _swigt__p_celInitializer[] = {{"_p_celInitializer", 0, "celInitializer *", 0},{"_p_celInitializer"},{0}};
static swig_type_info _swigt__p_iPcMovable[] = {{"_p_iPcMovable", 0, "iPcMovable *", 0},{"_p_iPcMovable"},{0}};
static swig_type_info _swigt__p_iPcMovableConstraint[] = {{"_p_iPcMovableConstraint", 0, "iPcMovableConstraint *", 0},{"_p_iPcMovableConstraint"},{0}};
static swig_type_info _swigt__p_iPcBillboard[] = {{"_p_iPcBillboard", 0, "iPcBillboard *", 0},{"_p_iPcBillboard"},{0}};
static swig_type_info _swigt__p_iBillboard[] = {{"_p_iBillboard", 0, "iBillboard *", 0},{"_p_iBillboard"},{0}};
static swig_type_info _swigt__p_iPcRegion[] = {{"_p_iPcRegion", 0, "iPcRegion *", 0},{"_p_iPcRegion"},{0}};
static swig_type_info _swigt__p_iCelPlLayer[] = {{"_p_iCelPlLayer", 0, "iCelPlLayer *", 0},{"_p_iCelPlLayer"},{0}};
static swig_type_info _swigt__p_iCelBlLayer[] = {{"_p_iCelBlLayer", 0, "iCelBlLayer *", 0},{"_p_iCelBlLayer"},{0}};
static swig_type_info _swigt__p_csOrthoTransform[] = {{"_p_csOrthoTransform", 0, "csOrthoTransform *", 0},{"_p_csOrthoTransform"},{0}};
static swig_type_info _swigt__p_iCollider[] = {{"_p_iCollider", 0, "iCollider *", 0},{"_p_iCollider"},{0}};
static swig_type_info _swigt__p_iPcInventory[] = {{"_p_iPcInventory", 0, "iPcInventory *", 0},{"_p_iPcInventory"},{0}};
static swig_type_info _swigt__p_iPcGravity[] = {{"_p_iPcGravity", 0, "iPcGravity *", 0},{"_p_iPcGravity"},{0}};
static swig_type_info _swigt__p_iBase[] = {{"_p_iBase", 0, "iBase *", 0},{"_p_iAwsRGBKey", _p_iAwsRGBKeyTo_p_iBase},{"_p_iRendererLightmap", _p_iRendererLightmapTo_p_iBase},{"_p_iSuperLightmap", _p_iSuperLightmapTo_p_iBase},{"_p_iConsoleOutput", _p_iConsoleOutputTo_p_iBase},{"_p_iTerrainObjectState", _p_iTerrainObjectStateTo_p_iBase},{"_p_iClipper2D", _p_iClipper2DTo_p_iBase},{"_p_iDebugHelper", _p_iDebugHelperTo_p_iBase},{"_p_csGeomDebugHelper", _p_csGeomDebugHelperTo_p_iBase},{"_p_iDocumentAttribute", _p_iDocumentAttributeTo_p_iBase},{"_p_iMaterialEngine", _p_iMaterialEngineTo_p_iBase},{"_p_iImageIO", _p_iImageIOTo_p_iBase},{"_p_iPath", _p_iPathTo_p_iBase},{"_p_iBillboard", _p_iBillboardTo_p_iBase},{"_p_iPcBillboard", _p_iPcBillboardTo_p_iBase},{"_p_iSCF", _p_iSCFTo_p_iBase},{"_p_iLoaderStatus", _p_iLoaderStatusTo_p_iBase},{"_p_iPcCharacteristics", _p_iPcCharacteristicsTo_p_iBase},{"_p_iTextureHandle", _p_iTextureHandleTo_p_iBase},{"_p_iGeneralMeshState", _p_iGeneralMeshStateTo_p_iBase},{"_p_iDynamics", _p_iDynamicsTo_p_iBase},{"_p_iParameterESM", _p_iParameterESMTo_p_iBase},{"_p_iModelConverter", _p_iModelConverterTo_p_iBase},{"_p_iPcCommandInput", _p_iPcCommandInputTo_p_iBase},{"_p_iAwsIntKey", _p_iAwsIntKeyTo_p_iBase},{"_p_iMeshList", _p_iMeshListTo_p_iBase},{"_p_iEventPlug", _p_iEventPlugTo_p_iBase},{"_p_iCelPropertyClass", _p_iCelPropertyClassTo_p_iBase},{"_p_iMeshFactoryWrapper", _p_iMeshFactoryWrapperTo_p_iBase},{"_p_iSoundWrapper", _p_iSoundWrapperTo_p_iBase},{"_p_iTextureWrapper", _p_iTextureWrapperTo_p_iBase},{"_p_iMaterialWrapper", _p_iMaterialWrapperTo_p_iBase},{"_p_iMeshWrapper", _p_iMeshWrapperTo_p_iBase},{"_p_iSequenceWrapper", _p_iSequenceWrapperTo_p_iBase},{"_p_csColliderWrapper", _p_csColliderWrapperTo_p_iBase},{"_p_iString", _p_iStringTo_p_iBase},{"_p_iConsoleWatcher", _p_iConsoleWatcherTo_p_iBase},{"_p_iPcInventory", _p_iPcInventoryTo_p_iBase},{"_p_iEngine", _p_iEngineTo_p_iBase},{"_p_iSimpleFormerState", _p_iSimpleFormerStateTo_p_iBase},{"_p_iMaterial", _p_iMaterialTo_p_iBase},{"_p_iSprite2DUVAnimation", _p_iSprite2DUVAnimationTo_p_iBase},{"_p_csPolygonMesh", _p_csPolygonMeshTo_p_iBase},{"_p_iPolygonMesh", _p_iPolygonMeshTo_p_iBase},{"_p_iTerrainFactoryState", _p_iTerrainFactoryStateTo_p_iBase},{"_p_iThingFactoryState", _p_iThingFactoryStateTo_p_iBase},{"_p_iSpriteCal3DFactoryState", _p_iSpriteCal3DFactoryStateTo_p_iBase},{"_p_iSprite3DFactoryState", _p_iSprite3DFactoryStateTo_p_iBase},{"_p_iSprite2DFactoryState", _p_iSprite2DFactoryStateTo_p_iBase},{"_p_iGeneralFactoryState", _p_iGeneralFactoryStateTo_p_iBase},{"_p_iGraphics2D", _p_iGraphics2DTo_p_iBase},{"_p_iDocument", _p_iDocumentTo_p_iBase},{"_p_iShaderPriorityList", _p_iShaderPriorityListTo_p_iBase},{"_p_iCelEntityList", _p_iCelEntityListTo_p_iBase},{"_p_iDataBuffer", _p_iDataBufferTo_p_iBase},{"_p_iMeshObject", _p_iMeshObjectTo_p_iBase},{"_p_iScriptObject", _p_iScriptObjectTo_p_iBase},{"_p_iSequenceTimedOperation", _p_iSequenceTimedOperationTo_p_iBase},{"_p_iHalo", _p_iHaloTo_p_iBase},{"_p_iFontServer", _p_iFontServerTo_p_iBase},{"_p_csPolygonMeshBox", _p_csPolygonMeshBoxTo_p_iBase},{"_p_iStringArray", _p_iStringArrayTo_p_iBase},{"_p_iReporter", _p_iReporterTo_p_iBase},{"_p_iLightIterator", _p_iLightIteratorTo_p_iBase},{"_p_iObjectIterator", _p_iObjectIteratorTo_p_iBase},{"_p_iObjectRegistryIterator", _p_iObjectRegistryIteratorTo_p_iBase},{"_p_iReporterIterator", _p_iReporterIteratorTo_p_iBase},{"_p_iStreamIterator", _p_iStreamIteratorTo_p_iBase},{"_p_iVisibilityObjectIterator", _p_iVisibilityObjectIteratorTo_p_iBase},{"_p_iMeshWrapperIterator", _p_iMeshWrapperIteratorTo_p_iBase},{"_p_iSectorIterator", _p_iSectorIteratorTo_p_iBase},{"_p_iDocumentNodeIterator", _p_iDocumentNodeIteratorTo_p_iBase},{"_p_iDocumentAttributeIterator", _p_iDocumentAttributeIteratorTo_p_iBase},{"_p_iConfigIterator", _p_iConfigIteratorTo_p_iBase},{"_p_iPluginIterator", _p_iPluginIteratorTo_p_iBase},{"_p_iEventAttributeIterator", _p_iEventAttributeIteratorTo_p_iBase},{"_p_iGenMeshAnimationControl", _p_iGenMeshAnimationControlTo_p_iBase},{"_p_iObjectRegistry", _p_iObjectRegistryTo_p_iBase},{"_p_iCelPlLayer", _p_iCelPlLayerTo_p_iBase},{"_p_iCelBlLayer", _p_iCelBlLayerTo_p_iBase},{"_p_iPcLinearMovement", _p_iPcLinearMovementTo_p_iBase},{"_p_iObjectModelListener", _p_iObjectModelListenerTo_p_iBase},{"_p_iCameraSectorListener", _p_iCameraSectorListenerTo_p_iBase},{"_p_iMovableListener", _p_iMovableListenerTo_p_iBase},{"_p_iVisibilityCullerListener", _p_iVisibilityCullerListenerTo_p_iBase},{"_p_iReporterListener", _p_iReporterListenerTo_p_iBase},{"_p_iStandardReporterListener", _p_iStandardReporterListenerTo_p_iBase},{"_p_csTinyDocumentSystem", _p_csTinyDocumentSystemTo_p_iBase},{"_p_iDocumentSystem", _p_iDocumentSystemTo_p_iBase},{"_p_iPcTimer", _p_iPcTimerTo_p_iBase},{"_p_csPath", _p_csPathTo_p_iBase},{"_p_iSprite2DUVAnimationFrame", _p_iSprite2DUVAnimationFrameTo_p_iBase},{"_p_iTerraFormer", _p_iTerraFormerTo_p_iBase},{"_p_iSector", _p_iSectorTo_p_iBase},{"_p_iSequenceTrigger", _p_iSequenceTriggerTo_p_iBase},{"_p_iPcGravity", _p_iPcGravityTo_p_iBase},{"_p_iPortalContainer", _p_iPortalContainerTo_p_iBase},{"_p_iAwsKeyContainer", _p_iAwsKeyContainerTo_p_iBase},{"_p_iCameraPositionList", _p_iCameraPositionListTo_p_iBase},{"_p_iRegionList", _p_iRegionListTo_p_iBase},{"_p_iSpriteAction", _p_iSpriteActionTo_p_iBase},{"_p_iBase"},{"_p_iLightList", _p_iLightListTo_p_iBase},{"_p_iFile", _p_iFileTo_p_iBase},{"_p_iOffscreenCanvasCallback", _p_iOffscreenCanvasCallbackTo_p_iBase},{"_p_iMeshObjectDrawCallback", _p_iMeshObjectDrawCallbackTo_p_iBase},{"_p_iLightCallback", _p_iLightCallbackTo_p_iBase},{"_p_iSectorCallback", _p_iSectorCallbackTo_p_iBase},{"_p_iSectorMeshCallback", _p_iSectorMeshCallbackTo_p_iBase},{"_p_iEngineSectorCallback", _p_iEngineSectorCallbackTo_p_iBase},{"_p_iTextureCallback", _p_iTextureCallbackTo_p_iBase},{"_p_iMeshDrawCallback", _p_iMeshDrawCallbackTo_p_iBase},{"_p_iPortalCallback", _p_iPortalCallbackTo_p_iBase},{"_p_iDynamicsMoveCallback", _p_iDynamicsMoveCallbackTo_p_iBase},{"_p_iDynamicsCollisionCallback", _p_iDynamicsCollisionCallbackTo_p_iBase},{"_p_iObject", _p_iObjectTo_p_iBase},{"_p_iVisibilityObject", _p_iVisibilityObjectTo_p_iBase},{"_p_csObject", _p_csObjectTo_p_iBase},{"_p_iCamera", _p_iCameraTo_p_iBase},{"_p_iPcCamera", _p_iPcCameraTo_p_iBase},{"_p_iMeshFactoryList", _p_iMeshFactoryListTo_p_iBase},{"_p_iGraphics3D", _p_iGraphics3DTo_p_iBase},{"_p_iVirtualClock", _p_iVirtualClockTo_p_iBase},{"_p_iMeshObjectType", _p_iMeshObjectTypeTo_p_iBase},{"_p_iSprite2DState", _p_iSprite2DStateTo_p_iBase},{"_p_iThingEnvironment", _p_iThingEnvironmentTo_p_iBase},{"_p_iMovable", _p_iMovableTo_p_iBase},{"_p_iPcMovable", _p_iPcMovableTo_p_iBase},{"_p_iAws", _p_iAwsTo_p_iBase},{"_p_iShaderVariableContext", _p_iShaderVariableContextTo_p_iBase},{"_p_iSectorList", _p_iSectorListTo_p_iBase},{"_p_iCollideSystem", _p_iCollideSystemTo_p_iBase},{"_p_iDynamicSystem", _p_iDynamicSystemTo_p_iBase},{"_p_iPcDynamicSystem", _p_iPcDynamicSystemTo_p_iBase},{"_p_iShaderCompiler", _p_iShaderCompilerTo_p_iBase},{"_p_iLightingProcessData", _p_iLightingProcessDataTo_p_iBase},{"_p_iCameraPosition", _p_iCameraPositionTo_p_iBase},{"_p_iBinaryLoaderPlugin", _p_iBinaryLoaderPluginTo_p_iBase},{"_p_iLoaderPlugin", _p_iLoaderPluginTo_p_iBase},{"_p_iSpriteCal3DSocket", _p_iSpriteCal3DSocketTo_p_iBase},{"_p_iStream", _p_iStreamTo_p_iBase},{"_p_iVideoStream", _p_iVideoStreamTo_p_iBase},{"_p_iAudioStream", _p_iAudioStreamTo_p_iBase},{"_p_iVisibilityCuller", _p_iVisibilityCullerTo_p_iBase},{"_p_iGeneralMeshCommonState", _p_iGeneralMeshCommonStateTo_p_iBase},{"_p_iConfigFile", _p_iConfigFileTo_p_iBase},{"_p_iEventQueue", _p_iEventQueueTo_p_iBase},{"_p_iVFS", _p_iVFSTo_p_iBase},{"_p_iRigidBody", _p_iRigidBodyTo_p_iBase},{"_p_iSoundSource", _p_iSoundSourceTo_p_iBase},{"_p_iFont", _p_iFontTo_p_iBase},{"_p_iEventOutlet", _p_iEventOutletTo_p_iBase},{"_p_iStreamFormat", _p_iStreamFormatTo_p_iBase},{"_p_iDocumentNode", _p_iDocumentNodeTo_p_iBase},{"_p_iAwsComponentNode", _p_iAwsComponentNodeTo_p_iBase},{"_p_iKeyboardDriver", _p_iKeyboardDriverTo_p_iBase},{"_p_iSoundDriver", _p_iSoundDriverTo_p_iBase},{"_p_iSpriteCal3DState", _p_iSpriteCal3DStateTo_p_iBase},{"_p_iSprite3DState", _p_iSprite3DStateTo_p_iBase},{"_p_iBodyGroup", _p_iBodyGroupTo_p_iBase},{"_p_iPcDynamicBody", _p_iPcDynamicBodyTo_p_iBase},{"_p_iFrustumView", _p_iFrustumViewTo_p_iBase},{"_p_iCelBehaviour", _p_iCelBehaviourTo_p_iBase},{"_p_iEventHandler", _p_iEventHandlerTo_p_iBase},{"_p_iAnimTimeUpdateHandler", _p_iAnimTimeUpdateHandlerTo_p_iBase},{"_p_iSoundLoader", _p_iSoundLoaderTo_p_iBase},{"_p__csPyEventHandler", _p__csPyEventHandlerTo_p_iBase},{"_p_iPortal", _p_iPortalTo_p_iBase},{"_p_iEngineSequenceParameters", _p_iEngineSequenceParametersTo_p_iBase},{"_p_iAwsKey", _p_iAwsKeyTo_p_iBase},{"_p_iView", _p_iViewTo_p_iBase},{"_p_iGenMeshAnimationControlType", _p_iGenMeshAnimationControlTypeTo_p_iBase},{"_p_iSoundRender", _p_iSoundRenderTo_p_iBase},{"_p_iKeyComposer", _p_iKeyComposerTo_p_iBase},{"_p_iShaderRenderInterface", _p_iShaderRenderInterfaceTo_p_iBase},{"_p_iMaterialList", _p_iMaterialListTo_p_iBase},{"_p_iAwsRectKey", _p_iAwsRectKeyTo_p_iBase},{"_p_iLightingProcessInfo", _p_iLightingProcessInfoTo_p_iBase},{"_p_iJoint", _p_iJointTo_p_iBase},{"_p_iSpriteSocket", _p_iSpriteSocketTo_p_iBase},{"_p_iComponent", _p_iComponentTo_p_iBase},{"_p_iAwsComponent", _p_iAwsComponentTo_p_iBase},{"_p_iLight", _p_iLightTo_p_iBase},{"_p_iAwsStringKey", _p_iAwsStringKeyTo_p_iBase},{"_p_iAwsSource", _p_iAwsSourceTo_p_iBase},{"_p_iCelEntity", _p_iCelEntityTo_p_iBase},{"_p_iJoystickDriver", _p_iJoystickDriverTo_p_iBase},{"_p_iMouseDriver", _p_iMouseDriverTo_p_iBase},{"_p_iMeshObjectFactory", _p_iMeshObjectFactoryTo_p_iBase},{"_p_iGenMeshAnimationControlFactory", _p_iGenMeshAnimationControlFactoryTo_p_iBase},{"_p_iAwsConnectionNodeFactory", _p_iAwsConnectionNodeFactoryTo_p_iBase},{"_p_iAwsKeyFactory", _p_iAwsKeyFactoryTo_p_iBase},{"_p_iAwsComponentFactory", _p_iAwsComponentFactoryTo_p_iBase},{"_p_iFactory", _p_iFactoryTo_p_iBase},{"_p_iLoader", _p_iLoaderTo_p_iBase},{"_p_iFrustumViewUserdata", _p_iFrustumViewUserdataTo_p_iBase},{"_p_iAwsSink", _p_iAwsSinkTo_p_iBase},{"_p_iShader", _p_iShaderTo_p_iBase},{"_p_iTextureList", _p_iTextureListTo_p_iBase},{"_p_iNativeWindow", _p_iNativeWindowTo_p_iBase},{"_p_iSpriteFrame", _p_iSpriteFrameTo_p_iBase},{"_p_iFontDeleteNotify", _p_iFontDeleteNotifyTo_p_iBase},{"_p_iThingState", _p_iThingStateTo_p_iBase},{"_p_iAwsFloatKey", _p_iAwsFloatKeyTo_p_iBase},{"_p_iTerraSampler", _p_iTerraSamplerTo_p_iBase},{"_p_iEvent", _p_iEventTo_p_iBase},{"_p_iAwsSlot", _p_iAwsSlotTo_p_iBase},{"_p_iBallState", _p_iBallStateTo_p_iBase},{"_p_iImage", _p_iImageTo_p_iBase},{"_p_iCollider", _p_iColliderTo_p_iBase},{"_p_iCelParameterBlock", _p_iCelParameterBlockTo_p_iBase},{"_p_iPcMeshSelect", _p_iPcMeshSelectTo_p_iBase},{"_p_iSoundHandle", _p_iSoundHandleTo_p_iBase},{"_p_iPolygonHandle", _p_iPolygonHandleTo_p_iBase},{"_p_iObjectModel", _p_iObjectModelTo_p_iBase},{"_p_iAwsConnectionKey", _p_iAwsConnectionKeyTo_p_iBase},{"_p_csView", _p_csViewTo_p_iBase},{"_p_iCelPropertyClassList", _p_iCelPropertyClassListTo_p_iBase},{"_p_iRegion", _p_iRegionTo_p_iBase},{"_p_iStringSet", _p_iStringSetTo_p_iBase},{"_p_iPcRegion", _p_iPcRegionTo_p_iBase},{"_p_iNativeWindowManager", _p_iNativeWindowManagerTo_p_iBase},{"_p_iConfigManager", _p_iConfigManagerTo_p_iBase},{"_p_iPluginManager", _p_iPluginManagerTo_p_iBase},{"_p_iCacheManager", _p_iCacheManagerTo_p_iBase},{"_p_iAwsLayoutManager", _p_iAwsLayoutManagerTo_p_iBase},{"_p_iAwsSinkManager", _p_iAwsSinkManagerTo_p_iBase},{"_p_iAwsPrefManager", _p_iAwsPrefManagerTo_p_iBase},{"_p_iShaderManager", _p_iShaderManagerTo_p_iBase},{"_p_iTextureManager", _p_iTextureManagerTo_p_iBase},{"_p_iEngineSequenceManager", _p_iEngineSequenceManagerTo_p_iBase},{"_p_iBillboardManager", _p_iBillboardManagerTo_p_iBase},{"_p_iAwsPointKey", _p_iAwsPointKeyTo_p_iBase},{"_p_iScript", _p_iScriptTo_p_iBase},{"_p_iPcSolid", _p_iPcSolidTo_p_iBase},{"_p_iSaver", _p_iSaverTo_p_iBase},{"_p_iPcMesh", _p_iPcMeshTo_p_iBase},{"_p_iEventCord", _p_iEventCordTo_p_iBase},{0}};
static swig_type_info _swigt__p_iObjectRegistry[] = {{"_p_iObjectRegistry", 0, "iObjectRegistry *", 0},{"_p_iObjectRegistry"},{0}};
static swig_type_info _swigt__p_iPcTimer[] = {{"_p_iPcTimer", 0, "iPcTimer *", 0},{"_p_iPcTimer"},{0}};
static swig_type_info _swigt__p_bool[] = {{"_p_bool", 0, "bool *", 0},{"_p_bool"},{0}};
static swig_type_info _swigt__p_iCelParameterBlock[] = {{"_p_iCelParameterBlock", 0, "iCelParameterBlock *", 0},{"_p_iCelParameterBlock"},{0}};
static swig_type_info _swigt__p_iPcLinearMovement[] = {{"_p_iPcLinearMovement", 0, "iPcLinearMovement *", 0},{"_p_iPcLinearMovement"},{0}};
static swig_type_info _swigt__p_iPcCollisionDetection[] = {{"_p_iPcCollisionDetection", 0, "iPcCollisionDetection *", 0},{"_p_iPcCollisionDetection"},{0}};
static swig_type_info _swigt__p_csVector3[] = {{"_p_csVector3", 0, "csVector3 *", 0},{"_p_csVector3"},{0}};
static swig_type_info _swigt__p_iView[] = {{"_p_iView", 0, "iView *", 0},{"_p_csView", _p_csViewTo_p_iView},{"_p_iView"},{0}};
static swig_type_info _swigt__p_iPcSolid[] = {{"_p_iPcSolid", 0, "iPcSolid *", 0},{"_p_iPcSolid"},{0}};
static swig_type_info _swigt__p_iCelEntity[] = {{"_p_iCelEntity", 0, "iCelEntity *", 0},{"_p_iCelEntity"},{0}};
static swig_type_info _swigt__p_iPcMeshSelect[] = {{"_p_iPcMeshSelect", 0, "iPcMeshSelect *", 0},{"_p_iPcMeshSelect"},{0}};
static swig_type_info _swigt__p_iCelEntityList[] = {{"_p_iCelEntityList", 0, "iCelEntityList *", 0},{"_p_iCelEntityList"},{0}};
static swig_type_info _swigt__p_iPcCharacteristics[] = {{"_p_iPcCharacteristics", 0, "iPcCharacteristics *", 0},{"_p_iPcCharacteristics"},{0}};
static swig_type_info _swigt__p_csFlags[] = {{"_p_csFlags", 0, "csFlags *", 0},{"_p_csFlags"},{0}};
static swig_type_info _swigt__p_csArrayTcsPluginRequest_t[] = {{"_p_csArrayTcsPluginRequest_t", 0, "csArray<csPluginRequest > *", 0},{"_p_csArrayTcsPluginRequest_t"},{0}};
static swig_type_info _swigt__p_iPcMesh[] = {{"_p_iPcMesh", 0, "iPcMesh *", 0},{"_p_iPcMesh"},{0}};
static swig_type_info _swigt__p_iCelPropertyClassList[] = {{"_p_iCelPropertyClassList", 0, "iCelPropertyClassList *", 0},{"_p_iCelPropertyClassList"},{0}};
static swig_type_info _swigt__p_csPlane3[] = {{"_p_csPlane3", 0, "csPlane3 *", 0},{"_p_csPlane3"},{0}};
static swig_type_info _swigt__p_csStringID[] = {{"_p_csStringID", 0, "csStringID *", 0},{"_p_csStringID"},{0}};
static swig_type_info _swigt__p_iCelBehaviour[] = {{"_p_iCelBehaviour", 0, "iCelBehaviour *", 0},{"_p_iCelBehaviour"},{0}};
static swig_type_info _swigt__p_iDynamicSystem[] = {{"_p_iDynamicSystem", 0, "iDynamicSystem *", 0},{"_p_iDynamicSystem"},{0}};
static swig_type_info _swigt__p_iPcDynamicSystem[] = {{"_p_iPcDynamicSystem", 0, "iPcDynamicSystem *", 0},{"_p_iPcDynamicSystem"},{0}};
static swig_type_info _swigt__p_iSector[] = {{"_p_iSector", 0, "iSector *", 0},{"_p_iSector"},{0}};
static swig_type_info _swigt__p_iPcCamera[] = {{"_p_iPcCamera", 0, "iPcCamera *", 0},{"_p_iPcCamera"},{0}};
static swig_type_info _swigt__p_p_iSector[] = {{"_p_p_iSector", 0, "iSector **", 0},{"_p_p_iSector"},{0}};
static swig_type_info _swigt__p_iCamera[] = {{"_p_iCamera", 0, "iCamera *", 0},{"_p_iCamera"},{0}};
static swig_type_info _swigt__p_celData[] = {{"_p_celData", 0, "celData *", 0},{"_p_celData"},{0}};
static swig_type_info _swigt__p_basetype[] = {{"_p_basetype", 0, "basetype *", 0},{"_p_basetype"},{0}};
static swig_type_info _swigt__p_iCelPropertyClass[] = {{"_p_iCelPropertyClass", 0, "iCelPropertyClass *", 0},{"_p_iCelPropertyClass"},{0}};
static swig_type_info _swigt__p_iPath[] = {{"_p_iPath", 0, "iPath *", 0},{"_p_iPath"},{"_p_csPath", _p_csPathTo_p_iPath},{0}};
static swig_type_info _swigt__p_iRigidBody[] = {{"_p_iRigidBody", 0, "iRigidBody *", 0},{"_p_iRigidBody"},{0}};
static swig_type_info _swigt__p_celDataType[] = {{"_p_celDataType", 0, "celDataType *", 0},{"_p_celDataType"},{0}};
static swig_type_info _swigt__p_float[] = {{"_p_float", 0, "float *", 0},{"_p_float"},{0}};
static swig_type_info _swigt__p_int[] = {{"_p_int", 0, "int *", 0},{"_p_int"},{0}};
static swig_type_info _swigt__p_iPcDynamicBody[] = {{"_p_iPcDynamicBody", 0, "iPcDynamicBody *", 0},{"_p_iPcDynamicBody"},{0}};
static swig_type_info _swigt__p_iPcCommandInput[] = {{"_p_iPcCommandInput", 0, "iPcCommandInput *", 0},{"_p_iPcCommandInput"},{0}};
static swig_type_info _swigt__p_iBillboardManager[] = {{"_p_iBillboardManager", 0, "iBillboardManager *", 0},{"_p_iBillboardManager"},{0}};
static swig_type_info _swigt__p_iPcZoneManager[] = {{"_p_iPcZoneManager", 0, "iPcZoneManager *", 0},{"_p_iPcZoneManager"},{0}};
static swig_type_info _swigt__p_iMeshWrapper[] = {{"_p_iMeshWrapper", 0, "iMeshWrapper *", 0},{"_p_iMeshWrapper"},{0}};

static swig_type_info *swig_types_initial[] = {
_swigt__p_csInitializer, 
_swigt__p_celInitializer, 
_swigt__p_iPcMovable, 
_swigt__p_iPcMovableConstraint, 
_swigt__p_iPcBillboard, 
_swigt__p_iBillboard, 
_swigt__p_iPcRegion, 
_swigt__p_iCelPlLayer, 
_swigt__p_iCelBlLayer, 
_swigt__p_csOrthoTransform, 
_swigt__p_iCollider, 
_swigt__p_iPcInventory, 
_swigt__p_iPcGravity, 
_swigt__p_iBase, 
_swigt__p_iObjectRegistry, 
_swigt__p_iPcTimer, 
_swigt__p_bool, 
_swigt__p_iCelParameterBlock, 
_swigt__p_iPcLinearMovement, 
_swigt__p_iPcCollisionDetection, 
_swigt__p_csVector3, 
_swigt__p_iView, 
_swigt__p_iPcSolid, 
_swigt__p_iCelEntity, 
_swigt__p_iPcMeshSelect, 
_swigt__p_iCelEntityList, 
_swigt__p_iPcCharacteristics, 
_swigt__p_csFlags, 
_swigt__p_csArrayTcsPluginRequest_t, 
_swigt__p_iPcMesh, 
_swigt__p_iCelPropertyClassList, 
_swigt__p_csPlane3, 
_swigt__p_csStringID, 
_swigt__p_iCelBehaviour, 
_swigt__p_iDynamicSystem, 
_swigt__p_iPcDynamicSystem, 
_swigt__p_iSector, 
_swigt__p_iPcCamera, 
_swigt__p_p_iSector, 
_swigt__p_iCamera, 
_swigt__p_celData, 
_swigt__p_basetype, 
_swigt__p_iCelPropertyClass, 
_swigt__p_iPath, 
_swigt__p_iRigidBody, 
_swigt__p_celDataType, 
_swigt__p_float, 
_swigt__p_int, 
_swigt__p_iPcDynamicBody, 
_swigt__p_iPcCommandInput, 
_swigt__p_iBillboardManager, 
_swigt__p_iPcZoneManager, 
_swigt__p_iMeshWrapper, 
0
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{ SWIG_PY_INT,     (char *)"iPcCamera_freelook", (long) iPcCamera::freelook, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcCamera_firstperson", (long) iPcCamera::firstperson, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcCamera_thirdperson", (long) iPcCamera::thirdperson, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcCamera_m64_thirdperson", (long) iPcCamera::m64_thirdperson, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcCamera_lara_thirdperson", (long) iPcCamera::lara_thirdperson, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_MOUSE_BUTTON1", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_MOUSE_BUTTON2", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_MOUSE_BUTTON3", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_NONE", (long) CEL_DATA_NONE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_BOOL", (long) CEL_DATA_BOOL, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_BYTE", (long) CEL_DATA_BYTE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_WORD", (long) CEL_DATA_WORD, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_LONG", (long) CEL_DATA_LONG, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_UBYTE", (long) CEL_DATA_UBYTE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_UWORD", (long) CEL_DATA_UWORD, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_ULONG", (long) CEL_DATA_ULONG, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_FLOAT", (long) CEL_DATA_FLOAT, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_VECTOR2", (long) CEL_DATA_VECTOR2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_VECTOR3", (long) CEL_DATA_VECTOR3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_STRING", (long) CEL_DATA_STRING, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_PCLASS", (long) CEL_DATA_PCLASS, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_ENTITY", (long) CEL_DATA_ENTITY, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_BUFFER", (long) CEL_DATA_BUFFER, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_ACTION", (long) CEL_DATA_ACTION, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_COLOR", (long) CEL_DATA_COLOR, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_IBASE", (long) CEL_DATA_IBASE, 0, 0, 0},
{0}};

#ifdef __cplusplus
}
#endif

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT(void) SWIG_init(void) {
    static PyObject *SWIG_globals = 0; 
    static int       typeinit = 0;
    PyObject *m, *d;
    int       i;
    if (!SWIG_globals) SWIG_globals = SWIG_newvarlink();
    m = Py_InitModule((char *) SWIG_name, SwigMethods);
    d = PyModule_GetDict(m);
    
    if (!typeinit) {
        for (i = 0; swig_types_initial[i]; i++) {
            swig_types[i] = SWIG_TypeRegister(swig_types_initial[i]);
        }
        typeinit = 1;
    }
    SWIG_InstallConstants(d,swig_const_table);
    
}

