\input texinfo    @c -*-texinfo-*-
@c %**start of header
@setfilename cel
@settitle Crystal Entity Layer
@setchapternewpage odd
@tex
\global\hbadness = 8000
\global\tolerance = 8000
@end tex
@finalout
@c %**end of header

@contents

@node Top, Introduction, , (dir)
@top Crystal Entity Layer

Crystal Entity Layer is an open-source plugin for Crystal Space.

Crystal Space is an open-source 3D game toolkit. It can be used for a variety
of 3D visualization tasks. Many people will probably be interested in using
Crystal Space as the basis of a 3D game, for which it is well suited. 

This document includes usage instructions, conceptual material, and detailed 
technical information. 

TODO: Insert version numbering 

This is edition TBA of the Crystal Entity Layer manual for Crystal Entity 
Layer version TBA, last updated 26 Nov 2003. 

@c TODO: Insert links for TOC and Small TOC
@c For a list of available topics please see the quick overview or the full 
@c table of contents.

Copyright @copyright{} 2003 by Daniel Thoroughgood

Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.

@ignore
Permission is granted to process this file through TeX and print the
results, provided the printed document carries copying permission
notice identical to this one except for the removal of this paragraph
(this paragraph not being relevant to the printed manual).
@end ignore

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation approved
by the copyright holders.

@menu
* Introduction::
* Building:: Building and Installing
* Configuring::
* Applications::
* Tutorials::
@end menu

@node Introduction, Building, Top, Top
@chapter Introduction

@menu
* What Is CEL:: What Is Crystal Entity Layer?
* Concepts::
* How To Read:: How To Read This Manual
* Current Status::
* Using CEL:: Using Crystal Entity Layer For Your Project
* Guide:: A Guide To This Documentation
* Features:: Feature List
* Where To Get CEL:: Where to Get Crystal Entity Layer
* Mailing Lists::
* Licence:: GNU Library General Public License
@end menu

@node What Is CEL, Concepts, Introduction, Introduction
@section What Is Crystal Entity Layer?

Crystal Entity Layer is a plugin developed to be used in conjunction with 
Crystal Space.  It is designed to make it easier for game developers to 
create games based on Crystal Space by providing such concepts as entities,
properties and behaviours.

Crystal Space is a portable modular 3D SDK, including many components for 
building various applications and games.  For more information on Crystal 
Space please see the
@uref{http://www.crystalspace3d.org/,Crystal Space web page}.

Crystal Entity Layer is still in development.  It's development efforts are
currently hosted by SourceForge.  Anybody wishing to contribute should visit
the @uref{http://cel.crystalspace3d.org/,Crystal Entity Layer} project page and
@uref{http://www.sourceforge.net/,SourceForge}.

Crystal Entity Layer is free and should remain free. Crystal Entity Layer 
falls under the GNU copyleft license for libraries (LGPL). A copy of of the 
LGPL is included in this manual for your perusal. In short, the LGPL allows 
you to use CrystalSpace as a library in your products, even commercial 
products, but modifications to the library or derivative works incorporating 
parts of the library must be made freely available to everyone, under the 
LGPL's terms. 

@node Concepts, How To Read, What Is CEL, Introduction
@section Concepts
Every object within the game world is represented by an entity.  This includes
the world itself and all the objects within it, such as players, non-player
characters, items and cameras.

The base Crystal Entity Layer Entities are managed within the Physical Layer.
These basic Entities cannot do very much at all as they are.  In order to add
functionality one, or usually more, Physical Layer Property Classes are added
to the Entity.

Property Classes are used to provide specific attributes, functionality and
constraints to Entities and also provide the interface with the Crystal Space
library.  This may be a simple attribute, such as allowing an entity to store
it's weight, or it may provide more complex functionality such as receiving
input from the keyboard or drawing a 3D object such as a mesh.  The set of 
properties provides by all the property classes together defines what the
entity really is, and what functionality is provided.

Property Classes are added to Entities at run-time.  What this means for the
developer is that if required Property Classes can be added, or removed, from
Entities on-the-fly.

Property Classes are generated by Property Class Factories.  These are usually
implemented as a Crystal Space plugin.  This means that you load the plugin, 
and then invoke the plugin as required to create property classes.

The Physical Layer is also responsible for providing the Persistence Layer.  
This is a system that is responsible for being able to save and load the state 
of each and every Entity.  This may be a file on a disk, or to some form of 
database.  Single-player games would use this to provide save-game 
functionality for example.

The Behaviour Layer handles things such as game logic.  It is this layer that 
dictates how an Entity will behave within the constraints placed upon it by 
the Physical Layer.  

The Physical Layer is able to generate events, which are passed to the 
Behaviour Layer in order to be acted upon.  Examples of such events are when 
an Entity is clicked on by the mouse pointer, when a particular key is hit or 
when an item is added to an inventory.  Such events are usually generated from 
within the Property Classes when a predetermined set of conditions is 
achieved.

The majority of the Behaviour Layer may be implemented in a scripting language 
such as Python if this is suitable for the project.  This allows the behavior 
of Entities to be easily scripted without having to recompile the entire 
project, and also for new behaviours to be added in the same manner.

In summary, Crystal Entity Layer is made up itself of two layers, these being 
the Physical Layer and the Behaviour Layer.

The Physical Layer is responsible for all managing base Entities, providing 
the Property Class system to manage attributes, functionality and constraints 
to Entities, to prove a system for the Property Classes to communicate with 
the Behaviour Layer and to provide a Persistence Layer in order to be able to 
load and save Entities to some form of storage.

The Behaviour Layer is responsible for managing how Entities behave within the 
restrictions placed up on by the Physical Layer.  This may be implemented in 
C++, or it may be implemented in some form of scripting language.

@node How To Read, Current Status, Concepts, Introduction
@section How To Read This Manual

This manual was written and is currently maintained by Daniel Thoroughgood.
Constructive feedback, suggestions and contributions are always welcome.

If you find something in this manual which you beleive is not correct please
notify the mailing list in order to have this investigated and corrected.

This manual is intended to also serve the purpose of a reference and as such
the order in which it is read is not important for the experienced developer.
People that are new to Crystal Entity Layer however should read the manual
front to back.

@node Current Status, Using CEL, How To Read, Introduction
@section Current Status

Crystal Entity Layer is still in Beta status, and is likely to be for the
foreseeable future.  Crystal Space, on which this work is based, is still
under very active development and from time to time changes may be made to 
the Crystal Space sources which will cause Crystal Entity Layer not to work
as expected, or not to work at all.

Likewise Crystal Entity Layer is still in development and you may find that
some features do not work as expected, or may not work at all.  Some features
may be only partially implemented and there may be both known and unknown
bugs.

Please do not let this discourage you from using Crystal Entity Layer.  Most
of the core functions are implemented and working correctly.  Any bugs which
are reported will be investigated as soon as possible and contributions are 
always welcome.

@node Using CEL, Guide, Current Status, Introduction
@section Using Crystal Entity Layer For Your Project

If you wish to use Crystal Entity Layer for your project you should obtain
and build sources of both Crystal Space and Crystal Entity Layer.

Read the Crystal Space documentation and take a look through the samples and
examples to become familiar with how it works.

You should also join the appropriate Crystal Space and Crystal Entity Layer
mailing lists in order to watch how things develop.  

You also need to agree to the LGPL (GNU Library General Public Licence).

If you are using Crystal Entity Layer for a project please let us know as we
are very interested in hearing what people are doing with both Crystal Space
and Crystal Entity Layer.

@node Guide, Features, Using CEL, Introduction
@section A Guide To This Documentation
TODO: Complete this section when the layout of the manual is solid and cross
refernces are all in place.

@node Features, Where To Get CEL, Guide, Introduction
@section Feature List

@node Where To Get CEL, Mailing Lists, Features, Introduction
@section Where to Get Crystal Entity Layer
The Crystal Entity Layer homepage contains information on obtaining both the 
official releases of Crystal Entity Layer and the current development version.

Please keep in mind that both types of releases are still Beta.  The main
difference being that release versions should be well tested and generally 
stable.

With the development version your milage may vary.  Sometimes it may not
compile easily on all platforms, or may not compile at all.  There may be
features that are only partially implemented and these probably will not
be very well documented.

However, the development version will always have all the most recent features
and will probably contain features that are not available in the release
version.

You will also need Crystal Space in order to use Crystal Entity Layer.  Like
Crystal Entity Layer this is also available in both official release and
development status.  For more information on the two of these please see
the Crystal Space documentation.

Crystal Entity Layer is available at:@*
@uref{http://cel.crystalspace3d.org/}

Crystal Space is available at:@*
@uref{http://www.crystalspace3d.org/}

Generally a release version of Crystal Entity Layer should be built against
the matching release of Crystal Space.  Likewise development versions should
be build against a development version of Crystal Space from the same date.

Mixing and matching of versions is not guaranteed to work, and in fact quite
likely will not.

@subheading CVS
As Crystal Entity Layer is being actively developed changes are quite often
made to the sources on a daily basis.

The latest sources to Crystal Entity Layer may be downloaded from 
SourceForge's Anonymous CVS Servers.

TODO: Add instructions for downloading from SourceForge CVS

Please keep in mind that currently SourceForge's Anonymous CVS servers are
running approximately 24 hours behind the developer's CVS servers.  This
means that bugfix's, new features, etc. which are updated by developers may
not become available on the public servers until the next day.

@node Mailing Lists, Licence, Where To Get CEL, Introduction
@section Mailing Lists
There are currently two Crystal Entity Layer mailing lists that may be of 
interest to to users and developers.

The main list is for general discussion, questions and bug reports.  You may
subscribe to this list by visiting:@*
@uref{http://lists.sourceforge.net/mailman/listinfo/cel-main}

You may also view an archive of prior posts to this list at:@*
@uref{http://sourceforge.net/mailarchive/forum.php?forum_id=1108}

The CVS update list is for notification of changes to the CVS source
repository.  All users subscribed to this list will receive an e-mail every
time a developer updates the source.   You may subscribe to this list at:@*
@uref{http://lists.sourceforge.net/mailman/listinfo/cel-cvs-update}

You may also view an archive of prior posts to this list at:@*
@uref{http://sourceforge.net/mailarchive/forum.php?forum_id=33225}

@node Licence,  , Mailing Lists, Introduction
@section GNU Library General Public License

@noindent
Version 2, June 1991

Copyright @copyright{} 1991 Free Software Foundation, Inc.
675 Mass Ave, Cambridge, @sc{ma} 02139, @sc{usa}
Everyone is permitted to copy and distribute verbatim copies
of this license document, but changing it is not allowed.

[This is the first released version of the library @sc{gpl}.  It is
numbered 2 because it goes with version 2 of the ordinary @sc{gpl}.]

@subheading Preamble

The licenses for most software are designed to take away your
freedom to share and change it.  By contrast, the @sc{gnu} General Public
Licenses are intended to guarantee your freedom to share and change
free software--to make sure the software is free for all its users.

This license, the Library General Public License, applies to some
specially designated Free Software Foundation software, and to any
other libraries whose authors decide to use it.  You can use it for
your libraries, too.

When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
this service if you wish), that you receive source code or can get it
if you want it, that you can change the software or use pieces of it
in new free programs; and that you know you can do these things.

To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if
you distribute copies of the library, or if you modify it.

For example, if you distribute copies of the library, whether gratis
or for a fee, you must give the recipients all the rights that we gave
you.  You must make sure that they, too, receive or can get the source
code.  If you link a program with the library, you must provide
complete object files to the recipients so that they can relink them
with the library, after making changes to the library and recompiling
it.  And you must show them these terms so they know their rights.

Our method of protecting your rights has two steps: (1) copyright
the library, and (2) offer you this license which gives you legal
permission to copy, distribute and/or modify the library.

Also, for each distributor's protection, we want to make certain
that everyone understands that there is no warranty for this free
library.  If the library is modified by someone else and passed on, we
want its recipients to know that what they have is not the original
version, so that any problems introduced by others will not reflect on
the original authors' reputations.

Finally, any free program is threatened constantly by software
patents.  We wish to avoid the danger that companies distributing free
software will individually obtain patent licenses, thus in effect
transforming the program into proprietary software.  To prevent this,
we have made it clear that any patent must be licensed for everyone's
free use or not licensed at all.

Most @sc{gnu} software, including some libraries, is covered by the ordinary
@sc{gnu} General Public License, which was designed for utility programs.  This
license, the @sc{gnu} Library General Public License, applies to certain
designated libraries.  This license is quite different from the ordinary
one; be sure to read it in full, and don't assume that anything in it is
the same as in the ordinary license.

The reason we have a separate public license for some libraries is that
they blur the distinction we usually make between modifying or adding to a
program and simply using it.  Linking a program with a library, without
changing the library, is in some sense simply using the library, and is
analogous to running a utility program or application program.  However, in
a textual and legal sense, the linked executable is a combined work, a
derivative of the original library, and the ordinary General Public License
treats it as such.

Because of this blurred distinction, using the ordinary General
Public License for libraries did not effectively promote software
sharing, because most developers did not use the libraries.  We
concluded that weaker conditions might promote sharing better.

However, unrestricted linking of non-free programs would deprive the
users of those programs of all benefit from the free status of the
libraries themselves.  This Library General Public License is intended to
permit developers of non-free programs to use free libraries, while
preserving your freedom as a user of such programs to change the free
libraries that are incorporated in them.  (We have not seen how to achieve
this as regards changes in header files, but we have achieved it as regards
changes in the actual functions of the Library.)  The hope is that this
will lead to faster development of free libraries.

The precise terms and conditions for copying, distribution and
modification follow.  Pay close attention to the difference between a
``work based on the library'' and a ``work that uses the library''.  The
former contains code derived from the library, while the latter only
works together with the library.

Note that it is possible for a library to be covered by the ordinary
General Public License rather than by this special one.

@subheading Gnu Library General Public License Terms And Conditions For Copying, Distribution And Modification

@enumerate 0
@item
This License Agreement applies to any software library which
contains a notice placed by the copyright holder or other authorized
party saying it may be distributed under the terms of this Library
General Public License (also called ``this License'').  Each licensee is
addressed as ``you''.

A ``library'' means a collection of software functions and/or data
prepared so as to be conveniently linked with application programs
(which use some of those functions and data) to form executables.

The ``Library'', below, refers to any such software library or work
which has been distributed under these terms.  A ``work based on the
Library'' means either the Library or any derivative work under
copyright law: that is to say, a work containing the Library or a
portion of it, either verbatim or with modifications and/or translated
straightforwardly into another language.  (Hereinafter, translation is
included without limitation in the term ``modification''.)

``Source code'' for a work means the preferred form of the work for
making modifications to it.  For a library, complete source code means
all the source code for all modules it contains, plus any associated
interface definition files, plus the scripts used to control compilation
and installation of the library.

Activities other than copying, distribution and modification are not
covered by this License; they are outside its scope.  The act of
running a program using the Library is not restricted, and output from
such a program is covered only if its contents constitute a work based
on the Library (independent of the use of the Library in a tool for
writing it).  Whether that is true depends on what the Library does
and what the program that uses the Library does.

@item
You may copy and distribute verbatim copies of the Library's
complete source code as you receive it, in any medium, provided that
you conspicuously and appropriately publish on each copy an
appropriate copyright notice and disclaimer of warranty; keep intact
all the notices that refer to this License and to the absence of any
warranty; and distribute a copy of this License along with the
Library.

You may charge a fee for the physical act of transferring a copy,
and you may at your option offer warranty protection in exchange for a
fee.

@item
You may modify your copy or copies of the Library or any portion
of it, thus forming a work based on the Library, and copy and
distribute such modifications or work under the terms of Section 1
above, provided that you also meet all of these conditions:

@enumerate a
@item
The modified work must itself be a software library.

@item
You must cause the files modified to carry prominent notices
stating that you changed the files and the date of any change.

@item
You must cause the whole of the work to be licensed at no
charge to all third parties under the terms of this License.

@item
If a facility in the modified Library refers to a function or a
table of data to be supplied by an application program that uses
the facility, other than as an argument passed when the facility
is invoked, then you must make a good faith effort to ensure that,
in the event an application does not supply such function or
table, the facility still operates, and performs whatever part of
its purpose remains meaningful.
@end enumerate

(For example, a function in a library to compute square roots has
a purpose that is entirely well-defined independent of the
application.  Therefore, Subsection 2d requires that any
application-supplied function or table used by this function must
be optional: if the application does not supply it, the square
root function must still compute square roots.)

These requirements apply to the modified work as a whole.  If
identifiable sections of that work are not derived from the Library,
and can be reasonably considered independent and separate works in
themselves, then this License, and its terms, do not apply to those
sections when you distribute them as separate works.  But when you
distribute the same sections as part of a whole which is a work based
on the Library, the distribution of the whole must be on the terms of
this License, whose permissions for other licensees extend to the
entire whole, and thus to each and every part regardless of who wrote
it.

Thus, it is not the intent of this section to claim rights or contest
your rights to work written entirely by you; rather, the intent is to
exercise the right to control the distribution of derivative or
collective works based on the Library.

In addition, mere aggregation of another work not based on the Library
with the Library (or with a work based on the Library) on a volume of
a storage or distribution medium does not bring the other work under
the scope of this License.

@item
You may opt to apply the terms of the ordinary @sc{gnu} General Public
License instead of this License to a given copy of the Library.  To do
this, you must alter all the notices that refer to this License, so
that they refer to the ordinary @sc{gnu} General Public License, version 2,
instead of to this License.  (If a newer version than version 2 of the
ordinary @sc{gnu} General Public License has appeared, then you can specify
that version instead if you wish.)  Do not make any other change in
these notices.

Once this change is made in a given copy, it is irreversible for
that copy, so the ordinary @sc{gnu} General Public License applies to all
subsequent copies and derivative works made from that copy.

This option is useful when you wish to copy part of the code of
the Library into a program that is not a library.

@item
You may copy and distribute the Library (or a portion or
derivative of it, under Section 2) in object code or executable form
under the terms of Sections 1 and 2 above provided that you accompany
it with the complete corresponding machine-readable source code, which
must be distributed under the terms of Sections 1 and 2 above on a
medium customarily used for software interchange.

If distribution of object code is made by offering access to copy
from a designated place, then offering equivalent access to copy the
source code from the same place satisfies the requirement to
distribute the source code, even though third parties are not
compelled to copy the source along with the object code.

@item
A program that contains no derivative of any portion of the
Library, but is designed to work with the Library by being compiled or
linked with it, is called a ``work that uses the Library''.  Such a
work, in isolation, is not a derivative work of the Library, and
therefore falls outside the scope of this License.

However, linking a ``work that uses the Library'' with the Library
creates an executable that is a derivative of the Library (because it
contains portions of the Library), rather than a ``work that uses the
library''.  The executable is therefore covered by this License.
Section 6 states terms for distribution of such executables.

When a ``work that uses the Library'' uses material from a header file
that is part of the Library, the object code for the work may be a
derivative work of the Library even though the source code is not.
Whether this is true is especially significant if the work can be
linked without the Library, or if the work is itself a library.  The
threshold for this to be true is not precisely defined by law.

If such an object file uses only numerical parameters, data
structure layouts and accessors, and small macros and small inline
functions (ten lines or less in length), then the use of the object
file is unrestricted, regardless of whether it is legally a derivative
work.  (Executables containing this object code plus portions of the
Library will still fall under Section 6.)

Otherwise, if the work is a derivative of the Library, you may
distribute the object code for the work under the terms of Section 6.
Any executables containing that work also fall under Section 6,
whether or not they are linked directly with the Library itself.

@item
As an exception to the Sections above, you may also compile or
link a ``work that uses the Library'' with the Library to produce a
work containing portions of the Library, and distribute that work
under terms of your choice, provided that the terms permit
modification of the work for the customer's own use and reverse
engineering for debugging such modifications.

You must give prominent notice with each copy of the work that the
Library is used in it and that the Library and its use are covered by
this License.  You must supply a copy of this License.  If the work
during execution displays copyright notices, you must include the
copyright notice for the Library among them, as well as a reference
directing the user to the copy of this License.  Also, you must do one
of these things:

@enumerate a
@item
Accompany the work with the complete corresponding
machine-readable source code for the Library including whatever
changes were used in the work (which must be distributed under
Sections 1 and 2 above); and, if the work is an executable linked
with the Library, with the complete machine-readable ``work that
uses the Library'', as object code and/or source code, so that the
user can modify the Library and then relink to produce a modified
executable containing the modified Library.  (It is understood
that the user who changes the contents of definitions files in the
Library will not necessarily be able to recompile the application
to use the modified definitions.)

@item
Accompany the work with a written offer, valid for at
least three years, to give the same user the materials
specified in Subsection 6a, above, for a charge no more
than the cost of performing this distribution.

@item
If distribution of the work is made by offering access to copy
from a designated place, offer equivalent access to copy the above
specified materials from the same place.

@item
Verify that the user has already received a copy of these
materials or that you have already sent this user a copy.
@end enumerate

For an executable, the required form of the ``work that uses the
Library'' must include any data and utility programs needed for
reproducing the executable from it.  However, as a special exception,
the source code distributed need not include anything that is normally
distributed (in either source or binary form) with the major
components (compiler, kernel, and so on) of the operating system on
which the executable runs, unless that component itself accompanies
the executable.

It may happen that this requirement contradicts the license
restrictions of other proprietary libraries that do not normally
accompany the operating system.  Such a contradiction means you cannot
use both them and the Library together in an executable that you
distribute.

@item
You may place library facilities that are a work based on the
Library side-by-side in a single library together with other library
facilities not covered by this License, and distribute such a combined
library, provided that the separate distribution of the work based on
the Library and of the other library facilities is otherwise
permitted, and provided that you do these two things:

@enumerate a
@item
Accompany the combined library with a copy of the same work
based on the Library, uncombined with any other library
facilities.  This must be distributed under the terms of the
Sections above.

@item
Give prominent notice with the combined library of the fact
that part of it is a work based on the Library, and explaining
where to find the accompanying uncombined form of the same work.
@end enumerate

@item
You may not copy, modify, sublicense, link with, or distribute
the Library except as expressly provided under this License.  Any
attempt otherwise to copy, modify, sublicense, link with, or
distribute the Library is void, and will automatically terminate your
rights under this License.  However, parties who have received copies,
or rights, from you under this License will not have their licenses
terminated so long as such parties remain in full compliance.

@item
You are not required to accept this License, since you have not
signed it.  However, nothing else grants you permission to modify or
distribute the Library or its derivative works.  These actions are
prohibited by law if you do not accept this License.  Therefore, by
modifying or distributing the Library (or any work based on the
Library), you indicate your acceptance of this License to do so, and
all its terms and conditions for copying, distributing or modifying
the Library or works based on it.

@item
Each time you redistribute the Library (or any work based on the
Library), the recipient automatically receives a license from the
original licensor to copy, distribute, link with or modify the Library
subject to these terms and conditions.  You may not impose any further
restrictions on the recipients' exercise of the rights granted herein.
You are not responsible for enforcing compliance by third parties to
this License.

@item
If, as a consequence of a court judgment or allegation of patent
infringement or for any other reason (not limited to patent issues),
conditions are imposed on you (whether by court order, agreement or
otherwise) that contradict the conditions of this License, they do not
excuse you from the conditions of this License.  If you cannot
distribute so as to satisfy simultaneously your obligations under this
License and any other pertinent obligations, then as a consequence you
may not distribute the Library at all.  For example, if a patent
license would not permit royalty-free redistribution of the Library by
all those who receive copies directly or indirectly through you, then
the only way you could satisfy both it and this License would be to
refrain entirely from distribution of the Library.

If any portion of this section is held invalid or unenforceable under any
particular circumstance, the balance of the section is intended to apply,
and the section as a whole is intended to apply in other circumstances.

It is not the purpose of this section to induce you to infringe any
patents or other property right claims or to contest validity of any
such claims; this section has the sole purpose of protecting the
integrity of the free software distribution system which is
implemented by public license practices.  Many people have made
generous contributions to the wide range of software distributed
through that system in reliance on consistent application of that
system; it is up to the author/donor to decide if he or she is willing
to distribute software through any other system and a licensee cannot
impose that choice.

This section is intended to make thoroughly clear what is believed to
be a consequence of the rest of this License.

@item
If the distribution and/or use of the Library is restricted in
certain countries either by patents or by copyrighted interfaces, the
original copyright holder who places the Library under this License may add
an explicit geographical distribution limitation excluding those countries,
so that distribution is permitted only in or among countries not thus
excluded.  In such case, this License incorporates the limitation as if
written in the body of this License.

@item
The Free Software Foundation may publish revised and/or new
versions of the Library General Public License from time to time.
Such new versions will be similar in spirit to the present version,
but may differ in detail to address new problems or concerns.

Each version is given a distinguishing version number.  If the Library
specifies a version number of this License which applies to it and
``any later version'', you have the option of following the terms and
conditions either of that version or of any later version published by
the Free Software Foundation.  If the Library does not specify a
license version number, you may choose any version ever published by
the Free Software Foundation.

@item
If you wish to incorporate parts of the Library into other free
programs whose distribution conditions are incompatible with these,
write to the author to ask for permission.  For software which is
copyrighted by the Free Software Foundation, write to the Free
Software Foundation; we sometimes make exceptions for this.  Our
decision will be guided by the two goals of preserving the free status
of all derivatives of our free software and of promoting the sharing
and reuse of software generally.
@end enumerate

@subsubheading No Warranty

@enumerate j
@item
@sc{because the library is licensed free of charge, there is no
warranty for the library, to the extent permitted by applicable law.
except when otherwise stated in writing the copyright holders and/or
other parties provide the library ``as is'' without warranty of any
kind, either expressed or implied, including, but not limited to, the
implied warranties of merchantability and fitness for a particular
purpose.  the entire risk as to the quality and performance of the
library is with you.  should the library prove defective, you assume
the cost of all necessary servicing, repair or correction.}

@item
@sc{in no event unless required by applicable law or agreed to in
writing will any copyright holder, or any other party who may modify
and/or redistribute the library as permitted above, be liable to you
for damages, including any general, special, incidental or
consequential damages arising out of the use or inability to use the
library (including but not limited to loss of data or data being
rendered inaccurate or losses sustained by you or third parties or a
failure of the library to operate with any other software), even if
such holder or other party has been advised of the possibility of such
damages.}
@end enumerate

@subsubheading End Of Terms And Conditions

@subheading Appendix: How to Apply These Terms to Your New Libraries

If you develop a new library, and you want it to be of the greatest
possible use to the public, we recommend making it free software that
everyone can redistribute and change.  You can do so by permitting
redistribution under these terms (or, alternatively, under the terms of the
ordinary General Public License).

To apply these terms, attach the following notices to the library.  It is
safest to attach them to the start of each source file to most effectively
convey the exclusion of warranty; and each file should have at least the
``copyright'' line and a pointer to where the full notice is found.

<one line to give the library's name and a brief idea of what it does.>
Copyright @copyright{} <year> <name of author>

This library is free software; you can redistribute it and/or
modify it under the terms of the @sc{gnu} Library General Public
License as published by the Free Software Foundation; either
version 2 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but @sc{without any warranty}; without even the implied warranty of
@sc{merchantability} or @sc{fitness for a particular purpose}.  See the @sc{gnu}
Library General Public License for more details.

You should have received a copy of the @sc{gnu} Library General Public
License along with this library; if not, write to the Free
Software Foundation, Inc., 675 Mass Ave, Cambridge, @sc{ma} 02139, @sc{usa}.

Also add information on how to contact you by electronic and paper mail.

You should also get your employer (if you work as a programmer) or your
school, if any, to sign a ``copyright disclaimer'' for the library, if
necessary.  Here is a sample; alter the names:

Yoyodyne, Inc., hereby disclaims all copyright interest in the
library `Frob' (a library for tweaking knobs) written by James Random Hacker.

<signature of Ty Coon>, 1 April 1990
Ty Coon, President of Vice

That's all there is to it!

@node Building, Configuring, Introduction, Top
@chapter Building and Installing
This chapter explains how to build and install Crystal Entity Layer.

@menu
* Directory Hierachy::          Directory Hierachy
* Requirements::                Requirements
* External Libraries::          External Libraries
* Instructions::                Platform Specific Instructions
@end menu

It will describe the pre-requisites for building and installing on each
platform along with specific instructions on how to do this.

If you have used Crystal Entity Layer on a platform which is not described
please let us know via the mailing list so we can add instructions.

@node Directory Hierachy, Requirements, Building, Building
@section Directory Hierachy
This section will explain the layout of the directory hierachy within
Crystal Entity Layer.  

@table @code
@item cel         
            This is the main directy for Crystal Entity Layer. This can be any
            path supported by your operating system. 
            This folder also currently contains the configure scripts and
            Microsoft Visual C++ workspace and project files.

@item cel/apps    
            This is where all the applications shipped with Crystal Entity
            layer reside.  Please see the manual section entitled Applications
            for more information on these.

@item cel/data    
            This is where data for the Crystal Entity Layer applications,
            as well as any applications you build yourself within the
            Crystal Entity Layer source tree, reside.

@item cel/docs    
            This is where the Crystal Entity Layer documentation resides.
            It is currently available in HTML and TexInfo formats.

@item cel/include 
            This is where the header files for the various Crystal Entity
            Layer modules reside.  

@table @code            
            @item cel/include/behaviourlayer
            This directory contains the definitions of the Behaviour Layer
            interfaces.

            @item cel/include/physicallayer
            This directory contains the definitions of the Physical Layer
            interfaces.  Including such things as entities, property classes,
            messaging and persistence.

            @item cel/include/propclass
            This directory contains the definitions of the various property
            class interfaces.

            @item cel/include/tools
            This directory contains definitions for interfaces for various
            utility classes.
@end table            

@item cel/mk      
            This directory includes various makefiles and build
            configurations for various platforms.

@item cel/msvc    
            This directory contains the project files and resource
            scripts for building under Microsoft Windows using Microsoft
            Visual C++.

@item cel/plugins 
            This is where the implementations of the plugins that make up
            Crystal Entity Layer reside.

@table @code            
            @item cel/plugins/addons
            These are various additional, and optional, Crystal Space plugins.

            @table @code
                @item cel/plugins/addons/celentity
                @item cel/plugins/addons/xmlscript
                These plugins allow the loading of Crystal Entity Layer
                entities from a standard Crystal Space map file.
            @end table

            @item cel/plugins/behaviourlayer
            These are the various behaviour layers which have been already
            implemented for use with Crystal Entity Layer.

            @table @code    
                @item cel/plugins/behaviourlayer/python
                This is a behaviour layer that allows entity behaviours
                to be implemented using the Python scripting language.

                @item cel/plugins/behaviourlayer/test
                This is the test behaviourlayer implemented in C++.

                @item cel/plugins/behaviourlayer/xml
                This is a behaviour layer that allows entity behavours
                to be implemented using scripts stored as XML.
            @end table    

            @item cel/plugins/persist
            These are the various persistence layers which have already
            been implemented for use with Crystal Entity Layer.

            @table @code
                @item cel/plugins/persist/classic
                This is the Crystal Entity Layer Classic Persistence Module.
                This allows the persisting of Crystal Entity Layer entities
                to a Crystal Space VFS file.
            @end table                

            @item cel/plugins/propclass
            These are the various property classes which have already
            been implemented for use with Crystal Entity Layer.  For more
            information on these please see the section entitled Property
            Classes

            @item cel/plugins/stdphyslayer
            This is the Crystal Entity Layer's Standard Physical Layer.
@end table            

@item cel/scripts 
            This is where scripts used by the Crystal Entity Layer
            applications and examples reside.
@end table
            
@node Requirements, External Libraries, Directory Hierachy, Building
@section Requirements

In order to be able to build and install Crystal Entity Layer your
development environment must meet the requirements for Crystal Space.

For more information on these please see the Crystal Space documentation.

If you are planning to use any form of scripting language in conjunction
with Crystal Entity Layer (currently only Python is supported) then you
will also need to have this scripting language installed.

TODO: Document requirement for Jam, where and how to get it.

@node External Libraries, Instructions, Requirements, Building
@section External Libraries
Crystal Entity Layer currently has two external dependencies, the first of 
these of course being Crystal Space.

You may obtain Crystal Space from:@*
@uref{http://www.crystalspace3d.org/}

The second dependency is Python.  Python is a scripting language which is 
used by the Python Behaviour Layer.  This is not required in order to build
Crystal Entity Layer (it is an optional module), however if you wish to use
Python in your own Behaviour Layer, or build the blpython example, then you
will need to download Python from:@*
@uref{http://www.python.org/}

@node Instructions,  , External Libraries, Building
@section Platform Specific Instructions
This chapter contains instructions on how to build Crystal Entity Layer on 
various platforms.

Please keep in mind that Crystal Entity Layer is a multi-platform project and 
not all features may be available on all platforms.  Also keep in mind that 
changes made by the developers may inadvertently break certain features on 
some platforms and prevent some modules from linking.

If you are receiving errors when building on a particular platform as 
according to these instruction please post a description of the problem you 
are experiencing to the mailing list so this can be addressed as soon as 
possible.

@menu
* Linux::                       Unix/Linux
* Windows::                     Windows using Microsoft Visual C++
* MinGW::                       Windows using MinGW
* Cygwin::                      Windows using Cygwin
@end menu

@node Linux, Windows, Instructions, Instructions
@subsection Unix/Linux
This section describes how to build Crystal Entity Layer on Unix style 
platforms such as Linux, FreeBSD, Solaris, etc.

Crystal Entity Layer now uses jam as it's preferred build system.  The GNU 
make build tool is no longer used.  

In order to build Crystal Entity Layer on this platform:

@enumerate
@item Ensure that Crystal Space has been compiled correctly.

@item Ensure that the CRYSTAL environment variable is set correctly. For 
example:@*
       export CRYSTAL=~/CS

@item From the cel directory run the configure script, with the command:@*
        ./configure

@item Use jam to build the project@*
        jam
@end enumerate

In order to test if Crystal Entity Layer has compiled correctly run the celtst 
test application.

@node Windows, MinGW, Linux, Instructions
@subsection Windows using Microsoft Visual C++

These instructions are for Microsoft Visual C++ 6.  I do not currently have
access to version 7 in order to test so these may or may not work with version
7.

@enumerate
@item Open the ``cel/cel.dsw'' workspace.
@item Remove any project you do not wish to compile.  To do this right-click
on the project and select ``Unload Project''.  For example if you do not have 
Python installed then you will wish to remove the ``blpython'' project.
@item Select each of the projects in turn, right-click on them and select ``Build''.
@end enumerate


@node MinGW, Cygwin, Windows, Instructions
@subsection Windows using MinGW

These instructions detail how to build Crystal Entity Layer under MinGW.  They
assume that you already have MinGW installed and operating.  They also assume
that you have the Jam build environment running under MinGW.

@enumerate
@item Ensure that Crystal Space has been compiled correctly.

@item Ensure that the CRYSTAL environment variable is set correctly. For 
example:@*
       export CRYSTAL=~/CS

@item From the cel directory run the configure script, with the command:@*
        ./configure

@item Use jam to build the project@*
        jam
@end enumerate

@node Cygwin,  , MinGW, Instructions
@subsection Windows using Cygwin

These instructions detail how to build Crystal Entity Layer under Cygwin.  They
assume that you already have Cygwin installed and operating.  They also assume
that you have the Jam build environment running under Cygwin.  

@enumerate
@item Ensure that Crystal Space has been compiled correctly.

@item Ensure that the CRYSTAL environment variable is set correctly. For 
example:@*
       export CRYSTAL=~/CS

@item From the cel directory run the configure script, with the command:@*
        ./configure

@item Use jam to build the project@*
        jam
@end enumerate

@node Configuring, Applications, Building, Top
@chapter Configuring

@menu
* CEL Environment Variable::    CEL Environment Variable
@end menu

@node CEL Environment Variable,  , Configuring, Configuring
@section CEL Environment Variable
Crystal Entity Layer applications may use the CEL environment variable in 
order to locate your Crystal Entity Layer installation.

Please ensure this environment variable points to your CEL installation.

@node Applications, Tutorials, Configuring, Top
@chapter Applications
This chapter describes the various applications which are packaged with 
Crystal Entity Layer.  These applications may either serve as test 
applications in order to test the functionality of Crystal Entity Layer, as 
examples of how to use Crystal Entity Layer or sometimes as both.

@menu
* AppOverview::                 Overview
* AppCeltest::                  celtest
* AppBootstrap::                bootstrap
@end menu

@node AppOverview, AppCeltest, Applications, Applications
@section Overview
The applications currently bundled with Crystal Entity Layer are:

@table @code
@item celtest
    This is a test application designed to test the various Crystal Entity 
    Layer modules and give a basic demonstration of what some of the property 
    classes do.
        
@item bootstrap
    TODO: Document bootstrap overview
@end table

@node AppCeltest, AppBootstrap, AppOverview, Applications
@section celtest
TODO: Document celtest

@node AppBootstrap,  , AppCeltest, Applications
@section bootstrap
TODO: Document bootstrap

@node Tutorials,  , Applications, Top
@chapter Tutorials
TODO: Create tutorials

@bye
