
showlibs ()
{
  echo
  echo Libraries:

  for lib in $libs ;
  do
    echo "  $lib"
  done

  [ -z "$libs" ] && echo No libraries available.
}

usage()
{
  cat <<__EOF__
Usage: cel-config [OPTIONS]
Options:
	[--prefix]
	[--exec-prefix]
	[--version]
	[--libs]
	[--cflags]
	[--lflags]
	[--plugindir]
	[--includedir]
	[--help]

Note that you have to also include the output of cs-config when compiling cel
applications.
__EOF__

showlibs
}

linkflags()
{
  entry_found="no"
  result=""

  for entry in ${exportsummary} ;
  do
    if test "${entry_found}" = "yes" ; then 
      result=$entry
      break
    fi
    if test "$1" = "$entry" ; then 
      entry_found="yes"
    fi
  done

  if test "${entry_found}" = "yes" -a -n "${CEL}" ; then
    result=${CEL}/${result}
  fi

  if test "${entry_found}" = "yes" ; then
    result="-L${result} -l$1"
  fi
}

if test $# -eq 0; then
	usage 1>&2
	exit 1
fi

show_cflags=""
show_libs=""
while test $# -gt 0; do
  case $1 in
    --prefix)
	echo $prefix
	exit 0
	;;
    --exec-prefix)
	echo $exec_prefix
	exit 0
	;;
    --help)
	usage
	exit 0
	;;
    --version)
        echo $version
        exit 0
        ;;
    --plugindir)
	echo $plugindir
	exit 0
	;;
    --includedir)
	echo $includedir
	exit 0
	;;
    --libs)
	show_libs=true
	;;
    --cflags)
        show_cflags=true
        ;;
    --lflags)
        show_lflags=true
        ;;
    *)
	echo "Unknown option $1"
	usage
	;;
  esac
  shift
done

if test -n "$show_cflags"; then
	echo "$cflags"
fi
if test -n "$show_libs"; then
	echo "$libs"
fi
if test -n "$show_lflags"; then
	lflags=""
	for lib in $libs ;
        do
	 linkflags $lib
         lflags="$lflags $result"
        done
	echo "$lflags"
fi

