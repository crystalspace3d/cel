/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.11u-20020223-0308
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    inline SwigValueWrapper() : tt(0) { }
    inline ~SwigValueWrapper() { if (tt) delete tt; } 
    inline SwigValueWrapper& operator=(T t) {tt = new T(t); return *this;}
    inline operator T() const {return *tt;}
    inline T *operator&() { return tt; }
};                                                    
#endif

/***********************************************************************
 * common.swg
 *
 *     This file contains generic SWIG runtime support for pointer
 *     type checking as well as a few commonly used macros to control
 *     external linkage.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 *
 * Copyright (c) 1999-2000, The University of Chicago
 * 
 * This file may be freely redistributed without license or fee provided
 * this copyright message remains intact.
 ************************************************************************/

#include <string.h>

#if defined(_WIN32) || defined(__WIN32__)
#       if defined(_MSC_VER)
#               if defined(STATIC_LINKED)
#                       define SWIGEXPORT(a) a
#               else
#                       define SWIGEXPORT(a) __declspec(dllexport) a
#               endif
#       else
#               if defined(__BORLANDC__)
#                       define SWIGEXPORT(a) a _export
#               else
#                       define SWIGEXPORT(a) a
#       endif
#endif
#else
#       define SWIGEXPORT(a) a
#endif

#ifdef SWIG_GLOBAL
#define SWIGRUNTIME(a) SWIGEXPORT(a)
#else
#define SWIGRUNTIME(a) static a
#endif



#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);

typedef struct swig_type_info {
  const char             *name;                 
  swig_converter_func     converter;
  const char             *str;
  struct swig_type_info  *next;
  struct swig_type_info  *prev;
  void                   *clientdata;	
} swig_type_info;

#ifdef SWIG_NOINCLUDE
SWIGEXPORT(swig_type_info *) SWIG_TypeRegister(swig_type_info *);
SWIGEXPORT(swig_type_info *) SWIG_TypeCheck(char *c, swig_type_info *);
SWIGEXPORT(void *) SWIG_TypeCast(swig_type_info *, void *);
SWIGEXPORT(swig_type_info *) SWIG_TypeQuery(const char *);
SWIGEXPORT(void) SWIG_TypeClientData(swig_type_info *, void *);
#else

static swig_type_info *swig_type_list = 0;

/* Register a type mapping with the type-checking */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeRegister(swig_type_info *ti)
{
  swig_type_info *tc, *head, *ret, *next;
  /* Check to see if this type has already been registered */
  tc = swig_type_list;
  while (tc) {
    if (strcmp(tc->name, ti->name) == 0) {
      /* Already exists in the table.  Just add additional types to the list */
      head = tc;
      next = tc->next;
      goto l1;
    }
    tc = tc->prev;
  }
  head = ti;
  next = 0;

  /* Place in list */
  ti->prev = swig_type_list;
  swig_type_list = ti;

  /* Build linked lists */
 l1:
  ret = head;
  tc = ti + 1;
  /* Patch up the rest of the links */
  while (tc->name) {
    head->next = tc;
    tc->prev = head;
    head = tc;
    tc++;
  }
  head->next = next;
  return ret;
}

/* Check the typename */
SWIGRUNTIME(swig_type_info *) 
SWIG_TypeCheck(char *c, swig_type_info *ty)
{
  swig_type_info *s;
  if (!ty) return 0;        /* Void pointer */
  s = ty->next;             /* First element always just a name */
  while (s) {
    if (strcmp(s->name,c) == 0) {
      if (s == ty->next) return s;
      /* Move s to the top of the linked list */
      s->prev->next = s->next;
      if (s->next) {
	s->next->prev = s->prev;
      }
      /* Insert s as second element in the list */
      s->next = ty->next;
      if (ty->next) ty->next->prev = s;
      ty->next = s;
      return s;
    }
    s = s->next;
  }
  return 0;
}

/* Cast a pointer (needed for C++ inheritance */
SWIGRUNTIME(void *) 
SWIG_TypeCast(swig_type_info *ty, void *ptr) 
{
  if ((!ty) || (!ty->converter)) return ptr;
  return (*ty->converter)(ptr);
}

/* Search for a swig_type_info structure */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeQuery(const char *name) {
  swig_type_info *ty = swig_type_list;
  while (ty) {
    if (ty->str && (strcmp(name,ty->str) == 0)) return ty;
    if (ty->name && (strcmp(name,ty->name) == 0)) return ty;
    ty = ty->prev;
  }
  return 0;
}

/* Set the clientdata field for a type */
SWIGRUNTIME(void)
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_type_info *tc, *equiv;
  if (ti->clientdata) return;
  ti->clientdata = clientdata;
  equiv = ti->next;
  while (equiv) {
    if (!equiv->converter) {
      tc = swig_type_list;
      while (tc) {
	if ((strcmp(tc->name, equiv->name) == 0))
	  SWIG_TypeClientData(tc,clientdata);
	tc = tc->prev;
      }
    }
    equiv = equiv->next;
  }
}
#endif

#ifdef __cplusplus
}

#endif




/***********************************************************************
 * python.swg
 *
 *     This file contains the runtime support for Python modules
 *     and includes code for managing global variables and pointer
 *     type checking.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 ************************************************************************/

#include <stdlib.h>
#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif

#define SWIG_PY_INT     1
#define SWIG_PY_FLOAT   2
#define SWIG_PY_STRING  3
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;

#ifdef SWIG_NOINCLUDE

SWIGEXPORT(PyObject *)        SWIG_newvarlink();
SWIGEXPORT(void)              SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
SWIGEXPORT(int)               SWIG_ConvertPtr(PyObject *, void **, swig_type_info *, int);
SWIGEXPORT(int)               SWIG_ConvertPacked(PyObject *, void *, int sz, swig_type_info *, int);
SWIGEXPORT(char *)            SWIG_PackData(char *c, void *, int);
SWIGEXPORT(char *)            SWIG_UnpackData(char *c, void *, int);
SWIGEXPORT(PyObject *)        SWIG_NewPointerObj(void *, swig_type_info *,int own);
SWIGEXPORT(PyObject *)        SWIG_NewPackedObj(void *, int sz, swig_type_info *);
SWIGEXPORT(void)              SWIG_InstallConstants(PyObject *d, swig_const_info constants[]);
SWIGEXPORT(PyObject *)        SWIG_MakeShadow(PyObject *robj, swig_type_info *type, int own);
#else

/* -----------------------------------------------------------------------------
 * global variable support code.
 * ----------------------------------------------------------------------------- */

typedef struct swig_globalvar {   
  char       *name;                  /* Name of global variable */
  PyObject *(*get_attr)(void);       /* Return the current value */
  int       (*set_attr)(PyObject *); /* Set the value */
  struct swig_globalvar *next;
} swig_globalvar;

typedef struct swig_varlinkobject {
  PyObject_HEAD
  swig_globalvar *vars;
} swig_varlinkobject;

static PyObject *
swig_varlink_repr(swig_varlinkobject *v) {
  v = v;
  return PyString_FromString("<Global variables>");
}

static int
swig_varlink_print(swig_varlinkobject *v, FILE *fp, int flags) {
  swig_globalvar  *var;
  flags = flags;
  fprintf(fp,"Global variables { ");
  for (var = v->vars; var; var=var->next) {
    fprintf(fp,"%s", var->name);
    if (var->next) fprintf(fp,", ");
  }
  fprintf(fp," }\n");
  return 0;
}

static PyObject *
swig_varlink_getattr(swig_varlinkobject *v, char *n) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->get_attr)();
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return NULL;
}

static int
swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->set_attr)(p);
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return 1;
}

statichere PyTypeObject varlinktype = {
  PyObject_HEAD_INIT(0)              
  0,
  (char *)"swigvarlink",                      /* Type name    */
  sizeof(swig_varlinkobject),         /* Basic size   */
  0,                                  /* Itemsize     */
  0,                                  /* Deallocator  */ 
  (printfunc) swig_varlink_print,     /* Print        */
  (getattrfunc) swig_varlink_getattr, /* get attr     */
  (setattrfunc) swig_varlink_setattr, /* Set attr     */
  0,                                  /* tp_compare   */
  (reprfunc) swig_varlink_repr,       /* tp_repr      */    
  0,                                  /* tp_as_number */
  0,                                  /* tp_as_mapping*/
  0,                                  /* tp_hash      */
};

/* Create a variable linking object for use later */
SWIGRUNTIME(PyObject *)
SWIG_newvarlink(void) {
  swig_varlinkobject *result = 0;
  result = PyMem_NEW(swig_varlinkobject,1);
  varlinktype.ob_type = &PyType_Type;    /* Patch varlinktype into a PyType */
  result->ob_type = &varlinktype;
  result->vars = 0;
  result->ob_refcnt = 0;
  Py_XINCREF((PyObject *) result);
  return ((PyObject*) result);
}

SWIGRUNTIME(void)
SWIG_addvarlink(PyObject *p, char *name,
	   PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
  swig_varlinkobject *v;
  swig_globalvar *gv;
  v= (swig_varlinkobject *) p;
  gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
  gv->name = (char *) malloc(strlen(name)+1);
  strcpy(gv->name,name);
  gv->get_attr = get_attr;
  gv->set_attr = set_attr;
  gv->next = v->vars;
  v->vars = gv;
}

/* Pack binary data into a string */
SWIGRUNTIME(char *)
SWIG_PackData(char *c, void *ptr, int sz) {
  static char hex[17] = "0123456789abcdef";
  int i;
  unsigned char *u = (unsigned char *) ptr;
  register unsigned char uu;
  for (i = 0; i < sz; i++,u++) {
    uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* Unpack binary data from a string */
SWIGRUNTIME(char *)
SWIG_UnpackData(char *c, void *ptr, int sz) {
  register unsigned char uu;
  register int d;
  unsigned char *u = (unsigned char *) ptr;
  int i;
  for (i = 0; i < sz; i++, u++) {
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    *u = uu;
  }
  return c;
}

/* Convert a pointer value */
SWIGRUNTIME(int)
SWIG_ConvertPtr(PyObject *obj, void **ptr, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c;
  static PyObject *SWIG_this = 0;
  int    newref = 0;

  if (!obj) return 0;
  if (obj == Py_None) {
    *ptr = 0;
    return 0;
  }
#ifdef SWIG_COBJECT_TYPES
  if (!(PyCObject_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_InternFromString("this");
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyCObject_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  } 
  *ptr = PyCObject_AsVoidPtr(obj);
  c = (char *) PyCObject_GetDesc(obj);
  if (newref) Py_DECREF(obj);
  goto cobject;
#else
  if (!(PyString_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_InternFromString("this");
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyString_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  } 
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') {
    *ptr = (void *) 0;
    if (strcmp(c,"NULL") == 0) {
      if (newref) Py_DECREF(obj);
      return 0;
    } else {
      if (newref) Py_DECREF(obj);
      goto type_error;
    }
  }
  c++;
  c = SWIG_UnpackData(c,ptr,sizeof(void *));
  if (newref) Py_DECREF(obj);
#endif

#ifdef SWIG_COBJECT_TYPES
cobject:
#endif

  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
    *ptr = SWIG_TypeCast(tc,(void*) *ptr);
  }
  return 0;

type_error:
  if (flags) {
    if (ty) {
      char *temp = (char *) malloc(64+strlen(ty->name));
      sprintf(temp,"Type error. Expected %s", ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Convert a packed value value */
SWIGRUNTIME(int)
SWIG_ConvertPacked(PyObject *obj, void *ptr, int sz, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c;

  if ((!obj) || (!PyString_Check(obj))) goto type_error;
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') goto type_error;
  c++;
  c = SWIG_UnpackData(c,ptr,sz);
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
  }
  return 0;

type_error:

  if (flags) {
    if (ty) {
      char *temp = (char *) malloc(64+strlen(ty->name));
      sprintf(temp,"Type error. Expected %s", ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Create a new pointer object */
SWIGRUNTIME(PyObject *)
SWIG_NewPointerObj(void *ptr, swig_type_info *type, int own) {
  PyObject *robj;
  if (!ptr) {
    Py_INCREF(Py_None);
    return Py_None;
  }
#ifdef SWIG_COBJECT_TYPES
  robj = PyCObject_FromVoidPtrAndDesc((void *) ptr, (char *) type->name, NULL);
#else
  {
    char result[512];
    char *r = result;
    *(r++) = '_';
    r = SWIG_PackData(r,&ptr,sizeof(void *));
    strcpy(r,type->name);
    robj = PyString_FromString(result);
  }
#endif
  if (!robj || (robj == Py_None)) return robj;
  if (type->clientdata) {
    PyObject *inst;
    PyObject *args = Py_BuildValue((char*)"(O)", robj);
    Py_DECREF(robj);
    inst = PyObject_CallObject((PyObject *) type->clientdata, args);
    Py_DECREF(args);
    if (own) {
      PyObject *n = PyInt_FromLong(1);
      PyObject_SetAttrString(inst,(char*)"thisown",n);
      Py_DECREF(n);
    }
    robj = inst;
  }
  return robj;
}

SWIGRUNTIME(PyObject *)
SWIG_MakeShadow(PyObject *robj, swig_type_info *type, int own) {
  if (!robj || (robj == Py_None)) return robj;
  if (type->clientdata) {
    PyInstanceObject *inst;
    inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
    if (!inst) return robj;
    inst->in_dict = PyDict_New();
    inst->in_class = (PyClassObject *) type->clientdata;
    Py_INCREF(inst->in_class);
    PyObject_SetAttrString((PyObject *)inst,(char*)"this",robj);
    Py_DECREF(robj);
    if (own) {
      PyObject *n = PyInt_FromLong(1);
      PyObject_SetAttrString((PyObject *)inst,(char*)"thisown",n);
      Py_DECREF(n);
    }
    robj = (PyObject *) inst;
    Py_INCREF(robj);
  }
  return robj;
}

SWIGRUNTIME(PyObject *)
SWIG_NewPackedObj(void *ptr, int sz, swig_type_info *type) {
  char result[1024];
  char *r = result;
  if ((2*sz + 1 + strlen(type->name)) > 1000) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  strcpy(r,type->name);
  return PyString_FromString(result);
}

/* Install Constants */
SWIGRUNTIME(void)
SWIG_InstallConstants(PyObject *d, swig_const_info constants[]) {
  int i;
  PyObject *obj;
  for (i = 0; constants[i].type; i++) {
    switch(constants[i].type) {
    case SWIG_PY_INT:
      obj = PyInt_FromLong(constants[i].lvalue);
      break;
    case SWIG_PY_FLOAT:
      obj = PyFloat_FromDouble(constants[i].dvalue);
      break;
    case SWIG_PY_STRING:
      obj = PyString_FromString((char *) constants[i].pvalue);
      break;
    case SWIG_PY_POINTER:
      obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
      break;
    case SWIG_PY_BINARY:
      obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
      break;
    default:
      obj = 0;
      break;
    }
    if (obj) {
      PyDict_SetItemString(d,constants[i].name,obj);
      Py_DECREF(obj);
    }
  }
}

#endif

#ifdef __cplusplus
}
#endif








/* -------- TYPES TABLE (BEGIN) -------- */

#define  SWIGTYPE_p_iCollider swig_types[0] 
#define  SWIGTYPE_p_G3DPolygonDP swig_types[1] 
#define  SWIGTYPE_p_iSectorList swig_types[2] 
#define  SWIGTYPE_p_iObjectRegistry swig_types[3] 
#define  SWIGTYPE_p_csPtrTiFont_t swig_types[4] 
#define  SWIGTYPE_p_iPcMovableConstraint swig_types[5] 
#define  SWIGTYPE_p_iCelPropertyClassList swig_types[6] 
#define  SWIGTYPE_p_csStringID swig_types[7] 
#define  SWIGTYPE_p_iEngine swig_types[8] 
#define  SWIGTYPE_p_csPtrTiThingState_t swig_types[9] 
#define  SWIGTYPE_p_iFontServer swig_types[10] 
#define  SWIGTYPE_p_iSector swig_types[11] 
#define  SWIGTYPE_p_csRect swig_types[12] 
#define  SWIGTYPE_p_csFog swig_types[13] 
#define  SWIGTYPE_p_short swig_types[14] 
#define  SWIGTYPE_p_bool swig_types[15] 
#define  SWIGTYPE_p_iPcCharacteristics swig_types[16] 
#define  SWIGTYPE_p_iLightMap swig_types[17] 
#define  SWIGTYPE_p_iGraphics2D swig_types[18] 
#define  SWIGTYPE_p_iThingState swig_types[19] 
#define  SWIGTYPE_p_iPcMeshSelect swig_types[20] 
#define  SWIGTYPE_p_G3DPolygonDFP swig_types[21] 
#define  SWIGTYPE_p_csTicks swig_types[22] 
#define  SWIGTYPE_p_csPtrTiTextureHandle_t swig_types[23] 
#define  SWIGTYPE_p_csColor swig_types[24] 
#define  SWIGTYPE_p_iCelEntity swig_types[25] 
#define  SWIGTYPE_p_void swig_types[26] 
#define  SWIGTYPE_p_double swig_types[27] 
#define  SWIGTYPE_p_int swig_types[28] 
#define  SWIGTYPE_p_csPtrTiImage_t swig_types[29] 
#define  SWIGTYPE_p_iSCF swig_types[30] 
#define  SWIGTYPE_p_iTextureHandle swig_types[31] 
#define  SWIGTYPE_p_iEvent swig_types[32] 
#define  SWIGTYPE_p_iComponent swig_types[33] 
#define  SWIGTYPE_p_csReversibleTransform swig_types[34] 
#define  SWIGTYPE_p_iCelPropertyClass swig_types[35] 
#define  SWIGTYPE_p_long swig_types[36] 
#define  SWIGTYPE_p_iPcMovable swig_types[37] 
#define  SWIGTYPE_p_iEventHandler swig_types[38] 
#define  SWIGTYPE_p_csMatrix3 swig_types[39] 
#define  SWIGTYPE_p_csPixelFormat swig_types[40] 
#define  SWIGTYPE_p_iPolygonTexture swig_types[41] 
#define  SWIGTYPE_p_CS_ID swig_types[42] 
#define  SWIGTYPE_p_iCameraPosition swig_types[43] 
#define  SWIGTYPE_p_iGraphics3D swig_types[44] 
#define  SWIGTYPE_p_p_char swig_types[45] 
#define  SWIGTYPE_p_char swig_types[46] 
#define  SWIGTYPE_p_iMaterialList swig_types[47] 
#define  SWIGTYPE_p_iMeshWrapper swig_types[48] 
#define  SWIGTYPE_p_iTextureWrapper swig_types[49] 
#define  SWIGTYPE_p_iMaterialWrapper swig_types[50] 
#define  SWIGTYPE_p_G3DPolygonMesh swig_types[51] 
#define  SWIGTYPE_p_iFont swig_types[52] 
#define  SWIGTYPE_p_csGraphics3DCaps swig_types[53] 
#define  SWIGTYPE_p_iTextureManager swig_types[54] 
#define  SWIGTYPE_p_G3DTriangleMesh swig_types[55] 
#define  SWIGTYPE_p_iPcCamera swig_types[56] 
#define  SWIGTYPE_p_iCamera swig_types[57] 
#define  SWIGTYPE_p_iPcMesh swig_types[58] 
#define  SWIGTYPE_p_iMaterialHandle swig_types[59] 
#define  SWIGTYPE_p_iCelBehaviour swig_types[60] 
#define  SWIGTYPE_p_iMeshObject swig_types[61] 
#define  SWIGTYPE_p_iPcTimer swig_types[62] 
#define  SWIGTYPE_p_csVector2 swig_types[63] 
#define  SWIGTYPE_p_csVector3 swig_types[64] 
#define  SWIGTYPE_p_iPcGravity swig_types[65] 
#define  SWIGTYPE_p_csRGBpixel swig_types[66] 
#define  SWIGTYPE_p_iTextureList swig_types[67] 
#define  SWIGTYPE_p_csImageArea swig_types[68] 
#define  SWIGTYPE_p_iPcSolid swig_types[69] 
#define  SWIGTYPE_p_scfInterfaceID swig_types[70] 
#define  SWIGTYPE_p_unsigned_char swig_types[71] 
#define  SWIGTYPE_p_iView swig_types[72] 
#define  SWIGTYPE_p_celDataType swig_types[73] 
#define  SWIGTYPE_p_float swig_types[74] 
#define  SWIGTYPE_p_csMouseCursorID swig_types[75] 
#define  SWIGTYPE_p_iBase swig_types[76] 
#define  SWIGTYPE_p_iHalo swig_types[77] 
#define  SWIGTYPE_p_iCelBlLayer swig_types[78] 
#define  SWIGTYPE_p_iCelPlLayer swig_types[79] 
#define  SWIGTYPE_p_iPcInventory swig_types[80] 
#define  SWIGTYPE_p_csPtrTiMeshWrapper_t swig_types[81] 
#define  SWIGTYPE_p_iPolygon3D swig_types[82] 
#define  SWIGTYPE_p_iImage swig_types[83] 
#define  SWIGTYPE_p_iPcRegion swig_types[84] 
static swig_type_info *swig_types[86];

/* -------- TYPES TABLE (END) -------- */


/*-----------------------------------------------
              @(target):= blcelc.so
  ------------------------------------------------*/
#define SWIG_init    initblcelc

#define SWIG_name    "blcelc"

  #include "css.h"
//***** SCF Wrappers
  int MakeVersion(int version0, int version1, int version2)
  {
    return SCF_CONSTRUCT_VERSION(version0, version1, version2);
  }

#include "iutil/plugin.h"
#include "iutil/eventh.h"
#include "iutil/comp.h"
#include "iutil/event.h"
#include "iutil/objreg.h"
#include "iengine/camera.h"
#include "iengine/campos.h"
#include "imesh/object.h"
#include "imesh/thing/thing.h"
#include "imesh/thing/lightmap.h"
#include "imap/parser.h"
#include "ivideo/graph2d.h"
#include "ivideo/fontserv.h"
#include "ivideo/halo.h"



#include <ctype.h>

/* Types used by the library */
static swig_type_info *SWIG_POINTER_int_p = 0;
static swig_type_info *SWIG_POINTER_short_p =0;
static swig_type_info *SWIG_POINTER_long_p = 0;
static swig_type_info *SWIG_POINTER_float_p = 0;
static swig_type_info *SWIG_POINTER_double_p = 0;
static swig_type_info *SWIG_POINTER_char_p = 0;
static swig_type_info *SWIG_POINTER_char_pp = 0;



/*------------------------------------------------------------------
  ptrvalue(ptr,type = 0)

  Attempts to dereference a pointer value.  If type is given, it 
  will try to use that type.  Otherwise, this function will attempt
  to "guess" the proper datatype by checking against all of the 
  builtin C datatypes. 
  ------------------------------------------------------------------ */

static PyObject *ptrvalue(PyObject *_PTRVALUE, int index, char *type) {
  void     *ptr;
  char     *s;
  PyObject *obj;

  if (SWIG_ConvertPtr(_PTRVALUE,&ptr,0,0)) {
    PyErr_SetString(PyExc_TypeError,"Type error in ptrvalue. Argument is not a valid pointer value.");
    return NULL;
  }

  /* If no datatype was passed, try a few common datatypes first */
  if (!type) {
    /* No datatype was passed.   Type to figure out if it's a common one */
    if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_int_p,0)) {
      type = (char *)"int";
    } else if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_double_p,0)) {
      type = (char *)"double";
    } else if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_short_p,0)) {
      type = (char *)"short";
    } else if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_long_p,0)) {
      type = (char *)"long";
    } else if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_float_p,0)) {
      type = (char *)"float";
    } else if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_char_p,0)) {
      type = (char *)"char";
    } else if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_char_pp,0)) {
      type = (char *)"char *";
    } else {
      type = (char *)"unknown";
    }
  }
  if (!ptr) {
    PyErr_SetString(PyExc_TypeError,"Unable to dereference NULL pointer.");
    return NULL;
  }
  /* Now we have a datatype.  Try to figure out what to do about it */
  if (strcmp(type,"int") == 0) {
    obj = PyInt_FromLong((long) *(((int *) ptr) + index));
  } else if (strcmp(type,"double") == 0) {
    obj = PyFloat_FromDouble((double) *(((double *) ptr)+index));
  } else if (strcmp(type,"short") == 0) {
    obj = PyInt_FromLong((long) *(((short *) ptr)+index));
  } else if (strcmp(type,"long") == 0) {
    obj = PyInt_FromLong((long) *(((long *) ptr)+index));
  } else if (strcmp(type,"float") == 0) {
    obj = PyFloat_FromDouble((double) *(((float *) ptr)+index));
  } else if (strcmp(type,"char") == 0) {
    obj = PyString_FromString(((char *) ptr)+index);
  } else if (strcmp(type,"char *") == 0) {
    char *c = *(((char **) ptr)+index);
    if (c) obj = PyString_FromString(c);
    else obj = PyString_FromString("NULL");
  } else {
    PyErr_SetString(PyExc_TypeError,"Unable to dereference unsupported datatype.");
    return NULL;
  }
  return obj;
}

/*------------------------------------------------------------------
  ptrcreate(type,value = 0,numelements = 1)

  Attempts to create a new object of given type.  Type must be
  a basic C datatype.  Will not create complex objects.
  ------------------------------------------------------------------ */

static PyObject *ptrcreate(char *type, PyObject *_PYVALUE, int numelements) {
  void     *ptr;
  PyObject *obj;
  int       sz;
  swig_type_info *cast;
  char      temp[40];

  /* Check the type string against a variety of possibilities */

  if (strcmp(type,"int") == 0) {
    sz = sizeof(int)*numelements;
    cast = SWIG_POINTER_int_p;
  } else if (strcmp(type,"short") == 0) {
    sz = sizeof(short)*numelements;
    cast = SWIG_POINTER_short_p;
  } else if (strcmp(type,"long") == 0) {
    sz = sizeof(long)*numelements;
    cast = SWIG_POINTER_long_p;
  } else if (strcmp(type,"double") == 0) {
    sz = sizeof(double)*numelements;
    cast = SWIG_POINTER_double_p;
  } else if (strcmp(type,"float") == 0) {
    sz = sizeof(float)*numelements;
    cast = SWIG_POINTER_float_p;
  } else if (strcmp(type,"char") == 0) {
    sz = sizeof(char)*numelements;
    cast = SWIG_POINTER_char_p;
  } else if (strcmp(type,"char *") == 0) {
    sz = sizeof(char *)*(numelements+1);
    cast = SWIG_POINTER_char_pp;
  } else {
    PyErr_SetString(PyExc_TypeError,"Unable to create unknown datatype."); 
    return NULL;
  }
   
  /* Create the new object */
  
  ptr = (void *) calloc(1,sz);
  if (!ptr) {
    PyErr_SetString(PyExc_MemoryError,"Out of memory in swig_create."); 
    return NULL;
  }

  /* Now try to set its default value */

  if (_PYVALUE) {
    if (strcmp(type,"int") == 0) {
      int *ip,i,ivalue;
      ivalue = (int) PyInt_AsLong(_PYVALUE);
      ip = (int *) ptr;
      for (i = 0; i < numelements; i++)
	ip[i] = ivalue;
    } else if (strcmp(type,"short") == 0) {
      short *ip,ivalue;
      int i;
      ivalue = (short) PyInt_AsLong(_PYVALUE);
      ip = (short *) ptr;
      for (i = 0; i < numelements; i++)
	ip[i] = ivalue;
    } else if (strcmp(type,"long") == 0) {
      long *ip,ivalue;
      int i;
      ivalue = (long) PyInt_AsLong(_PYVALUE);
      ip = (long *) ptr;
      for (i = 0; i < numelements; i++)
	ip[i] = ivalue;
    } else if (strcmp(type,"double") == 0) {
      double *ip,ivalue;
      int i;
      ivalue = (double) PyFloat_AsDouble(_PYVALUE);
      ip = (double *) ptr;
      for (i = 0; i < numelements; i++)
	ip[i] = ivalue;
    } else if (strcmp(type,"float") == 0) {
      float *ip,ivalue;
      int i;
      ivalue = (float) PyFloat_AsDouble(_PYVALUE);
      ip = (float *) ptr;
      for (i = 0; i < numelements; i++)
	ip[i] = ivalue;
    } else if (strcmp(type,"char") == 0) {
      char *ip,*ivalue;
      ivalue = (char *) PyString_AsString(_PYVALUE);
      ip = (char *) ptr;
      strncpy(ip,ivalue,numelements-1);
    } else if (strcmp(type,"char *") == 0) {
      char **ip, *ivalue;
      int  i;
      ivalue = (char *) PyString_AsString(_PYVALUE);
      ip = (char **) ptr;
      for (i = 0; i < numelements; i++) {
	if (ivalue) {
	  ip[i] = (char *) malloc(strlen(ivalue)+1);
	  strcpy(ip[i],ivalue);
	} else {
	  ip[i] = 0;
	}
      }
      ip[numelements] = 0;
    }
  } 
  /* Create the pointer value */
  
  obj = SWIG_NewPointerObj(ptr,cast,0);
  return obj;
}


/*------------------------------------------------------------------
  ptrset(ptr,value,index = 0,type = 0)

  Attempts to set the value of a pointer variable.  If type is
  given, we will use that type.  Otherwise, we'll guess the datatype.
  ------------------------------------------------------------------ */

static PyObject *ptrset(PyObject *_PTRVALUE, PyObject *_PYVALUE, int index, char *type) {
  void     *ptr;
  PyObject *obj;

  if (SWIG_ConvertPtr(_PTRVALUE,&ptr,0,0)) {
    PyErr_SetString(PyExc_TypeError,"Type error in ptrset. Argument is not a valid pointer value.");
    return NULL;
  }

  /* If no datatype was passed, try a few common datatypes first */
  if (!type) {
    /* No datatype was passed.   Type to figure out if it's a common one */
    if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_int_p,0)) {
      type = (char *)"int";
    } else if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_double_p,0)) {
      type = (char *)"double";
    } else if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_short_p,0)) {
      type = (char *)"short";
    } else if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_long_p,0)) {
      type = (char *)"long";
    } else if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_float_p,0)) {
      type = (char *)"float";
    } else if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_char_p,0)) {
      type = (char *)"char";
    } else if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_char_pp,0)) {
      type = (char *)"char *";
    } else {
      type = (char *)"unknown";
    }
  }
  if (!ptr) {
    PyErr_SetString(PyExc_TypeError,"Unable to set NULL pointer.");
    return NULL;
  }
  
  /* Now we have a datatype.  Try to figure out what to do about it */
  if (strcmp(type,"int") == 0) {
    *(((int *) ptr)+index) = (int) PyInt_AsLong(_PYVALUE);
  } else if (strcmp(type,"double") == 0) {
    *(((double *) ptr)+index) = (double) PyFloat_AsDouble(_PYVALUE);
  } else if (strcmp(type,"short") == 0) {
    *(((short *) ptr)+index) = (short) PyInt_AsLong(_PYVALUE);
  } else if (strcmp(type,"long") == 0) {
    *(((long *) ptr)+index) = (long) PyInt_AsLong(_PYVALUE);
  } else if (strcmp(type,"float") == 0) {
    *(((float *) ptr)+index) = (float) PyFloat_AsDouble(_PYVALUE);
  } else if (strcmp(type,"char") == 0) {
    char *c = PyString_AsString(_PYVALUE);
    strcpy(((char *) ptr)+index, c);
  } else if (strcmp(type,"char *") == 0) {
    char *c = PyString_AsString(_PYVALUE);
    char **ca = (char **) ptr;
    if (ca[index]) free(ca[index]);
    if (strcmp(c,"NULL") == 0) {
      ca[index] = 0;
    } else {
      ca[index] = (char *) malloc(strlen(c)+1);
      strcpy(ca[index],c);
    }
  } else {
    PyErr_SetString(PyExc_TypeError,"Unable to set unsupported datatype.");
    return NULL;
  }
  Py_INCREF(Py_None);
  return Py_None;
}

/*------------------------------------------------------------------
  ptradd(ptr,offset)

  Adds a value to an existing pointer value.  Will do a type-dependent
  add for basic datatypes.  For other datatypes, will do a byte-add.
  ------------------------------------------------------------------ */

static PyObject *ptradd(PyObject *_PTRVALUE, int offset) {

  char *r;
  void *ptr,*junk;
  PyObject *obj;
  swig_type_info *type;

  /* Check to see what kind of object _PTRVALUE is */
  
  /* Try to handle a few common datatypes first */
  if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_int_p,0)) {
    ptr = (void *) (((int *) ptr) + offset);
    type = SWIG_POINTER_int_p;
  } else if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_double_p,0)) {
    ptr = (void *) (((double *) ptr) + offset);
    type = SWIG_POINTER_double_p;
  } else if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_short_p,0)) {
    ptr = (void *) (((short *) ptr) + offset);
    type = SWIG_POINTER_short_p;
  } else if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_long_p,0)) {
    ptr = (void *) (((long *) ptr) + offset);
    type = SWIG_POINTER_long_p;
  } else if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_float_p,0)) {
    ptr = (void *) (((float *) ptr) + offset);
    type = SWIG_POINTER_float_p;
  } else if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_char_p,0)) {
    ptr = (void *) (((char *) ptr) + offset);
    type = SWIG_POINTER_char_p;
  } else if (!SWIG_ConvertPtr(_PTRVALUE,&ptr,SWIG_POINTER_char_pp,0)) {
    ptr = (void *) (((char *) ptr) + offset);
    type = SWIG_POINTER_char_pp;
  } else {
    PyErr_SetString(PyExc_TypeError,"Type error in ptradd. Argument is not a valid pointer value.");
    return NULL;
  }
  obj = SWIG_NewPointerObj(ptr, type,0);
  return obj;
}

/*------------------------------------------------------------------
  ptrfree(ptr)

  Destroys a pointer value
  ------------------------------------------------------------------ */

PyObject *ptrfree(PyObject *_PTRVALUE) {
  void *ptr, *junk;

  if (SWIG_ConvertPtr(_PTRVALUE,&ptr,0,0)) {
    PyErr_SetString(PyExc_TypeError,"Type error in ptrfree. Argument is not a valid pointer value.");
    return NULL;
  }
  
  /* Check to see if this pointer is a char ** */
  if (!SWIG_ConvertPtr(_PTRVALUE,&junk,SWIG_POINTER_char_pp,0)) {
    char **c = (char **) ptr;
    if (c) {
      int i = 0;
      while (c[i]) {
	free(c[i]);
	i++;
      }
    }
  }
  if (ptr)
    free((char *) ptr);

  Py_INCREF(Py_None);
  return Py_None;
}


csPtr<iThingState > iMeshObject_Query_iThingState(iMeshObject *self){
      return SCF_QUERY_INTERFACE(self, iThingState);
    }
iEngine *iObjectRegistry_Query_iEngine(iObjectRegistry *self){
      csRef<iEngine> en (CS_QUERY_REGISTRY (self, iEngine));
      return en;	// DecRef is ok here.
    }
iGraphics3D *iObjectRegistry_Query_iGraphics3D(iObjectRegistry *self){
      csRef<iGraphics3D> g3d (CS_QUERY_REGISTRY (self, iGraphics3D));
      return g3d;	// DecRef is ok here.
    }
void iObjectRegistry_Print(iObjectRegistry *self,int mode,char const *format){
      printf (format);
    }

#include "pl/pl.h"
#include "pl/propfact.h"
#include "pl/propclas.h"
#include "pl/entity.h"
#include "pl/persist.h"
#include "bl/bl.h"
#include "bl/behave.h"
#include "pf/region.h"
#include "pf/camera.h"
#include "pf/common/stdpcimp.h"
#include "pf/mesh.h"
#include "pf/meshsel.h"
#include "pf/timer.h"
#include "pf/solid.h"
#include "pf/gravity.h"
#include "pf/move.h"
#include "pf/inv.h"
#include "pf/chars.h"
#include "blpython/blpython.h"


iCelPlLayer *csQueryRegistry_iCelPlLayer(iObjectRegistry *object_reg) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  return pl;
}

iCelBehaviour *iCelEntity_LoadBehaviour(iCelEntity *self,iObjectRegistry *object_reg,char const *name){
      csRef<iCelBlLayer> bl(CS_QUERY_REGISTRY(object_reg, iCelBlLayer));
      if(!bl.IsValid()) return NULL;
      csRef<iCelBehaviour> bh(bl->CreateBehaviour(self, name));
      if(!bh.IsValid()) return NULL;
      self->SetBehaviour(bh);
      return bh;
    }

iCelEntity *celCreateEntity(iObjectRegistry *object_reg, const char *name) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY(object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelEntity> en(pl->CreateEntity());
  if(!en.IsValid()) return NULL;
  en->SetName(name);
  return en;
}


iCelBlLayer *csQueryRegistry_iCelBlLayer(iObjectRegistry *object_reg) {
  csRef<iCelBlLayer> bl(CS_QUERY_REGISTRY (object_reg, iCelBlLayer));
  return bl;
}

bool iCelPropertyClass_SetPropertyLong(iCelPropertyClass *self,csStringID id,long l){ return self->SetProperty (id, l); }
bool iCelPropertyClass_SetPropertyFloat(iCelPropertyClass *self,csStringID id,float f){ return self->SetProperty (id, f); }
bool iCelPropertyClass_SetPropertyBool(iCelPropertyClass *self,csStringID id,bool b){ return self->SetProperty (id, b); }
bool iCelPropertyClass_SetPropertyString(iCelPropertyClass *self,csStringID id,char const *s){ return self->SetProperty (id, s); }
bool iCelPropertyClass_SetPropertyVector3(iCelPropertyClass *self,csStringID id,csVector3 const &v){ return self->SetProperty (id, v); }

iPcRegion *celQueryPC_iPcRegion(iCelPropertyClassList *pclist) {
  csPtr<iPcRegion> pcregion(CEL_QUERY_PROPCLASS(pclist, iPcRegion));
  return pcregion;
}

bool iPcRegion_LoadWorld(iPcRegion *self,char const *vfsdir,char const *name){
      self->SetWorldFile(vfsdir, name);
      return self->Load();
    }

iPcRegion *celCreateRegion(iObjectRegistry *object_reg, iCelEntity *entity, const char *name) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, "pcregion"));
  if(!pc.IsValid()) return NULL;
  csRef<iPcRegion> pcregion(SCF_QUERY_INTERFACE(pc, iPcRegion));
  if(!pcregion.IsValid()) return NULL;
  pcregion->SetRegionName(name);
  return pcregion;
}


iPcRegion *scfQuery_iPcRegion(iCelPropertyClass *pc) { 
  csPtr<iPcRegion> pcregion(SCF_QUERY_INTERFACE(pc, iPcRegion));
  return pcregion;
}


iPcCamera *celCreateCamera(iObjectRegistry *object_reg, iCelEntity *world, iCelEntity *entity, const char *name) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, name));
  if(!pc.IsValid()) return NULL;
  csRef<iPcCamera> pccam(SCF_QUERY_INTERFACE(pc, iPcCamera));
  if(!pccam.IsValid()) return NULL;
  csRef<iPcRegion> pcregion(CEL_QUERY_PROPCLASS(world->GetPropertyClassList(), iPcRegion));
  if(!pcregion.IsValid()) return NULL;
  if(pccam->SetRegion(pcregion)) {
    return pccam;
  } else {
    return NULL;
  }
}


iPcCamera *scfQuery_iPcCamera(iCelPropertyClass *pc) {
  csRef<iPcCamera> pccamera(SCF_QUERY_INTERFACE(pc, iPcCamera));
  return pccamera;
}


iPcMeshSelect *celPcMeshSelect(iObjectRegistry *object_reg, iCelEntity *entity) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, "pcmeshselect"));
  if(!pc.IsValid()) return NULL;
  csRef<iPcMeshSelect> pcmeshselect(SCF_QUERY_INTERFACE(pc, iPcMeshSelect));
  if(!pcmeshselect.IsValid()) return NULL;
  return pcmeshselect;
}


iPcMesh *celPcMesh(iObjectRegistry *object_reg, iCelEntity *entity) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, "pcmesh"));
  if(!pc.IsValid()) return NULL;
  csRef<iPcMesh> pcmesh(SCF_QUERY_INTERFACE(pc, iPcMesh));
  if(!pcmesh.IsValid()) return NULL;
  return pcmesh;
}


iPcTimer *celPcTimer(iObjectRegistry *object_reg, iCelEntity *entity) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, "pctimer"));
  if(!pc.IsValid()) return NULL;
  csRef<iPcTimer> pctimer(SCF_QUERY_INTERFACE(pc, iPcTimer));
  if(!pctimer.IsValid()) return NULL;
  return pctimer;
}


iPcSolid *celPcSolid(iObjectRegistry *object_reg, iCelEntity *entity) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, "pcsolid"));
  if(!pc.IsValid()) return NULL;
  csRef<iPcSolid> pcsolid(SCF_QUERY_INTERFACE(pc, iPcSolid));
  if(!pcsolid.IsValid()) return NULL;
  return pcsolid;
}


iPcGravity *celPcGravity(iObjectRegistry *object_reg, iCelEntity *entity) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, "pcgravity"));
  if(!pc.IsValid()) return NULL;
  csRef<iPcGravity> pcgravity(SCF_QUERY_INTERFACE(pc, iPcGravity));
  if(!pcgravity.IsValid()) return NULL;
  return pcgravity;
}


iPcMovable *celPcMovable(iObjectRegistry *object_reg, iCelEntity *entity) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, "pcmovable"));
  if(!pc.IsValid()) return NULL;
  csRef<iPcMovable> pcmovable(SCF_QUERY_INTERFACE(pc, iPcMovable));
  if(!pcmovable.IsValid()) return NULL;
  return pcmovable;
}


iPcInventory *celPcInventory(iObjectRegistry *object_reg, iCelEntity *entity) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, "pcinventory"));
  if(!pc.IsValid()) return NULL;
  csRef<iPcInventory> pcinv(SCF_QUERY_INTERFACE(pc, iPcInventory));
  if(!pcinv.IsValid()) return NULL;
  return pcinv;
}


iPcCharacteristics *celPcCharacteristics(iObjectRegistry *object_reg, iCelEntity *entity) {
  csRef<iCelPlLayer> pl(CS_QUERY_REGISTRY (object_reg, iCelPlLayer));
  if(!pl.IsValid()) return NULL;
  csRef<iCelPropertyClass> pc(pl->CreatePropertyClass(entity, "pccharacteristics"));
  if(!pc.IsValid()) return NULL;
  csRef<iPcCharacteristics> pccharacteristics(SCF_QUERY_INTERFACE(pc, iPcCharacteristics));
  if(!pccharacteristics.IsValid()) return NULL;
  return pccharacteristics;
}

#ifdef __cplusplus
extern "C" {
#endif
static PyObject *_wrap_ptrvalue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *arg1 ;
    int arg2 = 0 ;
    char *arg3 = 0 ;
    PyObject *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|is:ptrvalue",&obj0,&arg2,&arg3)) return NULL;
    {
        arg1 = obj0;
    }
    result = (PyObject *)ptrvalue(arg1,arg2,arg3);
    
    {
        resultobj = result;
    }
    return resultobj;
}


static PyObject *_wrap_ptrset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *arg1 ;
    PyObject *arg2 ;
    int arg3 = 0 ;
    char *arg4 = 0 ;
    PyObject *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|is:ptrset",&obj0,&obj1,&arg3,&arg4)) return NULL;
    {
        arg1 = obj0;
    }
    {
        arg2 = obj1;
    }
    result = (PyObject *)ptrset(arg1,arg2,arg3,arg4);
    
    {
        resultobj = result;
    }
    return resultobj;
}


static PyObject *_wrap_ptrcreate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    PyObject *arg2 = 0 ;
    int arg3 = 1 ;
    PyObject *result;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"s|Oi:ptrcreate",&arg1,&obj1,&arg3)) return NULL;
    if (obj1)
    {
        arg2 = obj1;
    }
    result = (PyObject *)ptrcreate(arg1,arg2,arg3);
    
    {
        resultobj = result;
    }
    return resultobj;
}


static PyObject *_wrap_ptrfree(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *arg1 ;
    PyObject *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ptrfree",&obj0)) return NULL;
    {
        arg1 = obj0;
    }
    result = (PyObject *)ptrfree(arg1);
    
    {
        resultobj = result;
    }
    return resultobj;
}


static PyObject *_wrap_ptradd(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *arg1 ;
    int arg2 ;
    PyObject *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:ptradd",&obj0,&arg2)) return NULL;
    {
        arg1 = obj0;
    }
    result = (PyObject *)ptradd(arg1,arg2);
    
    {
        resultobj = result;
    }
    return resultobj;
}


static PyObject *_wrap_iBase_DecRef(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBase *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iBase_DecRef",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBase,1)) == -1) return NULL;
    (arg1)->DecRef();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_new_iBase(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBase *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_iBase")) return NULL;
    result = (iBase *)new iBase();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iBase(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iBase *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iBase",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iBase,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iBase_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iBase, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iSCF_CreateInstance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 ;
    char *arg2 ;
    char *arg3 ;
    int arg4 ;
    void *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ossi:iSCF_CreateInstance",&obj0,&arg2,&arg3,&arg4)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,1)) == -1) return NULL;
    result = (void *)(arg1)->CreateInstance((char const *)arg2,(char const *)arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
}


static PyObject *_wrap_new_iSCF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_iSCF")) return NULL;
    result = (iSCF *)new iSCF();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSCF, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iSCF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSCF *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSCF",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSCF,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iSCF_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSCF, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_MakeVersion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    int arg3 ;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)"iii:MakeVersion",&arg1,&arg2,&arg3)) return NULL;
    result = (int )MakeVersion(arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csVector3_x_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 ;
    float arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector3_x_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    if (arg1) arg1->x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csVector3_x_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 ;
    float result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector3_x_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    result = (float ) (arg1->x);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
}


static PyObject *_wrap_csVector3_y_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 ;
    float arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector3_y_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    if (arg1) arg1->y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csVector3_y_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 ;
    float result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector3_y_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    result = (float ) (arg1->y);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
}


static PyObject *_wrap_csVector3_z_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 ;
    float arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:csVector3_z_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    if (arg1) arg1->z = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csVector3_z_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 ;
    float result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csVector3_z_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    result = (float ) (arg1->z);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
}


static PyObject *_wrap_new_csVector3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    float arg1 ;
    float arg2 ;
    float arg3 ;
    csVector3 *result;
    
    if(!PyArg_ParseTuple(args,(char *)"fff:new_csVector3",&arg1,&arg2,&arg3)) return NULL;
    result = (csVector3 *)new csVector3(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 1);
    return resultobj;
}


static PyObject *_wrap_delete_csVector3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csVector3 *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csVector3",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * csVector3_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csVector3, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csRGBpixel_red_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 ;
    unsigned char arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBpixel_red_set",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,1)) == -1) return NULL;
    arg2 = (unsigned char ) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    if (arg1) arg1->red = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csRGBpixel_red_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 ;
    unsigned char result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRGBpixel_red_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,1)) == -1) return NULL;
    result = (unsigned char ) (arg1->red);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csRGBpixel_green_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 ;
    unsigned char arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBpixel_green_set",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,1)) == -1) return NULL;
    arg2 = (unsigned char ) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    if (arg1) arg1->green = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csRGBpixel_green_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 ;
    unsigned char result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRGBpixel_green_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,1)) == -1) return NULL;
    result = (unsigned char ) (arg1->green);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csRGBpixel_blue_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 ;
    unsigned char arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBpixel_blue_set",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,1)) == -1) return NULL;
    arg2 = (unsigned char ) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    if (arg1) arg1->blue = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csRGBpixel_blue_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 ;
    unsigned char result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRGBpixel_blue_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,1)) == -1) return NULL;
    result = (unsigned char ) (arg1->blue);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csRGBpixel_alpha_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 ;
    unsigned char arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csRGBpixel_alpha_set",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,1)) == -1) return NULL;
    arg2 = (unsigned char ) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    if (arg1) arg1->alpha = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csRGBpixel_alpha_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 ;
    unsigned char result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csRGBpixel_alpha_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,1)) == -1) return NULL;
    result = (unsigned char ) (arg1->alpha);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_new_csRGBpixel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csRGBpixel")) return NULL;
    result = (csRGBpixel *)new csRGBpixel();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csRGBpixel, 0);
    return resultobj;
}


static PyObject *_wrap_delete_csRGBpixel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csRGBpixel *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csRGBpixel",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csRGBpixel,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * csRGBpixel_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csRGBpixel, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csPixelFormat_RedMask_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    unsigned long arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPixelFormat_RedMask_set",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    arg2 = (unsigned long ) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    if (arg1) arg1->RedMask = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_RedMask_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    unsigned long result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_RedMask_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    result = (unsigned long ) (arg1->RedMask);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_GreenMask_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    unsigned long arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPixelFormat_GreenMask_set",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    arg2 = (unsigned long ) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    if (arg1) arg1->GreenMask = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_GreenMask_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    unsigned long result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_GreenMask_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    result = (unsigned long ) (arg1->GreenMask);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_BlueMask_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    unsigned long arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csPixelFormat_BlueMask_set",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    arg2 = (unsigned long ) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    if (arg1) arg1->BlueMask = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_BlueMask_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    unsigned long result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_BlueMask_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    result = (unsigned long ) (arg1->BlueMask);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_RedShift_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPixelFormat_RedShift_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    if (arg1) arg1->RedShift = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_RedShift_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_RedShift_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    result = (int ) (arg1->RedShift);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_GreenShift_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPixelFormat_GreenShift_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    if (arg1) arg1->GreenShift = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_GreenShift_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_GreenShift_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    result = (int ) (arg1->GreenShift);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_BlueShift_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPixelFormat_BlueShift_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    if (arg1) arg1->BlueShift = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_BlueShift_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_BlueShift_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    result = (int ) (arg1->BlueShift);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_RedBits_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPixelFormat_RedBits_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    if (arg1) arg1->RedBits = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_RedBits_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_RedBits_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    result = (int ) (arg1->RedBits);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_GreenBits_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPixelFormat_GreenBits_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    if (arg1) arg1->GreenBits = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_GreenBits_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_GreenBits_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    result = (int ) (arg1->GreenBits);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_BlueBits_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPixelFormat_BlueBits_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    if (arg1) arg1->BlueBits = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_BlueBits_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_BlueBits_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    result = (int ) (arg1->BlueBits);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_PalEntries_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPixelFormat_PalEntries_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    if (arg1) arg1->PalEntries = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_PalEntries_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_PalEntries_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    result = (int ) (arg1->PalEntries);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_PixelBytes_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csPixelFormat_PixelBytes_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    if (arg1) arg1->PixelBytes = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csPixelFormat_PixelBytes_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csPixelFormat_PixelBytes_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    result = (int ) (arg1->PixelBytes);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_new_csPixelFormat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csPixelFormat")) return NULL;
    result = (csPixelFormat *)new csPixelFormat();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPixelFormat, 0);
    return resultobj;
}


static PyObject *_wrap_delete_csPixelFormat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csPixelFormat *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csPixelFormat",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * csPixelFormat_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csPixelFormat, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csGraphics3DCaps_CanClip_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csGraphics3DCaps_CanClip_set",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,1)) == -1) return NULL;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    if (arg1) arg1->CanClip = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csGraphics3DCaps_CanClip_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGraphics3DCaps_CanClip_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,1)) == -1) return NULL;
    result = (bool ) (arg1->CanClip);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csGraphics3DCaps_minTexHeight_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csGraphics3DCaps_minTexHeight_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,1)) == -1) return NULL;
    if (arg1) arg1->minTexHeight = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csGraphics3DCaps_minTexHeight_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGraphics3DCaps_minTexHeight_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,1)) == -1) return NULL;
    result = (int ) (arg1->minTexHeight);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csGraphics3DCaps_minTexWidth_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csGraphics3DCaps_minTexWidth_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,1)) == -1) return NULL;
    if (arg1) arg1->minTexWidth = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csGraphics3DCaps_minTexWidth_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGraphics3DCaps_minTexWidth_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,1)) == -1) return NULL;
    result = (int ) (arg1->minTexWidth);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csGraphics3DCaps_maxTexHeight_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csGraphics3DCaps_maxTexHeight_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,1)) == -1) return NULL;
    if (arg1) arg1->maxTexHeight = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csGraphics3DCaps_maxTexHeight_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGraphics3DCaps_maxTexHeight_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,1)) == -1) return NULL;
    result = (int ) (arg1->maxTexHeight);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csGraphics3DCaps_maxTexWidth_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csGraphics3DCaps_maxTexWidth_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,1)) == -1) return NULL;
    if (arg1) arg1->maxTexWidth = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csGraphics3DCaps_maxTexWidth_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGraphics3DCaps_maxTexWidth_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,1)) == -1) return NULL;
    result = (int ) (arg1->maxTexWidth);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csGraphics3DCaps_fog_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csGraphics3DCaps_fog_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,1)) == -1) return NULL;
    if (arg1) arg1->fog = (G3D_FOGMETHOD )arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csGraphics3DCaps_fog_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGraphics3DCaps_fog_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,1)) == -1) return NULL;
    result = (int ) (arg1->fog);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csGraphics3DCaps_NeedsPO2Maps_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:csGraphics3DCaps_NeedsPO2Maps_set",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,1)) == -1) return NULL;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    if (arg1) arg1->NeedsPO2Maps = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csGraphics3DCaps_NeedsPO2Maps_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGraphics3DCaps_NeedsPO2Maps_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,1)) == -1) return NULL;
    result = (bool ) (arg1->NeedsPO2Maps);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csGraphics3DCaps_MaxAspectRatio_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csGraphics3DCaps_MaxAspectRatio_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,1)) == -1) return NULL;
    if (arg1) arg1->MaxAspectRatio = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csGraphics3DCaps_MaxAspectRatio_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csGraphics3DCaps_MaxAspectRatio_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,1)) == -1) return NULL;
    result = (int ) (arg1->MaxAspectRatio);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_new_csGraphics3DCaps(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_csGraphics3DCaps")) return NULL;
    result = (csGraphics3DCaps *)new csGraphics3DCaps();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csGraphics3DCaps, 0);
    return resultobj;
}


static PyObject *_wrap_delete_csGraphics3DCaps(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csGraphics3DCaps *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csGraphics3DCaps",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csGraphics3DCaps,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * csGraphics3DCaps_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csGraphics3DCaps, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csImageArea_x_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csImageArea_x_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,1)) == -1) return NULL;
    if (arg1) arg1->x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csImageArea_x_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csImageArea_x_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,1)) == -1) return NULL;
    result = (int ) (arg1->x);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csImageArea_y_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csImageArea_y_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,1)) == -1) return NULL;
    if (arg1) arg1->y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csImageArea_y_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csImageArea_y_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,1)) == -1) return NULL;
    result = (int ) (arg1->y);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csImageArea_w_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csImageArea_w_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,1)) == -1) return NULL;
    if (arg1) arg1->w = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csImageArea_w_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csImageArea_w_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,1)) == -1) return NULL;
    result = (int ) (arg1->w);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csImageArea_h_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:csImageArea_h_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,1)) == -1) return NULL;
    if (arg1) arg1->h = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csImageArea_h_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csImageArea_h_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,1)) == -1) return NULL;
    result = (int ) (arg1->h);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_csImageArea_data_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:csImageArea_data_set",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,1)) == -1) return NULL;
    {
        if (arg1->data) delete [] arg1->data;
        arg1->data = (char *) (new char[strlen(arg2)+1]);
        strcpy((char *) arg1->data,arg2);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_csImageArea_data_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csImageArea_data_get",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,1)) == -1) return NULL;
    result = (char *) (arg1->data);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
}


static PyObject *_wrap_new_csImageArea(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    csImageArea *result;
    
    if(!PyArg_ParseTuple(args,(char *)"iiii:new_csImageArea",&arg1,&arg2,&arg3,&arg4)) return NULL;
    result = (csImageArea *)new csImageArea(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csImageArea, 1);
    return resultobj;
}


static PyObject *_wrap_delete_csImageArea(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    csImageArea *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_csImageArea",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_csImageArea,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * csImageArea_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_csImageArea, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iComponent_Initialize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iComponent *arg1 ;
    iObjectRegistry *arg2 ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iComponent_Initialize",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iComponent,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObjectRegistry,1)) == -1) return NULL;
    result = (bool )(arg1)->Initialize(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_new_iComponent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iComponent *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_iComponent")) return NULL;
    result = (iComponent *)new iComponent();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iComponent, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iComponent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iComponent *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iComponent",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iComponent,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iComponent_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iComponent, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iEventHandler_HandleEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventHandler *arg1 ;
    iEvent *arg2 ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iEventHandler_HandleEvent",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventHandler,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iEvent,1)) == -1) return NULL;
    result = (bool )(arg1)->HandleEvent(*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_new_iEventHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventHandler *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_iEventHandler")) return NULL;
    result = (iEventHandler *)new iEventHandler();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iEventHandler, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iEventHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEventHandler *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iEventHandler",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEventHandler,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iEventHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iEventHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_iTextureWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureWrapper *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_iTextureWrapper")) return NULL;
    result = (iTextureWrapper *)new iTextureWrapper();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureWrapper, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iTextureWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureWrapper *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iTextureWrapper",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureWrapper,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iTextureWrapper_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iTextureWrapper, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iTextureHandle_GetMipMapDimensions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 ;
    int arg2 ;
    int *arg3 ;
    int *arg4 ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOO:iTextureHandle_GetMipMapDimensions",&obj0,&arg2,&obj2,&obj3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,1)) == -1) return NULL;
    result = (bool )(arg1)->GetMipMapDimensions(arg2,*arg3,*arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iTextureHandle_GetMeanColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 ;
    unsigned char *arg2 ;
    unsigned char *arg3 ;
    unsigned char *arg4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iTextureHandle_GetMeanColor",&obj0,&obj1,&obj2,&obj3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_unsigned_char,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_unsigned_char,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_unsigned_char,1)) == -1) return NULL;
    (arg1)->GetMeanColor(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iTextureHandle_GetCacheData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 ;
    void *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureHandle_GetCacheData",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,1)) == -1) return NULL;
    result = (void *)(arg1)->GetCacheData();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
}


static PyObject *_wrap_iTextureHandle_SetCacheData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 ;
    void *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iTextureHandle_SetCacheData",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, 1)) == -1) return NULL;
    (arg1)->SetCacheData(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iTextureHandle_GetPrivateObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 ;
    void *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureHandle_GetPrivateObject",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,1)) == -1) return NULL;
    result = (void *)(arg1)->GetPrivateObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
}


static PyObject *_wrap_new_iTextureHandle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_iTextureHandle")) return NULL;
    result = (iTextureHandle *)new iTextureHandle();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureHandle, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iTextureHandle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureHandle *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iTextureHandle",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureHandle,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iTextureHandle_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iTextureHandle, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iMaterialHandle_GetTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialHandle *arg1 ;
    iTextureHandle *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMaterialHandle_GetTexture",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialHandle,1)) == -1) return NULL;
    result = (iTextureHandle *)(arg1)->GetTexture();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureHandle, 0);
    return resultobj;
}


static PyObject *_wrap_iMaterialHandle_GetFlatColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialHandle *arg1 ;
    csRGBpixel *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iMaterialHandle_GetFlatColor",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialHandle,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRGBpixel,1)) == -1) return NULL;
    (arg1)->GetFlatColor(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iMaterialHandle_GetReflection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialHandle *arg1 ;
    float *arg2 ;
    float *arg3 ;
    float *arg4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iMaterialHandle_GetReflection",&obj0,&obj1,&obj2,&obj3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialHandle,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_float,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_float,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_float,1)) == -1) return NULL;
    (arg1)->GetReflection(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iMaterialHandle_Prepare(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialHandle *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMaterialHandle_Prepare",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialHandle,1)) == -1) return NULL;
    (arg1)->Prepare();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_delete_iMaterialHandle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialHandle *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMaterialHandle",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialHandle,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iMaterialHandle_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMaterialHandle, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iMaterialWrapper_GetMaterialHandle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialWrapper *arg1 ;
    iMaterialHandle *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMaterialWrapper_GetMaterialHandle",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialWrapper,1)) == -1) return NULL;
    result = (iMaterialHandle *)(arg1)->GetMaterialHandle();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialHandle, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iMaterialWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialWrapper *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMaterialWrapper",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialWrapper,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iMaterialWrapper_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMaterialWrapper, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iFont_SetSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iFont_SetSize",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,1)) == -1) return NULL;
    (arg1)->SetSize(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iFont_GetSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFont_GetSize",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,1)) == -1) return NULL;
    result = (int )(arg1)->GetSize();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iFont_GetMaxSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 ;
    int *arg2 ;
    int *arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iFont_GetMaxSize",&obj0,&obj1,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,1)) == -1) return NULL;
    (arg1)->GetMaxSize(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iFont_GetGlyphSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 ;
    unsigned char arg2 ;
    int *arg3 ;
    int *arg4 ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iFont_GetGlyphSize",&obj0,&obj1,&obj2,&obj3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,1)) == -1) return NULL;
    arg2 = (unsigned char ) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,1)) == -1) return NULL;
    result = (bool )(arg1)->GetGlyphSize(arg2,*arg3,*arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iFont_GetGlyphBitmap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 ;
    unsigned char arg2 ;
    int *arg3 ;
    int *arg4 ;
    void *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iFont_GetGlyphBitmap",&obj0,&obj1,&obj2,&obj3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,1)) == -1) return NULL;
    arg2 = (unsigned char ) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,1)) == -1) return NULL;
    result = (void *)(arg1)->GetGlyphBitmap(arg2,*arg3,*arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
}


static PyObject *_wrap_iFont_GetDimensions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 ;
    char *arg2 ;
    int *arg3 ;
    int *arg4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOO:iFont_GetDimensions",&obj0,&arg2,&obj2,&obj3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,1)) == -1) return NULL;
    (arg1)->GetDimensions((char const *)arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iFont_GetLength(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 ;
    char *arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:iFont_GetLength",&obj0,&arg2,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,1)) == -1) return NULL;
    result = (int )(arg1)->GetLength((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_delete_iFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFont *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iFont",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFont,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iFont_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iFont, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iFontServer_LoadFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFontServer *arg1 ;
    char *arg2 ;
    csPtr<iFont > result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iFontServer_LoadFont",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFontServer,1)) == -1) return NULL;
    result = (arg1)->LoadFont((char const *)arg2);
    
    {
        csPtr<iFont > * resultptr;
        resultptr = new csPtr<iFont > (result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiFont_t, 1);
    }
    return resultobj;
}


static PyObject *_wrap_iFontServer_GetFontCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFontServer *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iFontServer_GetFontCount",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFontServer,1)) == -1) return NULL;
    result = (int )(arg1)->GetFontCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iFontServer_GetFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFontServer *arg1 ;
    int arg2 ;
    iFont *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iFontServer_GetFont",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFontServer,1)) == -1) return NULL;
    result = (iFont *)(arg1)->GetFont(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iFont, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iFontServer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iFontServer *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iFontServer",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iFontServer,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iFontServer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iFontServer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iGraphics2D_Open(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_Open",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    result = (bool )(arg1)->Open();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_Close(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_Close",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    (arg1)->Close();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_GetWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetWidth",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    result = (int )(arg1)->GetWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_GetHeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetHeight",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    result = (int )(arg1)->GetHeight();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_GetFullScreen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetFullScreen",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    result = (bool )(arg1)->GetFullScreen();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_GetPage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetPage",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    result = (int )(arg1)->GetPage();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_DoubleBuffer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    bool arg2 ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics2D_DoubleBuffer",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    result = (bool )(arg1)->DoubleBuffer(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_GetDoubleBufferState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetDoubleBufferState",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    result = (bool )(arg1)->GetDoubleBufferState();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_GetPixelFormat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    csPixelFormat *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetPixelFormat",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    result = (csPixelFormat *)(arg1)->GetPixelFormat();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csPixelFormat, 0);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_GetPixelBytes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetPixelBytes",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    result = (int )(arg1)->GetPixelBytes();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_GetPalEntryCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetPalEntryCount",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    result = (int )(arg1)->GetPalEntryCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_GetPalette(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    csRGBpixel *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetPalette",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    result = (csRGBpixel *)(arg1)->GetPalette();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csRGBpixel, 0);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_SetRGB(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:iGraphics2D_SetRGB",&obj0,&arg2,&arg3,&arg4,&arg5)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    (arg1)->SetRGB(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_SetClipRect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:iGraphics2D_SetClipRect",&obj0,&arg2,&arg3,&arg4,&arg5)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    (arg1)->SetClipRect(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_GetClipRect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    int *arg2 ;
    int *arg3 ;
    int *arg4 ;
    int *arg5 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:iGraphics2D_GetClipRect",&obj0,&obj1,&obj2,&obj3,&obj4)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,1)) == -1) return NULL;
    (arg1)->GetClipRect(*arg2,*arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_BeginDraw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_BeginDraw",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    result = (bool )(arg1)->BeginDraw();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_FinishDraw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_FinishDraw",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    (arg1)->FinishDraw();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_Print(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    csRect *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics2D_Print",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,1)) == -1) return NULL;
    (arg1)->Print(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iGraphics2D_Clear",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    (arg1)->Clear(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_ClearAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iGraphics2D_ClearAll",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    (arg1)->ClearAll(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_DrawLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    float arg5 ;
    int arg6 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Offffi:iGraphics2D_DrawLine",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    (arg1)->DrawLine(arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_DrawBox(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    int arg6 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiiii:iGraphics2D_DrawBox",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    (arg1)->DrawBox(arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_ClipLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    float *arg2 ;
    float *arg3 ;
    float *arg4 ;
    float *arg5 ;
    int arg6 ;
    int arg7 ;
    int arg8 ;
    int arg9 ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOiiii:iGraphics2D_ClipLine",&obj0,&obj1,&obj2,&obj3,&obj4,&arg6,&arg7,&arg8,&arg9)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_float,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_float,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_float,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,1)) == -1) return NULL;
    result = (bool )(arg1)->ClipLine(*arg2,*arg3,*arg4,*arg5,arg6,arg7,arg8,arg9);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_DrawPixel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:iGraphics2D_DrawPixel",&obj0,&arg2,&arg3,&arg4)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    (arg1)->DrawPixel(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_GetPixelAt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    int arg2 ;
    int arg3 ;
    void *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iGraphics2D_GetPixelAt",&obj0,&arg2,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    result = (void *)(arg1)->GetPixelAt(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_GetPixel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    int arg2 ;
    int arg3 ;
    unsigned char *arg4 ;
    unsigned char *arg5 ;
    unsigned char *arg6 ;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiOOO:iGraphics2D_GetPixel",&obj0,&arg2,&arg3,&obj3,&obj4,&obj5)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_unsigned_char,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_unsigned_char,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_unsigned_char,1)) == -1) return NULL;
    (arg1)->GetPixel(arg2,arg3,*arg4,*arg5,*arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_SaveArea(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    csImageArea *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:iGraphics2D_SaveArea",&obj0,&arg2,&arg3,&arg4,&arg5)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    result = (csImageArea *)(arg1)->SaveArea(arg2,arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csImageArea, 0);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_RestoreArea(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    csImageArea *arg2 ;
    bool arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iGraphics2D_RestoreArea",&obj0,&obj1,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csImageArea,1)) == -1) return NULL;
    arg3 = (bool) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) return NULL;
    (arg1)->RestoreArea(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_FreeArea(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    csImageArea *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics2D_FreeArea",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csImageArea,1)) == -1) return NULL;
    (arg1)->FreeArea(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_Write(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    iFont *arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    int arg6 ;
    char *arg7 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiiis:iGraphics2D_Write",&obj0,&obj1,&arg3,&arg4,&arg5,&arg6,&arg7)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iFont,1)) == -1) return NULL;
    (arg1)->Write(arg2,arg3,arg4,arg5,arg6,(char const *)arg7);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_GetFontServer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    iFontServer *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_GetFontServer",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    result = (iFontServer *)(arg1)->GetFontServer();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iFontServer, 0);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_SetMousePosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    int arg2 ;
    int arg3 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iGraphics2D_SetMousePosition",&obj0,&arg2,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    result = (bool )(arg1)->SetMousePosition(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_SetMouseCursor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    csMouseCursorID arg2 ;
    bool result;
    csMouseCursorID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics2D_SetMouseCursor",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csMouseCursorID,1) == -1)) return NULL;
    arg2 = *argp2; 
    result = (bool )(arg1)->SetMouseCursor(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_ScreenShot(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    csPtr<iImage > result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics2D_ScreenShot",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    result = (arg1)->ScreenShot();
    
    {
        csPtr<iImage > * resultptr;
        resultptr = new csPtr<iImage > (result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiImage_t, 1);
    }
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_CreateOffScreenCanvas(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    int arg2 ;
    int arg3 ;
    void *arg4 ;
    bool arg5 ;
    csPixelFormat *arg6 ;
    csRGBpixel *arg7 = NULL ;
    int arg8 = 0 ;
    iGraphics2D *result;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiOOO|Oi:iGraphics2D_CreateOffScreenCanvas",&obj0,&arg2,&arg3,&obj3,&obj4,&obj5,&obj6,&arg8)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, 0, 1)) == -1) return NULL;
    arg5 = (bool) PyInt_AsLong(obj4);
    if (PyErr_Occurred()) return NULL;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_csPixelFormat,1)) == -1) return NULL;
    if (obj6)
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_csRGBpixel,1)) == -1) return NULL;
    result = (iGraphics2D *)(arg1)->CreateOffScreenCanvas(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iGraphics2D, 0);
    return resultobj;
}


static PyObject *_wrap_iGraphics2D_AllowResize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics2D_AllowResize",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    (arg1)->AllowResize(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_delete_iGraphics2D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics2D *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iGraphics2D",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics2D,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iGraphics2D_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iGraphics2D, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iHalo_GetWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iHalo *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iHalo_GetWidth",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iHalo,1)) == -1) return NULL;
    result = (int )(arg1)->GetWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iHalo_GetHeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iHalo *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iHalo_GetHeight",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iHalo,1)) == -1) return NULL;
    result = (int )(arg1)->GetHeight();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iHalo_SetColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iHalo *arg1 ;
    float *arg2 ;
    float *arg3 ;
    float *arg4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iHalo_SetColor",&obj0,&obj1,&obj2,&obj3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iHalo,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_float,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_float,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_float,1)) == -1) return NULL;
    (arg1)->SetColor(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iHalo_GetColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iHalo *arg1 ;
    float *arg2 ;
    float *arg3 ;
    float *arg4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iHalo_GetColor",&obj0,&obj1,&obj2,&obj3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iHalo,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_float,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_float,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_float,1)) == -1) return NULL;
    (arg1)->GetColor(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iHalo_Draw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iHalo *arg1 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    float arg5 ;
    float arg6 ;
    csVector2 *arg7 ;
    int arg8 ;
    PyObject * obj0  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OfffffOi:iHalo_Draw",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&obj6,&arg8)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iHalo,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_csVector2,1)) == -1) return NULL;
    (arg1)->Draw(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_delete_iHalo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iHalo *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iHalo",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iHalo,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iHalo_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iHalo, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iGraphics3D_Open(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_Open",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    result = (bool )(arg1)->Open();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_Close(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_Close",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    (arg1)->Close();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_SetDimensions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iGraphics3D_SetDimensions",&obj0,&arg2,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    (arg1)->SetDimensions(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_BeginDraw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    int arg2 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iGraphics3D_BeginDraw",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    result = (bool )(arg1)->BeginDraw(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_FinishDraw(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_FinishDraw",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    (arg1)->FinishDraw();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_Print(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    csRect *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_Print",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csRect,1)) == -1) return NULL;
    (arg1)->Print(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_DrawPolygon(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    G3DPolygonDP *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_DrawPolygon",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_G3DPolygonDP,1)) == -1) return NULL;
    (arg1)->DrawPolygon(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_DrawPolygonDebug(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    G3DPolygonDP *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_DrawPolygonDebug",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_G3DPolygonDP,1)) == -1) return NULL;
    (arg1)->DrawPolygonDebug(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_DrawLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    csVector3 *arg2 ;
    csVector3 *arg3 ;
    float arg4 ;
    int arg5 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOfi:iGraphics3D_DrawLine",&obj0,&obj1,&obj2,&arg4,&arg5)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    (arg1)->DrawLine((csVector3 const &)*arg2,(csVector3 const &)*arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_DrawTriangleMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    G3DTriangleMesh *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_DrawTriangleMesh",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_G3DTriangleMesh,1)) == -1) return NULL;
    (arg1)->DrawTriangleMesh(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_DrawPolygonMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    G3DPolygonMesh *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_DrawPolygonMesh",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_G3DPolygonMesh,1)) == -1) return NULL;
    (arg1)->DrawPolygonMesh(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_OpenFogObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    CS_ID arg2 ;
    csFog *arg3 ;
    CS_ID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iGraphics3D_OpenFogObject",&obj0,&obj1,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_CS_ID,1) == -1)) return NULL;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csFog,1)) == -1) return NULL;
    (arg1)->OpenFogObject(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_DrawFogPolygon(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    CS_ID arg2 ;
    G3DPolygonDFP *arg3 ;
    int arg4 ;
    CS_ID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOi:iGraphics3D_DrawFogPolygon",&obj0,&obj1,&obj2,&arg4)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_CS_ID,1) == -1)) return NULL;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_G3DPolygonDFP,1)) == -1) return NULL;
    (arg1)->DrawFogPolygon(arg2,*arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_CloseFogObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    CS_ID arg2 ;
    CS_ID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_CloseFogObject",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_CS_ID,1) == -1)) return NULL;
    arg2 = *argp2; 
    (arg1)->CloseFogObject(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_GetCaps(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    csGraphics3DCaps *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_GetCaps",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    result = (csGraphics3DCaps *)(arg1)->GetCaps();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csGraphics3DCaps, 0);
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_GetZBuffAt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    int arg2 ;
    int arg3 ;
    void *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iGraphics3D_GetZBuffAt",&obj0,&arg2,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    result = (void *)(arg1)->GetZBuffAt(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_GetZBuffValue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    int arg2 ;
    int arg3 ;
    float result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iGraphics3D_GetZBuffValue",&obj0,&arg2,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    result = (float )(arg1)->GetZBuffValue(arg2,arg3);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_DumpCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_DumpCache",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    (arg1)->DumpCache();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_ClearCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_ClearCache",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    (arg1)->ClearCache();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_RemoveFromCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    iPolygonTexture *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_RemoveFromCache",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    (arg1)->RemoveFromCache(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_GetWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_GetWidth",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    result = (int )(arg1)->GetWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_GetHeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_GetHeight",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    result = (int )(arg1)->GetHeight();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_SetPerspectiveCenter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iGraphics3D_SetPerspectiveCenter",&obj0,&arg2,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    (arg1)->SetPerspectiveCenter(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_SetPerspectiveAspect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    float arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iGraphics3D_SetPerspectiveAspect",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    (arg1)->SetPerspectiveAspect(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_SetObjectToCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    csReversibleTransform *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iGraphics3D_SetObjectToCamera",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csReversibleTransform,1)) == -1) return NULL;
    (arg1)->SetObjectToCamera(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_GetDriver2D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    iGraphics2D *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_GetDriver2D",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    result = (iGraphics2D *)(arg1)->GetDriver2D();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iGraphics2D, 0);
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_GetTextureManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    iTextureManager *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iGraphics3D_GetTextureManager",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    result = (iTextureManager *)(arg1)->GetTextureManager();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureManager, 0);
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_CreateHalo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    unsigned char *arg5 ;
    int arg6 ;
    int arg7 ;
    iHalo *result;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OfffOii:iGraphics3D_CreateHalo",&obj0,&arg2,&arg3,&arg4,&obj4,&arg6,&arg7)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_unsigned_char,1)) == -1) return NULL;
    result = (iHalo *)(arg1)->CreateHalo(arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iHalo, 0);
    return resultobj;
}


static PyObject *_wrap_iGraphics3D_DrawPixmap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    iTextureHandle *arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    int arg6 ;
    int arg7 ;
    int arg8 ;
    int arg9 ;
    int arg10 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiiiiiii:iGraphics3D_DrawPixmap",&obj0,&obj1,&arg3,&arg4,&arg5,&arg6,&arg7,&arg8,&arg9,&arg10)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iTextureHandle,1)) == -1) return NULL;
    (arg1)->DrawPixmap(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_new_iGraphics3D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_iGraphics3D")) return NULL;
    result = (iGraphics3D *)new iGraphics3D();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iGraphics3D, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iGraphics3D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iGraphics3D *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iGraphics3D",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iGraphics3D,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iGraphics3D_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iGraphics3D, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCamera_GetFOV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 ;
    float result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCamera_GetFOV",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,1)) == -1) return NULL;
    result = (float )(arg1)->GetFOV();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
}


static PyObject *_wrap_iCamera_GetInvFOV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 ;
    float result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCamera_GetInvFOV",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,1)) == -1) return NULL;
    result = (float )(arg1)->GetInvFOV();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
}


static PyObject *_wrap_new_iCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_iCamera")) return NULL;
    result = (iCamera *)new iCamera();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCamera, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCamera *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCamera",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCamera,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iCamera_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCamera, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_iSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_iSector")) return NULL;
    result = (iSector *)new iSector();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSector *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSector",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSector,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iSector_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSector, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iThingState_CreatePolygon(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 ;
    char *arg2 ;
    iPolygon3D *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iThingState_CreatePolygon",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,1)) == -1) return NULL;
    result = (iPolygon3D *)(arg1)->CreatePolygon((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygon3D, 0);
    return resultobj;
}


static PyObject *_wrap_new_iThingState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_iThingState")) return NULL;
    result = (iThingState *)new iThingState();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iThingState, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iThingState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iThingState *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iThingState",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iThingState,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iThingState_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iThingState, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iMeshObject_Query_iThingState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 ;
    csPtr<iThingState > result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshObject_Query_iThingState",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,1)) == -1) return NULL;
    result = iMeshObject_Query_iThingState(arg1);
    
    {
        csPtr<iThingState > * resultptr;
        resultptr = new csPtr<iThingState > (result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiThingState_t, 1);
    }
    return resultobj;
}


static PyObject *_wrap_new_iMeshObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_iMeshObject")) return NULL;
    result = (iMeshObject *)new iMeshObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshObject, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iMeshObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshObject *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMeshObject",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshObject,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iMeshObject_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMeshObject, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iMeshWrapper_GetMeshObject(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 ;
    iMeshObject *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iMeshWrapper_GetMeshObject",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,1)) == -1) return NULL;
    result = (iMeshObject *)(arg1)->GetMeshObject();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshObject, 0);
    return resultobj;
}


static PyObject *_wrap_new_iMeshWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_iMeshWrapper")) return NULL;
    result = (iMeshWrapper *)new iMeshWrapper();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshWrapper, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iMeshWrapper(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMeshWrapper *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMeshWrapper",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMeshWrapper,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iMeshWrapper_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMeshWrapper, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iLightMap_GetMapData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 ;
    void *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightMap_GetMapData",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,1)) == -1) return NULL;
    result = (void *)(arg1)->GetMapData();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
}


static PyObject *_wrap_iLightMap_GetWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightMap_GetWidth",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,1)) == -1) return NULL;
    result = (int )(arg1)->GetWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iLightMap_GetHeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightMap_GetHeight",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,1)) == -1) return NULL;
    result = (int )(arg1)->GetHeight();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iLightMap_GetRealWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightMap_GetRealWidth",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,1)) == -1) return NULL;
    result = (int )(arg1)->GetRealWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iLightMap_GetRealHeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightMap_GetRealHeight",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,1)) == -1) return NULL;
    result = (int )(arg1)->GetRealHeight();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iLightMap_GetCacheData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 ;
    void *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightMap_GetCacheData",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,1)) == -1) return NULL;
    result = (void *)(arg1)->GetCacheData();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
}


static PyObject *_wrap_iLightMap_SetCacheData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 ;
    void *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iLightMap_SetCacheData",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, 1)) == -1) return NULL;
    (arg1)->SetCacheData(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iLightMap_GetMeanLighting(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 ;
    int *arg2 ;
    int *arg3 ;
    int *arg4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:iLightMap_GetMeanLighting",&obj0,&obj1,&obj2,&obj3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,1)) == -1) return NULL;
    (arg1)->GetMeanLighting(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iLightMap_GetSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 ;
    long result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iLightMap_GetSize",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,1)) == -1) return NULL;
    result = (long )(arg1)->GetSize();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_delete_iLightMap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iLightMap *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iLightMap",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iLightMap,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iLightMap_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iLightMap, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iPolygon3D_GetLightMap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 ;
    iLightMap *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3D_GetLightMap",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,1)) == -1) return NULL;
    result = (iLightMap *)(arg1)->GetLightMap();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iLightMap, 0);
    return resultobj;
}


static PyObject *_wrap_iPolygon3D_GetMaterialHandle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 ;
    iMaterialHandle *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3D_GetMaterialHandle",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,1)) == -1) return NULL;
    result = (iMaterialHandle *)(arg1)->GetMaterialHandle();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialHandle, 0);
    return resultobj;
}


static PyObject *_wrap_iPolygon3D_SetMaterial(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 ;
    iMaterialWrapper *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPolygon3D_SetMaterial",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMaterialWrapper,1)) == -1) return NULL;
    (arg1)->SetMaterial(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPolygon3D_GetVertexCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3D_GetVertexCount",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,1)) == -1) return NULL;
    result = (int )(arg1)->GetVertexCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPolygon3D_GetVertex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 ;
    int arg2 ;
    csVector3 *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPolygon3D_GetVertex",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,1)) == -1) return NULL;
    csVector3 const &_result_ref = ((iPolygon3D const *)arg1)->GetVertex(arg2);
    result = (csVector3 *) &_result_ref;
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
}


static PyObject *_wrap_iPolygon3D_GetVertexW(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 ;
    int arg2 ;
    csVector3 *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPolygon3D_GetVertexW",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,1)) == -1) return NULL;
    csVector3 const &_result_ref = ((iPolygon3D const *)arg1)->GetVertexW(arg2);
    result = (csVector3 *) &_result_ref;
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
}


static PyObject *_wrap_iPolygon3D_GetVertexC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 ;
    int arg2 ;
    csVector3 *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPolygon3D_GetVertexC",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,1)) == -1) return NULL;
    csVector3 const &_result_ref = ((iPolygon3D const *)arg1)->GetVertexC(arg2);
    result = (csVector3 *) &_result_ref;
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csVector3, 0);
    return resultobj;
}


static PyObject *_wrap_iPolygon3D_CreateVertexByIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPolygon3D_CreateVertexByIndex",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,1)) == -1) return NULL;
    result = (int )(arg1)->CreateVertex(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPolygon3D_CreateVertex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 ;
    csVector3 *arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPolygon3D_CreateVertex",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    result = (int )(arg1)->CreateVertex((csVector3 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPolygon3D_GetAlpha(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygon3D_GetAlpha",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,1)) == -1) return NULL;
    result = (int )(arg1)->GetAlpha();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPolygon3D_SetAlpha(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPolygon3D_SetAlpha",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,1)) == -1) return NULL;
    (arg1)->SetAlpha(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPolygon3D_CreatePlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 ;
    csVector3 *arg2 ;
    csMatrix3 *arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPolygon3D_CreatePlane",&obj0,&obj1,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csMatrix3,1)) == -1) return NULL;
    (arg1)->CreatePlane((csVector3 const &)*arg2,(csMatrix3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPolygon3D_SetPlane(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 ;
    char *arg2 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPolygon3D_SetPlane",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,1)) == -1) return NULL;
    result = (bool )(arg1)->SetPlane((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPolygon3D_SetTextureSpace(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 ;
    csVector3 *arg2 ;
    csVector3 *arg3 ;
    float arg4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOf:iPolygon3D_SetTextureSpace",&obj0,&obj1,&obj2,&arg4)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    (arg1)->SetTextureSpace(*arg2,*arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_new_iPolygon3D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_iPolygon3D")) return NULL;
    result = (iPolygon3D *)new iPolygon3D();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygon3D, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iPolygon3D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygon3D *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPolygon3D",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygon3D,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iPolygon3D_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPolygon3D, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iImage_GetImageData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 ;
    void *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_GetImageData",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,1)) == -1) return NULL;
    result = (void *)(arg1)->GetImageData();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
}


static PyObject *_wrap_iImage_GetWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_GetWidth",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,1)) == -1) return NULL;
    result = (int )(arg1)->GetWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iImage_GetHeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_GetHeight",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,1)) == -1) return NULL;
    result = (int )(arg1)->GetHeight();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iImage_GetSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_GetSize",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,1)) == -1) return NULL;
    result = (int )(arg1)->GetSize();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iImage_Rescale(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:iImage_Rescale",&obj0,&arg2,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,1)) == -1) return NULL;
    (arg1)->Rescale(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iImage_MipMap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 ;
    int arg2 ;
    csRGBpixel *arg3 ;
    csPtr<iImage > result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:iImage_MipMap",&obj0,&arg2,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csRGBpixel,1)) == -1) return NULL;
    result = (arg1)->MipMap(arg2,arg3);
    
    {
        csPtr<iImage > * resultptr;
        resultptr = new csPtr<iImage > (result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiImage_t, 1);
    }
    return resultobj;
}


static PyObject *_wrap_iImage_SetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iImage_SetName",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,1)) == -1) return NULL;
    (arg1)->SetName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iImage_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_GetName",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,1)) == -1) return NULL;
    result = (char *)(arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
}


static PyObject *_wrap_iImage_GetFormat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_GetFormat",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,1)) == -1) return NULL;
    result = (int )(arg1)->GetFormat();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iImage_GetPalette(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 ;
    csRGBpixel *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_GetPalette",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,1)) == -1) return NULL;
    result = (csRGBpixel *)(arg1)->GetPalette();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_csRGBpixel, 0);
    return resultobj;
}


static PyObject *_wrap_iImage_GetAlpha(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 ;
    void *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_GetAlpha",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,1)) == -1) return NULL;
    result = (void *)(arg1)->GetAlpha();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
}


static PyObject *_wrap_iImage_SetFormat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iImage_SetFormat",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,1)) == -1) return NULL;
    (arg1)->SetFormat(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iImage_Clone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 ;
    csPtr<iImage > result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iImage_Clone",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,1)) == -1) return NULL;
    result = (arg1)->Clone();
    
    {
        csPtr<iImage > * resultptr;
        resultptr = new csPtr<iImage > (result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiImage_t, 1);
    }
    return resultobj;
}


static PyObject *_wrap_iImage_Crop(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    csPtr<iImage > result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:iImage_Crop",&obj0,&arg2,&arg3,&arg4,&arg5)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,1)) == -1) return NULL;
    result = (arg1)->Crop(arg2,arg3,arg4,arg5);
    
    {
        csPtr<iImage > * resultptr;
        resultptr = new csPtr<iImage > (result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiImage_t, 1);
    }
    return resultobj;
}


static PyObject *_wrap_new_iImage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_iImage")) return NULL;
    result = (iImage *)new iImage();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iImage, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iImage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iImage *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iImage",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iImage,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iImage_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iImage, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iTextureManager_RegisterTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 ;
    iImage *arg2 ;
    int arg3 ;
    csPtr<iTextureHandle > result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iTextureManager_RegisterTexture",&obj0,&obj1,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iImage,1)) == -1) return NULL;
    result = (arg1)->RegisterTexture(arg2,arg3);
    
    {
        csPtr<iTextureHandle > * resultptr;
        resultptr = new csPtr<iTextureHandle > (result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiTextureHandle_t, 1);
    }
    return resultobj;
}


static PyObject *_wrap_iTextureManager_PrepareTextures(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureManager_PrepareTextures",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,1)) == -1) return NULL;
    (arg1)->PrepareTextures();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iTextureManager_FreeImages(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureManager_FreeImages",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,1)) == -1) return NULL;
    (arg1)->FreeImages();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iTextureManager_ResetPalette(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureManager_ResetPalette",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,1)) == -1) return NULL;
    (arg1)->ResetPalette();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iTextureManager_ReserveColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:iTextureManager_ReserveColor",&obj0,&arg2,&arg3,&arg4)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,1)) == -1) return NULL;
    (arg1)->ReserveColor(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iTextureManager_FindRGB(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:iTextureManager_FindRGB",&obj0,&arg2,&arg3,&arg4)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,1)) == -1) return NULL;
    result = (int )(arg1)->FindRGB(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iTextureManager_SetPalette(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureManager_SetPalette",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,1)) == -1) return NULL;
    (arg1)->SetPalette();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iTextureManager_SetVerbose(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iTextureManager_SetVerbose",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,1)) == -1) return NULL;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    (arg1)->SetVerbose(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iTextureManager_GetTextureFormat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iTextureManager_GetTextureFormat",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,1)) == -1) return NULL;
    result = (int )(arg1)->GetTextureFormat();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_new_iTextureManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_iTextureManager")) return NULL;
    result = (iTextureManager *)new iTextureManager();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureManager, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iTextureManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureManager *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iTextureManager",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureManager,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iTextureManager_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iTextureManager, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iPolygonTexture_GetMaterialHandle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 ;
    iMaterialHandle *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_GetMaterialHandle",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    result = (iMaterialHandle *)(arg1)->GetMaterialHandle();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialHandle, 0);
    return resultobj;
}


static PyObject *_wrap_iPolygonTexture_GetFDU(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 ;
    float result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_GetFDU",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    result = (float )(arg1)->GetFDU();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
}


static PyObject *_wrap_iPolygonTexture_GetFDV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 ;
    float result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_GetFDV",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    result = (float )(arg1)->GetFDV();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
}


static PyObject *_wrap_iPolygonTexture_GetWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_GetWidth",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    result = (int )(arg1)->GetWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPolygonTexture_GetHeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_GetHeight",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    result = (int )(arg1)->GetHeight();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPolygonTexture_GetShiftU(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_GetShiftU",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    result = (int )(arg1)->GetShiftU();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPolygonTexture_GetIMinU(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_GetIMinU",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    result = (int )(arg1)->GetIMinU();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPolygonTexture_GetIMinV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_GetIMinV",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    result = (int )(arg1)->GetIMinV();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPolygonTexture_GetTextureBox(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 ;
    float *arg2 ;
    float *arg3 ;
    float *arg4 ;
    float *arg5 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:iPolygonTexture_GetTextureBox",&obj0,&obj1,&obj2,&obj3,&obj4)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_float,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_float,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_float,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,1)) == -1) return NULL;
    (arg1)->GetTextureBox(*arg2,*arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPolygonTexture_GetOriginalWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_GetOriginalWidth",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    result = (int )(arg1)->GetOriginalWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPolygonTexture_GetPolygon(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 ;
    iPolygon3D *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_GetPolygon",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    result = (iPolygon3D *)(arg1)->GetPolygon();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygon3D, 0);
    return resultobj;
}


static PyObject *_wrap_iPolygonTexture_DynamicLightsDirty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_DynamicLightsDirty",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    result = (bool )(arg1)->DynamicLightsDirty();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPolygonTexture_RecalculateDynamicLights(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_RecalculateDynamicLights",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    result = (bool )(arg1)->RecalculateDynamicLights();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPolygonTexture_GetLightMap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 ;
    iLightMap *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_GetLightMap",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    result = (iLightMap *)(arg1)->GetLightMap();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iLightMap, 0);
    return resultobj;
}


static PyObject *_wrap_iPolygonTexture_GetLightCellSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_GetLightCellSize",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    result = (int )(arg1)->GetLightCellSize();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPolygonTexture_GetLightCellShift(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPolygonTexture_GetLightCellShift",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    result = (int )(arg1)->GetLightCellShift();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPolygonTexture_GetCacheData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 ;
    int arg2 ;
    void *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPolygonTexture_GetCacheData",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    result = (void *)(arg1)->GetCacheData(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
}


static PyObject *_wrap_iPolygonTexture_SetCacheData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 ;
    int arg2 ;
    void *arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:iPolygonTexture_SetCacheData",&obj0,&arg2,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, 0, 1)) == -1) return NULL;
    (arg1)->SetCacheData(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_new_iPolygonTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_iPolygonTexture")) return NULL;
    result = (iPolygonTexture *)new iPolygonTexture();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPolygonTexture, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iPolygonTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPolygonTexture *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPolygonTexture",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPolygonTexture,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iPolygonTexture_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPolygonTexture, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_iCameraPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPosition *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_iCameraPosition")) return NULL;
    result = (iCameraPosition *)new iCameraPosition();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCameraPosition, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iCameraPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCameraPosition *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCameraPosition",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCameraPosition,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iCameraPosition_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCameraPosition, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iSectorList_GetCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorList *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iSectorList_GetCount",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorList,1)) == -1) return NULL;
    result = (int )(arg1)->GetCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iSectorList_Get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorList *arg1 ;
    int arg2 ;
    iSector *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iSectorList_Get",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorList,1)) == -1) return NULL;
    result = (iSector *)(arg1)->Get(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
}


static PyObject *_wrap_iSectorList_Add(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorList *arg1 ;
    iSector *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSectorList_Add",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorList,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,1)) == -1) return NULL;
    (arg1)->Add(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iSectorList_Remove(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorList *arg1 ;
    iSector *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iSectorList_Remove",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorList,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,1)) == -1) return NULL;
    (arg1)->Remove(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iSectorList_FindByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorList *arg1 ;
    char *arg2 ;
    iSector *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iSectorList_FindByName",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorList,1)) == -1) return NULL;
    result = (iSector *)(arg1)->FindByName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iSectorList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iSectorList *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iSectorList",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iSectorList,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iSectorList_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iSectorList, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iMaterialList_FindByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialList *arg1 ;
    char *arg2 ;
    iMaterialWrapper *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iMaterialList_FindByName",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialList,1)) == -1) return NULL;
    result = (iMaterialWrapper *)(arg1)->FindByName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialWrapper, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iMaterialList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iMaterialList *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iMaterialList",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iMaterialList,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iMaterialList_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iMaterialList, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iTextureList_FindByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureList *arg1 ;
    char *arg2 ;
    iTextureWrapper *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iTextureList_FindByName",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureList,1)) == -1) return NULL;
    result = (iTextureWrapper *)(arg1)->FindByName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureWrapper, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iTextureList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iTextureList *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iTextureList",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iTextureList,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iTextureList_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iTextureList, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iEngine_GetTextureFormat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetTextureFormat",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,1)) == -1) return NULL;
    result = (int )(arg1)->GetTextureFormat();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iEngine_DeleteAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_DeleteAll",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,1)) == -1) return NULL;
    (arg1)->DeleteAll();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iEngine_CreateTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 ;
    char *arg2 ;
    char *arg3 ;
    csColor *arg4 ;
    int arg5 ;
    iTextureWrapper *result;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OssOi:iEngine_CreateTexture",&obj0,&arg2,&arg3,&obj3,&arg5)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_csColor,1)) == -1) return NULL;
    result = (iTextureWrapper *)(arg1)->CreateTexture((char const *)arg2,(char const *)arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureWrapper, 0);
    return resultobj;
}


static PyObject *_wrap_iEngine_CreateSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 ;
    char *arg2 ;
    iSector *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iEngine_CreateSector",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,1)) == -1) return NULL;
    result = (iSector *)(arg1)->CreateSector((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
}


static PyObject *_wrap_iEngine_CreateSectorWallsMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 ;
    iSector *arg2 ;
    char *arg3 ;
    csPtr<iMeshWrapper > result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iEngine_CreateSectorWallsMesh",&obj0,&obj1,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,1)) == -1) return NULL;
    result = (arg1)->CreateSectorWallsMesh(arg2,(char const *)arg3);
    
    {
        csPtr<iMeshWrapper > * resultptr;
        resultptr = new csPtr<iMeshWrapper > (result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csPtrTiMeshWrapper_t, 1);
    }
    return resultobj;
}


static PyObject *_wrap_iEngine_GetSectors(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 ;
    iSectorList *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetSectors",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,1)) == -1) return NULL;
    result = (iSectorList *)(arg1)->GetSectors();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSectorList, 0);
    return resultobj;
}


static PyObject *_wrap_iEngine_GetMaterialList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 ;
    iMaterialList *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetMaterialList",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,1)) == -1) return NULL;
    result = (iMaterialList *)(arg1)->GetMaterialList();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMaterialList, 0);
    return resultobj;
}


static PyObject *_wrap_iEngine_GetTextureList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 ;
    iTextureList *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iEngine_GetTextureList",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,1)) == -1) return NULL;
    result = (iTextureList *)(arg1)->GetTextureList();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iTextureList, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iEngine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iEngine *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iEngine",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iEngine,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iEngine_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iEngine, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iObjectRegistry_Query_iEngine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 ;
    iEngine *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObjectRegistry_Query_iEngine",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,1)) == -1) return NULL;
    result = (iEngine *)iObjectRegistry_Query_iEngine(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iEngine, 0);
    return resultobj;
}


static PyObject *_wrap_iObjectRegistry_Query_iGraphics3D(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 ;
    iGraphics3D *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iObjectRegistry_Query_iGraphics3D",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,1)) == -1) return NULL;
    result = (iGraphics3D *)iObjectRegistry_Query_iGraphics3D(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iGraphics3D, 0);
    return resultobj;
}


static PyObject *_wrap_iObjectRegistry_Print(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 ;
    int arg2 ;
    char *arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:iObjectRegistry_Print",&obj0,&arg2,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,1)) == -1) return NULL;
    iObjectRegistry_Print(arg1,arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_new_iObjectRegistry(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_iObjectRegistry")) return NULL;
    result = (iObjectRegistry *)new iObjectRegistry();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iObjectRegistry, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iObjectRegistry(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iObjectRegistry",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iObjectRegistry_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iObjectRegistry, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelPlLayer_CreatePropertyClass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 ;
    iCelEntity *arg2 ;
    char *arg3 ;
    iCelPropertyClass *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iCelPlLayer_CreatePropertyClass",&obj0,&obj1,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    result = (iCelPropertyClass *)(arg1)->CreatePropertyClass(arg2,(char const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClass, 0);
    return resultobj;
}


static PyObject *_wrap_iCelPlLayer_FetchString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 ;
    csStringID arg2 ;
    char *result;
    csStringID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPlLayer_FetchString",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,1) == -1)) return NULL;
    arg2 = *argp2; 
    result = (char *)(arg1)->FetchString(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
}


static PyObject *_wrap_iCelPlLayer_GetBehaviourLayerCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPlLayer_GetBehaviourLayerCount",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,1)) == -1) return NULL;
    result = (int )((iCelPlLayer const *)arg1)->GetBehaviourLayerCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iCelPlLayer_GetBehaviourLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 ;
    int arg2 ;
    iCelBlLayer *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iCelPlLayer_GetBehaviourLayer",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,1)) == -1) return NULL;
    result = (iCelBlLayer *)((iCelPlLayer const *)arg1)->GetBehaviourLayer(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBlLayer, 0);
    return resultobj;
}


static PyObject *_wrap_iCelPlLayer_FindBehaviourLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 ;
    char *arg2 ;
    iCelBlLayer *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelPlLayer_FindBehaviourLayer",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,1)) == -1) return NULL;
    result = (iCelBlLayer *)((iCelPlLayer const *)arg1)->FindBehaviourLayer((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBlLayer, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iCelPlLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPlLayer *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelPlLayer",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPlLayer,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iCelPlLayer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelPlLayer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csQueryRegistry_iCelPlLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 ;
    iCelPlLayer *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csQueryRegistry_iCelPlLayer",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,1)) == -1) return NULL;
    result = (iCelPlLayer *)csQueryRegistry_iCelPlLayer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPlLayer, 0);
    return resultobj;
}


static PyObject *_wrap_iCelEntity_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntity_GetName",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    result = (char *)((iCelEntity const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
}


static PyObject *_wrap_iCelEntity_SetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelEntity_SetName",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    (arg1)->SetName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iCelEntity_SetBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 ;
    iCelBehaviour *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelEntity_SetBehaviour",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelBehaviour,1)) == -1) return NULL;
    (arg1)->SetBehaviour(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iCelEntity_GetBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 ;
    iCelBehaviour *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntity_GetBehaviour",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    result = (iCelBehaviour *)(arg1)->GetBehaviour();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBehaviour, 0);
    return resultobj;
}


static PyObject *_wrap_iCelEntity_GetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 ;
    CS_ID result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntity_GetID",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    result = ((iCelEntity const *)arg1)->GetID();
    
    {
        CS_ID * resultptr;
        resultptr = new CS_ID (result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_CS_ID, 1);
    }
    return resultobj;
}


static PyObject *_wrap_iCelEntity_GetPropertyClassList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 ;
    iCelPropertyClassList *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelEntity_GetPropertyClassList",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    result = (iCelPropertyClassList *)(arg1)->GetPropertyClassList();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClassList, 0);
    return resultobj;
}


static PyObject *_wrap_iCelEntity_LoadBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 ;
    iObjectRegistry *arg2 ;
    char *arg3 ;
    iCelBehaviour *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iCelEntity_LoadBehaviour",&obj0,&obj1,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iObjectRegistry,1)) == -1) return NULL;
    result = (iCelBehaviour *)iCelEntity_LoadBehaviour(arg1,arg2,(char const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBehaviour, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iCelEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelEntity *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelEntity",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iCelEntity_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelEntity, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 ;
    char *arg2 ;
    iCelEntity *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:celCreateEntity",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,1)) == -1) return NULL;
    result = (iCelEntity *)celCreateEntity(arg1,(char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
}


static PyObject *_wrap_iCelBlLayer_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBlLayer *arg1 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelBlLayer_GetName",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBlLayer,1)) == -1) return NULL;
    result = (char *)((iCelBlLayer const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
}


static PyObject *_wrap_iCelBlLayer_CreateBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBlLayer *arg1 ;
    iCelEntity *arg2 ;
    char *arg3 ;
    iCelBehaviour *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iCelBlLayer_CreateBehaviour",&obj0,&obj1,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBlLayer,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    result = (iCelBehaviour *)(arg1)->CreateBehaviour(arg2,(char const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBehaviour, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iCelBlLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBlLayer *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelBlLayer",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBlLayer,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iCelBlLayer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelBlLayer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_csQueryRegistry_iCelBlLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 ;
    iCelBlLayer *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:csQueryRegistry_iCelBlLayer",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,1)) == -1) return NULL;
    result = (iCelBlLayer *)csQueryRegistry_iCelBlLayer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBlLayer, 0);
    return resultobj;
}


static PyObject *_wrap_iCelBehaviour_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBehaviour *arg1 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelBehaviour_GetName",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,1)) == -1) return NULL;
    result = (char *)((iCelBehaviour const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
}


static PyObject *_wrap_iCelBehaviour_GetBehaviourLayer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBehaviour *arg1 ;
    iCelBlLayer *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelBehaviour_GetBehaviourLayer",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,1)) == -1) return NULL;
    result = (iCelBlLayer *)((iCelBehaviour const *)arg1)->GetBehaviourLayer();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelBlLayer, 0);
    return resultobj;
}


static PyObject *_wrap_iCelBehaviour_SendMessage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBehaviour *arg1 ;
    char *arg2 ;
    iBase *arg3 ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iCelBehaviour_SendMessage",&obj0,&arg2,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iBase,1)) == -1) return NULL;
    result = (bool )(arg1)->SendMessage((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_delete_iCelBehaviour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelBehaviour *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelBehaviour",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelBehaviour,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iCelBehaviour_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelBehaviour, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iCelPropertyClass_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClass_GetName",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    result = (char *)((iCelPropertyClass const *)arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClass_GetEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    iCelEntity *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClass_GetEntity",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    result = (iCelEntity *)(arg1)->GetEntity();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClass_SetEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    iCelEntity *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_SetEntity",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    (arg1)->SetEntity(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyOrActionType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    csStringID arg2 ;
    celDataType result;
    csStringID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyOrActionType",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,1) == -1)) return NULL;
    arg2 = *argp2; 
    result = (arg1)->GetPropertyOrActionType(arg2);
    
    {
        celDataType * resultptr;
        resultptr = new celDataType (result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_celDataType, 1);
    }
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClass_IsPropertyReadOnly(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    csStringID arg2 ;
    bool result;
    csStringID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_IsPropertyReadOnly",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,1) == -1)) return NULL;
    arg2 = *argp2; 
    result = (bool )(arg1)->IsPropertyReadOnly(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyLong(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    csStringID arg2 ;
    long result;
    csStringID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyLong",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,1) == -1)) return NULL;
    arg2 = *argp2; 
    result = (long )(arg1)->GetPropertyLong(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    csStringID arg2 ;
    float result;
    csStringID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyFloat",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,1) == -1)) return NULL;
    arg2 = *argp2; 
    result = (float )(arg1)->GetPropertyFloat(arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyBool(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    csStringID arg2 ;
    bool result;
    csStringID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyBool",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,1) == -1)) return NULL;
    arg2 = *argp2; 
    result = (bool )(arg1)->GetPropertyBool(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    csStringID arg2 ;
    char *result;
    csStringID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyString",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,1) == -1)) return NULL;
    arg2 = *argp2; 
    result = (char *)(arg1)->GetPropertyString(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    csStringID arg2 ;
    csVector3 *arg3 ;
    bool result;
    csStringID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelPropertyClass_GetPropertyVector",&obj0,&obj1,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,1) == -1)) return NULL;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    result = (bool )(arg1)->GetPropertyVector(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyAndActionCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClass_GetPropertyAndActionCount",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    result = (int )((iCelPropertyClass const *)arg1)->GetPropertyAndActionCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyOrActionID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    int arg2 ;
    csStringID result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iCelPropertyClass_GetPropertyOrActionID",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    result = (arg1)->GetPropertyOrActionID(arg2);
    
    {
        csStringID * resultptr;
        resultptr = new csStringID (result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csStringID, 1);
    }
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClass_GetPropertyOrActionDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    csStringID arg2 ;
    char *result;
    csStringID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClass_GetPropertyOrActionDescription",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,1) == -1)) return NULL;
    arg2 = *argp2; 
    result = (char *)(arg1)->GetPropertyOrActionDescription(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClass_PerformAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    csStringID arg2 ;
    char *arg3 ;
    bool result;
    csStringID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iCelPropertyClass_PerformAction",&obj0,&obj1,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,1) == -1)) return NULL;
    arg2 = *argp2; 
    result = (bool )(arg1)->PerformAction(arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyLong(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    csStringID arg2 ;
    long arg3 ;
    bool result;
    csStringID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOl:iCelPropertyClass_SetPropertyLong",&obj0,&obj1,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,1) == -1)) return NULL;
    arg2 = *argp2; 
    result = (bool )iCelPropertyClass_SetPropertyLong(arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    csStringID arg2 ;
    float arg3 ;
    bool result;
    csStringID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf:iCelPropertyClass_SetPropertyFloat",&obj0,&obj1,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,1) == -1)) return NULL;
    arg2 = *argp2; 
    result = (bool )iCelPropertyClass_SetPropertyFloat(arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyBool(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    csStringID arg2 ;
    bool arg3 ;
    bool result;
    csStringID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelPropertyClass_SetPropertyBool",&obj0,&obj1,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,1) == -1)) return NULL;
    arg2 = *argp2; 
    arg3 = (bool) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) return NULL;
    result = (bool )iCelPropertyClass_SetPropertyBool(arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    csStringID arg2 ;
    char *arg3 ;
    bool result;
    csStringID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:iCelPropertyClass_SetPropertyString",&obj0,&obj1,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,1) == -1)) return NULL;
    arg2 = *argp2; 
    result = (bool )iCelPropertyClass_SetPropertyString(arg1,arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClass_SetPropertyVector3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    csStringID arg2 ;
    csVector3 *arg3 ;
    bool result;
    csStringID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iCelPropertyClass_SetPropertyVector3",&obj0,&obj1,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csStringID,1) == -1)) return NULL;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    result = (bool )iCelPropertyClass_SetPropertyVector3(arg1,arg2,(csVector3 const &)*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_delete_iCelPropertyClass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelPropertyClass",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iCelPropertyClass_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelPropertyClass, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celQueryPC_iPcRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 ;
    iPcRegion *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:celQueryPC_iPcRegion",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,1)) == -1) return NULL;
    result = (iPcRegion *)celQueryPC_iPcRegion(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcRegion, 0);
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClassList_GetCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iCelPropertyClassList_GetCount",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,1)) == -1) return NULL;
    result = (int )(arg1)->GetCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClassList_Get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 ;
    int arg2 ;
    iCelPropertyClass *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iCelPropertyClassList_Get",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,1)) == -1) return NULL;
    result = (iCelPropertyClass *)(arg1)->Get(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClass, 0);
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClassList_Find(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 ;
    iCelPropertyClass *arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iCelPropertyClassList_Find",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    result = (int )(arg1)->Find(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClassList_FindByName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 ;
    char *arg2 ;
    iCelPropertyClass *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iCelPropertyClassList_FindByName",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,1)) == -1) return NULL;
    result = (iCelPropertyClass *)(arg1)->FindByName((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClass, 0);
    return resultobj;
}


static PyObject *_wrap_iCelPropertyClassList_FindByInterface(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 ;
    scfInterfaceID arg2 ;
    int arg3 ;
    iBase *result;
    scfInterfaceID *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:iCelPropertyClassList_FindByInterface",&obj0,&obj1,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_scfInterfaceID,1) == -1)) return NULL;
    arg2 = *argp2; 
    result = (iBase *)(arg1)->FindByInterface(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iBase, 0);
    return resultobj;
}


static PyObject *_wrap_new_iCelPropertyClassList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_iCelPropertyClassList")) return NULL;
    result = (iCelPropertyClassList *)new iCelPropertyClassList();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelPropertyClassList, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iCelPropertyClassList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClassList *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iCelPropertyClassList",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClassList,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iCelPropertyClassList_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iCelPropertyClassList, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_iPcRegion_SetWorldFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 ;
    char *arg2 ;
    char *arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcRegion_SetWorldFile",&obj0,&arg2,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,1)) == -1) return NULL;
    (arg1)->SetWorldFile((char const *)arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcRegion_GetWorldDir(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_GetWorldDir",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,1)) == -1) return NULL;
    result = (char *)((iPcRegion const *)arg1)->GetWorldDir();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
}


static PyObject *_wrap_iPcRegion_GetWorldFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_GetWorldFile",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,1)) == -1) return NULL;
    result = (char *)((iPcRegion const *)arg1)->GetWorldFile();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
}


static PyObject *_wrap_iPcRegion_SetRegionName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcRegion_SetRegionName",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,1)) == -1) return NULL;
    (arg1)->SetRegionName((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcRegion_GetRegionName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_GetRegionName",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,1)) == -1) return NULL;
    result = (char *)((iPcRegion const *)arg1)->GetRegionName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
}


static PyObject *_wrap_iPcRegion_Load(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_Load",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,1)) == -1) return NULL;
    result = (bool )(arg1)->Load();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcRegion_Unload(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcRegion_Unload",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,1)) == -1) return NULL;
    (arg1)->Unload();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcRegion_FindSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 ;
    char *arg2 ;
    iSector *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcRegion_FindSector",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,1)) == -1) return NULL;
    result = (iSector *)(arg1)->FindSector((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
}


static PyObject *_wrap_iPcRegion_GetStartSector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 ;
    char *arg2 = NULL ;
    iSector *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|s:iPcRegion_GetStartSector",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,1)) == -1) return NULL;
    result = (iSector *)(arg1)->GetStartSector((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iSector, 0);
    return resultobj;
}


static PyObject *_wrap_iPcRegion_GetStartPosition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 ;
    char *arg2 = NULL ;
    SwigValueWrapper<csVector3> result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|s:iPcRegion_GetStartPosition",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,1)) == -1) return NULL;
    result = (arg1)->GetStartPosition((char const *)arg2);
    
    {
        csVector3 * resultptr;
        resultptr = new csVector3 (result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_csVector3, 1);
    }
    return resultobj;
}


static PyObject *_wrap_iPcRegion_PointCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 ;
    iPcCamera *arg2 ;
    char *arg3 = NULL ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|s:iPcRegion_PointCamera",&obj0,&obj1,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcCamera,1)) == -1) return NULL;
    (arg1)->PointCamera(arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcRegion_LoadWorld(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 ;
    char *arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcRegion_LoadWorld",&obj0,&arg2,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,1)) == -1) return NULL;
    result = (bool )iPcRegion_LoadWorld(arg1,(char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_delete_iPcRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcRegion *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcRegion",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcRegion,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iPcRegion_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcRegion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 ;
    iCelEntity *arg2 ;
    char *arg3 ;
    iPcRegion *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:celCreateRegion",&obj0,&obj1,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    result = (iPcRegion *)celCreateRegion(arg1,arg2,(char const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcRegion, 0);
    return resultobj;
}


static PyObject *_wrap_scfQuery_iPcRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    iPcRegion *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcRegion",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    result = (iPcRegion *)scfQuery_iPcRegion(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcRegion, 0);
    return resultobj;
}


static PyObject *_wrap_iPcCamera_SetRegion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 ;
    iPcRegion *arg2 ;
    bool arg3 = true ;
    char *arg4 = NULL ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|Os:iPcCamera_SetRegion",&obj0,&obj1,&obj2,&arg4)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcRegion,1)) == -1) return NULL;
    if (obj2)
    arg3 = (bool) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) return NULL;
    result = (bool )(arg1)->SetRegion(arg2,arg3,(char const *)arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcCamera_SetMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 ;
    int arg2 ;
    bool arg3 = true ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi|O:iPcCamera_SetMode",&obj0,&arg2,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,1)) == -1) return NULL;
    if (obj2)
    arg3 = (bool) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) return NULL;
    result = (bool )(arg1)->SetMode((iPcCamera::CameraMode )arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcCamera_GetMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetMode",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,1)) == -1) return NULL;
    result = (int )((iPcCamera const *)arg1)->GetMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcCamera_SetFollowPos(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 ;
    csVector3 *arg2 ;
    csVector3 *arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcCamera_SetFollowPos",&obj0,&obj1,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    (arg1)->SetFollowPos((csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcCamera_GetFollowPos(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 ;
    csVector3 *arg2 ;
    csVector3 *arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcCamera_GetFollowPos",&obj0,&obj1,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    ((iPcCamera const *)arg1)->GetFollowPos(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcCamera_SetPitch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 ;
    float arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcCamera_SetPitch",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,1)) == -1) return NULL;
    (arg1)->SetPitch(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcCamera_GetPitch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 ;
    float result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetPitch",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,1)) == -1) return NULL;
    result = (float )(arg1)->GetPitch();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
}


static PyObject *_wrap_iPcCamera_SetRoll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 ;
    float arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcCamera_SetRoll",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,1)) == -1) return NULL;
    (arg1)->SetRoll(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcCamera_GetRoll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 ;
    float result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetRoll",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,1)) == -1) return NULL;
    result = (float )(arg1)->GetRoll();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
}


static PyObject *_wrap_iPcCamera_SetRectangle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:iPcCamera_SetRectangle",&obj0,&arg2,&arg3,&arg4,&arg5)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,1)) == -1) return NULL;
    (arg1)->SetRectangle(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcCamera_GetCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 ;
    iCamera *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetCamera",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,1)) == -1) return NULL;
    result = (iCamera *)((iPcCamera const *)arg1)->GetCamera();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCamera, 0);
    return resultobj;
}


static PyObject *_wrap_iPcCamera_GetView(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 ;
    iView *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCamera_GetView",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,1)) == -1) return NULL;
    result = (iView *)((iPcCamera const *)arg1)->GetView();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iView, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iPcCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCamera *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcCamera",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCamera,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iPcCamera_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcCamera, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celCreateCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 ;
    iCelEntity *arg2 ;
    iCelEntity *arg3 ;
    char *arg4 ;
    iPcCamera *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOs:celCreateCamera",&obj0,&obj1,&obj2,&arg4)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    result = (iPcCamera *)celCreateCamera(arg1,arg2,arg3,(char const *)arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCamera, 0);
    return resultobj;
}


static PyObject *_wrap_scfQuery_iPcCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iCelPropertyClass *arg1 ;
    iPcCamera *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:scfQuery_iPcCamera",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iCelPropertyClass,1)) == -1) return NULL;
    result = (iPcCamera *)scfQuery_iPcCamera(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCamera, 0);
    return resultobj;
}


static PyObject *_wrap_iPcMeshSelect_SetCamera(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    iPcCamera *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetCamera",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcCamera,1)) == -1) return NULL;
    (arg1)->SetCamera(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMeshSelect_SetMouseButtons(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPcMeshSelect_SetMouseButtons",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    (arg1)->SetMouseButtons(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMeshSelect_GetMouseButtons(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_GetMouseButtons",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    result = (int )((iPcMeshSelect const *)arg1)->GetMouseButtons();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcMeshSelect_SetGlobalSelection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetGlobalSelection",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    (arg1)->SetGlobalSelection(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMeshSelect_HasGlobalSelection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasGlobalSelection",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    result = (bool )((iPcMeshSelect const *)arg1)->HasGlobalSelection();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcMeshSelect_SetFollowMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetFollowMode",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    (arg1)->SetFollowMode(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMeshSelect_HasFollowMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasFollowMode",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    result = (bool )((iPcMeshSelect const *)arg1)->HasFollowMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcMeshSelect_SetFollowAlwaysMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetFollowAlwaysMode",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    (arg1)->SetFollowAlwaysMode(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMeshSelect_HasFollowAlwaysMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasFollowAlwaysMode",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    result = (bool )((iPcMeshSelect const *)arg1)->HasFollowAlwaysMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcMeshSelect_SetDragMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetDragMode",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    (arg1)->SetDragMode(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMeshSelect_HasDragMode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasDragMode",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    result = (bool )((iPcMeshSelect const *)arg1)->HasDragMode();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcMeshSelect_SetDragPlaneNormal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    csVector3 *arg2 ;
    bool arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcMeshSelect_SetDragPlaneNormal",&obj0,&obj1,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    arg3 = (bool) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) return NULL;
    (arg1)->SetDragPlaneNormal((csVector3 const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMeshSelect_GetDragPlaneNormal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    csVector3 *arg2 ;
    bool *arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcMeshSelect_GetDragPlaneNormal",&obj0,&obj1,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_bool,1)) == -1) return NULL;
    ((iPcMeshSelect const *)arg1)->GetDragPlaneNormal(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMeshSelect_SetSendmoveEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetSendmoveEvent",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    (arg1)->SetSendmoveEvent(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMeshSelect_HasSendmoveEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasSendmoveEvent",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    result = (bool )((iPcMeshSelect const *)arg1)->HasSendmoveEvent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcMeshSelect_SetSendupEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetSendupEvent",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    (arg1)->SetSendupEvent(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMeshSelect_HasSendupEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasSendupEvent",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    result = (bool )((iPcMeshSelect const *)arg1)->HasSendupEvent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcMeshSelect_SetSenddownEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMeshSelect_SetSenddownEvent",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    (arg1)->SetSenddownEvent(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMeshSelect_HasSenddownEvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMeshSelect_HasSenddownEvent",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    result = (bool )((iPcMeshSelect const *)arg1)->HasSenddownEvent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_delete_iPcMeshSelect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMeshSelect *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMeshSelect",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMeshSelect,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iPcMeshSelect_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMeshSelect, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celPcMeshSelect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 ;
    iCelEntity *arg2 ;
    iPcMeshSelect *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celPcMeshSelect",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    result = (iPcMeshSelect *)celPcMeshSelect(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMeshSelect, 0);
    return resultobj;
}


static PyObject *_wrap_iPcMesh_LoadMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 ;
    char *arg2 ;
    char *arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:iPcMesh_LoadMesh",&obj0,&arg2,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,1)) == -1) return NULL;
    (arg1)->SetMesh((char const *)arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMesh_SetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 ;
    iMeshWrapper *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMesh_SetMesh",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iMeshWrapper,1)) == -1) return NULL;
    (arg1)->SetMesh(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMesh_CreateEmptyThing(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_CreateEmptyThing",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,1)) == -1) return NULL;
    (arg1)->CreateEmptyThing();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMesh_GetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 ;
    iMeshWrapper *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_GetMesh",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,1)) == -1) return NULL;
    result = (iMeshWrapper *)((iPcMesh const *)arg1)->GetMesh();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iMeshWrapper, 0);
    return resultobj;
}


static PyObject *_wrap_iPcMesh_MoveMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 ;
    iSector *arg2 ;
    csVector3 *arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcMesh_MoveMesh",&obj0,&obj1,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    (arg1)->MoveMesh(arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMesh_SetAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 ;
    char *arg2 ;
    bool arg3 = false ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:iPcMesh_SetAction",&obj0,&arg2,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,1)) == -1) return NULL;
    if (obj2)
    arg3 = (bool) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) return NULL;
    (arg1)->SetAction((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMesh_GetAction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_GetAction",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,1)) == -1) return NULL;
    result = (char *)(arg1)->GetAction();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
}


static PyObject *_wrap_iPcMesh_Hide(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_Hide",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,1)) == -1) return NULL;
    (arg1)->Hide();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMesh_Show(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_Show",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,1)) == -1) return NULL;
    (arg1)->Show();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMesh_IsVisible(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMesh_IsVisible",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,1)) == -1) return NULL;
    result = (bool )((iPcMesh const *)arg1)->IsVisible();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_delete_iPcMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMesh *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMesh",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMesh,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iPcMesh_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMesh, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celPcMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 ;
    iCelEntity *arg2 ;
    iPcMesh *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celPcMesh",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    result = (iPcMesh *)celPcMesh(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
}


static PyObject *_wrap_iPcTimer_WakeUp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTimer *arg1 ;
    csTicks arg2 ;
    bool arg3 ;
    csTicks *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcTimer_WakeUp",&obj0,&obj1,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTimer,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_csTicks,1) == -1)) return NULL;
    arg2 = *argp2; 
    arg3 = (bool) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) return NULL;
    (arg1)->WakeUp(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcTimer_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTimer *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcTimer_Clear",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTimer,1)) == -1) return NULL;
    (arg1)->Clear();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_delete_iPcTimer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcTimer *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcTimer",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcTimer,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iPcTimer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcTimer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celPcTimer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 ;
    iCelEntity *arg2 ;
    iPcTimer *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celPcTimer",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    result = (iPcTimer *)celPcTimer(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcTimer, 0);
    return resultobj;
}


static PyObject *_wrap_iPcSolid_SetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSolid *arg1 ;
    iPcMesh *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcSolid_SetMesh",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSolid,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMesh,1)) == -1) return NULL;
    (arg1)->SetMesh(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcSolid_GetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSolid *arg1 ;
    iPcMesh *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcSolid_GetMesh",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSolid,1)) == -1) return NULL;
    result = (iPcMesh *)((iPcSolid const *)arg1)->GetMesh();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
}


static PyObject *_wrap_iPcSolid_GetCollider(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSolid *arg1 ;
    iCollider *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcSolid_GetCollider",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSolid,1)) == -1) return NULL;
    result = (iCollider *)(arg1)->GetCollider();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCollider, 0);
    return resultobj;
}


static PyObject *_wrap_delete_iPcSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcSolid *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcSolid",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcSolid,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iPcSolid_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcSolid, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celPcSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 ;
    iCelEntity *arg2 ;
    iPcSolid *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celPcSolid",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    result = (iPcSolid *)celPcSolid(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSolid, 0);
    return resultobj;
}


static PyObject *_wrap_iPcGravity_CreateGravityColliderFromMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 ;
    iPcMesh *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_CreateGravityColliderFromMesh",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMesh,1)) == -1) return NULL;
    (arg1)->CreateGravityCollider(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcGravity_CreateGravityCollider(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 ;
    csVector3 *arg2 ;
    csVector3 *arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcGravity_CreateGravityCollider",&obj0,&obj1,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    (arg1)->CreateGravityCollider((csVector3 const &)*arg2,(csVector3 const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcGravity_GetGravityCollider(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 ;
    iCollider *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_GetGravityCollider",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,1)) == -1) return NULL;
    result = (iCollider *)(arg1)->GetGravityCollider();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCollider, 0);
    return resultobj;
}


static PyObject *_wrap_iPcGravity_SetMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 ;
    iPcMovable *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_SetMovable",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMovable,1)) == -1) return NULL;
    (arg1)->SetMovable(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcGravity_GetMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 ;
    iPcMovable *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_GetMovable",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,1)) == -1) return NULL;
    result = (iPcMovable *)(arg1)->GetMovable();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMovable, 0);
    return resultobj;
}


static PyObject *_wrap_iPcGravity_SetSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 ;
    iPcSolid *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_SetSolid",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcSolid,1)) == -1) return NULL;
    (arg1)->SetSolid(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcGravity_GetSolid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 ;
    iPcSolid *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_GetSolid",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,1)) == -1) return NULL;
    result = (iPcSolid *)(arg1)->GetSolid();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcSolid, 0);
    return resultobj;
}


static PyObject *_wrap_iPcGravity_SetWeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 ;
    float arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:iPcGravity_SetWeight",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,1)) == -1) return NULL;
    (arg1)->SetWeight(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcGravity_GetWeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 ;
    float result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_GetWeight",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,1)) == -1) return NULL;
    result = (float )((iPcGravity const *)arg1)->GetWeight();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
}


static PyObject *_wrap_iPcGravity_ClearForces(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_ClearForces",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,1)) == -1) return NULL;
    (arg1)->ClearForces();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcGravity_ClearPermanentForces(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_ClearPermanentForces",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,1)) == -1) return NULL;
    (arg1)->ClearPermanentForces();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcGravity_ResetSpeed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_ResetSpeed",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,1)) == -1) return NULL;
    (arg1)->ResetSpeed();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcGravity_ApplyForce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 ;
    csVector3 *arg2 ;
    float arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOf:iPcGravity_ApplyForce",&obj0,&obj1,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    (arg1)->ApplyForce((csVector3 const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcGravity_ApplyPermanentForce(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 ;
    csVector3 *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_ApplyPermanentForce",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    (arg1)->ApplyPermanentForce((csVector3 const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcGravity_IsResting(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_IsResting",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,1)) == -1) return NULL;
    result = (bool )((iPcGravity const *)arg1)->IsResting();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcGravity_SetActive(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcGravity_SetActive",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,1)) == -1) return NULL;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) return NULL;
    (arg1)->SetActive(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcGravity_IsActive(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcGravity_IsActive",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,1)) == -1) return NULL;
    result = (bool )((iPcGravity const *)arg1)->IsActive();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_delete_iPcGravity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcGravity *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcGravity",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcGravity,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iPcGravity_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcGravity, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celPcGravity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 ;
    iCelEntity *arg2 ;
    iPcGravity *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celPcGravity",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    result = (iPcGravity *)celPcGravity(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcGravity, 0);
    return resultobj;
}


static PyObject *_wrap_iPcMovable_SetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 ;
    iPcMesh *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMovable_SetMesh",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMesh,1)) == -1) return NULL;
    (arg1)->SetMesh(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMovable_GetMesh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 ;
    iPcMesh *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMovable_GetMesh",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,1)) == -1) return NULL;
    result = (iPcMesh *)(arg1)->GetMesh();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMesh, 0);
    return resultobj;
}


static PyObject *_wrap_iPcMovable_SetPos(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 ;
    iSector *arg2 ;
    csVector3 *arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:iPcMovable_SetPos",&obj0,&obj1,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iSector,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    result = (int )(arg1)->Move(arg2,(csVector3 const &)*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcMovable_Move(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 ;
    csVector3 *arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMovable_Move",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_csVector3,1)) == -1) return NULL;
    result = (int )(arg1)->Move((csVector3 const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcMovable_AddConstraint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 ;
    iPcMovableConstraint *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMovable_AddConstraint",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMovableConstraint,1)) == -1) return NULL;
    (arg1)->AddConstraint(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMovable_RemoveConstraint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 ;
    iPcMovableConstraint *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcMovable_RemoveConstraint",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcMovableConstraint,1)) == -1) return NULL;
    (arg1)->RemoveConstraint(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcMovable_RemoveAllConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcMovable_RemoveAllConstraints",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,1)) == -1) return NULL;
    (arg1)->RemoveAllConstraints();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_delete_iPcMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcMovable *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcMovable",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcMovable,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iPcMovable_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcMovable, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celPcMovable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 ;
    iCelEntity *arg2 ;
    iPcMovable *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celPcMovable",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    result = (iPcMovable *)celPcMovable(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcMovable, 0);
    return resultobj;
}


static PyObject *_wrap_iPcInventory_AddEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 ;
    iCelEntity *arg2 ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcInventory_AddEntity",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    result = (bool )(arg1)->AddEntity(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcInventory_RemoveEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 ;
    iCelEntity *arg2 ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcInventory_RemoveEntity",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    result = (bool )(arg1)->RemoveEntity(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcInventory_RemoveAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcInventory_RemoveAll",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,1)) == -1) return NULL;
    result = (bool )(arg1)->RemoveAll();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcInventory_GetEntityCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcInventory_GetEntityCount",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,1)) == -1) return NULL;
    result = (int )((iPcInventory const *)arg1)->GetEntityCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcInventory_GetEntity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 ;
    int arg2 ;
    iCelEntity *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:iPcInventory_GetEntity",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,1)) == -1) return NULL;
    result = (iCelEntity *)((iPcInventory const *)arg1)->GetEntity(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iCelEntity, 0);
    return resultobj;
}


static PyObject *_wrap_iPcInventory_SetStrictCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 ;
    char *arg2 ;
    bool arg3 ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:iPcInventory_SetStrictCharacteristics",&obj0,&arg2,&obj2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,1)) == -1) return NULL;
    arg3 = (bool) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) return NULL;
    result = (bool )(arg1)->SetStrictCharacteristics((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcInventory_HasStrictCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 ;
    char *arg2 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_HasStrictCharacteristics",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,1)) == -1) return NULL;
    result = (bool )((iPcInventory const *)arg1)->HasStrictCharacteristics((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcInventory_SetConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 ;
    char *arg2 ;
    float arg3 ;
    float arg4 ;
    float arg5 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osfff:iPcInventory_SetConstraints",&obj0,&arg2,&arg3,&arg4,&arg5)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,1)) == -1) return NULL;
    result = (bool )(arg1)->SetConstraints((char const *)arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcInventory_GetConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 ;
    char *arg2 ;
    float *arg3 ;
    float *arg4 ;
    float *arg5 ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOOO:iPcInventory_GetConstraints",&obj0,&arg2,&obj2,&obj3,&obj4)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_float,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_float,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_float,1)) == -1) return NULL;
    result = (bool )((iPcInventory const *)arg1)->GetConstraints((char const *)arg2,*arg3,*arg4,*arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcInventory_RemoveConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_RemoveConstraints",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,1)) == -1) return NULL;
    (arg1)->RemoveConstraints((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcInventory_RemoveAllConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcInventory_RemoveAllConstraints",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,1)) == -1) return NULL;
    (arg1)->RemoveAllConstraints();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcInventory_GetCurrentCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 ;
    char *arg2 ;
    float result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_GetCurrentCharacteristic",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,1)) == -1) return NULL;
    result = (float )((iPcInventory const *)arg1)->GetCurrentCharacteristic((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
}


static PyObject *_wrap_iPcInventory_MarkDirty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_MarkDirty",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,1)) == -1) return NULL;
    (arg1)->MarkDirty((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcInventory_TestConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 ;
    char *arg2 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcInventory_TestConstraints",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,1)) == -1) return NULL;
    result = (bool )(arg1)->TestConstraints((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcInventory_Dump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcInventory_Dump",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,1)) == -1) return NULL;
    (arg1)->Dump();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_delete_iPcInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcInventory *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcInventory",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcInventory,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iPcInventory_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcInventory, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celPcInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 ;
    iCelEntity *arg2 ;
    iPcInventory *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celPcInventory",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    result = (iPcInventory *)celPcInventory(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcInventory, 0);
    return resultobj;
}


static PyObject *_wrap_iPcCharacteristics_SetCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 ;
    char *arg2 ;
    float arg3 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osf:iPcCharacteristics_SetCharacteristic",&obj0,&arg2,&arg3)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,1)) == -1) return NULL;
    result = (bool )(arg1)->SetCharacteristic((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcCharacteristics_SetInheritedCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 ;
    char *arg2 ;
    float arg3 ;
    float arg4 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osff:iPcCharacteristics_SetInheritedCharacteristic",&obj0,&arg2,&arg3,&arg4)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,1)) == -1) return NULL;
    result = (bool )(arg1)->SetInheritedCharacteristic((char const *)arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcCharacteristics_GetCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 ;
    char *arg2 ;
    float result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_GetCharacteristic",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,1)) == -1) return NULL;
    result = (float )((iPcCharacteristics const *)arg1)->GetCharacteristic((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
}


static PyObject *_wrap_iPcCharacteristics_GetLocalCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 ;
    char *arg2 ;
    float result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_GetLocalCharacteristic",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,1)) == -1) return NULL;
    result = (float )((iPcCharacteristics const *)arg1)->GetLocalCharacteristic((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
}


static PyObject *_wrap_iPcCharacteristics_GetInheritedCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 ;
    char *arg2 ;
    float result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_GetInheritedCharacteristic",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,1)) == -1) return NULL;
    result = (float )((iPcCharacteristics const *)arg1)->GetInheritedCharacteristic((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
}


static PyObject *_wrap_iPcCharacteristics_ClearCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 ;
    char *arg2 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_ClearCharacteristic",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,1)) == -1) return NULL;
    result = (bool )(arg1)->ClearCharacteristic((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcCharacteristics_HasCharacteristic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 ;
    char *arg2 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_HasCharacteristic",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,1)) == -1) return NULL;
    result = (bool )((iPcCharacteristics const *)arg1)->HasCharacteristic((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcCharacteristics_ClearAll(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCharacteristics_ClearAll",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,1)) == -1) return NULL;
    result = (bool )(arg1)->ClearAll();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcCharacteristics_AddToInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 ;
    iPcInventory *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcCharacteristics_AddToInventory",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcInventory,1)) == -1) return NULL;
    (arg1)->AddToInventory(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcCharacteristics_RemoveFromInventory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 ;
    iPcInventory *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:iPcCharacteristics_RemoveFromInventory",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iPcInventory,1)) == -1) return NULL;
    (arg1)->RemoveFromInventory(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcCharacteristics_MarkDirty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_MarkDirty",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,1)) == -1) return NULL;
    (arg1)->MarkDirty((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_iPcCharacteristics_TestConstraints(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 ;
    char *arg2 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:iPcCharacteristics_TestConstraints",&obj0,&arg2)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,1)) == -1) return NULL;
    result = (bool )(arg1)->TestConstraints((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
}


static PyObject *_wrap_iPcCharacteristics_Dump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:iPcCharacteristics_Dump",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,1)) == -1) return NULL;
    (arg1)->Dump();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject *_wrap_delete_iPcCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iPcCharacteristics *arg1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_iPcCharacteristics",&obj0)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iPcCharacteristics,1)) == -1) return NULL;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
}


static PyObject * iPcCharacteristics_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_iPcCharacteristics, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_celPcCharacteristics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    iObjectRegistry *arg1 ;
    iCelEntity *arg2 ;
    iPcCharacteristics *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:celPcCharacteristics",&obj0,&obj1)) return NULL;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_iObjectRegistry,1)) == -1) return NULL;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_iCelEntity,1)) == -1) return NULL;
    result = (iPcCharacteristics *)celPcCharacteristics(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_iPcCharacteristics, 0);
    return resultobj;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"ptrvalue", _wrap_ptrvalue, METH_VARARGS },
	 { (char *)"ptrset", _wrap_ptrset, METH_VARARGS },
	 { (char *)"ptrcreate", _wrap_ptrcreate, METH_VARARGS },
	 { (char *)"ptrfree", _wrap_ptrfree, METH_VARARGS },
	 { (char *)"ptradd", _wrap_ptradd, METH_VARARGS },
	 { (char *)"iBase_DecRef", _wrap_iBase_DecRef, METH_VARARGS },
	 { (char *)"new_iBase", _wrap_new_iBase, METH_VARARGS },
	 { (char *)"delete_iBase", _wrap_delete_iBase, METH_VARARGS },
	 { (char *)"iBase_swigregister", iBase_swigregister, METH_VARARGS },
	 { (char *)"iSCF_CreateInstance", _wrap_iSCF_CreateInstance, METH_VARARGS },
	 { (char *)"new_iSCF", _wrap_new_iSCF, METH_VARARGS },
	 { (char *)"delete_iSCF", _wrap_delete_iSCF, METH_VARARGS },
	 { (char *)"iSCF_swigregister", iSCF_swigregister, METH_VARARGS },
	 { (char *)"MakeVersion", _wrap_MakeVersion, METH_VARARGS },
	 { (char *)"csVector3_x_set", _wrap_csVector3_x_set, METH_VARARGS },
	 { (char *)"csVector3_x_get", _wrap_csVector3_x_get, METH_VARARGS },
	 { (char *)"csVector3_y_set", _wrap_csVector3_y_set, METH_VARARGS },
	 { (char *)"csVector3_y_get", _wrap_csVector3_y_get, METH_VARARGS },
	 { (char *)"csVector3_z_set", _wrap_csVector3_z_set, METH_VARARGS },
	 { (char *)"csVector3_z_get", _wrap_csVector3_z_get, METH_VARARGS },
	 { (char *)"new_csVector3", _wrap_new_csVector3, METH_VARARGS },
	 { (char *)"delete_csVector3", _wrap_delete_csVector3, METH_VARARGS },
	 { (char *)"csVector3_swigregister", csVector3_swigregister, METH_VARARGS },
	 { (char *)"csRGBpixel_red_set", _wrap_csRGBpixel_red_set, METH_VARARGS },
	 { (char *)"csRGBpixel_red_get", _wrap_csRGBpixel_red_get, METH_VARARGS },
	 { (char *)"csRGBpixel_green_set", _wrap_csRGBpixel_green_set, METH_VARARGS },
	 { (char *)"csRGBpixel_green_get", _wrap_csRGBpixel_green_get, METH_VARARGS },
	 { (char *)"csRGBpixel_blue_set", _wrap_csRGBpixel_blue_set, METH_VARARGS },
	 { (char *)"csRGBpixel_blue_get", _wrap_csRGBpixel_blue_get, METH_VARARGS },
	 { (char *)"csRGBpixel_alpha_set", _wrap_csRGBpixel_alpha_set, METH_VARARGS },
	 { (char *)"csRGBpixel_alpha_get", _wrap_csRGBpixel_alpha_get, METH_VARARGS },
	 { (char *)"new_csRGBpixel", _wrap_new_csRGBpixel, METH_VARARGS },
	 { (char *)"delete_csRGBpixel", _wrap_delete_csRGBpixel, METH_VARARGS },
	 { (char *)"csRGBpixel_swigregister", csRGBpixel_swigregister, METH_VARARGS },
	 { (char *)"csPixelFormat_RedMask_set", _wrap_csPixelFormat_RedMask_set, METH_VARARGS },
	 { (char *)"csPixelFormat_RedMask_get", _wrap_csPixelFormat_RedMask_get, METH_VARARGS },
	 { (char *)"csPixelFormat_GreenMask_set", _wrap_csPixelFormat_GreenMask_set, METH_VARARGS },
	 { (char *)"csPixelFormat_GreenMask_get", _wrap_csPixelFormat_GreenMask_get, METH_VARARGS },
	 { (char *)"csPixelFormat_BlueMask_set", _wrap_csPixelFormat_BlueMask_set, METH_VARARGS },
	 { (char *)"csPixelFormat_BlueMask_get", _wrap_csPixelFormat_BlueMask_get, METH_VARARGS },
	 { (char *)"csPixelFormat_RedShift_set", _wrap_csPixelFormat_RedShift_set, METH_VARARGS },
	 { (char *)"csPixelFormat_RedShift_get", _wrap_csPixelFormat_RedShift_get, METH_VARARGS },
	 { (char *)"csPixelFormat_GreenShift_set", _wrap_csPixelFormat_GreenShift_set, METH_VARARGS },
	 { (char *)"csPixelFormat_GreenShift_get", _wrap_csPixelFormat_GreenShift_get, METH_VARARGS },
	 { (char *)"csPixelFormat_BlueShift_set", _wrap_csPixelFormat_BlueShift_set, METH_VARARGS },
	 { (char *)"csPixelFormat_BlueShift_get", _wrap_csPixelFormat_BlueShift_get, METH_VARARGS },
	 { (char *)"csPixelFormat_RedBits_set", _wrap_csPixelFormat_RedBits_set, METH_VARARGS },
	 { (char *)"csPixelFormat_RedBits_get", _wrap_csPixelFormat_RedBits_get, METH_VARARGS },
	 { (char *)"csPixelFormat_GreenBits_set", _wrap_csPixelFormat_GreenBits_set, METH_VARARGS },
	 { (char *)"csPixelFormat_GreenBits_get", _wrap_csPixelFormat_GreenBits_get, METH_VARARGS },
	 { (char *)"csPixelFormat_BlueBits_set", _wrap_csPixelFormat_BlueBits_set, METH_VARARGS },
	 { (char *)"csPixelFormat_BlueBits_get", _wrap_csPixelFormat_BlueBits_get, METH_VARARGS },
	 { (char *)"csPixelFormat_PalEntries_set", _wrap_csPixelFormat_PalEntries_set, METH_VARARGS },
	 { (char *)"csPixelFormat_PalEntries_get", _wrap_csPixelFormat_PalEntries_get, METH_VARARGS },
	 { (char *)"csPixelFormat_PixelBytes_set", _wrap_csPixelFormat_PixelBytes_set, METH_VARARGS },
	 { (char *)"csPixelFormat_PixelBytes_get", _wrap_csPixelFormat_PixelBytes_get, METH_VARARGS },
	 { (char *)"new_csPixelFormat", _wrap_new_csPixelFormat, METH_VARARGS },
	 { (char *)"delete_csPixelFormat", _wrap_delete_csPixelFormat, METH_VARARGS },
	 { (char *)"csPixelFormat_swigregister", csPixelFormat_swigregister, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_CanClip_set", _wrap_csGraphics3DCaps_CanClip_set, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_CanClip_get", _wrap_csGraphics3DCaps_CanClip_get, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_minTexHeight_set", _wrap_csGraphics3DCaps_minTexHeight_set, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_minTexHeight_get", _wrap_csGraphics3DCaps_minTexHeight_get, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_minTexWidth_set", _wrap_csGraphics3DCaps_minTexWidth_set, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_minTexWidth_get", _wrap_csGraphics3DCaps_minTexWidth_get, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_maxTexHeight_set", _wrap_csGraphics3DCaps_maxTexHeight_set, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_maxTexHeight_get", _wrap_csGraphics3DCaps_maxTexHeight_get, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_maxTexWidth_set", _wrap_csGraphics3DCaps_maxTexWidth_set, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_maxTexWidth_get", _wrap_csGraphics3DCaps_maxTexWidth_get, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_fog_set", _wrap_csGraphics3DCaps_fog_set, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_fog_get", _wrap_csGraphics3DCaps_fog_get, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_NeedsPO2Maps_set", _wrap_csGraphics3DCaps_NeedsPO2Maps_set, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_NeedsPO2Maps_get", _wrap_csGraphics3DCaps_NeedsPO2Maps_get, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_MaxAspectRatio_set", _wrap_csGraphics3DCaps_MaxAspectRatio_set, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_MaxAspectRatio_get", _wrap_csGraphics3DCaps_MaxAspectRatio_get, METH_VARARGS },
	 { (char *)"new_csGraphics3DCaps", _wrap_new_csGraphics3DCaps, METH_VARARGS },
	 { (char *)"delete_csGraphics3DCaps", _wrap_delete_csGraphics3DCaps, METH_VARARGS },
	 { (char *)"csGraphics3DCaps_swigregister", csGraphics3DCaps_swigregister, METH_VARARGS },
	 { (char *)"csImageArea_x_set", _wrap_csImageArea_x_set, METH_VARARGS },
	 { (char *)"csImageArea_x_get", _wrap_csImageArea_x_get, METH_VARARGS },
	 { (char *)"csImageArea_y_set", _wrap_csImageArea_y_set, METH_VARARGS },
	 { (char *)"csImageArea_y_get", _wrap_csImageArea_y_get, METH_VARARGS },
	 { (char *)"csImageArea_w_set", _wrap_csImageArea_w_set, METH_VARARGS },
	 { (char *)"csImageArea_w_get", _wrap_csImageArea_w_get, METH_VARARGS },
	 { (char *)"csImageArea_h_set", _wrap_csImageArea_h_set, METH_VARARGS },
	 { (char *)"csImageArea_h_get", _wrap_csImageArea_h_get, METH_VARARGS },
	 { (char *)"csImageArea_data_set", _wrap_csImageArea_data_set, METH_VARARGS },
	 { (char *)"csImageArea_data_get", _wrap_csImageArea_data_get, METH_VARARGS },
	 { (char *)"new_csImageArea", _wrap_new_csImageArea, METH_VARARGS },
	 { (char *)"delete_csImageArea", _wrap_delete_csImageArea, METH_VARARGS },
	 { (char *)"csImageArea_swigregister", csImageArea_swigregister, METH_VARARGS },
	 { (char *)"iComponent_Initialize", _wrap_iComponent_Initialize, METH_VARARGS },
	 { (char *)"new_iComponent", _wrap_new_iComponent, METH_VARARGS },
	 { (char *)"delete_iComponent", _wrap_delete_iComponent, METH_VARARGS },
	 { (char *)"iComponent_swigregister", iComponent_swigregister, METH_VARARGS },
	 { (char *)"iEventHandler_HandleEvent", _wrap_iEventHandler_HandleEvent, METH_VARARGS },
	 { (char *)"new_iEventHandler", _wrap_new_iEventHandler, METH_VARARGS },
	 { (char *)"delete_iEventHandler", _wrap_delete_iEventHandler, METH_VARARGS },
	 { (char *)"iEventHandler_swigregister", iEventHandler_swigregister, METH_VARARGS },
	 { (char *)"new_iTextureWrapper", _wrap_new_iTextureWrapper, METH_VARARGS },
	 { (char *)"delete_iTextureWrapper", _wrap_delete_iTextureWrapper, METH_VARARGS },
	 { (char *)"iTextureWrapper_swigregister", iTextureWrapper_swigregister, METH_VARARGS },
	 { (char *)"iTextureHandle_GetMipMapDimensions", _wrap_iTextureHandle_GetMipMapDimensions, METH_VARARGS },
	 { (char *)"iTextureHandle_GetMeanColor", _wrap_iTextureHandle_GetMeanColor, METH_VARARGS },
	 { (char *)"iTextureHandle_GetCacheData", _wrap_iTextureHandle_GetCacheData, METH_VARARGS },
	 { (char *)"iTextureHandle_SetCacheData", _wrap_iTextureHandle_SetCacheData, METH_VARARGS },
	 { (char *)"iTextureHandle_GetPrivateObject", _wrap_iTextureHandle_GetPrivateObject, METH_VARARGS },
	 { (char *)"new_iTextureHandle", _wrap_new_iTextureHandle, METH_VARARGS },
	 { (char *)"delete_iTextureHandle", _wrap_delete_iTextureHandle, METH_VARARGS },
	 { (char *)"iTextureHandle_swigregister", iTextureHandle_swigregister, METH_VARARGS },
	 { (char *)"iMaterialHandle_GetTexture", _wrap_iMaterialHandle_GetTexture, METH_VARARGS },
	 { (char *)"iMaterialHandle_GetFlatColor", _wrap_iMaterialHandle_GetFlatColor, METH_VARARGS },
	 { (char *)"iMaterialHandle_GetReflection", _wrap_iMaterialHandle_GetReflection, METH_VARARGS },
	 { (char *)"iMaterialHandle_Prepare", _wrap_iMaterialHandle_Prepare, METH_VARARGS },
	 { (char *)"delete_iMaterialHandle", _wrap_delete_iMaterialHandle, METH_VARARGS },
	 { (char *)"iMaterialHandle_swigregister", iMaterialHandle_swigregister, METH_VARARGS },
	 { (char *)"iMaterialWrapper_GetMaterialHandle", _wrap_iMaterialWrapper_GetMaterialHandle, METH_VARARGS },
	 { (char *)"delete_iMaterialWrapper", _wrap_delete_iMaterialWrapper, METH_VARARGS },
	 { (char *)"iMaterialWrapper_swigregister", iMaterialWrapper_swigregister, METH_VARARGS },
	 { (char *)"iFont_SetSize", _wrap_iFont_SetSize, METH_VARARGS },
	 { (char *)"iFont_GetSize", _wrap_iFont_GetSize, METH_VARARGS },
	 { (char *)"iFont_GetMaxSize", _wrap_iFont_GetMaxSize, METH_VARARGS },
	 { (char *)"iFont_GetGlyphSize", _wrap_iFont_GetGlyphSize, METH_VARARGS },
	 { (char *)"iFont_GetGlyphBitmap", _wrap_iFont_GetGlyphBitmap, METH_VARARGS },
	 { (char *)"iFont_GetDimensions", _wrap_iFont_GetDimensions, METH_VARARGS },
	 { (char *)"iFont_GetLength", _wrap_iFont_GetLength, METH_VARARGS },
	 { (char *)"delete_iFont", _wrap_delete_iFont, METH_VARARGS },
	 { (char *)"iFont_swigregister", iFont_swigregister, METH_VARARGS },
	 { (char *)"iFontServer_LoadFont", _wrap_iFontServer_LoadFont, METH_VARARGS },
	 { (char *)"iFontServer_GetFontCount", _wrap_iFontServer_GetFontCount, METH_VARARGS },
	 { (char *)"iFontServer_GetFont", _wrap_iFontServer_GetFont, METH_VARARGS },
	 { (char *)"delete_iFontServer", _wrap_delete_iFontServer, METH_VARARGS },
	 { (char *)"iFontServer_swigregister", iFontServer_swigregister, METH_VARARGS },
	 { (char *)"iGraphics2D_Open", _wrap_iGraphics2D_Open, METH_VARARGS },
	 { (char *)"iGraphics2D_Close", _wrap_iGraphics2D_Close, METH_VARARGS },
	 { (char *)"iGraphics2D_GetWidth", _wrap_iGraphics2D_GetWidth, METH_VARARGS },
	 { (char *)"iGraphics2D_GetHeight", _wrap_iGraphics2D_GetHeight, METH_VARARGS },
	 { (char *)"iGraphics2D_GetFullScreen", _wrap_iGraphics2D_GetFullScreen, METH_VARARGS },
	 { (char *)"iGraphics2D_GetPage", _wrap_iGraphics2D_GetPage, METH_VARARGS },
	 { (char *)"iGraphics2D_DoubleBuffer", _wrap_iGraphics2D_DoubleBuffer, METH_VARARGS },
	 { (char *)"iGraphics2D_GetDoubleBufferState", _wrap_iGraphics2D_GetDoubleBufferState, METH_VARARGS },
	 { (char *)"iGraphics2D_GetPixelFormat", _wrap_iGraphics2D_GetPixelFormat, METH_VARARGS },
	 { (char *)"iGraphics2D_GetPixelBytes", _wrap_iGraphics2D_GetPixelBytes, METH_VARARGS },
	 { (char *)"iGraphics2D_GetPalEntryCount", _wrap_iGraphics2D_GetPalEntryCount, METH_VARARGS },
	 { (char *)"iGraphics2D_GetPalette", _wrap_iGraphics2D_GetPalette, METH_VARARGS },
	 { (char *)"iGraphics2D_SetRGB", _wrap_iGraphics2D_SetRGB, METH_VARARGS },
	 { (char *)"iGraphics2D_SetClipRect", _wrap_iGraphics2D_SetClipRect, METH_VARARGS },
	 { (char *)"iGraphics2D_GetClipRect", _wrap_iGraphics2D_GetClipRect, METH_VARARGS },
	 { (char *)"iGraphics2D_BeginDraw", _wrap_iGraphics2D_BeginDraw, METH_VARARGS },
	 { (char *)"iGraphics2D_FinishDraw", _wrap_iGraphics2D_FinishDraw, METH_VARARGS },
	 { (char *)"iGraphics2D_Print", _wrap_iGraphics2D_Print, METH_VARARGS },
	 { (char *)"iGraphics2D_Clear", _wrap_iGraphics2D_Clear, METH_VARARGS },
	 { (char *)"iGraphics2D_ClearAll", _wrap_iGraphics2D_ClearAll, METH_VARARGS },
	 { (char *)"iGraphics2D_DrawLine", _wrap_iGraphics2D_DrawLine, METH_VARARGS },
	 { (char *)"iGraphics2D_DrawBox", _wrap_iGraphics2D_DrawBox, METH_VARARGS },
	 { (char *)"iGraphics2D_ClipLine", _wrap_iGraphics2D_ClipLine, METH_VARARGS },
	 { (char *)"iGraphics2D_DrawPixel", _wrap_iGraphics2D_DrawPixel, METH_VARARGS },
	 { (char *)"iGraphics2D_GetPixelAt", _wrap_iGraphics2D_GetPixelAt, METH_VARARGS },
	 { (char *)"iGraphics2D_GetPixel", _wrap_iGraphics2D_GetPixel, METH_VARARGS },
	 { (char *)"iGraphics2D_SaveArea", _wrap_iGraphics2D_SaveArea, METH_VARARGS },
	 { (char *)"iGraphics2D_RestoreArea", _wrap_iGraphics2D_RestoreArea, METH_VARARGS },
	 { (char *)"iGraphics2D_FreeArea", _wrap_iGraphics2D_FreeArea, METH_VARARGS },
	 { (char *)"iGraphics2D_Write", _wrap_iGraphics2D_Write, METH_VARARGS },
	 { (char *)"iGraphics2D_GetFontServer", _wrap_iGraphics2D_GetFontServer, METH_VARARGS },
	 { (char *)"iGraphics2D_SetMousePosition", _wrap_iGraphics2D_SetMousePosition, METH_VARARGS },
	 { (char *)"iGraphics2D_SetMouseCursor", _wrap_iGraphics2D_SetMouseCursor, METH_VARARGS },
	 { (char *)"iGraphics2D_ScreenShot", _wrap_iGraphics2D_ScreenShot, METH_VARARGS },
	 { (char *)"iGraphics2D_CreateOffScreenCanvas", _wrap_iGraphics2D_CreateOffScreenCanvas, METH_VARARGS },
	 { (char *)"iGraphics2D_AllowResize", _wrap_iGraphics2D_AllowResize, METH_VARARGS },
	 { (char *)"delete_iGraphics2D", _wrap_delete_iGraphics2D, METH_VARARGS },
	 { (char *)"iGraphics2D_swigregister", iGraphics2D_swigregister, METH_VARARGS },
	 { (char *)"iHalo_GetWidth", _wrap_iHalo_GetWidth, METH_VARARGS },
	 { (char *)"iHalo_GetHeight", _wrap_iHalo_GetHeight, METH_VARARGS },
	 { (char *)"iHalo_SetColor", _wrap_iHalo_SetColor, METH_VARARGS },
	 { (char *)"iHalo_GetColor", _wrap_iHalo_GetColor, METH_VARARGS },
	 { (char *)"iHalo_Draw", _wrap_iHalo_Draw, METH_VARARGS },
	 { (char *)"delete_iHalo", _wrap_delete_iHalo, METH_VARARGS },
	 { (char *)"iHalo_swigregister", iHalo_swigregister, METH_VARARGS },
	 { (char *)"iGraphics3D_Open", _wrap_iGraphics3D_Open, METH_VARARGS },
	 { (char *)"iGraphics3D_Close", _wrap_iGraphics3D_Close, METH_VARARGS },
	 { (char *)"iGraphics3D_SetDimensions", _wrap_iGraphics3D_SetDimensions, METH_VARARGS },
	 { (char *)"iGraphics3D_BeginDraw", _wrap_iGraphics3D_BeginDraw, METH_VARARGS },
	 { (char *)"iGraphics3D_FinishDraw", _wrap_iGraphics3D_FinishDraw, METH_VARARGS },
	 { (char *)"iGraphics3D_Print", _wrap_iGraphics3D_Print, METH_VARARGS },
	 { (char *)"iGraphics3D_DrawPolygon", _wrap_iGraphics3D_DrawPolygon, METH_VARARGS },
	 { (char *)"iGraphics3D_DrawPolygonDebug", _wrap_iGraphics3D_DrawPolygonDebug, METH_VARARGS },
	 { (char *)"iGraphics3D_DrawLine", _wrap_iGraphics3D_DrawLine, METH_VARARGS },
	 { (char *)"iGraphics3D_DrawTriangleMesh", _wrap_iGraphics3D_DrawTriangleMesh, METH_VARARGS },
	 { (char *)"iGraphics3D_DrawPolygonMesh", _wrap_iGraphics3D_DrawPolygonMesh, METH_VARARGS },
	 { (char *)"iGraphics3D_OpenFogObject", _wrap_iGraphics3D_OpenFogObject, METH_VARARGS },
	 { (char *)"iGraphics3D_DrawFogPolygon", _wrap_iGraphics3D_DrawFogPolygon, METH_VARARGS },
	 { (char *)"iGraphics3D_CloseFogObject", _wrap_iGraphics3D_CloseFogObject, METH_VARARGS },
	 { (char *)"iGraphics3D_GetCaps", _wrap_iGraphics3D_GetCaps, METH_VARARGS },
	 { (char *)"iGraphics3D_GetZBuffAt", _wrap_iGraphics3D_GetZBuffAt, METH_VARARGS },
	 { (char *)"iGraphics3D_GetZBuffValue", _wrap_iGraphics3D_GetZBuffValue, METH_VARARGS },
	 { (char *)"iGraphics3D_DumpCache", _wrap_iGraphics3D_DumpCache, METH_VARARGS },
	 { (char *)"iGraphics3D_ClearCache", _wrap_iGraphics3D_ClearCache, METH_VARARGS },
	 { (char *)"iGraphics3D_RemoveFromCache", _wrap_iGraphics3D_RemoveFromCache, METH_VARARGS },
	 { (char *)"iGraphics3D_GetWidth", _wrap_iGraphics3D_GetWidth, METH_VARARGS },
	 { (char *)"iGraphics3D_GetHeight", _wrap_iGraphics3D_GetHeight, METH_VARARGS },
	 { (char *)"iGraphics3D_SetPerspectiveCenter", _wrap_iGraphics3D_SetPerspectiveCenter, METH_VARARGS },
	 { (char *)"iGraphics3D_SetPerspectiveAspect", _wrap_iGraphics3D_SetPerspectiveAspect, METH_VARARGS },
	 { (char *)"iGraphics3D_SetObjectToCamera", _wrap_iGraphics3D_SetObjectToCamera, METH_VARARGS },
	 { (char *)"iGraphics3D_GetDriver2D", _wrap_iGraphics3D_GetDriver2D, METH_VARARGS },
	 { (char *)"iGraphics3D_GetTextureManager", _wrap_iGraphics3D_GetTextureManager, METH_VARARGS },
	 { (char *)"iGraphics3D_CreateHalo", _wrap_iGraphics3D_CreateHalo, METH_VARARGS },
	 { (char *)"iGraphics3D_DrawPixmap", _wrap_iGraphics3D_DrawPixmap, METH_VARARGS },
	 { (char *)"new_iGraphics3D", _wrap_new_iGraphics3D, METH_VARARGS },
	 { (char *)"delete_iGraphics3D", _wrap_delete_iGraphics3D, METH_VARARGS },
	 { (char *)"iGraphics3D_swigregister", iGraphics3D_swigregister, METH_VARARGS },
	 { (char *)"iCamera_GetFOV", _wrap_iCamera_GetFOV, METH_VARARGS },
	 { (char *)"iCamera_GetInvFOV", _wrap_iCamera_GetInvFOV, METH_VARARGS },
	 { (char *)"new_iCamera", _wrap_new_iCamera, METH_VARARGS },
	 { (char *)"delete_iCamera", _wrap_delete_iCamera, METH_VARARGS },
	 { (char *)"iCamera_swigregister", iCamera_swigregister, METH_VARARGS },
	 { (char *)"new_iSector", _wrap_new_iSector, METH_VARARGS },
	 { (char *)"delete_iSector", _wrap_delete_iSector, METH_VARARGS },
	 { (char *)"iSector_swigregister", iSector_swigregister, METH_VARARGS },
	 { (char *)"iThingState_CreatePolygon", _wrap_iThingState_CreatePolygon, METH_VARARGS },
	 { (char *)"new_iThingState", _wrap_new_iThingState, METH_VARARGS },
	 { (char *)"delete_iThingState", _wrap_delete_iThingState, METH_VARARGS },
	 { (char *)"iThingState_swigregister", iThingState_swigregister, METH_VARARGS },
	 { (char *)"iMeshObject_Query_iThingState", _wrap_iMeshObject_Query_iThingState, METH_VARARGS },
	 { (char *)"new_iMeshObject", _wrap_new_iMeshObject, METH_VARARGS },
	 { (char *)"delete_iMeshObject", _wrap_delete_iMeshObject, METH_VARARGS },
	 { (char *)"iMeshObject_swigregister", iMeshObject_swigregister, METH_VARARGS },
	 { (char *)"iMeshWrapper_GetMeshObject", _wrap_iMeshWrapper_GetMeshObject, METH_VARARGS },
	 { (char *)"new_iMeshWrapper", _wrap_new_iMeshWrapper, METH_VARARGS },
	 { (char *)"delete_iMeshWrapper", _wrap_delete_iMeshWrapper, METH_VARARGS },
	 { (char *)"iMeshWrapper_swigregister", iMeshWrapper_swigregister, METH_VARARGS },
	 { (char *)"iLightMap_GetMapData", _wrap_iLightMap_GetMapData, METH_VARARGS },
	 { (char *)"iLightMap_GetWidth", _wrap_iLightMap_GetWidth, METH_VARARGS },
	 { (char *)"iLightMap_GetHeight", _wrap_iLightMap_GetHeight, METH_VARARGS },
	 { (char *)"iLightMap_GetRealWidth", _wrap_iLightMap_GetRealWidth, METH_VARARGS },
	 { (char *)"iLightMap_GetRealHeight", _wrap_iLightMap_GetRealHeight, METH_VARARGS },
	 { (char *)"iLightMap_GetCacheData", _wrap_iLightMap_GetCacheData, METH_VARARGS },
	 { (char *)"iLightMap_SetCacheData", _wrap_iLightMap_SetCacheData, METH_VARARGS },
	 { (char *)"iLightMap_GetMeanLighting", _wrap_iLightMap_GetMeanLighting, METH_VARARGS },
	 { (char *)"iLightMap_GetSize", _wrap_iLightMap_GetSize, METH_VARARGS },
	 { (char *)"delete_iLightMap", _wrap_delete_iLightMap, METH_VARARGS },
	 { (char *)"iLightMap_swigregister", iLightMap_swigregister, METH_VARARGS },
	 { (char *)"iPolygon3D_GetLightMap", _wrap_iPolygon3D_GetLightMap, METH_VARARGS },
	 { (char *)"iPolygon3D_GetMaterialHandle", _wrap_iPolygon3D_GetMaterialHandle, METH_VARARGS },
	 { (char *)"iPolygon3D_SetMaterial", _wrap_iPolygon3D_SetMaterial, METH_VARARGS },
	 { (char *)"iPolygon3D_GetVertexCount", _wrap_iPolygon3D_GetVertexCount, METH_VARARGS },
	 { (char *)"iPolygon3D_GetVertex", _wrap_iPolygon3D_GetVertex, METH_VARARGS },
	 { (char *)"iPolygon3D_GetVertexW", _wrap_iPolygon3D_GetVertexW, METH_VARARGS },
	 { (char *)"iPolygon3D_GetVertexC", _wrap_iPolygon3D_GetVertexC, METH_VARARGS },
	 { (char *)"iPolygon3D_CreateVertexByIndex", _wrap_iPolygon3D_CreateVertexByIndex, METH_VARARGS },
	 { (char *)"iPolygon3D_CreateVertex", _wrap_iPolygon3D_CreateVertex, METH_VARARGS },
	 { (char *)"iPolygon3D_GetAlpha", _wrap_iPolygon3D_GetAlpha, METH_VARARGS },
	 { (char *)"iPolygon3D_SetAlpha", _wrap_iPolygon3D_SetAlpha, METH_VARARGS },
	 { (char *)"iPolygon3D_CreatePlane", _wrap_iPolygon3D_CreatePlane, METH_VARARGS },
	 { (char *)"iPolygon3D_SetPlane", _wrap_iPolygon3D_SetPlane, METH_VARARGS },
	 { (char *)"iPolygon3D_SetTextureSpace", _wrap_iPolygon3D_SetTextureSpace, METH_VARARGS },
	 { (char *)"new_iPolygon3D", _wrap_new_iPolygon3D, METH_VARARGS },
	 { (char *)"delete_iPolygon3D", _wrap_delete_iPolygon3D, METH_VARARGS },
	 { (char *)"iPolygon3D_swigregister", iPolygon3D_swigregister, METH_VARARGS },
	 { (char *)"iImage_GetImageData", _wrap_iImage_GetImageData, METH_VARARGS },
	 { (char *)"iImage_GetWidth", _wrap_iImage_GetWidth, METH_VARARGS },
	 { (char *)"iImage_GetHeight", _wrap_iImage_GetHeight, METH_VARARGS },
	 { (char *)"iImage_GetSize", _wrap_iImage_GetSize, METH_VARARGS },
	 { (char *)"iImage_Rescale", _wrap_iImage_Rescale, METH_VARARGS },
	 { (char *)"iImage_MipMap", _wrap_iImage_MipMap, METH_VARARGS },
	 { (char *)"iImage_SetName", _wrap_iImage_SetName, METH_VARARGS },
	 { (char *)"iImage_GetName", _wrap_iImage_GetName, METH_VARARGS },
	 { (char *)"iImage_GetFormat", _wrap_iImage_GetFormat, METH_VARARGS },
	 { (char *)"iImage_GetPalette", _wrap_iImage_GetPalette, METH_VARARGS },
	 { (char *)"iImage_GetAlpha", _wrap_iImage_GetAlpha, METH_VARARGS },
	 { (char *)"iImage_SetFormat", _wrap_iImage_SetFormat, METH_VARARGS },
	 { (char *)"iImage_Clone", _wrap_iImage_Clone, METH_VARARGS },
	 { (char *)"iImage_Crop", _wrap_iImage_Crop, METH_VARARGS },
	 { (char *)"new_iImage", _wrap_new_iImage, METH_VARARGS },
	 { (char *)"delete_iImage", _wrap_delete_iImage, METH_VARARGS },
	 { (char *)"iImage_swigregister", iImage_swigregister, METH_VARARGS },
	 { (char *)"iTextureManager_RegisterTexture", _wrap_iTextureManager_RegisterTexture, METH_VARARGS },
	 { (char *)"iTextureManager_PrepareTextures", _wrap_iTextureManager_PrepareTextures, METH_VARARGS },
	 { (char *)"iTextureManager_FreeImages", _wrap_iTextureManager_FreeImages, METH_VARARGS },
	 { (char *)"iTextureManager_ResetPalette", _wrap_iTextureManager_ResetPalette, METH_VARARGS },
	 { (char *)"iTextureManager_ReserveColor", _wrap_iTextureManager_ReserveColor, METH_VARARGS },
	 { (char *)"iTextureManager_FindRGB", _wrap_iTextureManager_FindRGB, METH_VARARGS },
	 { (char *)"iTextureManager_SetPalette", _wrap_iTextureManager_SetPalette, METH_VARARGS },
	 { (char *)"iTextureManager_SetVerbose", _wrap_iTextureManager_SetVerbose, METH_VARARGS },
	 { (char *)"iTextureManager_GetTextureFormat", _wrap_iTextureManager_GetTextureFormat, METH_VARARGS },
	 { (char *)"new_iTextureManager", _wrap_new_iTextureManager, METH_VARARGS },
	 { (char *)"delete_iTextureManager", _wrap_delete_iTextureManager, METH_VARARGS },
	 { (char *)"iTextureManager_swigregister", iTextureManager_swigregister, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetMaterialHandle", _wrap_iPolygonTexture_GetMaterialHandle, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetFDU", _wrap_iPolygonTexture_GetFDU, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetFDV", _wrap_iPolygonTexture_GetFDV, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetWidth", _wrap_iPolygonTexture_GetWidth, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetHeight", _wrap_iPolygonTexture_GetHeight, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetShiftU", _wrap_iPolygonTexture_GetShiftU, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetIMinU", _wrap_iPolygonTexture_GetIMinU, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetIMinV", _wrap_iPolygonTexture_GetIMinV, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetTextureBox", _wrap_iPolygonTexture_GetTextureBox, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetOriginalWidth", _wrap_iPolygonTexture_GetOriginalWidth, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetPolygon", _wrap_iPolygonTexture_GetPolygon, METH_VARARGS },
	 { (char *)"iPolygonTexture_DynamicLightsDirty", _wrap_iPolygonTexture_DynamicLightsDirty, METH_VARARGS },
	 { (char *)"iPolygonTexture_RecalculateDynamicLights", _wrap_iPolygonTexture_RecalculateDynamicLights, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetLightMap", _wrap_iPolygonTexture_GetLightMap, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetLightCellSize", _wrap_iPolygonTexture_GetLightCellSize, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetLightCellShift", _wrap_iPolygonTexture_GetLightCellShift, METH_VARARGS },
	 { (char *)"iPolygonTexture_GetCacheData", _wrap_iPolygonTexture_GetCacheData, METH_VARARGS },
	 { (char *)"iPolygonTexture_SetCacheData", _wrap_iPolygonTexture_SetCacheData, METH_VARARGS },
	 { (char *)"new_iPolygonTexture", _wrap_new_iPolygonTexture, METH_VARARGS },
	 { (char *)"delete_iPolygonTexture", _wrap_delete_iPolygonTexture, METH_VARARGS },
	 { (char *)"iPolygonTexture_swigregister", iPolygonTexture_swigregister, METH_VARARGS },
	 { (char *)"new_iCameraPosition", _wrap_new_iCameraPosition, METH_VARARGS },
	 { (char *)"delete_iCameraPosition", _wrap_delete_iCameraPosition, METH_VARARGS },
	 { (char *)"iCameraPosition_swigregister", iCameraPosition_swigregister, METH_VARARGS },
	 { (char *)"iSectorList_GetCount", _wrap_iSectorList_GetCount, METH_VARARGS },
	 { (char *)"iSectorList_Get", _wrap_iSectorList_Get, METH_VARARGS },
	 { (char *)"iSectorList_Add", _wrap_iSectorList_Add, METH_VARARGS },
	 { (char *)"iSectorList_Remove", _wrap_iSectorList_Remove, METH_VARARGS },
	 { (char *)"iSectorList_FindByName", _wrap_iSectorList_FindByName, METH_VARARGS },
	 { (char *)"delete_iSectorList", _wrap_delete_iSectorList, METH_VARARGS },
	 { (char *)"iSectorList_swigregister", iSectorList_swigregister, METH_VARARGS },
	 { (char *)"iMaterialList_FindByName", _wrap_iMaterialList_FindByName, METH_VARARGS },
	 { (char *)"delete_iMaterialList", _wrap_delete_iMaterialList, METH_VARARGS },
	 { (char *)"iMaterialList_swigregister", iMaterialList_swigregister, METH_VARARGS },
	 { (char *)"iTextureList_FindByName", _wrap_iTextureList_FindByName, METH_VARARGS },
	 { (char *)"delete_iTextureList", _wrap_delete_iTextureList, METH_VARARGS },
	 { (char *)"iTextureList_swigregister", iTextureList_swigregister, METH_VARARGS },
	 { (char *)"iEngine_GetTextureFormat", _wrap_iEngine_GetTextureFormat, METH_VARARGS },
	 { (char *)"iEngine_DeleteAll", _wrap_iEngine_DeleteAll, METH_VARARGS },
	 { (char *)"iEngine_CreateTexture", _wrap_iEngine_CreateTexture, METH_VARARGS },
	 { (char *)"iEngine_CreateSector", _wrap_iEngine_CreateSector, METH_VARARGS },
	 { (char *)"iEngine_CreateSectorWallsMesh", _wrap_iEngine_CreateSectorWallsMesh, METH_VARARGS },
	 { (char *)"iEngine_GetSectors", _wrap_iEngine_GetSectors, METH_VARARGS },
	 { (char *)"iEngine_GetMaterialList", _wrap_iEngine_GetMaterialList, METH_VARARGS },
	 { (char *)"iEngine_GetTextureList", _wrap_iEngine_GetTextureList, METH_VARARGS },
	 { (char *)"delete_iEngine", _wrap_delete_iEngine, METH_VARARGS },
	 { (char *)"iEngine_swigregister", iEngine_swigregister, METH_VARARGS },
	 { (char *)"iObjectRegistry_Query_iEngine", _wrap_iObjectRegistry_Query_iEngine, METH_VARARGS },
	 { (char *)"iObjectRegistry_Query_iGraphics3D", _wrap_iObjectRegistry_Query_iGraphics3D, METH_VARARGS },
	 { (char *)"iObjectRegistry_Print", _wrap_iObjectRegistry_Print, METH_VARARGS },
	 { (char *)"new_iObjectRegistry", _wrap_new_iObjectRegistry, METH_VARARGS },
	 { (char *)"delete_iObjectRegistry", _wrap_delete_iObjectRegistry, METH_VARARGS },
	 { (char *)"iObjectRegistry_swigregister", iObjectRegistry_swigregister, METH_VARARGS },
	 { (char *)"iCelPlLayer_CreatePropertyClass", _wrap_iCelPlLayer_CreatePropertyClass, METH_VARARGS },
	 { (char *)"iCelPlLayer_FetchString", _wrap_iCelPlLayer_FetchString, METH_VARARGS },
	 { (char *)"iCelPlLayer_GetBehaviourLayerCount", _wrap_iCelPlLayer_GetBehaviourLayerCount, METH_VARARGS },
	 { (char *)"iCelPlLayer_GetBehaviourLayer", _wrap_iCelPlLayer_GetBehaviourLayer, METH_VARARGS },
	 { (char *)"iCelPlLayer_FindBehaviourLayer", _wrap_iCelPlLayer_FindBehaviourLayer, METH_VARARGS },
	 { (char *)"delete_iCelPlLayer", _wrap_delete_iCelPlLayer, METH_VARARGS },
	 { (char *)"iCelPlLayer_swigregister", iCelPlLayer_swigregister, METH_VARARGS },
	 { (char *)"csQueryRegistry_iCelPlLayer", _wrap_csQueryRegistry_iCelPlLayer, METH_VARARGS },
	 { (char *)"iCelEntity_GetName", _wrap_iCelEntity_GetName, METH_VARARGS },
	 { (char *)"iCelEntity_SetName", _wrap_iCelEntity_SetName, METH_VARARGS },
	 { (char *)"iCelEntity_SetBehaviour", _wrap_iCelEntity_SetBehaviour, METH_VARARGS },
	 { (char *)"iCelEntity_GetBehaviour", _wrap_iCelEntity_GetBehaviour, METH_VARARGS },
	 { (char *)"iCelEntity_GetID", _wrap_iCelEntity_GetID, METH_VARARGS },
	 { (char *)"iCelEntity_GetPropertyClassList", _wrap_iCelEntity_GetPropertyClassList, METH_VARARGS },
	 { (char *)"iCelEntity_LoadBehaviour", _wrap_iCelEntity_LoadBehaviour, METH_VARARGS },
	 { (char *)"delete_iCelEntity", _wrap_delete_iCelEntity, METH_VARARGS },
	 { (char *)"iCelEntity_swigregister", iCelEntity_swigregister, METH_VARARGS },
	 { (char *)"celCreateEntity", _wrap_celCreateEntity, METH_VARARGS },
	 { (char *)"iCelBlLayer_GetName", _wrap_iCelBlLayer_GetName, METH_VARARGS },
	 { (char *)"iCelBlLayer_CreateBehaviour", _wrap_iCelBlLayer_CreateBehaviour, METH_VARARGS },
	 { (char *)"delete_iCelBlLayer", _wrap_delete_iCelBlLayer, METH_VARARGS },
	 { (char *)"iCelBlLayer_swigregister", iCelBlLayer_swigregister, METH_VARARGS },
	 { (char *)"csQueryRegistry_iCelBlLayer", _wrap_csQueryRegistry_iCelBlLayer, METH_VARARGS },
	 { (char *)"iCelBehaviour_GetName", _wrap_iCelBehaviour_GetName, METH_VARARGS },
	 { (char *)"iCelBehaviour_GetBehaviourLayer", _wrap_iCelBehaviour_GetBehaviourLayer, METH_VARARGS },
	 { (char *)"iCelBehaviour_SendMessage", _wrap_iCelBehaviour_SendMessage, METH_VARARGS },
	 { (char *)"delete_iCelBehaviour", _wrap_delete_iCelBehaviour, METH_VARARGS },
	 { (char *)"iCelBehaviour_swigregister", iCelBehaviour_swigregister, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetName", _wrap_iCelPropertyClass_GetName, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetEntity", _wrap_iCelPropertyClass_GetEntity, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetEntity", _wrap_iCelPropertyClass_SetEntity, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyOrActionType", _wrap_iCelPropertyClass_GetPropertyOrActionType, METH_VARARGS },
	 { (char *)"iCelPropertyClass_IsPropertyReadOnly", _wrap_iCelPropertyClass_IsPropertyReadOnly, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyLong", _wrap_iCelPropertyClass_GetPropertyLong, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyFloat", _wrap_iCelPropertyClass_GetPropertyFloat, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyBool", _wrap_iCelPropertyClass_GetPropertyBool, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyString", _wrap_iCelPropertyClass_GetPropertyString, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyVector", _wrap_iCelPropertyClass_GetPropertyVector, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyAndActionCount", _wrap_iCelPropertyClass_GetPropertyAndActionCount, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyOrActionID", _wrap_iCelPropertyClass_GetPropertyOrActionID, METH_VARARGS },
	 { (char *)"iCelPropertyClass_GetPropertyOrActionDescription", _wrap_iCelPropertyClass_GetPropertyOrActionDescription, METH_VARARGS },
	 { (char *)"iCelPropertyClass_PerformAction", _wrap_iCelPropertyClass_PerformAction, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyLong", _wrap_iCelPropertyClass_SetPropertyLong, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyFloat", _wrap_iCelPropertyClass_SetPropertyFloat, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyBool", _wrap_iCelPropertyClass_SetPropertyBool, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyString", _wrap_iCelPropertyClass_SetPropertyString, METH_VARARGS },
	 { (char *)"iCelPropertyClass_SetPropertyVector3", _wrap_iCelPropertyClass_SetPropertyVector3, METH_VARARGS },
	 { (char *)"delete_iCelPropertyClass", _wrap_delete_iCelPropertyClass, METH_VARARGS },
	 { (char *)"iCelPropertyClass_swigregister", iCelPropertyClass_swigregister, METH_VARARGS },
	 { (char *)"celQueryPC_iPcRegion", _wrap_celQueryPC_iPcRegion, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_GetCount", _wrap_iCelPropertyClassList_GetCount, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_Get", _wrap_iCelPropertyClassList_Get, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_Find", _wrap_iCelPropertyClassList_Find, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_FindByName", _wrap_iCelPropertyClassList_FindByName, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_FindByInterface", _wrap_iCelPropertyClassList_FindByInterface, METH_VARARGS },
	 { (char *)"new_iCelPropertyClassList", _wrap_new_iCelPropertyClassList, METH_VARARGS },
	 { (char *)"delete_iCelPropertyClassList", _wrap_delete_iCelPropertyClassList, METH_VARARGS },
	 { (char *)"iCelPropertyClassList_swigregister", iCelPropertyClassList_swigregister, METH_VARARGS },
	 { (char *)"iPcRegion_SetWorldFile", _wrap_iPcRegion_SetWorldFile, METH_VARARGS },
	 { (char *)"iPcRegion_GetWorldDir", _wrap_iPcRegion_GetWorldDir, METH_VARARGS },
	 { (char *)"iPcRegion_GetWorldFile", _wrap_iPcRegion_GetWorldFile, METH_VARARGS },
	 { (char *)"iPcRegion_SetRegionName", _wrap_iPcRegion_SetRegionName, METH_VARARGS },
	 { (char *)"iPcRegion_GetRegionName", _wrap_iPcRegion_GetRegionName, METH_VARARGS },
	 { (char *)"iPcRegion_Load", _wrap_iPcRegion_Load, METH_VARARGS },
	 { (char *)"iPcRegion_Unload", _wrap_iPcRegion_Unload, METH_VARARGS },
	 { (char *)"iPcRegion_FindSector", _wrap_iPcRegion_FindSector, METH_VARARGS },
	 { (char *)"iPcRegion_GetStartSector", _wrap_iPcRegion_GetStartSector, METH_VARARGS },
	 { (char *)"iPcRegion_GetStartPosition", _wrap_iPcRegion_GetStartPosition, METH_VARARGS },
	 { (char *)"iPcRegion_PointCamera", _wrap_iPcRegion_PointCamera, METH_VARARGS },
	 { (char *)"iPcRegion_LoadWorld", _wrap_iPcRegion_LoadWorld, METH_VARARGS },
	 { (char *)"delete_iPcRegion", _wrap_delete_iPcRegion, METH_VARARGS },
	 { (char *)"iPcRegion_swigregister", iPcRegion_swigregister, METH_VARARGS },
	 { (char *)"celCreateRegion", _wrap_celCreateRegion, METH_VARARGS },
	 { (char *)"scfQuery_iPcRegion", _wrap_scfQuery_iPcRegion, METH_VARARGS },
	 { (char *)"iPcCamera_SetRegion", _wrap_iPcCamera_SetRegion, METH_VARARGS },
	 { (char *)"iPcCamera_SetMode", _wrap_iPcCamera_SetMode, METH_VARARGS },
	 { (char *)"iPcCamera_GetMode", _wrap_iPcCamera_GetMode, METH_VARARGS },
	 { (char *)"iPcCamera_SetFollowPos", _wrap_iPcCamera_SetFollowPos, METH_VARARGS },
	 { (char *)"iPcCamera_GetFollowPos", _wrap_iPcCamera_GetFollowPos, METH_VARARGS },
	 { (char *)"iPcCamera_SetPitch", _wrap_iPcCamera_SetPitch, METH_VARARGS },
	 { (char *)"iPcCamera_GetPitch", _wrap_iPcCamera_GetPitch, METH_VARARGS },
	 { (char *)"iPcCamera_SetRoll", _wrap_iPcCamera_SetRoll, METH_VARARGS },
	 { (char *)"iPcCamera_GetRoll", _wrap_iPcCamera_GetRoll, METH_VARARGS },
	 { (char *)"iPcCamera_SetRectangle", _wrap_iPcCamera_SetRectangle, METH_VARARGS },
	 { (char *)"iPcCamera_GetCamera", _wrap_iPcCamera_GetCamera, METH_VARARGS },
	 { (char *)"iPcCamera_GetView", _wrap_iPcCamera_GetView, METH_VARARGS },
	 { (char *)"delete_iPcCamera", _wrap_delete_iPcCamera, METH_VARARGS },
	 { (char *)"iPcCamera_swigregister", iPcCamera_swigregister, METH_VARARGS },
	 { (char *)"celCreateCamera", _wrap_celCreateCamera, METH_VARARGS },
	 { (char *)"scfQuery_iPcCamera", _wrap_scfQuery_iPcCamera, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetCamera", _wrap_iPcMeshSelect_SetCamera, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetMouseButtons", _wrap_iPcMeshSelect_SetMouseButtons, METH_VARARGS },
	 { (char *)"iPcMeshSelect_GetMouseButtons", _wrap_iPcMeshSelect_GetMouseButtons, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetGlobalSelection", _wrap_iPcMeshSelect_SetGlobalSelection, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasGlobalSelection", _wrap_iPcMeshSelect_HasGlobalSelection, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetFollowMode", _wrap_iPcMeshSelect_SetFollowMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasFollowMode", _wrap_iPcMeshSelect_HasFollowMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetFollowAlwaysMode", _wrap_iPcMeshSelect_SetFollowAlwaysMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasFollowAlwaysMode", _wrap_iPcMeshSelect_HasFollowAlwaysMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetDragMode", _wrap_iPcMeshSelect_SetDragMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasDragMode", _wrap_iPcMeshSelect_HasDragMode, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetDragPlaneNormal", _wrap_iPcMeshSelect_SetDragPlaneNormal, METH_VARARGS },
	 { (char *)"iPcMeshSelect_GetDragPlaneNormal", _wrap_iPcMeshSelect_GetDragPlaneNormal, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetSendmoveEvent", _wrap_iPcMeshSelect_SetSendmoveEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasSendmoveEvent", _wrap_iPcMeshSelect_HasSendmoveEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetSendupEvent", _wrap_iPcMeshSelect_SetSendupEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasSendupEvent", _wrap_iPcMeshSelect_HasSendupEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_SetSenddownEvent", _wrap_iPcMeshSelect_SetSenddownEvent, METH_VARARGS },
	 { (char *)"iPcMeshSelect_HasSenddownEvent", _wrap_iPcMeshSelect_HasSenddownEvent, METH_VARARGS },
	 { (char *)"delete_iPcMeshSelect", _wrap_delete_iPcMeshSelect, METH_VARARGS },
	 { (char *)"iPcMeshSelect_swigregister", iPcMeshSelect_swigregister, METH_VARARGS },
	 { (char *)"celPcMeshSelect", _wrap_celPcMeshSelect, METH_VARARGS },
	 { (char *)"iPcMesh_LoadMesh", _wrap_iPcMesh_LoadMesh, METH_VARARGS },
	 { (char *)"iPcMesh_SetMesh", _wrap_iPcMesh_SetMesh, METH_VARARGS },
	 { (char *)"iPcMesh_CreateEmptyThing", _wrap_iPcMesh_CreateEmptyThing, METH_VARARGS },
	 { (char *)"iPcMesh_GetMesh", _wrap_iPcMesh_GetMesh, METH_VARARGS },
	 { (char *)"iPcMesh_MoveMesh", _wrap_iPcMesh_MoveMesh, METH_VARARGS },
	 { (char *)"iPcMesh_SetAction", _wrap_iPcMesh_SetAction, METH_VARARGS },
	 { (char *)"iPcMesh_GetAction", _wrap_iPcMesh_GetAction, METH_VARARGS },
	 { (char *)"iPcMesh_Hide", _wrap_iPcMesh_Hide, METH_VARARGS },
	 { (char *)"iPcMesh_Show", _wrap_iPcMesh_Show, METH_VARARGS },
	 { (char *)"iPcMesh_IsVisible", _wrap_iPcMesh_IsVisible, METH_VARARGS },
	 { (char *)"delete_iPcMesh", _wrap_delete_iPcMesh, METH_VARARGS },
	 { (char *)"iPcMesh_swigregister", iPcMesh_swigregister, METH_VARARGS },
	 { (char *)"celPcMesh", _wrap_celPcMesh, METH_VARARGS },
	 { (char *)"iPcTimer_WakeUp", _wrap_iPcTimer_WakeUp, METH_VARARGS },
	 { (char *)"iPcTimer_Clear", _wrap_iPcTimer_Clear, METH_VARARGS },
	 { (char *)"delete_iPcTimer", _wrap_delete_iPcTimer, METH_VARARGS },
	 { (char *)"iPcTimer_swigregister", iPcTimer_swigregister, METH_VARARGS },
	 { (char *)"celPcTimer", _wrap_celPcTimer, METH_VARARGS },
	 { (char *)"iPcSolid_SetMesh", _wrap_iPcSolid_SetMesh, METH_VARARGS },
	 { (char *)"iPcSolid_GetMesh", _wrap_iPcSolid_GetMesh, METH_VARARGS },
	 { (char *)"iPcSolid_GetCollider", _wrap_iPcSolid_GetCollider, METH_VARARGS },
	 { (char *)"delete_iPcSolid", _wrap_delete_iPcSolid, METH_VARARGS },
	 { (char *)"iPcSolid_swigregister", iPcSolid_swigregister, METH_VARARGS },
	 { (char *)"celPcSolid", _wrap_celPcSolid, METH_VARARGS },
	 { (char *)"iPcGravity_CreateGravityColliderFromMesh", _wrap_iPcGravity_CreateGravityColliderFromMesh, METH_VARARGS },
	 { (char *)"iPcGravity_CreateGravityCollider", _wrap_iPcGravity_CreateGravityCollider, METH_VARARGS },
	 { (char *)"iPcGravity_GetGravityCollider", _wrap_iPcGravity_GetGravityCollider, METH_VARARGS },
	 { (char *)"iPcGravity_SetMovable", _wrap_iPcGravity_SetMovable, METH_VARARGS },
	 { (char *)"iPcGravity_GetMovable", _wrap_iPcGravity_GetMovable, METH_VARARGS },
	 { (char *)"iPcGravity_SetSolid", _wrap_iPcGravity_SetSolid, METH_VARARGS },
	 { (char *)"iPcGravity_GetSolid", _wrap_iPcGravity_GetSolid, METH_VARARGS },
	 { (char *)"iPcGravity_SetWeight", _wrap_iPcGravity_SetWeight, METH_VARARGS },
	 { (char *)"iPcGravity_GetWeight", _wrap_iPcGravity_GetWeight, METH_VARARGS },
	 { (char *)"iPcGravity_ClearForces", _wrap_iPcGravity_ClearForces, METH_VARARGS },
	 { (char *)"iPcGravity_ClearPermanentForces", _wrap_iPcGravity_ClearPermanentForces, METH_VARARGS },
	 { (char *)"iPcGravity_ResetSpeed", _wrap_iPcGravity_ResetSpeed, METH_VARARGS },
	 { (char *)"iPcGravity_ApplyForce", _wrap_iPcGravity_ApplyForce, METH_VARARGS },
	 { (char *)"iPcGravity_ApplyPermanentForce", _wrap_iPcGravity_ApplyPermanentForce, METH_VARARGS },
	 { (char *)"iPcGravity_IsResting", _wrap_iPcGravity_IsResting, METH_VARARGS },
	 { (char *)"iPcGravity_SetActive", _wrap_iPcGravity_SetActive, METH_VARARGS },
	 { (char *)"iPcGravity_IsActive", _wrap_iPcGravity_IsActive, METH_VARARGS },
	 { (char *)"delete_iPcGravity", _wrap_delete_iPcGravity, METH_VARARGS },
	 { (char *)"iPcGravity_swigregister", iPcGravity_swigregister, METH_VARARGS },
	 { (char *)"celPcGravity", _wrap_celPcGravity, METH_VARARGS },
	 { (char *)"iPcMovable_SetMesh", _wrap_iPcMovable_SetMesh, METH_VARARGS },
	 { (char *)"iPcMovable_GetMesh", _wrap_iPcMovable_GetMesh, METH_VARARGS },
	 { (char *)"iPcMovable_SetPos", _wrap_iPcMovable_SetPos, METH_VARARGS },
	 { (char *)"iPcMovable_Move", _wrap_iPcMovable_Move, METH_VARARGS },
	 { (char *)"iPcMovable_AddConstraint", _wrap_iPcMovable_AddConstraint, METH_VARARGS },
	 { (char *)"iPcMovable_RemoveConstraint", _wrap_iPcMovable_RemoveConstraint, METH_VARARGS },
	 { (char *)"iPcMovable_RemoveAllConstraints", _wrap_iPcMovable_RemoveAllConstraints, METH_VARARGS },
	 { (char *)"delete_iPcMovable", _wrap_delete_iPcMovable, METH_VARARGS },
	 { (char *)"iPcMovable_swigregister", iPcMovable_swigregister, METH_VARARGS },
	 { (char *)"celPcMovable", _wrap_celPcMovable, METH_VARARGS },
	 { (char *)"iPcInventory_AddEntity", _wrap_iPcInventory_AddEntity, METH_VARARGS },
	 { (char *)"iPcInventory_RemoveEntity", _wrap_iPcInventory_RemoveEntity, METH_VARARGS },
	 { (char *)"iPcInventory_RemoveAll", _wrap_iPcInventory_RemoveAll, METH_VARARGS },
	 { (char *)"iPcInventory_GetEntityCount", _wrap_iPcInventory_GetEntityCount, METH_VARARGS },
	 { (char *)"iPcInventory_GetEntity", _wrap_iPcInventory_GetEntity, METH_VARARGS },
	 { (char *)"iPcInventory_SetStrictCharacteristics", _wrap_iPcInventory_SetStrictCharacteristics, METH_VARARGS },
	 { (char *)"iPcInventory_HasStrictCharacteristics", _wrap_iPcInventory_HasStrictCharacteristics, METH_VARARGS },
	 { (char *)"iPcInventory_SetConstraints", _wrap_iPcInventory_SetConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_GetConstraints", _wrap_iPcInventory_GetConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_RemoveConstraints", _wrap_iPcInventory_RemoveConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_RemoveAllConstraints", _wrap_iPcInventory_RemoveAllConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_GetCurrentCharacteristic", _wrap_iPcInventory_GetCurrentCharacteristic, METH_VARARGS },
	 { (char *)"iPcInventory_MarkDirty", _wrap_iPcInventory_MarkDirty, METH_VARARGS },
	 { (char *)"iPcInventory_TestConstraints", _wrap_iPcInventory_TestConstraints, METH_VARARGS },
	 { (char *)"iPcInventory_Dump", _wrap_iPcInventory_Dump, METH_VARARGS },
	 { (char *)"delete_iPcInventory", _wrap_delete_iPcInventory, METH_VARARGS },
	 { (char *)"iPcInventory_swigregister", iPcInventory_swigregister, METH_VARARGS },
	 { (char *)"celPcInventory", _wrap_celPcInventory, METH_VARARGS },
	 { (char *)"iPcCharacteristics_SetCharacteristic", _wrap_iPcCharacteristics_SetCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_SetInheritedCharacteristic", _wrap_iPcCharacteristics_SetInheritedCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_GetCharacteristic", _wrap_iPcCharacteristics_GetCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_GetLocalCharacteristic", _wrap_iPcCharacteristics_GetLocalCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_GetInheritedCharacteristic", _wrap_iPcCharacteristics_GetInheritedCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_ClearCharacteristic", _wrap_iPcCharacteristics_ClearCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_HasCharacteristic", _wrap_iPcCharacteristics_HasCharacteristic, METH_VARARGS },
	 { (char *)"iPcCharacteristics_ClearAll", _wrap_iPcCharacteristics_ClearAll, METH_VARARGS },
	 { (char *)"iPcCharacteristics_AddToInventory", _wrap_iPcCharacteristics_AddToInventory, METH_VARARGS },
	 { (char *)"iPcCharacteristics_RemoveFromInventory", _wrap_iPcCharacteristics_RemoveFromInventory, METH_VARARGS },
	 { (char *)"iPcCharacteristics_MarkDirty", _wrap_iPcCharacteristics_MarkDirty, METH_VARARGS },
	 { (char *)"iPcCharacteristics_TestConstraints", _wrap_iPcCharacteristics_TestConstraints, METH_VARARGS },
	 { (char *)"iPcCharacteristics_Dump", _wrap_iPcCharacteristics_Dump, METH_VARARGS },
	 { (char *)"delete_iPcCharacteristics", _wrap_delete_iPcCharacteristics, METH_VARARGS },
	 { (char *)"iPcCharacteristics_swigregister", iPcCharacteristics_swigregister, METH_VARARGS },
	 { (char *)"celPcCharacteristics", _wrap_celPcCharacteristics, METH_VARARGS },
	 { NULL, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_iPcMovableTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iPcMovable *) x));
}
static void *_p_iCelBlLayerTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iCelBlLayer *) x));
}
static void *_p_iCelPlLayerTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iCelPlLayer *) x));
}
static void *_p_iPcRegionTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iPcRegion *) x));
}
static void *_p_iPcInventoryTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iPcInventory *) x));
}
static void *_p_iPcGravityTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iPcGravity *) x));
}
static void *_p_iObjectRegistryTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iObjectRegistry *) x));
}
static void *_p_iSCFTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iSCF *) x));
}
static void *_p_iPcTimerTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iPcTimer *) x));
}
static void *_p_iTextureHandleTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iTextureHandle *) x));
}
static void *_p_iHaloTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iHalo *) x));
}
static void *_p_iImageTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iImage *) x));
}
static void *_p_iFontServerTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iFontServer *) x));
}
static void *_p_iMeshObjectTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iMeshObject *) x));
}
static void *_p_iFontTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iFont *) x));
}
static void *_p_iPcSolidTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iPcSolid *) x));
}
static void *_p_iCelEntityTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iCelEntity *) x));
}
static void *_p_iGraphics3DTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iGraphics3D *) x));
}
static void *_p_iPcMeshSelectTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iPcMeshSelect *) x));
}
static void *_p_iPolygonTextureTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iPolygonTexture *) x));
}
static void *_p_iEventHandlerTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iEventHandler *) x));
}
static void *_p_iPcCharacteristicsTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iPcCharacteristics *) x));
}
static void *_p_iComponentTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iComponent *) x));
}
static void *_p_iTextureListTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iTextureList *) x));
}
static void *_p_iLightMapTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iLightMap *) x));
}
static void *_p_iGraphics2DTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iGraphics2D *) x));
}
static void *_p_iCelPropertyClassListTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iCelPropertyClassList *) x));
}
static void *_p_iCelBehaviourTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iCelBehaviour *) x));
}
static void *_p_iPcMeshTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iPcMesh *) x));
}
static void *_p_iSectorTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iSector *) x));
}
static void *_p_iCameraTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iCamera *) x));
}
static void *_p_iMaterialListTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iMaterialList *) x));
}
static void *_p_iPcCameraTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iPcCamera *) x));
}
static void *_p_iThingStateTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iThingState *) x));
}
static void *_p_iCelPropertyClassTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iCelPropertyClass *) x));
}
static void *_p_iSectorListTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iSectorList *) x));
}
static void *_p_iMaterialHandleTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iMaterialHandle *) x));
}
static void *_p_iCameraPositionTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iCameraPosition *) x));
}
static void *_p_iPolygon3DTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iPolygon3D *) x));
}
static void *_p_iEngineTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iEngine *) x));
}
static void *_p_iMeshWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iMeshWrapper *) x));
}
static void *_p_iTextureWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iTextureWrapper *) x));
}
static void *_p_iMaterialWrapperTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iMaterialWrapper *) x));
}
static void *_p_iTextureManagerTo_p_iBase(void *x) {
    return (void *)((iBase *) ((iTextureManager *) x));
}
static swig_type_info _swigt__p_iCollider[] = {{"_p_iCollider", 0, "iCollider *"},{"_p_iCollider"},{0}};
static swig_type_info _swigt__p_G3DPolygonDP[] = {{"_p_G3DPolygonDP", 0, "G3DPolygonDP *"},{"_p_G3DPolygonDP"},{0}};
static swig_type_info _swigt__p_iSectorList[] = {{"_p_iSectorList", 0, "iSectorList *"},{"_p_iSectorList"},{0}};
static swig_type_info _swigt__p_iObjectRegistry[] = {{"_p_iObjectRegistry", 0, "iObjectRegistry *"},{"_p_iObjectRegistry"},{0}};
static swig_type_info _swigt__p_csPtrTiFont_t[] = {{"_p_csPtrTiFont_t", 0, "csPtr<iFont > *"},{"_p_csPtrTiFont_t"},{0}};
static swig_type_info _swigt__p_iPcMovableConstraint[] = {{"_p_iPcMovableConstraint", 0, "iPcMovableConstraint *"},{"_p_iPcMovableConstraint"},{0}};
static swig_type_info _swigt__p_iCelPropertyClassList[] = {{"_p_iCelPropertyClassList", 0, "iCelPropertyClassList *"},{"_p_iCelPropertyClassList"},{0}};
static swig_type_info _swigt__p_csStringID[] = {{"_p_csStringID", 0, "csStringID *"},{"_p_csStringID"},{0}};
static swig_type_info _swigt__p_iEngine[] = {{"_p_iEngine", 0, "iEngine *"},{"_p_iEngine"},{0}};
static swig_type_info _swigt__p_csPtrTiThingState_t[] = {{"_p_csPtrTiThingState_t", 0, "csPtr<iThingState > *"},{"_p_csPtrTiThingState_t"},{0}};
static swig_type_info _swigt__p_iFontServer[] = {{"_p_iFontServer", 0, "iFontServer *"},{"_p_iFontServer"},{0}};
static swig_type_info _swigt__p_iSector[] = {{"_p_iSector", 0, "iSector *"},{"_p_iSector"},{0}};
static swig_type_info _swigt__p_csRect[] = {{"_p_csRect", 0, "csRect *"},{"_p_csRect"},{0}};
static swig_type_info _swigt__p_csFog[] = {{"_p_csFog", 0, "csFog *"},{"_p_csFog"},{0}};
static swig_type_info _swigt__p_short[] = {{"_p_short", 0, "short *"},{"_p_short"},{0}};
static swig_type_info _swigt__p_bool[] = {{"_p_bool", 0, "bool *"},{"_p_bool"},{0}};
static swig_type_info _swigt__p_iPcCharacteristics[] = {{"_p_iPcCharacteristics", 0, "iPcCharacteristics *"},{"_p_iPcCharacteristics"},{0}};
static swig_type_info _swigt__p_iLightMap[] = {{"_p_iLightMap", 0, "iLightMap *"},{"_p_iLightMap"},{0}};
static swig_type_info _swigt__p_iGraphics2D[] = {{"_p_iGraphics2D", 0, "iGraphics2D *"},{"_p_iGraphics2D"},{0}};
static swig_type_info _swigt__p_iThingState[] = {{"_p_iThingState", 0, "iThingState *"},{"_p_iThingState"},{0}};
static swig_type_info _swigt__p_iPcMeshSelect[] = {{"_p_iPcMeshSelect", 0, "iPcMeshSelect *"},{"_p_iPcMeshSelect"},{0}};
static swig_type_info _swigt__p_G3DPolygonDFP[] = {{"_p_G3DPolygonDFP", 0, "G3DPolygonDFP *"},{"_p_G3DPolygonDFP"},{0}};
static swig_type_info _swigt__p_csTicks[] = {{"_p_csTicks", 0, "csTicks *"},{"_p_csTicks"},{0}};
static swig_type_info _swigt__p_csPtrTiTextureHandle_t[] = {{"_p_csPtrTiTextureHandle_t", 0, "csPtr<iTextureHandle > *"},{"_p_csPtrTiTextureHandle_t"},{0}};
static swig_type_info _swigt__p_csColor[] = {{"_p_csColor", 0, "csColor *"},{"_p_csColor"},{0}};
static swig_type_info _swigt__p_iCelEntity[] = {{"_p_iCelEntity", 0, "iCelEntity *"},{"_p_iCelEntity"},{0}};
static swig_type_info _swigt__p_void[] = {{"_p_void", 0, "void *"},{"_p_void"},{0}};
static swig_type_info _swigt__p_double[] = {{"_p_double", 0, "double *"},{"_p_double"},{0}};
static swig_type_info _swigt__p_int[] = {{"_p_int", 0, "int *"},{"_p_int"},{0}};
static swig_type_info _swigt__p_csPtrTiImage_t[] = {{"_p_csPtrTiImage_t", 0, "csPtr<iImage > *"},{"_p_csPtrTiImage_t"},{0}};
static swig_type_info _swigt__p_iSCF[] = {{"_p_iSCF", 0, "iSCF *"},{"_p_iSCF"},{0}};
static swig_type_info _swigt__p_iTextureHandle[] = {{"_p_iTextureHandle", 0, "iTextureHandle *"},{"_p_iTextureHandle"},{0}};
static swig_type_info _swigt__p_iEvent[] = {{"_p_iEvent", 0, "iEvent *"},{"_p_iEvent"},{0}};
static swig_type_info _swigt__p_iComponent[] = {{"_p_iComponent", 0, "iComponent *"},{"_p_iComponent"},{0}};
static swig_type_info _swigt__p_csReversibleTransform[] = {{"_p_csReversibleTransform", 0, "csReversibleTransform *"},{"_p_csReversibleTransform"},{0}};
static swig_type_info _swigt__p_iCelPropertyClass[] = {{"_p_iCelPropertyClass", 0, "iCelPropertyClass *"},{"_p_iCelPropertyClass"},{0}};
static swig_type_info _swigt__p_long[] = {{"_p_long", 0, "long *"},{"_p_long"},{0}};
static swig_type_info _swigt__p_iPcMovable[] = {{"_p_iPcMovable", 0, "iPcMovable *"},{"_p_iPcMovable"},{0}};
static swig_type_info _swigt__p_iEventHandler[] = {{"_p_iEventHandler", 0, "iEventHandler *"},{"_p_iEventHandler"},{0}};
static swig_type_info _swigt__p_csMatrix3[] = {{"_p_csMatrix3", 0, "csMatrix3 *"},{"_p_csMatrix3"},{0}};
static swig_type_info _swigt__p_csPixelFormat[] = {{"_p_csPixelFormat", 0, "csPixelFormat *"},{"_p_csPixelFormat"},{0}};
static swig_type_info _swigt__p_iPolygonTexture[] = {{"_p_iPolygonTexture", 0, "iPolygonTexture *"},{"_p_iPolygonTexture"},{0}};
static swig_type_info _swigt__p_CS_ID[] = {{"_p_CS_ID", 0, "CS_ID *"},{"_p_CS_ID"},{0}};
static swig_type_info _swigt__p_iCameraPosition[] = {{"_p_iCameraPosition", 0, "iCameraPosition *"},{"_p_iCameraPosition"},{0}};
static swig_type_info _swigt__p_iGraphics3D[] = {{"_p_iGraphics3D", 0, "iGraphics3D *"},{"_p_iGraphics3D"},{0}};
static swig_type_info _swigt__p_p_char[] = {{"_p_p_char", 0, "char **"},{"_p_p_char"},{0}};
static swig_type_info _swigt__p_char[] = {{"_p_char", 0, "char *"},{"_p_char"},{0}};
static swig_type_info _swigt__p_iMaterialList[] = {{"_p_iMaterialList", 0, "iMaterialList *"},{"_p_iMaterialList"},{0}};
static swig_type_info _swigt__p_iMeshWrapper[] = {{"_p_iMeshWrapper", 0, "iMeshWrapper *"},{"_p_iMeshWrapper"},{0}};
static swig_type_info _swigt__p_iTextureWrapper[] = {{"_p_iTextureWrapper", 0, "iTextureWrapper *"},{"_p_iTextureWrapper"},{0}};
static swig_type_info _swigt__p_iMaterialWrapper[] = {{"_p_iMaterialWrapper", 0, "iMaterialWrapper *"},{"_p_iMaterialWrapper"},{0}};
static swig_type_info _swigt__p_G3DPolygonMesh[] = {{"_p_G3DPolygonMesh", 0, "G3DPolygonMesh *"},{"_p_G3DPolygonMesh"},{0}};
static swig_type_info _swigt__p_iFont[] = {{"_p_iFont", 0, "iFont *"},{"_p_iFont"},{0}};
static swig_type_info _swigt__p_csGraphics3DCaps[] = {{"_p_csGraphics3DCaps", 0, "csGraphics3DCaps *"},{"_p_csGraphics3DCaps"},{0}};
static swig_type_info _swigt__p_iTextureManager[] = {{"_p_iTextureManager", 0, "iTextureManager *"},{"_p_iTextureManager"},{0}};
static swig_type_info _swigt__p_G3DTriangleMesh[] = {{"_p_G3DTriangleMesh", 0, "G3DTriangleMesh *"},{"_p_G3DTriangleMesh"},{0}};
static swig_type_info _swigt__p_iPcCamera[] = {{"_p_iPcCamera", 0, "iPcCamera *"},{"_p_iPcCamera"},{0}};
static swig_type_info _swigt__p_iCamera[] = {{"_p_iCamera", 0, "iCamera *"},{"_p_iCamera"},{0}};
static swig_type_info _swigt__p_iPcMesh[] = {{"_p_iPcMesh", 0, "iPcMesh *"},{"_p_iPcMesh"},{0}};
static swig_type_info _swigt__p_iMaterialHandle[] = {{"_p_iMaterialHandle", 0, "iMaterialHandle *"},{"_p_iMaterialHandle"},{0}};
static swig_type_info _swigt__p_iCelBehaviour[] = {{"_p_iCelBehaviour", 0, "iCelBehaviour *"},{"_p_iCelBehaviour"},{0}};
static swig_type_info _swigt__p_iMeshObject[] = {{"_p_iMeshObject", 0, "iMeshObject *"},{"_p_iMeshObject"},{0}};
static swig_type_info _swigt__p_iPcTimer[] = {{"_p_iPcTimer", 0, "iPcTimer *"},{"_p_iPcTimer"},{0}};
static swig_type_info _swigt__p_csVector2[] = {{"_p_csVector2", 0, "csVector2 *"},{"_p_csVector2"},{0}};
static swig_type_info _swigt__p_csVector3[] = {{"_p_csVector3", 0, "csVector3 *"},{"_p_csVector3"},{0}};
static swig_type_info _swigt__p_iPcGravity[] = {{"_p_iPcGravity", 0, "iPcGravity *"},{"_p_iPcGravity"},{0}};
static swig_type_info _swigt__p_csRGBpixel[] = {{"_p_csRGBpixel", 0, "csRGBpixel *"},{"_p_csRGBpixel"},{0}};
static swig_type_info _swigt__p_iTextureList[] = {{"_p_iTextureList", 0, "iTextureList *"},{"_p_iTextureList"},{0}};
static swig_type_info _swigt__p_csImageArea[] = {{"_p_csImageArea", 0, "csImageArea *"},{"_p_csImageArea"},{0}};
static swig_type_info _swigt__p_iPcSolid[] = {{"_p_iPcSolid", 0, "iPcSolid *"},{"_p_iPcSolid"},{0}};
static swig_type_info _swigt__p_scfInterfaceID[] = {{"_p_scfInterfaceID", 0, "scfInterfaceID *"},{"_p_scfInterfaceID"},{0}};
static swig_type_info _swigt__p_unsigned_char[] = {{"_p_unsigned_char", 0, "unsigned char *"},{"_p_unsigned_char"},{0}};
static swig_type_info _swigt__p_iView[] = {{"_p_iView", 0, "iView *"},{"_p_iView"},{0}};
static swig_type_info _swigt__p_celDataType[] = {{"_p_celDataType", 0, "celDataType *"},{"_p_celDataType"},{0}};
static swig_type_info _swigt__p_float[] = {{"_p_float", 0, "float *"},{"_p_float"},{0}};
static swig_type_info _swigt__p_csMouseCursorID[] = {{"_p_csMouseCursorID", 0, "csMouseCursorID *"},{"_p_csMouseCursorID"},{0}};
static swig_type_info _swigt__p_iBase[] = {{"_p_iBase", 0, "iBase *"},{"_p_iPcMovable", _p_iPcMovableTo_p_iBase},{"_p_iPcRegion", _p_iPcRegionTo_p_iBase},{"_p_iCelBlLayer", _p_iCelBlLayerTo_p_iBase},{"_p_iCelPlLayer", _p_iCelPlLayerTo_p_iBase},{"_p_iPcInventory", _p_iPcInventoryTo_p_iBase},{"_p_iImage", _p_iImageTo_p_iBase},{"_p_iHalo", _p_iHaloTo_p_iBase},{"_p_iPcGravity", _p_iPcGravityTo_p_iBase},{"_p_iBase"},{"_p_iObjectRegistry", _p_iObjectRegistryTo_p_iBase},{"_p_iFont", _p_iFontTo_p_iBase},{"_p_iPcTimer", _p_iPcTimerTo_p_iBase},{"_p_iTextureHandle", _p_iTextureHandleTo_p_iBase},{"_p_iFontServer", _p_iFontServerTo_p_iBase},{"_p_iMeshObject", _p_iMeshObjectTo_p_iBase},{"_p_iPcSolid", _p_iPcSolidTo_p_iBase},{"_p_iCelEntity", _p_iCelEntityTo_p_iBase},{"_p_iGraphics3D", _p_iGraphics3DTo_p_iBase},{"_p_iPcMeshSelect", _p_iPcMeshSelectTo_p_iBase},{"_p_iPolygonTexture", _p_iPolygonTextureTo_p_iBase},{"_p_iEventHandler", _p_iEventHandlerTo_p_iBase},{"_p_iPcCharacteristics", _p_iPcCharacteristicsTo_p_iBase},{"_p_iComponent", _p_iComponentTo_p_iBase},{"_p_iSCF", _p_iSCFTo_p_iBase},{"_p_iTextureList", _p_iTextureListTo_p_iBase},{"_p_iLightMap", _p_iLightMapTo_p_iBase},{"_p_iGraphics2D", _p_iGraphics2DTo_p_iBase},{"_p_iPcMesh", _p_iPcMeshTo_p_iBase},{"_p_iCelPropertyClassList", _p_iCelPropertyClassListTo_p_iBase},{"_p_iCelBehaviour", _p_iCelBehaviourTo_p_iBase},{"_p_iSector", _p_iSectorTo_p_iBase},{"_p_iCamera", _p_iCameraTo_p_iBase},{"_p_iPcCamera", _p_iPcCameraTo_p_iBase},{"_p_iMaterialList", _p_iMaterialListTo_p_iBase},{"_p_iThingState", _p_iThingStateTo_p_iBase},{"_p_iCelPropertyClass", _p_iCelPropertyClassTo_p_iBase},{"_p_iSectorList", _p_iSectorListTo_p_iBase},{"_p_iMaterialHandle", _p_iMaterialHandleTo_p_iBase},{"_p_iCameraPosition", _p_iCameraPositionTo_p_iBase},{"_p_iPolygon3D", _p_iPolygon3DTo_p_iBase},{"_p_iEngine", _p_iEngineTo_p_iBase},{"_p_iMeshWrapper", _p_iMeshWrapperTo_p_iBase},{"_p_iTextureWrapper", _p_iTextureWrapperTo_p_iBase},{"_p_iMaterialWrapper", _p_iMaterialWrapperTo_p_iBase},{"_p_iTextureManager", _p_iTextureManagerTo_p_iBase},{0}};
static swig_type_info _swigt__p_iHalo[] = {{"_p_iHalo", 0, "iHalo *"},{"_p_iHalo"},{0}};
static swig_type_info _swigt__p_iCelBlLayer[] = {{"_p_iCelBlLayer", 0, "iCelBlLayer *"},{"_p_iCelBlLayer"},{0}};
static swig_type_info _swigt__p_iCelPlLayer[] = {{"_p_iCelPlLayer", 0, "iCelPlLayer *"},{"_p_iCelPlLayer"},{0}};
static swig_type_info _swigt__p_iPcInventory[] = {{"_p_iPcInventory", 0, "iPcInventory *"},{"_p_iPcInventory"},{0}};
static swig_type_info _swigt__p_csPtrTiMeshWrapper_t[] = {{"_p_csPtrTiMeshWrapper_t", 0, "csPtr<iMeshWrapper > *"},{"_p_csPtrTiMeshWrapper_t"},{0}};
static swig_type_info _swigt__p_iPolygon3D[] = {{"_p_iPolygon3D", 0, "iPolygon3D *"},{"_p_iPolygon3D"},{0}};
static swig_type_info _swigt__p_iImage[] = {{"_p_iImage", 0, "iImage *"},{"_p_iImage"},{0}};
static swig_type_info _swigt__p_iPcRegion[] = {{"_p_iPcRegion", 0, "iPcRegion *"},{"_p_iPcRegion"},{0}};

static swig_type_info *swig_types_initial[] = {
_swigt__p_iCollider, 
_swigt__p_G3DPolygonDP, 
_swigt__p_iSectorList, 
_swigt__p_iObjectRegistry, 
_swigt__p_csPtrTiFont_t, 
_swigt__p_iPcMovableConstraint, 
_swigt__p_iCelPropertyClassList, 
_swigt__p_csStringID, 
_swigt__p_iEngine, 
_swigt__p_csPtrTiThingState_t, 
_swigt__p_iFontServer, 
_swigt__p_iSector, 
_swigt__p_csRect, 
_swigt__p_csFog, 
_swigt__p_short, 
_swigt__p_bool, 
_swigt__p_iPcCharacteristics, 
_swigt__p_iLightMap, 
_swigt__p_iGraphics2D, 
_swigt__p_iThingState, 
_swigt__p_iPcMeshSelect, 
_swigt__p_G3DPolygonDFP, 
_swigt__p_csTicks, 
_swigt__p_csPtrTiTextureHandle_t, 
_swigt__p_csColor, 
_swigt__p_iCelEntity, 
_swigt__p_void, 
_swigt__p_double, 
_swigt__p_int, 
_swigt__p_csPtrTiImage_t, 
_swigt__p_iSCF, 
_swigt__p_iTextureHandle, 
_swigt__p_iEvent, 
_swigt__p_iComponent, 
_swigt__p_csReversibleTransform, 
_swigt__p_iCelPropertyClass, 
_swigt__p_long, 
_swigt__p_iPcMovable, 
_swigt__p_iEventHandler, 
_swigt__p_csMatrix3, 
_swigt__p_csPixelFormat, 
_swigt__p_iPolygonTexture, 
_swigt__p_CS_ID, 
_swigt__p_iCameraPosition, 
_swigt__p_iGraphics3D, 
_swigt__p_p_char, 
_swigt__p_char, 
_swigt__p_iMaterialList, 
_swigt__p_iMeshWrapper, 
_swigt__p_iTextureWrapper, 
_swigt__p_iMaterialWrapper, 
_swigt__p_G3DPolygonMesh, 
_swigt__p_iFont, 
_swigt__p_csGraphics3DCaps, 
_swigt__p_iTextureManager, 
_swigt__p_G3DTriangleMesh, 
_swigt__p_iPcCamera, 
_swigt__p_iCamera, 
_swigt__p_iPcMesh, 
_swigt__p_iMaterialHandle, 
_swigt__p_iCelBehaviour, 
_swigt__p_iMeshObject, 
_swigt__p_iPcTimer, 
_swigt__p_csVector2, 
_swigt__p_csVector3, 
_swigt__p_iPcGravity, 
_swigt__p_csRGBpixel, 
_swigt__p_iTextureList, 
_swigt__p_csImageArea, 
_swigt__p_iPcSolid, 
_swigt__p_scfInterfaceID, 
_swigt__p_unsigned_char, 
_swigt__p_iView, 
_swigt__p_celDataType, 
_swigt__p_float, 
_swigt__p_csMouseCursorID, 
_swigt__p_iBase, 
_swigt__p_iHalo, 
_swigt__p_iCelBlLayer, 
_swigt__p_iCelPlLayer, 
_swigt__p_iPcInventory, 
_swigt__p_csPtrTiMeshWrapper_t, 
_swigt__p_iPolygon3D, 
_swigt__p_iImage, 
_swigt__p_iPcRegion, 
0
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{ SWIG_PY_INT,     (char *)"iPcCamera_freelook", (long) iPcCamera::freelook, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcCamera_follow", (long) iPcCamera::follow, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcCamera_rotational", (long) iPcCamera::rotational, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"iPcCamera_firstperson", (long) iPcCamera::firstperson, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_MOUSE_BUTTON1", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_MOUSE_BUTTON2", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_MOUSE_BUTTON3", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_NONE", (long) CEL_DATA_NONE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_BOOL", (long) CEL_DATA_BOOL, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_BYTE", (long) CEL_DATA_BYTE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_WORD", (long) CEL_DATA_WORD, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_LONG", (long) CEL_DATA_LONG, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_UBYTE", (long) CEL_DATA_UBYTE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_UWORD", (long) CEL_DATA_UWORD, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_ULONG", (long) CEL_DATA_ULONG, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_FLOAT", (long) CEL_DATA_FLOAT, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_VECTOR3", (long) CEL_DATA_VECTOR3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_STRING", (long) CEL_DATA_STRING, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_PCLASS", (long) CEL_DATA_PCLASS, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_ENTITY", (long) CEL_DATA_ENTITY, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_BUFFER", (long) CEL_DATA_BUFFER, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CEL_DATA_ACTION", (long) CEL_DATA_ACTION, 0, 0, 0},
{0}};

#ifdef __cplusplus
}
#endif

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT(void) SWIG_init(void) {
    static PyObject *SWIG_globals = 0; 
    static int       typeinit = 0;
    PyObject *m, *d;
    int       i;
    if (!SWIG_globals) SWIG_globals = SWIG_newvarlink();
    m = Py_InitModule((char *) SWIG_name, SwigMethods);
    d = PyModule_GetDict(m);
    
    if (!typeinit) {
        for (i = 0; swig_types_initial[i]; i++) {
            swig_types[i] = SWIG_TypeRegister(swig_types_initial[i]);
        }
        typeinit = 1;
    }
    SWIG_InstallConstants(d,swig_const_table);
    
    
    SWIG_POINTER_int_p = SWIG_TypeQuery("int *");
    SWIG_POINTER_short_p = SWIG_TypeQuery("short *");
    SWIG_POINTER_long_p = SWIG_TypeQuery("long *");
    SWIG_POINTER_float_p = SWIG_TypeQuery("float *");
    SWIG_POINTER_double_p = SWIG_TypeQuery("double *");
    SWIG_POINTER_char_p = SWIG_TypeQuery("char *");
    SWIG_POINTER_char_pp = SWIG_TypeQuery("char **");
    
}

